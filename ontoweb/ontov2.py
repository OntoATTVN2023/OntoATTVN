from owlready2 import *

# Place the archive path ontology
onto_path.append(r"C:\Users\Thuan\OneDrive\Máy tính\demoProtege\ontoweb")

# Get ontology
onto = get_ontology("http://test.org/Ontology.owl")

# Initialize class
with onto:
  class Technique(Thing):
    pass
  class Defense(Thing):
    pass
  class Detection(Thing):
    pass
  class Mitigation(Thing):
    pass
  

#  Initialize Data properties

  class hasID(DataProperty):
    range = [str]
  class hasName(DataProperty):
    range = [str]
  class hasDescription(DataProperty):
    range = [str]
  class hasMitigation(DataProperty):
    domain = [Technique]
    range = [str]
  class hasDetection(DataProperty):
    domain = [Technique]
    range = [str]
  class hasType(DataProperty):
    domain = [Defense]
    range = [str]


#  Initialize Object properties
  class defenseBy(ObjectProperty):
    domain = [Technique]
    range = [Defense]
  class preventedBy(ObjectProperty):
    domain = [Technique]
    range = [Mitigation]
  class identifiedBy(ObjectProperty):
    domain = [Technique]
    range = [Detection]
  


# Initialize Technique
T1548 = Technique("T1548")
T1134 = Technique("T1134")
T1531 = Technique("T1531")
T1087 = Technique("T1087")
T1098 = Technique("T1098")
T1650 = Technique("T1650")
T1583 = Technique("T1583")
T1595 = Technique("T1595")
T1557 = Technique("T1557")
T1071 = Technique("T1071")
T1010 = Technique("T1010")
T1560 = Technique("T1560")
T1123 = Technique("T1123")
T1119 = Technique("T1119")
T1020 = Technique("T1020")
T1197 = Technique("T1197")
T1547 = Technique("T1547")
T1037 = Technique("T1037")
T1176 = Technique("T1176")
T1217 = Technique("T1217")
T1185 = Technique("T1185")
T1110 = Technique("T1110")
T1612 = Technique("T1612")
T1115 = Technique("T1115")
T1651 = Technique("T1651")
T1580 = Technique("T1580")
T1538 = Technique("T1538")
T1526 = Technique("T1526")
T1619 = Technique("T1619")
T1059 = Technique("T1059")
T1092 = Technique("T1092")
T1586 = Technique("T1586")
T1554 = Technique("T1554")
T1584 = Technique("T1584")
T1609 = Technique("T1609")
T1613 = Technique("T1613")
T1136 = Technique("T1136")
T1543 = Technique("T1543")
T1555 = Technique("T1555")
T1485 = Technique("T1485")
T1132 = Technique("T1132")
T1486 = Technique("T1486")
T1530 = Technique("T1530")
T1602 = Technique("T1602")
T1213 = Technique("T1213")
T1005 = Technique("T1005")
T1039 = Technique("T1039")
T1025 = Technique("T1025")
T1565 = Technique("T1565")
T1001 = Technique("T1001")
T1074 = Technique("T1074")
T1030 = Technique("T1030")
T1622 = Technique("T1622")
T1491 = Technique("T1491")
T1140 = Technique("T1140")
T1610 = Technique("T1610")
T1587 = Technique("T1587")
T1652 = Technique("T1652")
T1006 = Technique("T1006")
T1561 = Technique("T1561")
T1484 = Technique("T1484")
T1482 = Technique("T1482")
T1189 = Technique("T1189")
T1568 = Technique("T1568")
T1114 = Technique("T1114")
T1573 = Technique("T1573")
T1499 = Technique("T1499")
T1611 = Technique("T1611")
T1585 = Technique("T1585")
T1546 = Technique("T1546")
T1480 = Technique("T1480")
T1048 = Technique("T1048")
T1041 = Technique("T1041")
T1011 = Technique("T1011")
T1052 = Technique("T1052")
T1567 = Technique("T1567")
T1190 = Technique("T1190")
T1203 = Technique("T1203")
T1212 = Technique("T1212")
T1211 = Technique("T1211")
T1068 = Technique("T1068")
T1210 = Technique("T1210")
T1133 = Technique("T1133")
T1008 = Technique("T1008")
T1083 = Technique("T1083")
T1222 = Technique("T1222")
T1495 = Technique("T1495")
T1187 = Technique("T1187")
T1606 = Technique("T1606")
T1592 = Technique("T1592")
T1589 = Technique("T1589")
T1590 = Technique("T1590")
T1591 = Technique("T1591")
T1615 = Technique("T1615")
T1200 = Technique("T1200")
T1564 = Technique("T1564")
T1574 = Technique("T1574")
T1562 = Technique("T1562")
T1525 = Technique("T1525")
T1070 = Technique("T1070")
T1202 = Technique("T1202")
T1105 = Technique("T1105")
T1490 = Technique("T1490")
T1056 = Technique("T1056")
T1559 = Technique("T1559")
T1534 = Technique("T1534")
T1570 = Technique("T1570")
T1036 = Technique("T1036")
T1556 = Technique("T1556")
T1578 = Technique("T1578")
T1112 = Technique("T1112")
T1601 = Technique("T1601")
T1111 = Technique("T1111")
T1621 = Technique("T1621")
T1104 = Technique("T1104")
T1106 = Technique("T1106")
T1599 = Technique("T1599")
T1498 = Technique("T1498")
T1046 = Technique("T1046")
T1135 = Technique("T1135")
T1040 = Technique("T1040")
T1095 = Technique("T1095")
T1571 = Technique("T1571")
T1027 = Technique("T1027")
T1588 = Technique("T1588")
T1137 = Technique("T1137")
T1003 = Technique("T1003")
T1201 = Technique("T1201")
T1120 = Technique("T1120")
T1069 = Technique("T1069")
T1566 = Technique("T1566")
T1598 = Technique("T1598")
T1647 = Technique("T1647")
T1542 = Technique("T1542")
T1057 = Technique("T1057")
T1055 = Technique("T1055")
T1572 = Technique("T1572")
T1090 = Technique("T1090")
T1012 = Technique("T1012")
T1620 = Technique("T1620")
T1219 = Technique("T1219")
T1563 = Technique("T1563")
T1021 = Technique("T1021")
T1018 = Technique("T1018")
T1091 = Technique("T1091")
T1496 = Technique("T1496")
T1207 = Technique("T1207")
T1014 = Technique("T1014")
T1053 = Technique("T1053")
T1029 = Technique("T1029")
T1113 = Technique("T1113")
T1597 = Technique("T1597")
T1596 = Technique("T1596")
T1593 = Technique("T1593")
T1594 = Technique("T1594")
T1505 = Technique("T1505")
T1648 = Technique("T1648")
T1489 = Technique("T1489")
T1129 = Technique("T1129")
T1072 = Technique("T1072")
T1518 = Technique("T1518")
T1608 = Technique("T1608")
T1528 = Technique("T1528")
T1649 = Technique("T1649")
T1558 = Technique("T1558")
T1539 = Technique("T1539")
T1553 = Technique("T1553")
T1195 = Technique("T1195")
T1218 = Technique("T1218")
T1082 = Technique("T1082")
T1614 = Technique("T1614")
T1016 = Technique("T1016")
T1049 = Technique("T1049")
T1033 = Technique("T1033")
T1216 = Technique("T1216")
T1007 = Technique("T1007")
T1569 = Technique("T1569")
T1529 = Technique("T1529")
T1124 = Technique("T1124")
T1080 = Technique("T1080")
T1221 = Technique("T1221")
T1205 = Technique("T1205")
T1537 = Technique("T1537")
T1127 = Technique("T1127")
T1199 = Technique("T1199")
T1552 = Technique("T1552")
T1535 = Technique("T1535")
T1550 = Technique("T1550")
T1204 = Technique("T1204")
T1078 = Technique("T1078")
T1125 = Technique("T1125")
T1497 = Technique("T1497")
T1600 = Technique("T1600")
T1102 = Technique("T1102")
T1047 = Technique("T1047")
T1220 = Technique("T1220")
T1513 = Technique("T1513")
T1548_001 = Technique("T1548_001")
T1548_002 = Technique("T1548_002")
T1548_003 = Technique("T1548_003")
T1548_004 = Technique("T1548_004")
T1134_001 = Technique("T1134_001")
T1134_002 = Technique("T1134_002")
T1134_003 = Technique("T1134_003")
T1134_004 = Technique("T1134_004")
T1134_005 = Technique("T1134_005")
T1087_001 = Technique("T1087_001")
T1087_002 = Technique("T1087_002")
T1087_003 = Technique("T1087_003")
T1087_004 = Technique("T1087_004")
T1098_001 = Technique("T1098_001")
T1098_002 = Technique("T1098_002")
T1098_003 = Technique("T1098_003")
T1098_004 = Technique("T1098_004")
T1098_005 = Technique("T1098_005")
T1583_001 = Technique("T1583_001")
T1583_002 = Technique("T1583_002")
T1583_003 = Technique("T1583_003")
T1583_004 = Technique("T1583_004")
T1583_005 = Technique("T1583_005")
T1583_006 = Technique("T1583_006")
T1583_007 = Technique("T1583_007")
T1583_008 = Technique("T1583_008")
T1595_001 = Technique("T1595_001")
T1595_002 = Technique("T1595_002")
T1595_003 = Technique("T1595_003")
T1557_001 = Technique("T1557_001")
T1557_002 = Technique("T1557_002")
T1557_003 = Technique("T1557_003")
T1071_001 = Technique("T1071_001")
T1071_002 = Technique("T1071_002")
T1071_003 = Technique("T1071_003")
T1071_004 = Technique("T1071_004")
T1560_001 = Technique("T1560_001")
T1560_002 = Technique("T1560_002")
T1560_003 = Technique("T1560_003")
T1020_001 = Technique("T1020_001")
T1547_001 = Technique("T1547_001")
T1547_002 = Technique("T1547_002")
T1547_003 = Technique("T1547_003")
T1547_004 = Technique("T1547_004")
T1547_005 = Technique("T1547_005")
T1547_006 = Technique("T1547_006")
T1547_007 = Technique("T1547_007")
T1547_008 = Technique("T1547_008")
T1547_009 = Technique("T1547_009")
T1547_010 = Technique("T1547_010")
T1547_012 = Technique("T1547_012")
T1547_013 = Technique("T1547_013")
T1547_014 = Technique("T1547_014")
T1547_015 = Technique("T1547_015")
T1037_001 = Technique("T1037_001")
T1037_002 = Technique("T1037_002")
T1037_003 = Technique("T1037_003")
T1037_004 = Technique("T1037_004")
T1037_005 = Technique("T1037_005")
T1110_001 = Technique("T1110_001")
T1110_002 = Technique("T1110_002")
T1110_003 = Technique("T1110_003")
T1110_004 = Technique("T1110_004")
T1059_001 = Technique("T1059_001")
T1059_002 = Technique("T1059_002")
T1059_003 = Technique("T1059_003")
T1059_004 = Technique("T1059_004")
T1059_005 = Technique("T1059_005")
T1059_006 = Technique("T1059_006")
T1059_007 = Technique("T1059_007")
T1059_008 = Technique("T1059_008")
T1059_009 = Technique("T1059_009")
T1586_001 = Technique("T1586_001")
T1586_002 = Technique("T1586_002")
T1586_003 = Technique("T1586_003")
T1584_001 = Technique("T1584_001")
T1584_002 = Technique("T1584_002")
T1584_003 = Technique("T1584_003")
T1584_004 = Technique("T1584_004")
T1584_005 = Technique("T1584_005")
T1584_006 = Technique("T1584_006")
T1584_007 = Technique("T1584_007")
T1136_001 = Technique("T1136_001")
T1136_002 = Technique("T1136_002")
T1136_003 = Technique("T1136_003")
T1543_001 = Technique("T1543_001")
T1543_002 = Technique("T1543_002")
T1543_003 = Technique("T1543_003")
T1543_004 = Technique("T1543_004")
T1555_001 = Technique("T1555_001")
T1555_002 = Technique("T1555_002")
T1555_003 = Technique("T1555_003")
T1555_004 = Technique("T1555_004")
T1555_005 = Technique("T1555_005")
T1132_001 = Technique("T1132_001")
T1132_002 = Technique("T1132_002")
T1602_001 = Technique("T1602_001")
T1602_002 = Technique("T1602_002")
T1213_001 = Technique("T1213_001")
T1213_002 = Technique("T1213_002")
T1213_003 = Technique("T1213_003")
T1565_001 = Technique("T1565_001")
T1565_002 = Technique("T1565_002")
T1565_003 = Technique("T1565_003")
T1001_001 = Technique("T1001_001")
T1001_002 = Technique("T1001_002")
T1001_003 = Technique("T1001_003")
T1074_001 = Technique("T1074_001")
T1074_002 = Technique("T1074_002")
T1491_001 = Technique("T1491_001")
T1491_002 = Technique("T1491_002")
T1587_001 = Technique("T1587_001")
T1587_002 = Technique("T1587_002")
T1587_003 = Technique("T1587_003")
T1587_004 = Technique("T1587_004")
T1561_001 = Technique("T1561_001")
T1561_002 = Technique("T1561_002")
T1484_001 = Technique("T1484_001")
T1484_002 = Technique("T1484_002")
T1568_001 = Technique("T1568_001")
T1568_002 = Technique("T1568_002")
T1568_003 = Technique("T1568_003")
T1114_001 = Technique("T1114_001")
T1114_002 = Technique("T1114_002")
T1114_003 = Technique("T1114_003")
T1573_001 = Technique("T1573_001")
T1573_002 = Technique("T1573_002")
T1499_001 = Technique("T1499_001")
T1499_002 = Technique("T1499_002")
T1499_003 = Technique("T1499_003")
T1499_004 = Technique("T1499_004")
T1585_001 = Technique("T1585_001")
T1585_002 = Technique("T1585_002")
T1585_003 = Technique("T1585_003")
T1546_001 = Technique("T1546_001")
T1546_002 = Technique("T1546_002")
T1546_003 = Technique("T1546_003")
T1546_004 = Technique("T1546_004")
T1546_005 = Technique("T1546_005")
T1546_006 = Technique("T1546_006")
T1546_007 = Technique("T1546_007")
T1546_008 = Technique("T1546_008")
T1546_009 = Technique("T1546_009")
T1546_010 = Technique("T1546_010")
T1546_011 = Technique("T1546_011")
T1546_012 = Technique("T1546_012")
T1546_013 = Technique("T1546_013")
T1546_014 = Technique("T1546_014")
T1546_015 = Technique("T1546_015")
T1546_016 = Technique("T1546_016")
T1480_001 = Technique("T1480_001")
T1048_001 = Technique("T1048_001")
T1048_002 = Technique("T1048_002")
T1048_003 = Technique("T1048_003")
T1011_001 = Technique("T1011_001")
T1052_001 = Technique("T1052_001")
T1567_001 = Technique("T1567_001")
T1567_002 = Technique("T1567_002")
T1567_003 = Technique("T1567_003")
T1222_001 = Technique("T1222_001")
T1222_002 = Technique("T1222_002")
T1606_001 = Technique("T1606_001")
T1606_002 = Technique("T1606_002")
T1592_001 = Technique("T1592_001")
T1592_002 = Technique("T1592_002")
T1592_003 = Technique("T1592_003")
T1592_004 = Technique("T1592_004")
T1589_001 = Technique("T1589_001")
T1589_002 = Technique("T1589_002")
T1589_003 = Technique("T1589_003")
T1590_001 = Technique("T1590_001")
T1590_002 = Technique("T1590_002")
T1590_003 = Technique("T1590_003")
T1590_004 = Technique("T1590_004")
T1590_005 = Technique("T1590_005")
T1590_006 = Technique("T1590_006")
T1591_001 = Technique("T1591_001")
T1591_002 = Technique("T1591_002")
T1591_003 = Technique("T1591_003")
T1591_004 = Technique("T1591_004")
T1564_001 = Technique("T1564_001")
T1564_002 = Technique("T1564_002")
T1564_003 = Technique("T1564_003")
T1564_004 = Technique("T1564_004")
T1564_005 = Technique("T1564_005")
T1564_006 = Technique("T1564_006")
T1564_007 = Technique("T1564_007")
T1564_008 = Technique("T1564_008")
T1564_009 = Technique("T1564_009")
T1564_010 = Technique("T1564_010")
T1574_001 = Technique("T1574_001")
T1574_002 = Technique("T1574_002")
T1574_004 = Technique("T1574_004")
T1574_005 = Technique("T1574_005")
T1574_006 = Technique("T1574_006")
T1574_007 = Technique("T1574_007")
T1574_008 = Technique("T1574_008")
T1574_009 = Technique("T1574_009")
T1574_010 = Technique("T1574_010")
T1574_011 = Technique("T1574_011")
T1574_012 = Technique("T1574_012")
T1574_013 = Technique("T1574_013")
T1562_001 = Technique("T1562_001")
T1562_002 = Technique("T1562_002")
T1562_003 = Technique("T1562_003")
T1562_004 = Technique("T1562_004")
T1562_006 = Technique("T1562_006")
T1562_007 = Technique("T1562_007")
T1562_008 = Technique("T1562_008")
T1562_009 = Technique("T1562_009")
T1562_010 = Technique("T1562_010")
T1562_011 = Technique("T1562_011")
T1070_001 = Technique("T1070_001")
T1070_002 = Technique("T1070_002")
T1070_003 = Technique("T1070_003")
T1070_004 = Technique("T1070_004")
T1070_005 = Technique("T1070_005")
T1070_006 = Technique("T1070_006")
T1070_007 = Technique("T1070_007")
T1070_008 = Technique("T1070_008")
T1070_009 = Technique("T1070_009")
T1056_001 = Technique("T1056_001")
T1056_002 = Technique("T1056_002")
T1056_003 = Technique("T1056_003")
T1056_004 = Technique("T1056_004")
T1559_001 = Technique("T1559_001")
T1559_002 = Technique("T1559_002")
T1559_003 = Technique("T1559_003")
T1036_001 = Technique("T1036_001")
T1036_002 = Technique("T1036_002")
T1036_003 = Technique("T1036_003")
T1036_004 = Technique("T1036_004")
T1036_005 = Technique("T1036_005")
T1036_006 = Technique("T1036_006")
T1036_007 = Technique("T1036_007")
T1036_008 = Technique("T1036_008")
T1556_001 = Technique("T1556_001")
T1556_002 = Technique("T1556_002")
T1556_003 = Technique("T1556_003")
T1556_004 = Technique("T1556_004")
T1556_005 = Technique("T1556_005")
T1556_006 = Technique("T1556_006")
T1556_007 = Technique("T1556_007")
T1556_008 = Technique("T1556_008")
T1578_001 = Technique("T1578_001")
T1578_002 = Technique("T1578_002")
T1578_003 = Technique("T1578_003")
T1578_004 = Technique("T1578_004")
T1601_001 = Technique("T1601_001")
T1601_002 = Technique("T1601_002")
T1599_001 = Technique("T1599_001")
T1498_001 = Technique("T1498_001")
T1498_002 = Technique("T1498_002")
T1027_001 = Technique("T1027_001")
T1027_002 = Technique("T1027_002")
T1027_003 = Technique("T1027_003")
T1027_004 = Technique("T1027_004")
T1027_005 = Technique("T1027_005")
T1027_006 = Technique("T1027_006")
T1027_007 = Technique("T1027_007")
T1027_008 = Technique("T1027_008")
T1027_009 = Technique("T1027_009")
T1027_010 = Technique("T1027_010")
T1027_011 = Technique("T1027_011")
T1588_001 = Technique("T1588_001")
T1588_002 = Technique("T1588_002")
T1588_003 = Technique("T1588_003")
T1588_004 = Technique("T1588_004")
T1588_005 = Technique("T1588_005")
T1588_006 = Technique("T1588_006")
T1137_001 = Technique("T1137_001")
T1137_002 = Technique("T1137_002")
T1137_003 = Technique("T1137_003")
T1137_004 = Technique("T1137_004")
T1137_005 = Technique("T1137_005")
T1137_006 = Technique("T1137_006")
T1003_001 = Technique("T1003_001")
T1003_002 = Technique("T1003_002")
T1003_003 = Technique("T1003_003")
T1003_004 = Technique("T1003_004")
T1003_005 = Technique("T1003_005")
T1003_006 = Technique("T1003_006")
T1003_007 = Technique("T1003_007")
T1003_008 = Technique("T1003_008")
T1069_001 = Technique("T1069_001")
T1069_002 = Technique("T1069_002")
T1069_003 = Technique("T1069_003")
T1566_001 = Technique("T1566_001")
T1566_002 = Technique("T1566_002")
T1566_003 = Technique("T1566_003")
T1598_001 = Technique("T1598_001")
T1598_002 = Technique("T1598_002")
T1598_003 = Technique("T1598_003")
T1542_001 = Technique("T1542_001")
T1542_002 = Technique("T1542_002")
T1542_003 = Technique("T1542_003")
T1542_004 = Technique("T1542_004")
T1542_005 = Technique("T1542_005")
T1055_001 = Technique("T1055_001")
T1055_002 = Technique("T1055_002")
T1055_003 = Technique("T1055_003")
T1055_004 = Technique("T1055_004")
T1055_005 = Technique("T1055_005")
T1055_008 = Technique("T1055_008")
T1055_009 = Technique("T1055_009")
T1055_011 = Technique("T1055_011")
T1055_012 = Technique("T1055_012")
T1055_013 = Technique("T1055_013")
T1055_014 = Technique("T1055_014")
T1055_015 = Technique("T1055_015")
T1090_001 = Technique("T1090_001")
T1090_002 = Technique("T1090_002")
T1090_003 = Technique("T1090_003")
T1090_004 = Technique("T1090_004")
T1563_001 = Technique("T1563_001")
T1563_002 = Technique("T1563_002")
T1021_001 = Technique("T1021_001")
T1021_002 = Technique("T1021_002")
T1021_003 = Technique("T1021_003")
T1021_004 = Technique("T1021_004")
T1021_005 = Technique("T1021_005")
T1021_006 = Technique("T1021_006")
T1021_007 = Technique("T1021_007")
T1053_002 = Technique("T1053_002")
T1053_003 = Technique("T1053_003")
T1053_005 = Technique("T1053_005")
T1053_006 = Technique("T1053_006")
T1053_007 = Technique("T1053_007")
T1597_001 = Technique("T1597_001")
T1597_002 = Technique("T1597_002")
T1596_001 = Technique("T1596_001")
T1596_002 = Technique("T1596_002")
T1596_003 = Technique("T1596_003")
T1596_004 = Technique("T1596_004")
T1596_005 = Technique("T1596_005")
T1593_001 = Technique("T1593_001")
T1593_002 = Technique("T1593_002")
T1593_003 = Technique("T1593_003")
T1505_001 = Technique("T1505_001")
T1505_002 = Technique("T1505_002")
T1505_003 = Technique("T1505_003")
T1505_004 = Technique("T1505_004")
T1505_005 = Technique("T1505_005")
T1518_001 = Technique("T1518_001")
T1608_001 = Technique("T1608_001")
T1608_002 = Technique("T1608_002")
T1608_003 = Technique("T1608_003")
T1608_004 = Technique("T1608_004")
T1608_005 = Technique("T1608_005")
T1608_006 = Technique("T1608_006")
T1558_001 = Technique("T1558_001")
T1558_002 = Technique("T1558_002")
T1558_003 = Technique("T1558_003")
T1558_004 = Technique("T1558_004")
T1553_001 = Technique("T1553_001")
T1553_002 = Technique("T1553_002")
T1553_003 = Technique("T1553_003")
T1553_004 = Technique("T1553_004")
T1553_005 = Technique("T1553_005")
T1553_006 = Technique("T1553_006")
T1195_001 = Technique("T1195_001")
T1195_002 = Technique("T1195_002")
T1195_003 = Technique("T1195_003")
T1218_001 = Technique("T1218_001")
T1218_002 = Technique("T1218_002")
T1218_003 = Technique("T1218_003")
T1218_004 = Technique("T1218_004")
T1218_005 = Technique("T1218_005")
T1218_007 = Technique("T1218_007")
T1218_008 = Technique("T1218_008")
T1218_009 = Technique("T1218_009")
T1218_010 = Technique("T1218_010")
T1218_011 = Technique("T1218_011")
T1218_012 = Technique("T1218_012")
T1218_013 = Technique("T1218_013")
T1218_014 = Technique("T1218_014")
T1614_001 = Technique("T1614_001")
T1016_001 = Technique("T1016_001")
T1216_001 = Technique("T1216_001")
T1569_001 = Technique("T1569_001")
T1569_002 = Technique("T1569_002")
T1205_001 = Technique("T1205_001")
T1205_002 = Technique("T1205_002")
T1127_001 = Technique("T1127_001")
T1552_001 = Technique("T1552_001")
T1552_002 = Technique("T1552_002")
T1552_003 = Technique("T1552_003")
T1552_004 = Technique("T1552_004")
T1552_005 = Technique("T1552_005")
T1552_006 = Technique("T1552_006")
T1552_007 = Technique("T1552_007")
T1552_008 = Technique("T1552_008")
T1550_001 = Technique("T1550_001")
T1550_002 = Technique("T1550_002")
T1550_003 = Technique("T1550_003")
T1550_004 = Technique("T1550_004")
T1204_001 = Technique("T1204_001")
T1204_002 = Technique("T1204_002")
T1204_003 = Technique("T1204_003")
T1078_001 = Technique("T1078_001")
T1078_002 = Technique("T1078_002")
T1078_003 = Technique("T1078_003")
T1078_004 = Technique("T1078_004")
T1497_001 = Technique("T1497_001")
T1497_002 = Technique("T1497_002")
T1497_003 = Technique("T1497_003")
T1600_001 = Technique("T1600_001")
T1600_002 = Technique("T1600_002")
T1102_001 = Technique("T1102_001")
T1102_002 = Technique("T1102_002")
T1102_003 = Technique("T1102_003")
T1548_005 = Technique("T1548_005")
T1098_006 = Technique("T1098_006")
T1659 = Technique("T1659")
T1555_006 = Technique("T1555_006")
T1567_004 = Technique("T1567_004")
T1657 = Technique("T1657")
T1564_011 = Technique("T1564_011")
T1562_012 = Technique("T1562_012")
T1656 = Technique("T1656")
T1654 = Technique("T1654")
T1036_009 = Technique("T1036_009")
T1578_005 = Technique("T1578_005")
T1027_012 = Technique("T1027_012")
T1566_004 = Technique("T1566_004")
T1598_004 = Technique("T1598_004")
T1653 = Technique("T1653")
T1021_008 = Technique("T1021_008")
T1016_002 = Technique("T1016_002")


# Set id for Technique
T1548.hasID.append("T1548")
T1134.hasID.append("T1134")
T1531.hasID.append("T1531")
T1087.hasID.append("T1087")
T1098.hasID.append("T1098")
T1650.hasID.append("T1650")
T1583.hasID.append("T1583")
T1595.hasID.append("T1595")
T1557.hasID.append("T1557")
T1071.hasID.append("T1071")
T1010.hasID.append("T1010")
T1560.hasID.append("T1560")
T1123.hasID.append("T1123")
T1119.hasID.append("T1119")
T1020.hasID.append("T1020")
T1197.hasID.append("T1197")
T1547.hasID.append("T1547")
T1037.hasID.append("T1037")
T1176.hasID.append("T1176")
T1217.hasID.append("T1217")
T1185.hasID.append("T1185")
T1110.hasID.append("T1110")
T1612.hasID.append("T1612")
T1115.hasID.append("T1115")
T1651.hasID.append("T1651")
T1580.hasID.append("T1580")
T1538.hasID.append("T1538")
T1526.hasID.append("T1526")
T1619.hasID.append("T1619")
T1059.hasID.append("T1059")
T1092.hasID.append("T1092")
T1586.hasID.append("T1586")
T1554.hasID.append("T1554")
T1584.hasID.append("T1584")
T1609.hasID.append("T1609")
T1613.hasID.append("T1613")
T1136.hasID.append("T1136")
T1543.hasID.append("T1543")
T1555.hasID.append("T1555")
T1485.hasID.append("T1485")
T1132.hasID.append("T1132")
T1486.hasID.append("T1486")
T1530.hasID.append("T1530")
T1602.hasID.append("T1602")
T1213.hasID.append("T1213")
T1005.hasID.append("T1005")
T1039.hasID.append("T1039")
T1025.hasID.append("T1025")
T1565.hasID.append("T1565")
T1001.hasID.append("T1001")
T1074.hasID.append("T1074")
T1030.hasID.append("T1030")
T1622.hasID.append("T1622")
T1491.hasID.append("T1491")
T1140.hasID.append("T1140")
T1610.hasID.append("T1610")
T1587.hasID.append("T1587")
T1652.hasID.append("T1652")
T1006.hasID.append("T1006")
T1561.hasID.append("T1561")
T1484.hasID.append("T1484")
T1482.hasID.append("T1482")
T1189.hasID.append("T1189")
T1568.hasID.append("T1568")
T1114.hasID.append("T1114")
T1573.hasID.append("T1573")
T1499.hasID.append("T1499")
T1611.hasID.append("T1611")
T1585.hasID.append("T1585")
T1546.hasID.append("T1546")
T1480.hasID.append("T1480")
T1048.hasID.append("T1048")
T1041.hasID.append("T1041")
T1011.hasID.append("T1011")
T1052.hasID.append("T1052")
T1567.hasID.append("T1567")
T1190.hasID.append("T1190")
T1203.hasID.append("T1203")
T1212.hasID.append("T1212")
T1211.hasID.append("T1211")
T1068.hasID.append("T1068")
T1210.hasID.append("T1210")
T1133.hasID.append("T1133")
T1008.hasID.append("T1008")
T1083.hasID.append("T1083")
T1222.hasID.append("T1222")
T1495.hasID.append("T1495")
T1187.hasID.append("T1187")
T1606.hasID.append("T1606")
T1592.hasID.append("T1592")
T1589.hasID.append("T1589")
T1590.hasID.append("T1590")
T1591.hasID.append("T1591")
T1615.hasID.append("T1615")
T1200.hasID.append("T1200")
T1564.hasID.append("T1564")
T1574.hasID.append("T1574")
T1562.hasID.append("T1562")
T1525.hasID.append("T1525")
T1070.hasID.append("T1070")
T1202.hasID.append("T1202")
T1105.hasID.append("T1105")
T1490.hasID.append("T1490")
T1056.hasID.append("T1056")
T1559.hasID.append("T1559")
T1534.hasID.append("T1534")
T1570.hasID.append("T1570")
T1036.hasID.append("T1036")
T1556.hasID.append("T1556")
T1578.hasID.append("T1578")
T1112.hasID.append("T1112")
T1601.hasID.append("T1601")
T1111.hasID.append("T1111")
T1621.hasID.append("T1621")
T1104.hasID.append("T1104")
T1106.hasID.append("T1106")
T1599.hasID.append("T1599")
T1498.hasID.append("T1498")
T1046.hasID.append("T1046")
T1135.hasID.append("T1135")
T1040.hasID.append("T1040")
T1095.hasID.append("T1095")
T1571.hasID.append("T1571")
T1027.hasID.append("T1027")
T1588.hasID.append("T1588")
T1137.hasID.append("T1137")
T1003.hasID.append("T1003")
T1201.hasID.append("T1201")
T1120.hasID.append("T1120")
T1069.hasID.append("T1069")
T1566.hasID.append("T1566")
T1598.hasID.append("T1598")
T1647.hasID.append("T1647")
T1542.hasID.append("T1542")
T1057.hasID.append("T1057")
T1055.hasID.append("T1055")
T1572.hasID.append("T1572")
T1090.hasID.append("T1090")
T1012.hasID.append("T1012")
T1620.hasID.append("T1620")
T1219.hasID.append("T1219")
T1563.hasID.append("T1563")
T1021.hasID.append("T1021")
T1018.hasID.append("T1018")
T1091.hasID.append("T1091")
T1496.hasID.append("T1496")
T1207.hasID.append("T1207")
T1014.hasID.append("T1014")
T1053.hasID.append("T1053")
T1029.hasID.append("T1029")
T1113.hasID.append("T1113")
T1597.hasID.append("T1597")
T1596.hasID.append("T1596")
T1593.hasID.append("T1593")
T1594.hasID.append("T1594")
T1505.hasID.append("T1505")
T1648.hasID.append("T1648")
T1489.hasID.append("T1489")
T1129.hasID.append("T1129")
T1072.hasID.append("T1072")
T1518.hasID.append("T1518")
T1608.hasID.append("T1608")
T1528.hasID.append("T1528")
T1649.hasID.append("T1649")
T1558.hasID.append("T1558")
T1539.hasID.append("T1539")
T1553.hasID.append("T1553")
T1195.hasID.append("T1195")
T1218.hasID.append("T1218")
T1082.hasID.append("T1082")
T1614.hasID.append("T1614")
T1016.hasID.append("T1016")
T1049.hasID.append("T1049")
T1033.hasID.append("T1033")
T1216.hasID.append("T1216")
T1007.hasID.append("T1007")
T1569.hasID.append("T1569")
T1529.hasID.append("T1529")
T1124.hasID.append("T1124")
T1080.hasID.append("T1080")
T1221.hasID.append("T1221")
T1205.hasID.append("T1205")
T1537.hasID.append("T1537")
T1127.hasID.append("T1127")
T1199.hasID.append("T1199")
T1552.hasID.append("T1552")
T1535.hasID.append("T1535")
T1550.hasID.append("T1550")
T1204.hasID.append("T1204")
T1078.hasID.append("T1078")
T1125.hasID.append("T1125")
T1497.hasID.append("T1497")
T1600.hasID.append("T1600")
T1102.hasID.append("T1102")
T1047.hasID.append("T1047")
T1220.hasID.append("T1220")
T1513.hasID.append("T1513")
T1548_001.hasID.append("T1548.001")
T1548_002.hasID.append("T1548.002")
T1548_003.hasID.append("T1548.003")
T1548_004.hasID.append("T1548.004")
T1134_001.hasID.append("T1134.001")
T1134_002.hasID.append("T1134.002")
T1134_003.hasID.append("T1134.003")
T1134_004.hasID.append("T1134.004")
T1134_005.hasID.append("T1134.005")
T1087_001.hasID.append("T1087.001")
T1087_002.hasID.append("T1087.002")
T1087_003.hasID.append("T1087.003")
T1087_004.hasID.append("T1087.004")
T1098_001.hasID.append("T1098.001")
T1098_002.hasID.append("T1098.002")
T1098_003.hasID.append("T1098.003")
T1098_004.hasID.append("T1098.004")
T1098_005.hasID.append("T1098.005")
T1583_001.hasID.append("T1583.001")
T1583_002.hasID.append("T1583.002")
T1583_003.hasID.append("T1583.003")
T1583_004.hasID.append("T1583.004")
T1583_005.hasID.append("T1583.005")
T1583_006.hasID.append("T1583.006")
T1583_007.hasID.append("T1583.007")
T1583_008.hasID.append("T1583.008")
T1595_001.hasID.append("T1595.001")
T1595_002.hasID.append("T1595.002")
T1595_003.hasID.append("T1595.003")
T1557_001.hasID.append("T1557.001")
T1557_002.hasID.append("T1557.002")
T1557_003.hasID.append("T1557.003")
T1071_001.hasID.append("T1071.001")
T1071_002.hasID.append("T1071.002")
T1071_003.hasID.append("T1071.003")
T1071_004.hasID.append("T1071.004")
T1560_001.hasID.append("T1560.001")
T1560_002.hasID.append("T1560.002")
T1560_003.hasID.append("T1560.003")
T1020_001.hasID.append("T1020.001")
T1547_001.hasID.append("T1547.001")
T1547_002.hasID.append("T1547.002")
T1547_003.hasID.append("T1547.003")
T1547_004.hasID.append("T1547.004")
T1547_005.hasID.append("T1547.005")
T1547_006.hasID.append("T1547.006")
T1547_007.hasID.append("T1547.007")
T1547_008.hasID.append("T1547.008")
T1547_009.hasID.append("T1547.009")
T1547_010.hasID.append("T1547.010")
T1547_012.hasID.append("T1547.012")
T1547_013.hasID.append("T1547.013")
T1547_014.hasID.append("T1547.014")
T1547_015.hasID.append("T1547.015")
T1037_001.hasID.append("T1037.001")
T1037_002.hasID.append("T1037.002")
T1037_003.hasID.append("T1037.003")
T1037_004.hasID.append("T1037.004")
T1037_005.hasID.append("T1037.005")
T1110_001.hasID.append("T1110.001")
T1110_002.hasID.append("T1110.002")
T1110_003.hasID.append("T1110.003")
T1110_004.hasID.append("T1110.004")
T1059_001.hasID.append("T1059.001")
T1059_002.hasID.append("T1059.002")
T1059_003.hasID.append("T1059.003")
T1059_004.hasID.append("T1059.004")
T1059_005.hasID.append("T1059.005")
T1059_006.hasID.append("T1059.006")
T1059_007.hasID.append("T1059.007")
T1059_008.hasID.append("T1059.008")
T1059_009.hasID.append("T1059.009")
T1586_001.hasID.append("T1586.001")
T1586_002.hasID.append("T1586.002")
T1586_003.hasID.append("T1586.003")
T1584_001.hasID.append("T1584.001")
T1584_002.hasID.append("T1584.002")
T1584_003.hasID.append("T1584.003")
T1584_004.hasID.append("T1584.004")
T1584_005.hasID.append("T1584.005")
T1584_006.hasID.append("T1584.006")
T1584_007.hasID.append("T1584.007")
T1136_001.hasID.append("T1136.001")
T1136_002.hasID.append("T1136.002")
T1136_003.hasID.append("T1136.003")
T1543_001.hasID.append("T1543.001")
T1543_002.hasID.append("T1543.002")
T1543_003.hasID.append("T1543.003")
T1543_004.hasID.append("T1543.004")
T1555_001.hasID.append("T1555.001")
T1555_002.hasID.append("T1555.002")
T1555_003.hasID.append("T1555.003")
T1555_004.hasID.append("T1555.004")
T1555_005.hasID.append("T1555.005")
T1132_001.hasID.append("T1132.001")
T1132_002.hasID.append("T1132.002")
T1602_001.hasID.append("T1602.001")
T1602_002.hasID.append("T1602.002")
T1213_001.hasID.append("T1213.001")
T1213_002.hasID.append("T1213.002")
T1213_003.hasID.append("T1213.003")
T1565_001.hasID.append("T1565.001")
T1565_002.hasID.append("T1565.002")
T1565_003.hasID.append("T1565.003")
T1001_001.hasID.append("T1001.001")
T1001_002.hasID.append("T1001.002")
T1001_003.hasID.append("T1001.003")
T1074_001.hasID.append("T1074.001")
T1074_002.hasID.append("T1074.002")
T1491_001.hasID.append("T1491.001")
T1491_002.hasID.append("T1491.002")
T1587_001.hasID.append("T1587.001")
T1587_002.hasID.append("T1587.002")
T1587_003.hasID.append("T1587.003")
T1587_004.hasID.append("T1587.004")
T1561_001.hasID.append("T1561.001")
T1561_002.hasID.append("T1561.002")
T1484_001.hasID.append("T1484.001")
T1484_002.hasID.append("T1484.002")
T1568_001.hasID.append("T1568.001")
T1568_002.hasID.append("T1568.002")
T1568_003.hasID.append("T1568.003")
T1114_001.hasID.append("T1114.001")
T1114_002.hasID.append("T1114.002")
T1114_003.hasID.append("T1114.003")
T1573_001.hasID.append("T1573.001")
T1573_002.hasID.append("T1573.002")
T1499_001.hasID.append("T1499.001")
T1499_002.hasID.append("T1499.002")
T1499_003.hasID.append("T1499.003")
T1499_004.hasID.append("T1499.004")
T1585_001.hasID.append("T1585.001")
T1585_002.hasID.append("T1585.002")
T1585_003.hasID.append("T1585.003")
T1546_001.hasID.append("T1546.001")
T1546_002.hasID.append("T1546.002")
T1546_003.hasID.append("T1546.003")
T1546_004.hasID.append("T1546.004")
T1546_005.hasID.append("T1546.005")
T1546_006.hasID.append("T1546.006")
T1546_007.hasID.append("T1546.007")
T1546_008.hasID.append("T1546.008")
T1546_009.hasID.append("T1546.009")
T1546_010.hasID.append("T1546.010")
T1546_011.hasID.append("T1546.011")
T1546_012.hasID.append("T1546.012")
T1546_013.hasID.append("T1546.013")
T1546_014.hasID.append("T1546.014")
T1546_015.hasID.append("T1546.015")
T1546_016.hasID.append("T1546.016")
T1480_001.hasID.append("T1480.001")
T1048_001.hasID.append("T1048.001")
T1048_002.hasID.append("T1048.002")
T1048_003.hasID.append("T1048.003")
T1011_001.hasID.append("T1011.001")
T1052_001.hasID.append("T1052.001")
T1567_001.hasID.append("T1567.001")
T1567_002.hasID.append("T1567.002")
T1567_003.hasID.append("T1567.003")
T1222_001.hasID.append("T1222.001")
T1222_002.hasID.append("T1222.002")
T1606_001.hasID.append("T1606.001")
T1606_002.hasID.append("T1606.002")
T1592_001.hasID.append("T1592.001")
T1592_002.hasID.append("T1592.002")
T1592_003.hasID.append("T1592.003")
T1592_004.hasID.append("T1592.004")
T1589_001.hasID.append("T1589.001")
T1589_002.hasID.append("T1589.002")
T1589_003.hasID.append("T1589.003")
T1590_001.hasID.append("T1590.001")
T1590_002.hasID.append("T1590.002")
T1590_003.hasID.append("T1590.003")
T1590_004.hasID.append("T1590.004")
T1590_005.hasID.append("T1590.005")
T1590_006.hasID.append("T1590.006")
T1591_001.hasID.append("T1591.001")
T1591_002.hasID.append("T1591.002")
T1591_003.hasID.append("T1591.003")
T1591_004.hasID.append("T1591.004")
T1564_001.hasID.append("T1564.001")
T1564_002.hasID.append("T1564.002")
T1564_003.hasID.append("T1564.003")
T1564_004.hasID.append("T1564.004")
T1564_005.hasID.append("T1564.005")
T1564_006.hasID.append("T1564.006")
T1564_007.hasID.append("T1564.007")
T1564_008.hasID.append("T1564.008")
T1564_009.hasID.append("T1564.009")
T1564_010.hasID.append("T1564.010")
T1574_001.hasID.append("T1574.001")
T1574_002.hasID.append("T1574.002")
T1574_004.hasID.append("T1574.004")
T1574_005.hasID.append("T1574.005")
T1574_006.hasID.append("T1574.006")
T1574_007.hasID.append("T1574.007")
T1574_008.hasID.append("T1574.008")
T1574_009.hasID.append("T1574.009")
T1574_010.hasID.append("T1574.010")
T1574_011.hasID.append("T1574.011")
T1574_012.hasID.append("T1574.012")
T1574_013.hasID.append("T1574.013")
T1562_001.hasID.append("T1562.001")
T1562_002.hasID.append("T1562.002")
T1562_003.hasID.append("T1562.003")
T1562_004.hasID.append("T1562.004")
T1562_006.hasID.append("T1562.006")
T1562_007.hasID.append("T1562.007")
T1562_008.hasID.append("T1562.008")
T1562_009.hasID.append("T1562.009")
T1562_010.hasID.append("T1562.010")
T1562_011.hasID.append("T1562.011")
T1070_001.hasID.append("T1070.001")
T1070_002.hasID.append("T1070.002")
T1070_003.hasID.append("T1070.003")
T1070_004.hasID.append("T1070.004")
T1070_005.hasID.append("T1070.005")
T1070_006.hasID.append("T1070.006")
T1070_007.hasID.append("T1070.007")
T1070_008.hasID.append("T1070.008")
T1070_009.hasID.append("T1070.009")
T1056_001.hasID.append("T1056.001")
T1056_002.hasID.append("T1056.002")
T1056_003.hasID.append("T1056.003")
T1056_004.hasID.append("T1056.004")
T1559_001.hasID.append("T1559.001")
T1559_002.hasID.append("T1559.002")
T1559_003.hasID.append("T1559.003")
T1036_001.hasID.append("T1036.001")
T1036_002.hasID.append("T1036.002")
T1036_003.hasID.append("T1036.003")
T1036_004.hasID.append("T1036.004")
T1036_005.hasID.append("T1036.005")
T1036_006.hasID.append("T1036.006")
T1036_007.hasID.append("T1036.007")
T1036_008.hasID.append("T1036.008")
T1556_001.hasID.append("T1556.001")
T1556_002.hasID.append("T1556.002")
T1556_003.hasID.append("T1556.003")
T1556_004.hasID.append("T1556.004")
T1556_005.hasID.append("T1556.005")
T1556_006.hasID.append("T1556.006")
T1556_007.hasID.append("T1556.007")
T1556_008.hasID.append("T1556.008")
T1578_001.hasID.append("T1578.001")
T1578_002.hasID.append("T1578.002")
T1578_003.hasID.append("T1578.003")
T1578_004.hasID.append("T1578.004")
T1601_001.hasID.append("T1601.001")
T1601_002.hasID.append("T1601.002")
T1599_001.hasID.append("T1599.001")
T1498_001.hasID.append("T1498.001")
T1498_002.hasID.append("T1498.002")
T1027_001.hasID.append("T1027.001")
T1027_002.hasID.append("T1027.002")
T1027_003.hasID.append("T1027.003")
T1027_004.hasID.append("T1027.004")
T1027_005.hasID.append("T1027.005")
T1027_006.hasID.append("T1027.006")
T1027_007.hasID.append("T1027.007")
T1027_008.hasID.append("T1027.008")
T1027_009.hasID.append("T1027.009")
T1027_010.hasID.append("T1027.010")
T1027_011.hasID.append("T1027.011")
T1588_001.hasID.append("T1588.001")
T1588_002.hasID.append("T1588.002")
T1588_003.hasID.append("T1588.003")
T1588_004.hasID.append("T1588.004")
T1588_005.hasID.append("T1588.005")
T1588_006.hasID.append("T1588.006")
T1137_001.hasID.append("T1137.001")
T1137_002.hasID.append("T1137.002")
T1137_003.hasID.append("T1137.003")
T1137_004.hasID.append("T1137.004")
T1137_005.hasID.append("T1137.005")
T1137_006.hasID.append("T1137.006")
T1003_001.hasID.append("T1003.001")
T1003_002.hasID.append("T1003.002")
T1003_003.hasID.append("T1003.003")
T1003_004.hasID.append("T1003.004")
T1003_005.hasID.append("T1003.005")
T1003_006.hasID.append("T1003.006")
T1003_007.hasID.append("T1003.007")
T1003_008.hasID.append("T1003.008")
T1069_001.hasID.append("T1069.001")
T1069_002.hasID.append("T1069.002")
T1069_003.hasID.append("T1069.003")
T1566_001.hasID.append("T1566.001")
T1566_002.hasID.append("T1566.002")
T1566_003.hasID.append("T1566.003")
T1598_001.hasID.append("T1598.001")
T1598_002.hasID.append("T1598.002")
T1598_003.hasID.append("T1598.003")
T1542_001.hasID.append("T1542.001")
T1542_002.hasID.append("T1542.002")
T1542_003.hasID.append("T1542.003")
T1542_004.hasID.append("T1542.004")
T1542_005.hasID.append("T1542.005")
T1055_001.hasID.append("T1055.001")
T1055_002.hasID.append("T1055.002")
T1055_003.hasID.append("T1055.003")
T1055_004.hasID.append("T1055.004")
T1055_005.hasID.append("T1055.005")
T1055_008.hasID.append("T1055.008")
T1055_009.hasID.append("T1055.009")
T1055_011.hasID.append("T1055.011")
T1055_012.hasID.append("T1055.012")
T1055_013.hasID.append("T1055.013")
T1055_014.hasID.append("T1055.014")
T1055_015.hasID.append("T1055.015")
T1090_001.hasID.append("T1090.001")
T1090_002.hasID.append("T1090.002")
T1090_003.hasID.append("T1090.003")
T1090_004.hasID.append("T1090.004")
T1563_001.hasID.append("T1563.001")
T1563_002.hasID.append("T1563.002")
T1021_001.hasID.append("T1021.001")
T1021_002.hasID.append("T1021.002")
T1021_003.hasID.append("T1021.003")
T1021_004.hasID.append("T1021.004")
T1021_005.hasID.append("T1021.005")
T1021_006.hasID.append("T1021.006")
T1021_007.hasID.append("T1021.007")
T1053_002.hasID.append("T1053.002")
T1053_003.hasID.append("T1053.003")
T1053_005.hasID.append("T1053.005")
T1053_006.hasID.append("T1053.006")
T1053_007.hasID.append("T1053.007")
T1597_001.hasID.append("T1597.001")
T1597_002.hasID.append("T1597.002")
T1596_001.hasID.append("T1596.001")
T1596_002.hasID.append("T1596.002")
T1596_003.hasID.append("T1596.003")
T1596_004.hasID.append("T1596.004")
T1596_005.hasID.append("T1596.005")
T1593_001.hasID.append("T1593.001")
T1593_002.hasID.append("T1593.002")
T1593_003.hasID.append("T1593.003")
T1505_001.hasID.append("T1505.001")
T1505_002.hasID.append("T1505.002")
T1505_003.hasID.append("T1505.003")
T1505_004.hasID.append("T1505.004")
T1505_005.hasID.append("T1505.005")
T1518_001.hasID.append("T1518.001")
T1608_001.hasID.append("T1608.001")
T1608_002.hasID.append("T1608.002")
T1608_003.hasID.append("T1608.003")
T1608_004.hasID.append("T1608.004")
T1608_005.hasID.append("T1608.005")
T1608_006.hasID.append("T1608.006")
T1558_001.hasID.append("T1558.001")
T1558_002.hasID.append("T1558.002")
T1558_003.hasID.append("T1558.003")
T1558_004.hasID.append("T1558.004")
T1553_001.hasID.append("T1553.001")
T1553_002.hasID.append("T1553.002")
T1553_003.hasID.append("T1553.003")
T1553_004.hasID.append("T1553.004")
T1553_005.hasID.append("T1553.005")
T1553_006.hasID.append("T1553.006")
T1195_001.hasID.append("T1195.001")
T1195_002.hasID.append("T1195.002")
T1195_003.hasID.append("T1195.003")
T1218_001.hasID.append("T1218.001")
T1218_002.hasID.append("T1218.002")
T1218_003.hasID.append("T1218.003")
T1218_004.hasID.append("T1218.004")
T1218_005.hasID.append("T1218.005")
T1218_007.hasID.append("T1218.007")
T1218_008.hasID.append("T1218.008")
T1218_009.hasID.append("T1218.009")
T1218_010.hasID.append("T1218.010")
T1218_011.hasID.append("T1218.011")
T1218_012.hasID.append("T1218.012")
T1218_013.hasID.append("T1218.013")
T1218_014.hasID.append("T1218.014")
T1614_001.hasID.append("T1614.001")
T1016_001.hasID.append("T1016.001")
T1216_001.hasID.append("T1216.001")
T1569_001.hasID.append("T1569.001")
T1569_002.hasID.append("T1569.002")
T1205_001.hasID.append("T1205.001")
T1205_002.hasID.append("T1205.002")
T1127_001.hasID.append("T1127.001")
T1552_001.hasID.append("T1552.001")
T1552_002.hasID.append("T1552.002")
T1552_003.hasID.append("T1552.003")
T1552_004.hasID.append("T1552.004")
T1552_005.hasID.append("T1552.005")
T1552_006.hasID.append("T1552.006")
T1552_007.hasID.append("T1552.007")
T1552_008.hasID.append("T1552.008")
T1550_001.hasID.append("T1550.001")
T1550_002.hasID.append("T1550.002")
T1550_003.hasID.append("T1550.003")
T1550_004.hasID.append("T1550.004")
T1204_001.hasID.append("T1204.001")
T1204_002.hasID.append("T1204.002")
T1204_003.hasID.append("T1204.003")
T1078_001.hasID.append("T1078.001")
T1078_002.hasID.append("T1078.002")
T1078_003.hasID.append("T1078.003")
T1078_004.hasID.append("T1078.004")
T1497_001.hasID.append("T1497.001")
T1497_002.hasID.append("T1497.002")
T1497_003.hasID.append("T1497.003")
T1600_001.hasID.append("T1600.001")
T1600_002.hasID.append("T1600.002")
T1102_001.hasID.append("T1102.001")
T1102_002.hasID.append("T1102.002")
T1102_003.hasID.append("T1102.003")
T1548_005.hasID.append("T1548_005")
T1098_006.hasID.append("T1098_006")
T1659.hasID.append("T1659")
T1555_006.hasID.append("T1555_006")
T1567_004.hasID.append("T1567_004")
T1657.hasID.append("T1657")
T1564_011.hasID.append("T1564_011")
T1562_012.hasID.append("T1562_012")
T1656.hasID.append("T1656")
T1654.hasID.append("T1654")
T1036_009.hasID.append("T1036_009")
T1578_005.hasID.append("T1578_005")
T1027_012.hasID.append("T1027_012")
T1566_004.hasID.append("T1566_004")
T1598_004.hasID.append("T1598_004")
T1653.hasID.append("T1653")
T1021_008.hasID.append("T1021_008")
T1016_002.hasID.append("T1016_002")


# Set name of Technique

T1548.hasName.append("Abuse Elevation Control Mechanism")
T1548_001.hasName.append("Abuse Elevation Control Mechanism: Setuid and Setgid")
T1548_002.hasName.append("Abuse Elevation Control Mechanism: Bypass User Account Control")
T1548_003.hasName.append("Abuse Elevation Control Mechanism: Sudo and Sudo Caching")
T1548_004.hasName.append("Abuse Elevation Control Mechanism: Elevated Execution with Prompt")
T1134.hasName.append("Access Token Manipulation")
T1134_001.hasName.append("Access Token Manipulation: Token Impersonation/Theft")
T1134_002.hasName.append("Access Token Manipulation: Create Process with Token")
T1134_003.hasName.append("Access Token Manipulation: Make and Impersonate Token")
T1134_004.hasName.append("Access Token Manipulation: Parent PID Spoofing")
T1134_005.hasName.append("Access Token Manipulation: SID-History Injection")
T1531.hasName.append("Account Access Removal")
T1087.hasName.append("Account Discovery")
T1087_001.hasName.append("Account Discovery: Local Account")
T1087_002.hasName.append("Account Discovery: Domain Account")
T1087_003.hasName.append("Account Discovery: Email Account")
T1087_004.hasName.append("Account Discovery: Cloud Account")
T1098.hasName.append("Account Manipulation")
T1098_001.hasName.append("Account Manipulation: Additional Cloud Credentials")
T1098_002.hasName.append("Account Manipulation: Additional Email Delegate Permissions")
T1098_003.hasName.append("Account Manipulation: Additional Cloud Roles")
T1098_004.hasName.append("Account Manipulation: SSH Authorized Keys")
T1098_005.hasName.append("Account Manipulation: Device Registration")
T1650.hasName.append("Acquire Access")
T1583.hasName.append("Acquire Infrastructure")
T1583_001.hasName.append("Acquire Infrastructure: Domains")
T1583_002.hasName.append("Acquire Infrastructure: DNS Server")
T1583_003.hasName.append("Acquire Infrastructure: Virtual Private Server")
T1583_004.hasName.append("Acquire Infrastructure: Server")
T1583_005.hasName.append("Acquire Infrastructure: Botnet")
T1583_006.hasName.append("Acquire Infrastructure: Web Services")
T1583_007.hasName.append("Acquire Infrastructure: Serverless")
T1583_008.hasName.append("Acquire Infrastructure: Malvertising")
T1595.hasName.append("Active Scanning")
T1595_001.hasName.append("Active Scanning: Scanning IP Blocks")
T1595_002.hasName.append("Active Scanning: Vulnerability Scanning")
T1595_003.hasName.append("Active Scanning: Wordlist Scanning")
T1557.hasName.append("Adversary-in-the-Middle")
T1557_001.hasName.append("Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay")
T1557_002.hasName.append("Adversary-in-the-Middle: ARP Cache Poisoning")
T1557_003.hasName.append("Adversary-in-the-Middle: DHCP Spoofing")
T1071.hasName.append("Application Layer Protocol")
T1071_001.hasName.append("Application Layer Protocol: Web Protocols")
T1071_002.hasName.append("Application Layer Protocol: File Transfer Protocols")
T1071_003.hasName.append("Application Layer Protocol: Mail Protocols")
T1071_004.hasName.append("Application Layer Protocol: DNS")
T1010.hasName.append("Application Window Discovery")
T1560.hasName.append("Archive Collected Data")
T1560_001.hasName.append("Archive Collected Data: Archive via Utility")
T1560_002.hasName.append("Archive Collected Data: Archive via Library")
T1560_003.hasName.append("Archive Collected Data: Archive via Custom Method")
T1123.hasName.append("Audio Capture")
T1119.hasName.append("Automated Collection")
T1020.hasName.append("Automated Exfiltration")
T1020_001.hasName.append("Automated Exfiltration: Traffic Duplication")
T1197.hasName.append("BITS Jobs")
T1547.hasName.append("Boot or Logon Autostart Execution")
T1547_001.hasName.append("Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder")
T1547_002.hasName.append("Boot or Logon Autostart Execution: Authentication Package")
T1547_003.hasName.append("Boot or Logon Autostart Execution: Time Providers")
T1547_004.hasName.append("Boot or Logon Autostart Execution: Winlogon Helper DLL")
T1547_005.hasName.append("Boot or Logon Autostart Execution: Security Support Provider")
T1547_006.hasName.append("Boot or Logon Autostart Execution: Kernel Modules and Extensions")
T1547_007.hasName.append("Boot or Logon Autostart Execution: Re-opened Applications")
T1547_008.hasName.append("Boot or Logon Autostart Execution: LSASS Driver")
T1547_009.hasName.append("Boot or Logon Autostart Execution: Shortcut Modification")
T1547_010.hasName.append("Boot or Logon Autostart Execution: Port Monitors")
T1547_012.hasName.append("Boot or Logon Autostart Execution: Print Processors")
T1547_013.hasName.append("Boot or Logon Autostart Execution: XDG Autostart Entries")
T1547_014.hasName.append("Boot or Logon Autostart Execution: Active Setup")
T1547_015.hasName.append("Boot or Logon Autostart Execution: Login Items")
T1037.hasName.append("Boot or Logon Initialization Scripts")
T1037_001.hasName.append("Boot or Logon Initialization Scripts: Logon Script (Windows)")
T1037_002.hasName.append("Boot or Logon Initialization Scripts: Login Hook")
T1037_003.hasName.append("Boot or Logon Initialization Scripts: Network Logon Script")
T1037_004.hasName.append("Boot or Logon Initialization Scripts: RC Scripts")
T1037_005.hasName.append("Boot or Logon Initialization Scripts: Startup Items")
T1176.hasName.append("Browser Extensions")
T1217.hasName.append("Browser Information Discovery")
T1185.hasName.append("Browser Session Hijacking")
T1110.hasName.append("Brute Force")
T1110_001.hasName.append("Brute Force: Password Guessing")
T1110_002.hasName.append("Brute Force: Password Cracking")
T1110_003.hasName.append("Brute Force: Password Spraying")
T1110_004.hasName.append("Brute Force: Credential Stuffing")
T1612.hasName.append("Build Image on Host")
T1115.hasName.append("Clipboard Data")
T1651.hasName.append("Cloud Administration Command")
T1580.hasName.append("Cloud Infrastructure Discovery")
T1538.hasName.append("Cloud Service Dashboard")
T1526.hasName.append("Cloud Service Discovery")
T1619.hasName.append("Cloud Storage Object Discovery")
T1059.hasName.append("Command and Scripting Interpreter")
T1059_001.hasName.append("Command and Scripting Interpreter: PowerShell")
T1059_002.hasName.append("Command and Scripting Interpreter: AppleScript")
T1059_003.hasName.append("Command and Scripting Interpreter: Windows Command Shell")
T1059_004.hasName.append("Command and Scripting Interpreter: Unix Shell")
T1059_005.hasName.append("Command and Scripting Interpreter: Visual Basic")
T1059_006.hasName.append("Command and Scripting Interpreter: Python")
T1059_007.hasName.append("Command and Scripting Interpreter: JavaScript")
T1059_008.hasName.append("Command and Scripting Interpreter: Network Device CLI")
T1059_009.hasName.append("Command and Scripting Interpreter: Cloud API")
T1092.hasName.append("Communication Through Removable Media")
T1586.hasName.append("Compromise Accounts")
T1586_001.hasName.append("Compromise Accounts: Social Media Accounts")
T1586_002.hasName.append("Compromise Accounts: Email Accounts")
T1586_003.hasName.append("Compromise Accounts: Cloud Accounts")
T1554.hasName.append("Compromise Client Software Binary")
T1584.hasName.append("Compromise Infrastructure")
T1584_001.hasName.append("Compromise Infrastructure: Domains")
T1584_002.hasName.append("Compromise Infrastructure: DNS Server")
T1584_003.hasName.append("Compromise Infrastructure: Virtual Private Server")
T1584_004.hasName.append("Compromise Infrastructure: Server")
T1584_005.hasName.append("Compromise Infrastructure: Botnet")
T1584_006.hasName.append("Compromise Infrastructure: Web Services")
T1584_007.hasName.append("Compromise Infrastructure: Serverless")
T1609.hasName.append("Container Administration Command")
T1613.hasName.append("Container and Resource Discovery")
T1136.hasName.append("Create Account")
T1136_001.hasName.append("Create Account: Local Account")
T1136_002.hasName.append("Create Account: Domain Account")
T1136_003.hasName.append("Create Account: Cloud Account")
T1543.hasName.append("Create or Modify System Process")
T1543_001.hasName.append("Create or Modify System Process: Launch Agent")
T1543_002.hasName.append("Create or Modify System Process: Systemd Service")
T1543_003.hasName.append("Create or Modify System Process: Windows Service")
T1543_004.hasName.append("Create or Modify System Process: Launch Daemon")
T1555.hasName.append("Credentials from Password Stores")
T1555_001.hasName.append("Credentials from Password Stores: Keychain")
T1555_002.hasName.append("Credentials from Password Stores: Securityd Memory")
T1555_003.hasName.append("Credentials from Password Stores: Credentials from Web Browsers")
T1555_004.hasName.append("Credentials from Password Stores: Windows Credential Manager")
T1555_005.hasName.append("Credentials from Password Stores: Password Managers")
T1485.hasName.append("Data Destruction")
T1132.hasName.append("Data Encoding")
T1132_001.hasName.append("Data Encoding: Standard Encoding")
T1132_002.hasName.append("Data Encoding: Non-Standard Encoding")
T1486.hasName.append("Data Encrypted for Impact")
T1530.hasName.append("Data from Cloud Storage")
T1602.hasName.append("Data from Configuration Repository")
T1602_001.hasName.append("Data from Configuration Repository: SNMP (MIB Dump)")
T1602_002.hasName.append("Data from Configuration Repository: Network Device Configuration Dump")
T1213.hasName.append("Data from Information Repositories")
T1213_001.hasName.append("Data from Information Repositories: Confluence")
T1213_002.hasName.append("Data from Information Repositories: Sharepoint")
T1213_003.hasName.append("Data from Information Repositories: Code Repositories")
T1005.hasName.append("Data from Local System")
T1039.hasName.append("Data from Network Shared Drive")
T1025.hasName.append("Data from Removable Media")
T1565.hasName.append("Data Manipulation")
T1565_001.hasName.append("Data Manipulation: Stored Data Manipulation")
T1565_002.hasName.append("Data Manipulation: Transmitted Data Manipulation")
T1565_003.hasName.append("Data Manipulation: Runtime Data Manipulation")
T1001.hasName.append("Data Obfuscation")
T1001_001.hasName.append("Data Obfuscation: Junk Data")
T1001_002.hasName.append("Data Obfuscation: Steganography")
T1001_003.hasName.append("Data Obfuscation: Protocol Impersonation")
T1074.hasName.append("Data Staged")
T1074_001.hasName.append("Data Staged: Local Data Staging")
T1074_002.hasName.append("Data Staged: Remote Data Staging")
T1030.hasName.append("Data Transfer Size Limits")
T1622.hasName.append("Debugger Evasion")
T1491.hasName.append("Defacement")
T1491_001.hasName.append("Defacement: Internal Defacement")
T1491_002.hasName.append("Defacement: External Defacement")
T1140.hasName.append("Deobfuscate/Decode Files or Information")
T1610.hasName.append("Deploy Container")
T1587.hasName.append("Develop Capabilities")
T1587_001.hasName.append("Develop Capabilities: Malware")
T1587_002.hasName.append("Develop Capabilities: Code Signing Certificates")
T1587_003.hasName.append("Develop Capabilities: Digital Certificates")
T1587_004.hasName.append("Develop Capabilities: Exploits")
T1652.hasName.append("Device Driver Discovery")
T1006.hasName.append("Direct Volume Access")
T1561.hasName.append("Disk Wipe")
T1561_001.hasName.append("Disk Wipe: Disk Content Wipe")
T1561_002.hasName.append("Disk Wipe: Disk Structure Wipe")
T1484.hasName.append("Domain Policy Modification")
T1484_001.hasName.append("Domain Policy Modification: Group Policy Modification")
T1484_002.hasName.append("Domain Policy Modification: Domain Trust Modification")
T1482.hasName.append("Domain Trust Discovery")
T1189.hasName.append("Drive-by Compromise")
T1568.hasName.append("Dynamic Resolution")
T1568_001.hasName.append("Dynamic Resolution: Fast Flux DNS")
T1568_002.hasName.append("Dynamic Resolution: Domain Generation Algorithms")
T1568_003.hasName.append("Dynamic Resolution: DNS Calculation")
T1114.hasName.append("Email Collection")
T1114_001.hasName.append("Email Collection: Local Email Collection")
T1114_002.hasName.append("Email Collection: Remote Email Collection")
T1114_003.hasName.append("Email Collection: Email Forwarding Rule")
T1573.hasName.append("Encrypted Channel")
T1573_001.hasName.append("Encrypted Channel: Symmetric Cryptography")
T1573_002.hasName.append("Encrypted Channel: Asymmetric Cryptography")
T1499.hasName.append("Endpoint Denial of Service")
T1499_001.hasName.append("Endpoint Denial of Service: OS Exhaustion Flood")
T1499_002.hasName.append("Endpoint Denial of Service: Service Exhaustion Flood")
T1499_003.hasName.append("Endpoint Denial of Service: Application Exhaustion Flood")
T1499_004.hasName.append("Endpoint Denial of Service: Application or System Exploitation")
T1611.hasName.append("Escape to Host")
T1585.hasName.append("Establish Accounts")
T1585_001.hasName.append("Establish Accounts: Social Media Accounts")
T1585_002.hasName.append("Establish Accounts: Email Accounts")
T1585_003.hasName.append("Establish Accounts: Cloud Accounts")
T1546.hasName.append("Event Triggered Execution")
T1546_001.hasName.append("Event Triggered Execution: Change Default File Association")
T1546_002.hasName.append("Event Triggered Execution: Screensaver")
T1546_003.hasName.append("Event Triggered Execution: Windows Management Instrumentation Event Subscription")
T1546_004.hasName.append("Event Triggered Execution: Unix Shell Configuration Modification")
T1546_005.hasName.append("Event Triggered Execution: Trap")
T1546_006.hasName.append("Event Triggered Execution: LC_LOAD_DYLIB Addition")
T1546_007.hasName.append("Event Triggered Execution: Netsh Helper DLL")
T1546_008.hasName.append("Event Triggered Execution: Accessibility Features")
T1546_009.hasName.append("Event Triggered Execution: AppCert DLLs")
T1546_010.hasName.append("Event Triggered Execution: AppInit DLLs")
T1546_011.hasName.append("Event Triggered Execution: Application Shimming")
T1546_012.hasName.append("Event Triggered Execution: Image File Execution Options Injection")
T1546_013.hasName.append("Event Triggered Execution: PowerShell Profile")
T1546_014.hasName.append("Event Triggered Execution: Emond")
T1546_015.hasName.append("Event Triggered Execution: Component Object Model Hijacking")
T1546_016.hasName.append("Event Triggered Execution: Installer Packages")
T1480.hasName.append("Execution Guardrails")
T1480_001.hasName.append("Execution Guardrails: Environmental Keying")
T1048.hasName.append("Exfiltration Over Alternative Protocol")
T1048_001.hasName.append("Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol")
T1048_002.hasName.append("Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol")
T1048_003.hasName.append("Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol")
T1041.hasName.append("Exfiltration Over C2 Channel")
T1011.hasName.append("Exfiltration Over Other Network Medium")
T1011_001.hasName.append("Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth")
T1052.hasName.append("Exfiltration Over Physical Medium")
T1052_001.hasName.append("Exfiltration Over Physical Medium: Exfiltration over USB")
T1567.hasName.append("Exfiltration Over Web Service")
T1567_001.hasName.append("Exfiltration Over Web Service: Exfiltration to Code Repository")
T1567_002.hasName.append("Exfiltration Over Web Service: Exfiltration to Cloud Storage")
T1567_003.hasName.append("Exfiltration Over Web Service: Exfiltration to Text Storage Sites")
T1190.hasName.append("Exploit Public-Facing Application")
T1203.hasName.append("Exploitation for Client Execution")
T1212.hasName.append("Exploitation for Credential Access")
T1211.hasName.append("Exploitation for Defense Evasion")
T1068.hasName.append("Exploitation for Privilege Escalation")
T1210.hasName.append("Exploitation of Remote Services")
T1133.hasName.append("External Remote Services")
T1008.hasName.append("Fallback Channels")
T1083.hasName.append("File and Directory Discovery")
T1222.hasName.append("File and Directory Permissions Modification")
T1222_001.hasName.append("File and Directory Permissions Modification: Windows File and Directory Permissions Modification")
T1222_002.hasName.append("File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification")
T1495.hasName.append("Firmware Corruption")
T1187.hasName.append("Forced Authentication")
T1606.hasName.append("Forge Web Credentials")
T1606_001.hasName.append("Forge Web Credentials: Web Cookies")
T1606_002.hasName.append("Forge Web Credentials: SAML Tokens")
T1592.hasName.append("Gather Victim Host Information")
T1592_001.hasName.append("Gather Victim Host Information: Hardware")
T1592_002.hasName.append("Gather Victim Host Information: Software")
T1592_003.hasName.append("Gather Victim Host Information: Firmware")
T1592_004.hasName.append("Gather Victim Host Information: Client Configurations")
T1589.hasName.append("Gather Victim Identity Information")
T1589_001.hasName.append("Gather Victim Identity Information: Credentials")
T1589_002.hasName.append("Gather Victim Identity Information: Email Addresses")
T1589_003.hasName.append("Gather Victim Identity Information: Employee Names")
T1590.hasName.append("Gather Victim Network Information")
T1590_001.hasName.append("Gather Victim Network Information: Domain Properties")
T1590_002.hasName.append("Gather Victim Network Information: DNS")
T1590_003.hasName.append("Gather Victim Network Information: Network Trust Dependencies")
T1590_004.hasName.append("Gather Victim Network Information: Network Topology")
T1590_005.hasName.append("Gather Victim Network Information: IP Addresses")
T1590_006.hasName.append("Gather Victim Network Information: Network Security Appliances")
T1591.hasName.append("Gather Victim Org Information")
T1591_001.hasName.append("Gather Victim Org Information: Determine Physical Locations")
T1591_002.hasName.append("Gather Victim Org Information: Business Relationships")
T1591_003.hasName.append("Gather Victim Org Information: Identify Business Tempo")
T1591_004.hasName.append("Gather Victim Org Information: Identify Roles")
T1615.hasName.append("Group Policy Discovery")
T1200.hasName.append("Hardware Additions")
T1564.hasName.append("Hide Artifacts")
T1564_001.hasName.append("Hide Artifacts: Hidden Files and Directories")
T1564_002.hasName.append("Hide Artifacts: Hidden Users")
T1564_003.hasName.append("Hide Artifacts: Hidden Window")
T1564_004.hasName.append("Hide Artifacts: NTFS File Attributes")
T1564_005.hasName.append("Hide Artifacts: Hidden File System")
T1564_006.hasName.append("Hide Artifacts: Run Virtual Instance")
T1564_007.hasName.append("Hide Artifacts: VBA Stomping")
T1564_008.hasName.append("Hide Artifacts: Email Hiding Rules")
T1564_009.hasName.append("Hide Artifacts: Resource Forking")
T1564_010.hasName.append("Hide Artifacts: Process Argument Spoofing")
T1574.hasName.append("Hijack Execution Flow")
T1574_001.hasName.append("Hijack Execution Flow: DLL Search Order Hijacking")
T1574_002.hasName.append("Hijack Execution Flow: DLL Side-Loading")
T1574_004.hasName.append("Hijack Execution Flow: Dylib Hijacking")
T1574_005.hasName.append("Hijack Execution Flow: Executable Installer File Permissions Weakness")
T1574_006.hasName.append("Hijack Execution Flow: Dynamic Linker Hijacking")
T1574_007.hasName.append("Hijack Execution Flow: Path Interception by PATH Environment Variable")
T1574_008.hasName.append("Hijack Execution Flow: Path Interception by Search Order Hijacking")
T1574_009.hasName.append("Hijack Execution Flow: Path Interception by Unquoted Path")
T1574_010.hasName.append("Hijack Execution Flow: Services File Permissions Weakness")
T1574_011.hasName.append("Hijack Execution Flow: Services Registry Permissions Weakness")
T1574_012.hasName.append("Hijack Execution Flow: COR_PROFILER")
T1574_013.hasName.append("Hijack Execution Flow: KernelCallbackTable")
T1562.hasName.append("Impair Defenses")
T1562_001.hasName.append("Impair Defenses: Disable or Modify Tools")
T1562_002.hasName.append("Impair Defenses: Disable Windows Event Logging")
T1562_003.hasName.append("Impair Defenses: Impair Command History Logging")
T1562_004.hasName.append("Impair Defenses: Disable or Modify System Firewall")
T1562_006.hasName.append("Impair Defenses: Indicator Blocking")
T1562_007.hasName.append("Impair Defenses: Disable or Modify Cloud Firewall")
T1562_008.hasName.append("Impair Defenses: Disable Cloud Logs")
T1562_009.hasName.append("Impair Defenses: Safe Mode Boot")
T1562_010.hasName.append("Impair Defenses: Downgrade Attack")
T1562_011.hasName.append("Impair Defenses: Spoof Security Alerting")
T1525.hasName.append("Implant Internal Image")
T1070.hasName.append("Indicator Removal")
T1070_001.hasName.append("Indicator Removal: Clear Windows Event Logs")
T1070_002.hasName.append("Indicator Removal: Clear Linux or Mac System Logs")
T1070_003.hasName.append("Indicator Removal: Clear Command History")
T1070_004.hasName.append("Indicator Removal: File Deletion")
T1070_005.hasName.append("Indicator Removal: Network Share Connection Removal")
T1070_006.hasName.append("Indicator Removal: Timestomp")
T1070_007.hasName.append("Indicator Removal: Clear Network Connection History and Configurations")
T1070_008.hasName.append("Indicator Removal: Clear Mailbox Data")
T1070_009.hasName.append("Indicator Removal: Clear Persistence")
T1202.hasName.append("Indirect Command Execution")
T1105.hasName.append("Ingress Tool Transfer")
T1490.hasName.append("Inhibit System Recovery")
T1056.hasName.append("Input Capture")
T1056_001.hasName.append("Input Capture: Keylogging")
T1056_002.hasName.append("Input Capture: GUI Input Capture")
T1056_003.hasName.append("Input Capture: Web Portal Capture")
T1056_004.hasName.append("Input Capture: Credential API Hooking")
T1559.hasName.append("Inter-Process Communication")
T1559_001.hasName.append("Inter-Process Communication: Component Object Model")
T1559_002.hasName.append("Inter-Process Communication: Dynamic Data Exchange")
T1559_003.hasName.append("Inter-Process Communication: XPC Services")
T1534.hasName.append("Internal Spearphishing")
T1570.hasName.append("Lateral Tool Transfer")
T1036.hasName.append("Masquerading")
T1036_001.hasName.append("Masquerading: Invalid Code Signature")
T1036_002.hasName.append("Masquerading: Right-to-Left Override")
T1036_003.hasName.append("Masquerading: Rename System Utilities")
T1036_004.hasName.append("Masquerading: Masquerade Task or Service")
T1036_005.hasName.append("Masquerading: Match Legitimate Name or Location")
T1036_006.hasName.append("Masquerading: Space after Filename")
T1036_007.hasName.append("Masquerading: Double File Extension")
T1036_008.hasName.append("Masquerading: Masquerade File Type")
T1556.hasName.append("Modify Authentication Process")
T1556_001.hasName.append("Modify Authentication Process: Domain Controller Authentication")
T1556_002.hasName.append("Modify Authentication Process: Password Filter DLL")
T1556_003.hasName.append("Modify Authentication Process: Pluggable Authentication Modules")
T1556_004.hasName.append("Modify Authentication Process: Network Device Authentication")
T1556_005.hasName.append("Modify Authentication Process: Reversible Encryption")
T1556_006.hasName.append("Modify Authentication Process: Multi-Factor Authentication")
T1556_007.hasName.append("Modify Authentication Process: Hybrid Identity")
T1556_008.hasName.append("Modify Authentication Process: Network Provider DLL")
T1578.hasName.append("Modify Cloud Compute Infrastructure")
T1578_001.hasName.append("Modify Cloud Compute Infrastructure: Create Snapshot")
T1578_002.hasName.append("Modify Cloud Compute Infrastructure: Create Cloud Instance")
T1578_003.hasName.append("Modify Cloud Compute Infrastructure: Delete Cloud Instance")
T1578_004.hasName.append("Modify Cloud Compute Infrastructure: Revert Cloud Instance")
T1112.hasName.append("Modify Registry")
T1601.hasName.append("Modify System Image")
T1601_001.hasName.append("Modify System Image: Patch System Image")
T1601_002.hasName.append("Modify System Image: Downgrade System Image")
T1111.hasName.append("Multi-Factor Authentication Interception")
T1621.hasName.append("Multi-Factor Authentication Request Generation")
T1104.hasName.append("Multi-Stage Channels")
T1106.hasName.append("Native API")
T1599.hasName.append("Network Boundary Bridging")
T1599_001.hasName.append("Network Boundary Bridging: Network Address Translation Traversal")
T1498.hasName.append("Network Denial of Service")
T1498_001.hasName.append("Network Denial of Service: Direct Network Flood")
T1498_002.hasName.append("Network Denial of Service: Reflection Amplification")
T1046.hasName.append("Network Service Discovery")
T1135.hasName.append("Network Share Discovery")
T1040.hasName.append("Network Sniffing")
T1095.hasName.append("Non-Application Layer Protocol")
T1571.hasName.append("Non-Standard Port")
T1027.hasName.append("Obfuscated Files or Information")
T1027_001.hasName.append("Obfuscated Files or Information: Binary Padding")
T1027_002.hasName.append("Obfuscated Files or Information: Software Packing")
T1027_003.hasName.append("Obfuscated Files or Information: Steganography")
T1027_004.hasName.append("Obfuscated Files or Information: Compile After Delivery")
T1027_005.hasName.append("Obfuscated Files or Information: Indicator Removal from Tools")
T1027_006.hasName.append("Obfuscated Files or Information: HTML Smuggling")
T1027_007.hasName.append("Obfuscated Files or Information: Dynamic API Resolution")
T1027_008.hasName.append("Obfuscated Files or Information: Stripped Payloads")
T1027_009.hasName.append("Obfuscated Files or Information: Embedded Payloads")
T1027_010.hasName.append("Obfuscated Files or Information: Command Obfuscation")
T1027_011.hasName.append("Obfuscated Files or Information: Fileless Storage")
T1588.hasName.append("Obtain Capabilities")
T1588_001.hasName.append("Obtain Capabilities: Malware")
T1588_002.hasName.append("Obtain Capabilities: Tool")
T1588_003.hasName.append("Obtain Capabilities: Code Signing Certificates")
T1588_004.hasName.append("Obtain Capabilities: Digital Certificates")
T1588_005.hasName.append("Obtain Capabilities: Exploits")
T1588_006.hasName.append("Obtain Capabilities: Vulnerabilities")
T1137.hasName.append("Office Application Startup")
T1137_001.hasName.append("Office Application Startup: Office Template Macros")
T1137_002.hasName.append("Office Application Startup: Office Test")
T1137_003.hasName.append("Office Application Startup: Outlook Forms")
T1137_004.hasName.append("Office Application Startup: Outlook Home Page")
T1137_005.hasName.append("Office Application Startup: Outlook Rules")
T1137_006.hasName.append("Office Application Startup: Add-ins")
T1003.hasName.append("OS Credential Dumping")
T1003_001.hasName.append("OS Credential Dumping: LSASS Memory")
T1003_002.hasName.append("OS Credential Dumping: Security Account Manager")
T1003_003.hasName.append("OS Credential Dumping: NTDS")
T1003_004.hasName.append("OS Credential Dumping: LSA Secrets")
T1003_005.hasName.append("OS Credential Dumping: Cached Domain Credentials")
T1003_006.hasName.append("OS Credential Dumping: DCSync")
T1003_007.hasName.append("OS Credential Dumping: Proc Filesystem")
T1003_008.hasName.append("OS Credential Dumping: /etc/passwd and /etc/shadow")
T1201.hasName.append("Password Policy Discovery")
T1120.hasName.append("Peripheral Device Discovery")
T1069.hasName.append("Permission Groups Discovery")
T1069_001.hasName.append("Permission Groups Discovery: Local Groups")
T1069_002.hasName.append("Permission Groups Discovery: Domain Groups")
T1069_003.hasName.append("Permission Groups Discovery: Cloud Groups")
T1566.hasName.append("Phishing")
T1566_001.hasName.append("Phishing: Spearphishing Attachment")
T1566_002.hasName.append("Phishing: Spearphishing Link")
T1566_003.hasName.append("Phishing: Spearphishing via Service")
T1598.hasName.append("Phishing for Information")
T1598_001.hasName.append("Phishing for Information: Spearphishing Service")
T1598_002.hasName.append("Phishing for Information: Spearphishing Attachment")
T1598_003.hasName.append("Phishing for Information: Spearphishing Link")
T1647.hasName.append("Plist File Modification")
T1542.hasName.append("Pre-OS Boot")
T1542_001.hasName.append("Pre-OS Boot: System Firmware")
T1542_002.hasName.append("Pre-OS Boot: Component Firmware")
T1542_003.hasName.append("Pre-OS Boot: Bootkit")
T1542_004.hasName.append("Pre-OS Boot: ROMMONkit")
T1542_005.hasName.append("Pre-OS Boot: TFTP Boot")
T1057.hasName.append("Process Discovery")
T1055.hasName.append("Process Injection")
T1055_001.hasName.append("Process Injection: Dynamic-link Library Injection")
T1055_002.hasName.append("Process Injection: Portable Executable Injection")
T1055_003.hasName.append("Process Injection: Thread Execution Hijacking")
T1055_004.hasName.append("Process Injection: Asynchronous Procedure Call")
T1055_005.hasName.append("Process Injection: Thread Local Storage")
T1055_008.hasName.append("Process Injection: Ptrace System Calls")
T1055_009.hasName.append("Process Injection: Proc Memory")
T1055_011.hasName.append("Process Injection: Extra Window Memory Injection")
T1055_012.hasName.append("Process Injection: Process Hollowing")
T1055_013.hasName.append("Process Injection: Process Doppelgänging")
T1055_014.hasName.append("Process Injection: VDSO Hijacking")
T1055_015.hasName.append("Process Injection: ListPlanting")
T1572.hasName.append("Protocol Tunneling")
T1090.hasName.append("Proxy")
T1090_001.hasName.append("Proxy: Internal Proxy")
T1090_002.hasName.append("Proxy: External Proxy")
T1090_003.hasName.append("Proxy: Multi-hop Proxy")
T1090_004.hasName.append("Proxy: Domain Fronting")
T1012.hasName.append("Query Registry")
T1620.hasName.append("Reflective Code Loading")
T1219.hasName.append("Remote Access Software")
T1563.hasName.append("Remote Service Session Hijacking")
T1563_001.hasName.append("Remote Service Session Hijacking: SSH Hijacking")
T1563_002.hasName.append("Remote Service Session Hijacking: RDP Hijacking")
T1021.hasName.append("Remote Services")
T1021_001.hasName.append("Remote Services: Remote Desktop Protocol")
T1021_002.hasName.append("Remote Services: SMB/Windows Admin Shares")
T1021_003.hasName.append("Remote Services: Distributed Component Object Model")
T1021_004.hasName.append("Remote Services: SSH")
T1021_005.hasName.append("Remote Services: VNC")
T1021_006.hasName.append("Remote Services: Windows Remote Management")
T1021_007.hasName.append("Remote Services: Cloud Services")
T1018.hasName.append("Remote System Discovery")
T1091.hasName.append("Replication Through Removable Media")
T1496.hasName.append("Resource Hijacking")
T1207.hasName.append("Rogue Domain Controller")
T1014.hasName.append("Rootkit")
T1053.hasName.append("Scheduled Task/Job")
T1053_002.hasName.append("Scheduled Task/Job: At")
T1053_003.hasName.append("Scheduled Task/Job: Cron")
T1053_005.hasName.append("Scheduled Task/Job: Scheduled Task")
T1053_006.hasName.append("Scheduled Task/Job: Systemd Timers")
T1053_007.hasName.append("Scheduled Task/Job: Container Orchestration Job")
T1029.hasName.append("Scheduled Transfer")
T1113.hasName.append("Screen Capture")
T1597.hasName.append("Search Closed Sources")
T1597_001.hasName.append("Search Closed Sources: Threat Intel Vendors")
T1597_002.hasName.append("Search Closed Sources: Purchase Technical Data")
T1596.hasName.append("Search Open Technical Databases")
T1596_001.hasName.append("Search Open Technical Databases: DNS/Passive DNS")
T1596_002.hasName.append("Search Open Technical Databases: WHOIS")
T1596_003.hasName.append("Search Open Technical Databases: Digital Certificates")
T1596_004.hasName.append("Search Open Technical Databases: CDNs")
T1596_005.hasName.append("Search Open Technical Databases: Scan Databases")
T1593.hasName.append("Search Open Websites/Domains")
T1593_001.hasName.append("Search Open Websites/Domains: Social Media")
T1593_002.hasName.append("Search Open Websites/Domains: Search Engines")
T1593_003.hasName.append("Search Open Websites/Domains: Code Repositories")
T1594.hasName.append("Search Victim-Owned Websites")
T1505.hasName.append("Server Software Component")
T1505_001.hasName.append("Server Software Component: SQL Stored Procedures")
T1505_002.hasName.append("Server Software Component: Transport Agent")
T1505_003.hasName.append("Server Software Component: Web Shell")
T1505_004.hasName.append("Server Software Component: IIS Components")
T1505_005.hasName.append("Server Software Component: Terminal Services DLL")
T1648.hasName.append("Serverless Execution")
T1489.hasName.append("Service Stop")
T1129.hasName.append("Shared Modules")
T1072.hasName.append("Software Deployment Tools")
T1518.hasName.append("Software Discovery")
T1518_001.hasName.append("Software Discovery: Security Software Discovery")
T1608.hasName.append("Stage Capabilities")
T1608_001.hasName.append("Stage Capabilities: Upload Malware")
T1608_002.hasName.append("Stage Capabilities: Upload Tool")
T1608_003.hasName.append("Stage Capabilities: Install Digital Certificate")
T1608_004.hasName.append("Stage Capabilities: Drive-by Target")
T1608_005.hasName.append("Stage Capabilities: Link Target")
T1608_006.hasName.append("Stage Capabilities: SEO Poisoning")
T1528.hasName.append("Steal Application Access Token")
T1649.hasName.append("Steal or Forge Authentication Certificates")
T1558.hasName.append("Steal or Forge Kerberos Tickets")
T1558_001.hasName.append("Steal or Forge Kerberos Tickets: Golden Ticket")
T1558_002.hasName.append("Steal or Forge Kerberos Tickets: Silver Ticket")
T1558_003.hasName.append("Steal or Forge Kerberos Tickets: Kerberoasting")
T1558_004.hasName.append("Steal or Forge Kerberos Tickets: AS-REP Roasting")
T1539.hasName.append("Steal Web Session Cookie")
T1553.hasName.append("Subvert Trust Controls")
T1553_001.hasName.append("Subvert Trust Controls: Gatekeeper Bypass")
T1553_002.hasName.append("Subvert Trust Controls: Code Signing")
T1553_003.hasName.append("Subvert Trust Controls: SIP and Trust Provider Hijacking")
T1553_004.hasName.append("Subvert Trust Controls: Install Root Certificate")
T1553_005.hasName.append("Subvert Trust Controls: Mark-of-the-Web Bypass")
T1553_006.hasName.append("Subvert Trust Controls: Code Signing Policy Modification")
T1195.hasName.append("Supply Chain Compromise")
T1195_001.hasName.append("Supply Chain Compromise: Compromise Software Dependencies and Development Tools")
T1195_002.hasName.append("Supply Chain Compromise: Compromise Software Supply Chain")
T1195_003.hasName.append("Supply Chain Compromise: Compromise Hardware Supply Chain")
T1218.hasName.append("System Binary Proxy Execution")
T1218_001.hasName.append("System Binary Proxy Execution: Compiled HTML File")
T1218_002.hasName.append("System Binary Proxy Execution: Control Panel")
T1218_003.hasName.append("System Binary Proxy Execution: CMSTP")
T1218_004.hasName.append("System Binary Proxy Execution: InstallUtil")
T1218_005.hasName.append("System Binary Proxy Execution: Mshta")
T1218_007.hasName.append("System Binary Proxy Execution: Msiexec")
T1218_008.hasName.append("System Binary Proxy Execution: Odbcconf")
T1218_009.hasName.append("System Binary Proxy Execution: Regsvcs/Regasm")
T1218_010.hasName.append("System Binary Proxy Execution: Regsvr32")
T1218_011.hasName.append("System Binary Proxy Execution: Rundll32")
T1218_012.hasName.append("System Binary Proxy Execution: Verclsid")
T1218_013.hasName.append("System Binary Proxy Execution: Mavinject")
T1218_014.hasName.append("System Binary Proxy Execution: MMC")
T1082.hasName.append("System Information Discovery")
T1614.hasName.append("System Location Discovery")
T1614_001.hasName.append("System Location Discovery: System Language Discovery")
T1016.hasName.append("System Network Configuration Discovery")
T1016_001.hasName.append("System Network Configuration Discovery: Internet Connection Discovery")
T1049.hasName.append("System Network Connections Discovery")
T1033.hasName.append("System Owner/User Discovery")
T1216.hasName.append("System Script Proxy Execution")
T1216_001.hasName.append("System Script Proxy Execution: PubPrn")
T1007.hasName.append("System Service Discovery")
T1569.hasName.append("System Services")
T1569_001.hasName.append("System Services: Launchctl")
T1569_002.hasName.append("System Services: Service Execution")
T1529.hasName.append("System Shutdown/Reboot")
T1124.hasName.append("System Time Discovery")
T1080.hasName.append("Taint Shared Content")
T1221.hasName.append("Template Injection")
T1205.hasName.append("Traffic Signaling")
T1205_001.hasName.append("Traffic Signaling: Port Knocking")
T1205_002.hasName.append("Traffic Signaling: Socket Filters")
T1537.hasName.append("Transfer Data to Cloud Account")
T1127.hasName.append("Trusted Developer Utilities Proxy Execution")
T1127_001.hasName.append("Trusted Developer Utilities Proxy Execution: MSBuild")
T1199.hasName.append("Trusted Relationship")
T1552.hasName.append("Unsecured Credentials")
T1552_001.hasName.append("Unsecured Credentials: Credentials In Files")
T1552_002.hasName.append("Unsecured Credentials: Credentials in Registry")
T1552_003.hasName.append("Unsecured Credentials: Bash History")
T1552_004.hasName.append("Unsecured Credentials: Private Keys")
T1552_005.hasName.append("Unsecured Credentials: Cloud Instance Metadata API")
T1552_006.hasName.append("Unsecured Credentials: Group Policy Preferences")
T1552_007.hasName.append("Unsecured Credentials: Container API")
T1552_008.hasName.append("Unsecured Credentials: Chat Messages")
T1535.hasName.append("Unused/Unsupported Cloud Regions")
T1550.hasName.append("Use Alternate Authentication Material")
T1550_001.hasName.append("Use Alternate Authentication Material: Application Access Token")
T1550_002.hasName.append("Use Alternate Authentication Material: Pass the Hash")
T1550_003.hasName.append("Use Alternate Authentication Material: Pass the Ticket")
T1550_004.hasName.append("Use Alternate Authentication Material: Web Session Cookie")
T1204.hasName.append("User Execution")
T1204_001.hasName.append("User Execution: Malicious Link")
T1204_002.hasName.append("User Execution: Malicious File")
T1204_003.hasName.append("User Execution: Malicious Image")
T1078.hasName.append("Valid Accounts")
T1078_001.hasName.append("Valid Accounts: Default Accounts")
T1078_002.hasName.append("Valid Accounts: Domain Accounts")
T1078_003.hasName.append("Valid Accounts: Local Accounts")
T1078_004.hasName.append("Valid Accounts: Cloud Accounts")
T1125.hasName.append("Video Capture")
T1497.hasName.append("Virtualization/Sandbox Evasion")
T1497_001.hasName.append("Virtualization/Sandbox Evasion: System Checks")
T1497_002.hasName.append("Virtualization/Sandbox Evasion: User Activity Based Checks")
T1497_003.hasName.append("Virtualization/Sandbox Evasion: Time Based Evasion")
T1600.hasName.append("Weaken Encryption")
T1600_001.hasName.append("Weaken Encryption: Reduce Key Space")
T1600_002.hasName.append("Weaken Encryption: Disable Crypto Hardware")
T1102.hasName.append("Web Service")
T1102_001.hasName.append("Web Service: Dead Drop Resolver")
T1102_002.hasName.append("Web Service: Bidirectional Communication")
T1102_003.hasName.append("Web Service: One-Way Communication")
T1047.hasName.append("Windows Management Instrumentation")
T1220.hasName.append("XSL Script Processing")
T1548_005.hasName.append("Abuse Elevation Control Mechanism: Temporary Elevated Cloud Access")
T1098_006.hasName.append("Account Manipulation: Additional Container Cluster Roles")
T1659.hasName.append("Content Injection")
T1555_006.hasName.append("Credentials from Password Stores: Cloud Secrets Management Stores")
T1567_004.hasName.append("Exfiltration Over Web Service: Exfiltration Over Webhook")
T1657.hasName.append("Financial Theft")
T1564_011.hasName.append("Hide Artifacts: Ignore Process Interrupts")
T1562_012.hasName.append("Impair Defenses: Disable or Modify Linux Audit System")
T1656.hasName.append("Impersonation")
T1654.hasName.append("Log Enumeration")
T1036_009.hasName.append("Masquerading: Break Process Trees")
T1578_005.hasName.append("Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations")
T1027_012.hasName.append("Obfuscated Files or Information: LNK Icon Smuggling")
T1566_004.hasName.append("Phishing: Spearphishing Voice")
T1598_004.hasName.append("Phishing for Information: Spearphishing Voice")
T1653.hasName.append("Power Settings")
T1021_008.hasName.append("Remote Services: Direct Cloud VM Connections")
T1016_002.hasName.append("System Network Configuration Discovery: Wi-Fi Discovery")


# Set description of Techniques
T1548.hasDescription.append("Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.")
T1548_001.hasDescription.append("An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.")
T1548_002.hasDescription.append("Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.")
T1548_003.hasDescription.append("Adversaries may perform sudo caching and or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.")
T1548_004.hasDescription.append("Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified.")
T1134.hasDescription.append("Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.")
T1134_001.hasDescription.append("Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using DuplicateToken or DuplicateTokenEx. The token can then be used with ImpersonateLoggedOnUser to allow the calling thread to impersonate a logged on user's security context, or with SetThreadToken to assign the impersonated token to a thread.")
T1134_002.hasDescription.append("Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as CreateProcessWithTokenW and runas.")
T1134_003.hasDescription.append("Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the LogonUser function. The function will return a copy of the new session's access token and the adversary can use SetThreadToken to assign the token to a thread.")
T1134_004.hasDescription.append("Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the CreateProcess API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via svchost.exe or consent.exe) rather than the current user context.")
T1134_005.hasDescription.append("Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).")
T1531.hasDescription.append("Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and or perform a System Shutdown Reboot to set malicious changes into place.")
T1087.hasDescription.append("Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., Valid Accounts).")
T1087_001.hasDescription.append("Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.")
T1087_002.hasDescription.append("Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.")
T1087_003.hasDescription.append("Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).")
T1087_004.hasDescription.append("Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.")
T1098.hasDescription.append("Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.")
T1098_001.hasDescription.append("Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.")
T1098_002.hasDescription.append("Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account.")
T1098_003.hasDescription.append("An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).")
T1098_004.hasDescription.append("Adversaries may modify the SSH authorized_keys file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The authorized_keys file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <user-home> .ssh authorized_keys. Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value yes to ensure public key and RSA authentication are enabled. The SSH config file is usually located under  etc ssh sshd_config.")
T1098_005.hasDescription.append("Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.")
T1650.hasDescription.append("Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other.")
T1583.hasDescription.append("Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.")
T1583_001.hasDescription.append("Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.")
T1583_002.hasDescription.append("Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.")
T1583_003.hasDescription.append("Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.")
T1583_004.hasDescription.append("Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Adversaries may use web servers to support support watering hole operations, as in Drive-by Compromise, or email servers to support Phishing operations. Instead of compromising a third-party Server or renting a Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations.")
T1583_005.hasDescription.append("Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).")
T1583_006.hasDescription.append("Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.")
T1583_007.hasDescription.append("Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.")
T1583_008.hasDescription.append("Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites.")
T1595.hasDescription.append("Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.")
T1595_001.hasDescription.append("Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.")
T1595_002.hasDescription.append("Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.")
T1595_003.hasDescription.append("Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to Brute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: Gather Victim Org Information, or Search Victim-Owned Websites).")
T1557.hasDescription.append("Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.")
T1557_001.hasDescription.append("By responding to LLMNR NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.")
T1557_002.hasDescription.append("Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.")
T1557_003.hasDescription.append("Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as Network Sniffing or Transmitted Data Manipulation.")
T1071.hasDescription.append("Adversaries may communicate using OSI application layer protocols to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.")
T1071_001.hasDescription.append("Adversaries may communicate using application layer protocols associated with web traffic to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.")
T1071_002.hasDescription.append("Adversaries may communicate using application layer protocols associated with transferring files to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.")
T1071_003.hasDescription.append("Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.")
T1071_004.hasDescription.append("Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.")
T1010.hasDescription.append("Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.")
T1560.hasDescription.append("An adversary may compress and or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.")
T1560_001.hasDescription.append("Adversaries may use utilities to compress and or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier more secure to transport.")
T1560_002.hasDescription.append("An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including Python rarfile , libzip , and zlib . Most libraries include functionality to encrypt and or compress data.")
T1560_003.hasDescription.append("An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.")
T1123.hasDescription.append("An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.")
T1119.hasDescription.append("Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.")
T1020.hasDescription.append("Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.")
T1020_001.hasDescription.append("Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device.")
T1197.hasDescription.append("Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through Component Object Model (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.")
T1547.hasDescription.append("Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.")
T1547_001.hasDescription.append("Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the run keys in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.")
T1547_002.hasDescription.append("Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.")
T1547_003.hasDescription.append("Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware network resources and outputting these values to other network clients.")
T1547_004.hasDescription.append("Adversaries may abuse features of Winlogon to execute DLLs and or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM Software[ Wow6432Node ] Microsoft Windows NT CurrentVersion Winlogon  and HKCU Software Microsoft Windows NT CurrentVersion Winlogon  are used to manage additional helper programs and functionalities that support Winlogon.")
T1547_005.hasDescription.append("Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.")
T1547_006.hasDescription.append("Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.")
T1547_007.hasDescription.append("Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to Reopen windows when logging back in. When selected, all applications currently open are added to a property list file named com.apple.loginwindow.[UUID].plist within the ~ Library Preferences ByHost directory. Applications listed in this file are automatically reopened upon the user’s next logon.")
T1547_008.hasDescription.append("Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.")
T1547_009.hasDescription.append("Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.")
T1547_010.hasDescription.append("Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the AddMonitor API call to set a DLL to be loaded at startup. This DLL can be located in C: Windows System32 and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to HKLM SYSTEM CurrentControlSet Control Print Monitors.")
T1547_012.hasDescription.append("Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot.")
T1547_013.hasDescription.append("Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within the  etc xdg autostart or ~ .config autostart directories and have a .desktop file extension.")
T1547_014.hasDescription.append("Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. These programs will be executed under the context of the user and will have the account's associated permissions level.")
T1547_015.hasDescription.append("Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in. Login items can be added via a shared file list or Service Management Framework. Shared file list login items can be set using scripting languages such as AppleScript, whereas the Service Management Framework uses the API call SMLoginItemSetEnabled.")
T1037.hasDescription.append("Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.")
T1037_001.hasDescription.append("Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to the HKCU Environment UserInitMprLogonScript Registry key.")
T1037_002.hasDescription.append("Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the  Library Preferences com.apple.loginwindow.plist file and can be modified using the defaults command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.")
T1037_003.hasDescription.append("Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.")
T1037_004.hasDescription.append("Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.")
T1037_005.hasDescription.append("Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.")
T1176.hasDescription.append("Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.")
T1217.hasDescription.append("Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships interests, social media, etc.) as well as details about internal network resources such as servers, tools dashboards, or other related infrastructure.")
T1185.hasDescription.append("Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.")
T1110.hasDescription.append("Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.")
T1110_001.hasDescription.append("Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.")
T1110_002.hasDescription.append("Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. OS Credential Dumping can be used to obtain password hashes, this may only get an adversary so far when Pass the Hash is not an option. Further, adversaries may leverage Data from Configuration Repository in order to obtain hashed credentials for network devices.")
T1110_003.hasDescription.append("Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.")
T1110_004.hasDescription.append("Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.")
T1612.hasDescription.append("Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote build request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.")
T1115.hasDescription.append("Adversaries may collect data stored in the clipboard from users copying information within or between applications.")
T1651.hasDescription.append("Adversaries may abuse cloud management services to execute commands within virtual machines or hybrid-joined devices. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. Similarly, in Azure AD environments, Microsoft Endpoint Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to the Azure AD.")
T1580.hasDescription.append("An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.")
T1538.hasDescription.append("An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.")
T1526.hasDescription.append("An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.")
T1619.hasDescription.append("Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage. Similar to File and Directory Discovery on a local host, after identifying available storage services (i.e. Cloud Infrastructure Discovery) adversaries may access the contents objects stored in cloud infrastructure.")
T1059.hasDescription.append("Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.")
T1059_001.hasDescription.append("Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the Start-Process cmdlet which can be used to run an executable and the Invoke-Command cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).")
T1059_002.hasDescription.append("Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.")
T1059_003.hasDescription.append("Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via Remote Services such as SSH.")
T1059_004.hasDescription.append("Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.")
T1059_005.hasDescription.append("Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as Component Object Model and the Native API through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.")
T1059_006.hasDescription.append("Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the python.exe interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.")
T1059_007.hasDescription.append("Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.")
T1059_008.hasDescription.append("Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands.")
T1059_009.hasDescription.append("Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, PowerShell modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such as Python.")
T1092.hasDescription.append("Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.")
T1586.hasDescription.append("Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. Establish Accounts), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.")
T1586_001.hasDescription.append("Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.")
T1586_002.hasDescription.append("Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct Phishing for Information, Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: Domains).")
T1586_003.hasDescription.append("Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.")
T1554.hasDescription.append("Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.")
T1584.hasDescription.append("Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.")
T1584_001.hasDescription.append("Adversaries may hijack domains and or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.")
T1584_002.hasDescription.append("Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.")
T1584_003.hasDescription.append("Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.")
T1584_004.hasDescription.append("Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a Server or Virtual Private Server, adversaries may compromise third-party servers in support of operations.")
T1584_005.hasDescription.append("Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing renting a botnet from a booter stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale Phishing or Distributed Denial of Service (DDoS).")
T1584_006.hasDescription.append("Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service), Exfiltration Over Web Service, or Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.")
T1584_007.hasDescription.append("Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.")
T1609.hasDescription.append("Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.")
T1613.hasDescription.append("Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.")
T1136.hasDescription.append("Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.")
T1136_001.hasDescription.append("Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, the net user  add command can be used to create a local account. On macOS systems the dscl -create command can be used to create a local account. Local accounts may also be added to network devices, often via common Network Device CLI commands such as username.")
T1136_002.hasDescription.append("Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the net user  add  domain command can be used to create a domain account.")
T1136_003.hasDescription.append("Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.")
T1543.hasDescription.append("Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known as Launch Daemon and Launch Agent are run to finish system initialization and load user specific parameters.")
T1543_001.hasDescription.append("Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in  System Library LaunchAgents,  Library LaunchAgents, and ~ Library LaunchAgents. Property list files use the Label, ProgramArguments , and RunAtLoad keys to identify the Launch Agent's name, executable location, and execution time. Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.")
T1543_002.hasDescription.append("Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.")
T1543_003.hasDescription.append("Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs commands, is stored in the Windows Registry.")
T1543_004.hasDescription.append("Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in  System Library LaunchDaemons  and  Library LaunchDaemons . Required Launch Daemons parameters include a Label to identify the task, Program to provide a path to the executable, and RunAtLoad to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.")
T1555.hasDescription.append("Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.")
T1555_001.hasDescription.append("Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service.")
T1555_002.hasDescription.append("An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.")
T1555_003.hasDescription.append("Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.")
T1555_004.hasDescription.append("Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).")
T1555_005.hasDescription.append("Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.")
T1485.hasDescription.append("Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such as del and rm often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from Disk Content Wipe and Disk Structure Wipe because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.")
T1132.hasDescription.append("Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip.")
T1132_001.hasDescription.append("Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip.")
T1132_002.hasDescription.append("Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.")
T1486.hasDescription.append("Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.")
T1530.hasDescription.append("Adversaries may access data from improperly secured cloud storage.")
T1602.hasDescription.append("Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.")
T1602_001.hasDescription.append("Adversaries may target the Management Information Base (MIB) to collect and or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).")
T1602_002.hasDescription.append("Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.")
T1213.hasDescription.append("Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization.")
T1213_001.hasDescription.append("Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:")
T1213_002.hasDescription.append("Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:")
T1213_003.hasDescription.append("Adversaries may leverage code repositories to collect valuable information. Code repositories are tools services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.")
T1005.hasDescription.append("Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.")
T1039.hasDescription.append("Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information.")
T1025.hasDescription.append("Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within cmd may be used to gather information.")
T1565.hasDescription.append("Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.")
T1565_001.hasDescription.append("Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.")
T1565_002.hasDescription.append("Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.")
T1565_003.hasDescription.append("Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.")
T1001.hasDescription.append("Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.")
T1001_001.hasDescription.append("Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending prepending data with junk characters or writing junk characters between significant characters.")
T1001_002.hasDescription.append("Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.")
T1001_003.hasDescription.append("Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.")
T1074.hasDescription.append("Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.")
T1074_001.hasDescription.append("Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.")
T1074_002.hasDescription.append("Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as Archive Collected Data. Interactive command shells may be used, and common functionality within cmd and bash may be used to copy data into a staging location.")
T1030.hasDescription.append("An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.")
T1622.hasDescription.append("Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and or analyze the execution of potential malware payloads.")
T1491.hasDescription.append("Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for Defacement include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages.")
T1491_001.hasDescription.append("An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part of Internal Defacement in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.")
T1491_002.hasDescription.append("An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. External Defacement may ultimately cause users to distrust the systems and to question discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda. External Defacement may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as Drive-by Compromise.")
T1140.hasDescription.append("Adversaries may use Obfuscated Files or Information to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.")
T1610.hasDescription.append("Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.")
T1587.hasDescription.append("Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.")
T1587_001.hasDescription.append("Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.")
T1587_002.hasDescription.append("Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.")
T1587_003.hasDescription.append("Adversaries may create self-signed SSL TLS certificates that can be used during targeting. SSL TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).")
T1587_004.hasDescription.append("Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired via Vulnerabilities to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.")
T1652.hasDescription.append("Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function purpose of the host, present security tools (i.e. Security Software Discovery) or other defenses (e.g., Virtualization Sandbox Evasion), as well as potential exploitable vulnerabilities (e.g., Exploitation for Privilege Escalation).")
T1006.hasDescription.append("Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools.")
T1561.hasDescription.append("Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.")
T1561_001.hasDescription.append("Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.")
T1561_002.hasDescription.append("Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.")
T1484.hasDescription.append("Adversaries may modify the configuration settings of a domain to evade defenses and or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.")
T1484_001.hasDescription.append("Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path  <DOMAIN> SYSVOL <DOMAIN> Policies .")
T1484_002.hasDescription.append("Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.")
T1482.hasDescription.append("Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct SID-History Injection, Pass the Ticket, and Kerberoasting. Domain trusts can be enumerated using the DSEnumerateDomainTrusts() Win32 API call, .NET methods, and LDAP. The Windows utility Nltest is known to be used by adversaries to enumerate domain trusts.")
T1189.hasDescription.append("Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring Application Access Token.")
T1568.hasDescription.append("Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.")
T1568_001.hasDescription.append("Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.")
T1568_002.hasDescription.append("Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.")
T1568_003.hasDescription.append("Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and or port number calculation can be used to bypass egress filtering on a C2 channel.")
T1114.hasDescription.append("Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients.")
T1114_001.hasDescription.append("Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.")
T1114_002.hasDescription.append("Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as MailSniper can be used to automate searches for specific keywords.")
T1114_003.hasDescription.append("Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.")
T1573.hasDescription.append("Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and or generated within malware samples configuration files.")
T1573_001.hasDescription.append("Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.")
T1573_002.hasDescription.append("Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.")
T1499.hasDescription.append("Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.")
T1499_001.hasDescription.append("Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.")
T1499_002.hasDescription.append("Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.")
T1499_003.hasDescription.append("Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.")
T1499_004.hasDescription.append("Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.")
T1611.hasDescription.append("Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.")
T1585.hasDescription.append("Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.")
T1585_001.hasDescription.append("Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.")
T1585_002.hasDescription.append("Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct Phishing for Information or Phishing. Adversaries may also take steps to cultivate a persona around the email account, such as through use of Social Media Accounts, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: Domains).")
T1585_003.hasDescription.append("Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for Exfiltration to Cloud Storage or to Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such as Virtual Private Servers or Serverless infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.")
T1546.hasDescription.append("Adversaries may establish persistence and or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.")
T1546_001.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.")
T1546_002.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located in C: Windows System32 , and C: Windows sysWOW64  on 64-bit Windows systems, along with screensavers included with base Windows installations.")
T1546_003.hasDescription.append("Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.")
T1546_004.hasDescription.append("Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system ( etc) and the user’s home directory (~ ) to configure the environment. All login shells on a system use  etc profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately.")
T1546_005.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The trap command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like ctrl+c and ctrl+d.")
T1546_006.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes.")
T1546_007.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at HKLM SOFTWARE Microsoft Netsh.")
T1546_008.hasDescription.append("Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.")
T1546_009.hasDescription.append("Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under HKEY_LOCAL_MACHINE System CurrentControlSet Control Session Manager  are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec.")
T1546_010.hasDescription.append("Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE Software Microsoft Windows NT CurrentVersion Windows or HKEY_LOCAL_MACHINE Software Wow6432Node Microsoft Windows NT CurrentVersion Windows are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library.")
T1546_011.hasDescription.append("Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.")
T1546_012.hasDescription.append("Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., C: dbg ntsd.exe -g notepad.exe).")
T1546_013.hasDescription.append("Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile (profile.ps1) is a script that runs when PowerShell starts and can be used as a logon script to customize user environments.")
T1546_014.hasDescription.append("Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a Launch Daemon that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at  sbin emond will load any rules from the  etc emond.d rules  directory and take action once an explicitly defined event takes place.")
T1546_015.hasDescription.append("Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system. References to various COM objects are stored in the Registry.")
T1546_016.hasDescription.append("Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.")
T1480.hasDescription.append("Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local external IP addresses.")
T1480_001.hasDescription.append("Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of Execution Guardrails that utilizes cryptographic techniques for deriving encryption decryption keys from specific types of values in a given computing environment.")
T1048.hasDescription.append("Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.")
T1048_001.hasDescription.append("Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.")
T1048_002.hasDescription.append("Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.")
T1048_003.hasDescription.append("Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.")
T1041.hasDescription.append("Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.")
T1011.hasDescription.append("Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.")
T1011_001.hasDescription.append("Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.")
T1052.hasDescription.append("Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.")
T1052_001.hasDescription.append("Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.")
T1567.hasDescription.append("Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.")
T1567_001.hasDescription.append("Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https:  api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.")
T1567_002.hasDescription.append("Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.")
T1567_003.hasDescription.append("Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as pastebin[.]com, are commonly used by developers to share code and other information.")
T1190.hasDescription.append("Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.")
T1203.hasDescription.append("Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.")
T1212.hasDescription.append("Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.")
T1211.hasDescription.append("Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.")
T1068.hasDescription.append("Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.")
T1210.hasDescription.append("Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.")
T1133.hasDescription.append("Adversaries may leverage external-facing remote services to initially access and or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as Windows Remote Management and VNC can also be used externally.")
T1008.hasDescription.append("Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.")
T1083.hasDescription.append("Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1222.hasDescription.append("Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).")
T1222_001.hasDescription.append("Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).")
T1222_002.hasDescription.append("Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).")
T1495.hasDescription.append("Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and or the system. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.")
T1187.hasDescription.append("Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.")
T1606.hasDescription.append("Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.")
T1606_001.hasDescription.append("Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.")
T1606_002.hasDescription.append("An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in the NotOnOrAfter value of the conditions ... element in a token. This value can be changed using the AccessTokenLifetime in a LifetimeTokenPolicy. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.")
T1592.hasDescription.append("Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).")
T1592_001.hasDescription.append("Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card biometric readers, dedicated encryption hardware, etc.).")
T1592_002.hasDescription.append("Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).")
T1592_003.hasDescription.append("Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age patch level, etc.).")
T1592_004.hasDescription.append("Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system version, virtualization, architecture (ex: 32 or 64 bit), language, and or time zone.")
T1589.hasDescription.append("Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.")
T1589_001.hasDescription.append("Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.")
T1589_002.hasDescription.append("Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.")
T1589_003.hasDescription.append("Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and or craft more-believable lures.")
T1590.hasDescription.append("Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.")
T1590_001.hasDescription.append("Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.")
T1590_002.hasDescription.append("Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.")
T1590_003.hasDescription.append("Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.")
T1590_004.hasDescription.append("Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.")
T1590_005.hasDescription.append("Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where how their publicly-facing infrastructure is hosted.")
T1590_006.hasDescription.append("Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.")
T1591.hasDescription.append("Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions departments, specifics of business operations, as well as the roles and responsibilities of key employees.")
T1591_001.hasDescription.append("Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and or authorities the victim operates within.")
T1591_002.hasDescription.append("Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.")
T1591_003.hasDescription.append("Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours days of the week. This information may also reveal times dates of purchases and shipments of the victim’s hardware and software resources.")
T1591_004.hasDescription.append("Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data resources they have access to.")
T1615.hasDescription.append("Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path  <DOMAIN> SYSVOL <DOMAIN> Policies .")
T1200.hasDescription.append("Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. Replication Through Removable Media), more robust hardware additions can be used to introduce new functionalities and or features into a system that can then be abused.")
T1564.hasDescription.append("Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.")
T1564_001.hasDescription.append("Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir  a for Windows and ls –a for Linux and macOS).")
T1564_002.hasDescription.append("Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users.")
T1564_003.hasDescription.append("Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.")
T1564_004.hasDescription.append("Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file directory on the partition. Within MFT entries are file attributes, such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files).")
T1564_005.hasDescription.append("Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.")
T1564_006.hasDescription.append("Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.")
T1564_007.hasDescription.append("Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.")
T1564_008.hasDescription.append("Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the New-InboxRule or Set-InboxRule PowerShell cmdlets on Windows systems.")
T1564_009.hasDescription.append("Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a file’s extended attributes, using ls -l@ or xattr -l commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the  Resources folder.")
T1564_010.hasDescription.append("Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools sensors that monitor process creations may retrieve the process arguments from the PEB.")
T1574.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.")
T1574_001.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and or evading restrictions on file execution.")
T1574_002.hasDescription.append("Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).")
T1574_004.hasDescription.append("Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with @rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable. Additionally, if weak linking is used, such as the LC_LOAD_WEAK_DYLIB function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.")
T1574_005.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.")
T1574_006.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as LD_PRELOAD on Linux or DYLD_INSERT_LIBRARIES on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.")
T1574_007.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.")
T1574_008.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.")
T1574_009.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.")
T1574_010.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.")
T1574_011.hasDescription.append("Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under HKLM SYSTEM CurrentControlSet Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, PowerShell, or Reg. Access to Registry keys is controlled through access control lists and user permissions.")
T1574_012.hasDescription.append("Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.")
T1574_013.hasDescription.append("Adversaries may abuse the KernelCallbackTable of a process to hijack its execution flow in order to run their own payloads. The KernelCallbackTable can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once user32.dll is loaded.")
T1562.hasDescription.append("Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.")
T1562_001.hasDescription.append("Adversaries may modify and or disable security tools to avoid possible detection of their malware tools and activities. This may take many forms, such as killing security software processes or services, modifying   deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.")
T1562_002.hasDescription.append("Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.")
T1562_003.hasDescription.append("Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.")
T1562_004.hasDescription.append("Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.")
T1562_006.hasDescription.append("An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and or in the Registry as well as being accessible via administrative utilities such as PowerShell or Windows Management Instrumentation.")
T1562_007.hasDescription.append("Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in Disable or Modify System Firewall.")
T1562_008.hasDescription.append("An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities.")
T1562_009.hasDescription.append("Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.")
T1562_010.hasDescription.append("Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and or does not support updated security controls such as logging. For example, PowerShell versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to Impair Defenses while running malicious scripts that may have otherwise been detected.")
T1562_011.hasDescription.append("Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.")
T1525.hasDescription.append("Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike Upload Malware, this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.")
T1070.hasDescription.append("Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.")
T1070_001.hasDescription.append("Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.")
T1070_002.hasDescription.append("Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the  var log  directory. Subfolders in this directory categorize logs by their related functions, such as:")
T1070_003.hasDescription.append("In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.")
T1070_004.hasDescription.append("Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.")
T1070_005.hasDescription.append("Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and SMB Windows Admin Shares connections can be removed when no longer needed. Net is an example utility that can be used to remove network share connections with the net use  system share  delete command.")
T1070_006.hasDescription.append("Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.")
T1070_007.hasDescription.append("Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system from behaviors that require network connections, such as Remote Services or External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.")
T1070_008.hasDescription.append("Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests.")
T1070_009.hasDescription.append("Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, Modify Registry, Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e. Create Account).")
T1202.hasDescription.append("Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking cmd. For example, Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a Command and Scripting Interpreter, Run window, or via scripts.")
T1105.hasDescription.append("Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer).")
T1490.hasDescription.append("Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.")
T1056.hasDescription.append("Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).")
T1056_001.hasDescription.append("Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when OS Credential Dumping efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.")
T1056_002.hasDescription.append("Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: Bypass User Account Control).")
T1056_003.hasDescription.append("Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.")
T1056_004.hasDescription.append("Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. Unlike Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:")
T1559.hasDescription.append("Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern.")
T1559_001.hasDescription.append("Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated by Remote Services such as Distributed Component Object Model (DCOM).")
T1559_002.hasDescription.append("Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.")
T1559_003.hasDescription.append("Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service C API or the high level NSXPCConnection API in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.")
T1534.hasDescription.append("Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.")
T1570.hasDescription.append("Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. Ingress Tool Transfer) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over SMB Windows Admin Shares to connected network shares or with authenticated connections via Remote Desktop Protocol.")
T1036.hasDescription.append("Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.")
T1036_001.hasDescription.append("Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.")
T1036_002.hasDescription.append("Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named March 25  u202Excod.scr will display as March 25 rcs.docx. A JavaScript file named photo_high_re u202Egnp.js will be displayed as photo_high_resj.png.")
T1036_003.hasDescription.append("Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename rundll32.exe). An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths.")
T1036_004.hasDescription.append("Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks services executed by the Task Scheduler or systemd will typically be given a name and or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.")
T1036_005.hasDescription.append("Adversaries may match or approximate the name or location of legitimate files or resources when naming placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs images or something innocuous.")
T1036_006.hasDescription.append("Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.")
T1036_007.hasDescription.append("Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: File.txt.exe may render in some views as just File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.")
T1036_008.hasDescription.append("Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file, is 0xFF 0xD8 and the file extension is either .JPE, .JPEG or .JPG.")
T1556.hasDescription.append("Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using Valid Accounts.")
T1556_001.hasDescription.append("Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.")
T1556_002.hasDescription.append("Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.")
T1556_003.hasDescription.append("Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is pam_unix.so, which retrieves, sets, and verifies account authentication information in  etc passwd and  etc shadow.")
T1556_004.hasDescription.append("Adversaries may use Patch System Image to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.")
T1556_005.hasDescription.append("An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The AllowReversiblePasswordEncryption property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.")
T1556_006.hasDescription.append("Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.")
T1556_007.hasDescription.append("Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.")
T1556_008.hasDescription.append("Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the local mpnotify.exe process via RPC. The mpnotify.exe process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.")
T1578.hasDescription.append("An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.")
T1578_001.hasDescription.append("An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in Revert Cloud Instance where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.")
T1578_002.hasDescription.append("An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may Create Snapshot of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect Data from Local System or for Remote Data Staging.")
T1578_003.hasDescription.append("An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.")
T1578_004.hasDescription.append("An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.")
T1112.hasDescription.append("Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.")
T1601.hasDescription.append("Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves. On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.")
T1601_001.hasDescription.append("Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses. Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file. Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.")
T1601_002.hasDescription.append("Adversaries may install an older version of the operating system of a network device to weaken security. Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer less updated defensive features.")
T1111.hasDescription.append("Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms.")
T1621.hasDescription.append("Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.")
T1104.hasDescription.append("Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.")
T1106.hasDescription.append("Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.")
T1599.hasDescription.append("Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.")
T1599_001.hasDescription.append("Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.")
T1498.hasDescription.append("Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.")
T1498_001.hasDescription.append("Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.")
T1498_002.hasDescription.append("Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.")
T1046.hasDescription.append("Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and or vulnerability scans using tools that are brought onto a system.")
T1135.hasDescription.append("Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.")
T1040.hasDescription.append("Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.")
T1095.hasDescription.append("Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected tunneled protocols, such as Serial over LAN (SOL).")
T1571.hasDescription.append("Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis parsing of network data.")
T1027.hasDescription.append("Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.")
T1027_001.hasDescription.append("Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.")
T1027_002.hasDescription.append("Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.")
T1027_003.hasDescription.append("Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.")
T1027_004.hasDescription.append("Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC MinGW.")
T1027_005.hasDescription.append("Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.")
T1027_006.hasDescription.append("Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.")
T1027_007.hasDescription.append("Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various Native API functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.")
T1027_008.hasDescription.append("Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s linker when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.")
T1027_009.hasDescription.append("Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to Subvert Trust Controls by not impacting execution controls such as digital signatures and notarization tickets.")
T1027_010.hasDescription.append("Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., Phishing and Drive-by Compromise) or interactively via Command and Scripting Interpreter.")
T1027_011.hasDescription.append("Adversaries may store data in fileless formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.")
T1588.hasDescription.append("Adversaries may buy and or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.")
T1588_001.hasDescription.append("Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.")
T1588_002.hasDescription.append("Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.")
T1588_003.hasDescription.append("Adversaries may buy and or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.")
T1588_004.hasDescription.append("Adversaries may buy and or steal SSL TLS certificates that can be used during targeting. SSL TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.")
T1588_005.hasDescription.append("Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find modify exploits from online or purchase them from exploit vendors.")
T1588_006.hasDescription.append("Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.")
T1137.hasDescription.append("Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.")
T1137_001.hasDescription.append("Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts.")
T1137_002.hasDescription.append("Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.")
T1137_003.hasDescription.append("Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.")
T1137_004.hasDescription.append("Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.")
T1137_005.hasDescription.append("Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.")
T1137_006.hasDescription.append("Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. There are different types of add-ins that can be used by the various Office products; including Word Excel add-in Libraries (WLL XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins.")
T1003.hasDescription.append("Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform Lateral Movement and access restricted information.")
T1003_001.hasDescription.append("Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct Lateral Movement using Use Alternate Authentication Material.")
T1003_002.hasDescription.append("Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the net user command. Enumerating the SAM database requires SYSTEM level access.")
T1003_003.hasDescription.append("Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in %SystemRoot% NTDS Ntds.dit of a domain controller.")
T1003_004.hasDescription.append("Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE SECURITY Policy Secrets. LSA secrets can also be dumped from memory.")
T1003_005.hasDescription.append("Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.")
T1003_006.hasDescription.append("Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.")
T1003_007.hasDescription.append("Adversaries may gather credentials from the proc filesystem or  proc. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the  proc <PID> maps file shows how memory is mapped within the process’s virtual address space. And  proc <PID> mem, exposed for debugging purposes, provides access to the process’s virtual address space.")
T1003_008.hasDescription.append("Adversaries may attempt to dump the contents of  etc passwd and  etc shadow to enable offline password cracking. Most modern Linux operating systems use a combination of  etc passwd and  etc shadow to store user account information including password hashes in  etc shadow. By default,  etc shadow is only readable by the root user.")
T1201.hasDescription.append("Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through Brute Force. This information may help the adversary to create a list of common passwords and launch dictionary and or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).")
T1120.hasDescription.append("Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.")
T1069.hasDescription.append("Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.")
T1069_001.hasDescription.append("Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.")
T1069_002.hasDescription.append("Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.")
T1069_003.hasDescription.append("Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.")
T1566.hasDescription.append("Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.")
T1566_001.hasDescription.append("Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon User Execution to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.")
T1566_002.hasDescription.append("Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.")
T1566_003.hasDescription.append("Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.")
T1598.hasDescription.append("Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from Phishing in that the objective is gathering data from the victim rather than executing malicious code.")
T1598_001.hasDescription.append("Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and or sending multiple, seemingly urgent messages.")
T1598_002.hasDescription.append("Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and or sending multiple, seemingly urgent messages.")
T1598_003.hasDescription.append("Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Establish Accounts or Compromise Accounts) and or sending multiple, seemingly urgent messages.")
T1647.hasDescription.append("Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the info.plist file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.")
T1542.hasDescription.append("Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.")
T1542_001.hasDescription.append("Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.")
T1542_002.hasDescription.append("Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to System Firmware but conducted upon other system components devices that may not have the same capability or level of integrity checking.")
T1542_003.hasDescription.append("Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.")
T1542_004.hasDescription.append("Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect.")
T1542_005.hasDescription.append("Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.")
T1057.hasDescription.append("Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software applications running on systems within the network. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1055.hasDescription.append("Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.")
T1055_001.hasDescription.append("Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_002.hasDescription.append("Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_003.hasDescription.append("Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.")
T1055_004.hasDescription.append("Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_005.hasDescription.append("Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_008.hasDescription.append("Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_009.hasDescription.append("Adversaries may inject malicious code into processes via the  proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_011.hasDescription.append("Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process.")
T1055_012.hasDescription.append("Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.")
T1055_013.hasDescription.append("Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process.")
T1055_014.hasDescription.append("Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.")
T1055_015.hasDescription.append("Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.")
T1572.hasDescription.append("Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection network filtering and or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet.")
T1090.hasDescription.append("Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.")
T1090_001.hasDescription.append("Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.")
T1090_002.hasDescription.append("Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.")
T1090_003.hasDescription.append("To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network.")
T1090_004.hasDescription.append("Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, domainless fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).")
T1012.hasDescription.append("Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.")
T1620.hasDescription.append("Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).")
T1219.hasDescription.append("An adversary may use legitimate desktop support and remote access software, such as Team Viewer, AnyDesk, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries.")
T1563.hasDescription.append("Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.")
T1563_001.hasDescription.append("Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.")
T1563_002.hasDescription.append("Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).")
T1021.hasDescription.append("Adversaries may use Valid Accounts to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.")
T1021_001.hasDescription.append("Adversaries may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.")
T1021_002.hasDescription.append("Adversaries may use Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.")
T1021_003.hasDescription.append("Adversaries may use Valid Accounts to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.")
T1021_004.hasDescription.append("Adversaries may use Valid Accounts to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.")
T1021_005.hasDescription.append("Adversaries may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). VNC is a platform-independent desktop sharing system that uses the RFB (remote framebuffer) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.")
T1021_006.hasDescription.append("Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.")
T1021_007.hasDescription.append("Adversaries may log into accessible cloud services within a compromised environment using Valid Accounts that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user.")
T1018.hasDescription.append("Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as Ping or net view using Net.")
T1091.hasDescription.append("Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.")
T1496.hasDescription.append("Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and or hosted service availability.")
T1207.hasDescription.append("Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.")
T1014.hasDescription.append("Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting hooking and modifying operating system API calls that supply system information.")
T1053.hasDescription.append("Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.")
T1053_002.hasDescription.append("Adversaries may abuse the at utility to perform task scheduling for initial or recurring execution of malicious code. The at utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of Scheduled Task's schtasks in Windows environments, using at requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.")
T1053_003.hasDescription.append("Adversaries may abuse the cron utility to perform task scheduling for initial or recurring execution of malicious code. The cron utility is a time-based job scheduler for Unix-like operating systems. The crontab file contains the schedule of cron entries to be run and the specified times for execution. Any crontab files are stored in operating system-specific file paths.")
T1053_005.hasDescription.append("Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The schtasks utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.")
T1053_006.hasDescription.append("Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension .timer that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to Cron in Linux environments. Systemd timers may be activated remotely via the systemctl command line utility, which operates over SSH.")
T1053_007.hasDescription.append("Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.")
T1029.hasDescription.append("Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.")
T1113.hasDescription.append("Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as CopyFromScreen, xwd, or screencapture.")
T1597.hasDescription.append("Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.")
T1597_001.hasDescription.append("Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs countermeasures.")
T1597_002.hasDescription.append("Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.")
T1596.hasDescription.append("Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains certificates as well as public collections of network data artifacts gathered from traffic and or scans.")
T1596_001.hasDescription.append("Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.")
T1596_002.hasDescription.append("Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.")
T1596_003.hasDescription.append("Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL TLS communications), contain information about the registered organization such as name and location.")
T1596_004.hasDescription.append("Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.")
T1596_005.hasDescription.append("Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.")
T1593.hasDescription.append("Adversaries may search freely available websites and or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested rewarded contracts.")
T1593_001.hasDescription.append("Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.")
T1593_002.hasDescription.append("Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).")
T1548_005.hasDescription.append("Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own.")
T1098_006.hasDescription.append("An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account. Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.")
T1659.hasDescription.append("Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., Drive-by Target followed by Drive-by Compromise), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., Ingress Tool Transfer) and other data to already compromised systems.")
T1555_006.hasDescription.append("Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.")
T1567_004.hasDescription.append("Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.")
T1657.hasDescription.append("Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware, business email compromise (BEC) and fraud, 'pig butchering,' bank hacking, and exploiting cryptocurrency networks.")
T1564_011.hasDescription.append("Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off. These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.")
T1562_012.hasDescription.append("Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.")
T1656.hasDescription.append("Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via Phishing for Information, Phishing, or Internal Spearphishing) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary’s ultimate goals, possibly against multiple victims.")
T1654.hasDescription.append("Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records (Account Discovery), security or vulnerable software (Software Discovery), or hosts within a compromised network (Remote System Discovery).")
T1036_009.hasDescription.append("An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the 'parent-child' relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.")
T1578_005.hasDescription.append("Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.")
T1027_012.hasDescription.append("Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the IconEnvironmentDataBlock) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.")
T1566_004.hasDescription.append("Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.")
T1598_004.hasDescription.append("Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.")
T1653.hasDescription.append("Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.")
T1021_008.hasDescription.append("Adversaries may leverage Valid Accounts to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the Cloud API, such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager.")
T1016_002.hasDescription.append("Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of Account Discovery, Remote System Discovery, and other discovery or Credential Access activity to support both ongoing and future campaigns.")
T1593_003.hasDescription.append("Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.")
T1594.hasDescription.append("Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: Email Addresses). These sites may also have details highlighting business operations and relationships.")
T1505.hasDescription.append("Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.")
T1505_001.hasDescription.append("Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started restarted).")
T1505_002.hasDescription.append("Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks.")
T1505_003.hasDescription.append("Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.")
T1505_004.hasDescription.append("Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: Get{Extension Filter}Version, Http{Extension Filter}Proc, and (optionally) Terminate{Extension Filter}. IIS modules may also be installed to extend IIS web servers.")
T1505_005.hasDescription.append("Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.")
T1648.hasDescription.append("Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.")
T1489.hasDescription.append("Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.")
T1129.hasDescription.append("Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like CreateProcess, LoadLibrary, etc. of the Win32 API.")
T1072.hasDescription.append("Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).")
T1518.hasDescription.append("Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1518_001.hasDescription.append("Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1608.hasDescription.append("Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.")
T1608_001.hasDescription.append("Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.")
T1608_002.hasDescription.append("Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable Ingress Tool Transfer by placing it on an Internet accessible web server.")
T1608_003.hasDescription.append("Adversaries may install SSL TLS certificates that can be used during targeting. SSL TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.")
T1608_004.hasDescription.append("Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as Application Access Token. Prior to Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).")
T1608_005.hasDescription.append("Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in Spearphishing Link) or a phish to gain initial access to a system (as in Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.")
T1608_006.hasDescription.append("Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking score reputation calculated by their web crawlers and algorithms.")
T1528.hasDescription.append("Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.")
T1649.hasDescription.append("Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.")
T1558.hasDescription.append("Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as realms, there are three basic participants: client, service, and Key Distribution Center (KDC). Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting. Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.")
T1558_001.hasDescription.append("Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory.")
T1558_002.hasDescription.append("Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.")
T1558_003.hasDescription.append("Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to Brute Force.")
T1558_004.hasDescription.append("Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by Password Cracking Kerberos messages.")
T1539.hasDescription.append("An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.")
T1553.hasDescription.append("Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.")
T1553_001.hasDescription.append("Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.")
T1553_002.hasDescription.append("Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. Unlike Invalid Code Signature, this activity will result in a valid signature.")
T1553_003.hasDescription.append("Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.")
T1553_004.hasDescription.append("Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.")
T1553_005.hasDescription.append("Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named Zone.Identifier with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known trusted, SmartScreen will prevent the execution and warn the user not to run it.")
T1553_006.hasDescription.append("Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system.")
T1195.hasDescription.append("Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.")
T1195_001.hasDescription.append("Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.")
T1195_002.hasDescription.append("Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update distribution mechanism for that software, or replacing compiled releases with a modified version.")
T1195_003.hasDescription.append("Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.")
T1218.hasDescription.append("Adversaries may bypass process and or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.")
T1218_001.hasDescription.append("Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting web related programming languages such VBA, JScript, Java, and ActiveX. CHM content is displayed using underlying components of the Internet Explorer browser loaded by the HTML Help executable program (hh.exe).")
T1218_002.hasDescription.append("Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.")
T1218_003.hasDescription.append("Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.")
T1218_004.hasDescription.append("Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: C: Windows Microsoft.NET Framework v InstallUtil.exe and C: Windows Microsoft.NET Framework64 v InstallUtil.exe.")
T1218_005.hasDescription.append("Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code")
T1218_007.hasDescription.append("Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.")
T1218_008.hasDescription.append("Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft.")
T1218_009.hasDescription.append("Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET Component Object Model (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.")
T1218_010.hasDescription.append("Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft.")
T1218_011.hasDescription.append("Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: rundll32.exe {DLLname, DLLfunction}).")
T1218_012.hasDescription.append("Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.")
T1218_013.hasDescription.append("Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).")
T1218_014.hasDescription.append("Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.")
T1082.hasDescription.append("An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1614.hasDescription.append("Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from System Location Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1614_001.hasDescription.append("Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution scrutiny from other entities.")
T1016.hasDescription.append("Adversaries may look for details about the network configuration and settings, such as IP and or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig ifconfig, nbtstat, and route.")
T1016_001.hasDescription.append("Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using Ping, tracert, and GET requests to websites.")
T1049.hasDescription.append("Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.")
T1033.hasDescription.append("Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file directory ownership, session information, and system logs. Adversaries may use the information from System Owner User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.")
T1216.hasDescription.append("Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.")
T1216_001.hasDescription.append("Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a Visual Basic script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the Windows Command Shell via Cscript.exe. For example, the following code publishes a printer within the specified domain: cscript pubprn Printer1 LDAP:  CN=Container1,DC=Domain1,DC=Com.")
T1007.hasDescription.append("Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as sc query, tasklist  svc, systemctl --type=service, and net start.")
T1569.hasDescription.append("Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution.")
T1569_001.hasDescription.append("Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.")
T1569_002.hasDescription.append("Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such as sc.exe and Net.")
T1529.hasDescription.append("Adversaries may shutdown reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown reboot of a remote computer or network device via Network Device CLI (e.g. reload).")
T1124.hasDescription.append("An adversary may gather the system time and or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network.")
T1080.hasDescription.append("Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.")
T1221.hasDescription.append("Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.")
T1205.hasDescription.append("Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.")
T1205_001.hasDescription.append("Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.")
T1205_002.hasDescription.append("Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the libpcap library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.")
T1537.hasDescription.append("Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers downloads and network-based exfiltration detection.")
T1127.hasDescription.append("Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.")
T1127_001.hasDescription.append("Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.")
T1199.hasDescription.append("Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.")
T1552.hasDescription.append("Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and or misplaced in many locations on a system, including plaintext files (e.g. Bash History), operating system or application-specific repositories (e.g. Credentials in Registry), or other specialized files artifacts (e.g. Private Keys).")
T1552_001.hasDescription.append("Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code binary files containing embedded passwords.")
T1552_002.hasDescription.append("Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.")
T1552_003.hasDescription.append("Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the history utility. Once a user logs out, the history is flushed to the user’s .bash_history file. For each user, this file resides at the same location: ~ .bash_history. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.")
T1552_004.hasDescription.append("Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.")
T1552_005.hasDescription.append("Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.")
T1552_006.hasDescription.append("Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.")
T1552_007.hasDescription.append("Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.")
T1552_008.hasDescription.append("Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.")
T1535.hasDescription.append("Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.")
T1550.hasDescription.append("Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.")
T1550_001.hasDescription.append("Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.")
T1550_002.hasDescription.append("Adversaries may pass the hash using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.")
T1550_003.hasDescription.append("Adversaries may pass the ticket using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.")
T1550_004.hasDescription.append("Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.")
T1204.hasDescription.append("An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of Phishing.")
T1204_001.hasDescription.append("An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via Exploitation for Client Execution. Links may also lead users to download files that require execution via Malicious File.")
T1204_002.hasDescription.append("An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.")
T1204_003.hasDescription.append("Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.")
T1078.hasDescription.append("Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.")
T1078_001.hasDescription.append("Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.")
T1078_002.hasDescription.append("Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.")
T1078_003.hasDescription.append("Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.")
T1078_004.hasDescription.append("Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management systems, such as Windows Active Directory.")
T1125.hasDescription.append("An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.")
T1497.hasDescription.append("Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization Sandbox Evasion during automated discovery to shape follow-on behaviors.")
T1497_001.hasDescription.append("Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization Sandbox Evasion during automated discovery to shape follow-on behaviors.")
T1497_002.hasDescription.append("Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization Sandbox Evasion during automated discovery to shape follow-on behaviors.")
T1497_003.hasDescription.append("Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.")
T1600.hasDescription.append("Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications.")
T1600_001.hasDescription.append("Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.")
T1600_002.hasDescription.append("Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.")
T1102.hasDescription.append("Adversaries may use an existing, legitimate external Web service as a means for relaying data to from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL TLS encryption, giving adversaries an added level of protection.")
T1102_001.hasDescription.append("Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.")
T1102_002.hasDescription.append("Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.")
T1102_003.hasDescription.append("Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.")
T1047.hasDescription.append("Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by Remote Services such as Distributed Component Object Model (DCOM) and Windows Remote Management (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.")
T1220.hasDescription.append("Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.")

# Set Mitigation for Technique
T1110.hasMitigation.append("Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1621.hasMitigation.append("Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1078.hasMitigation.append("Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1110_001.hasMitigation.append("Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1110_003.hasMitigation.append("Enable account restrictions to prevent login attempts, and the subsequent 2FA/MFA service requests, from being initiated from suspicious locations or when the source of the login attempts do not match the location of the 2FA/MFA smart device. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1110_004.hasMitigation.append("Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1078_004.hasMitigation.append("Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.")
T1134_005.hasMitigation.append("Clean up SID-History attributes after legitimate account migration is complete.Consider applying SID Filtering to interforest trusts, such as forest trusts and external trusts, to exclude SID-History from requests to access domain resources. SID Filtering ensures that any authentication requests over a trust only contain SIDs of security principals from the trusted domain (i.e preventing the trusted domain from claiming a user has membership in groups outside of the domain).SID Filtering of forest trusts is enabled by default, but may have been disabled in some cases to allow a child domain to transitively access forest trusts. SID Filtering of external trusts is automatically enabled on all created external trusts using Server 2003 or later domain controllers.However note that SID Filtering is not automatically applied to legacy trusts or may have been deliberately disabled to allow inter-domain access to resources.SID Filtering can be applied by:Disabling SIDHistory on forest trusts using the netdom tool (netdom trust /domain: /EnableSIDHistory:noon the domain controller)Applying SID Filter Quarantining to external trusts using the netdom tool (netdom trust/domain:/quarantine:yeson the domain controller)Applying SID Filtering to domain trusts within a single forest is not recommended as it is an unsupported configuration and can cause breaking changes.If a domain within a forest is untrustworthy then it should not be a member of the forest. In this situation it is necessary to first split the trusted and untrusted domains into separate forests where SID Filtering can be applied to an interforest trust")
T1606_002.hasMitigation.append("For containing the impact of a previously forged SAML token, rotate the token-signing AD FS certificate in rapid succession twice, which will invalidate any tokens generated using the previous certificate.")
T1003.hasMitigation.append("Manage the access control list for Replicating Directory Changes and other permissions associated with domain controller replication.Consider adding users to the Protected Users Active Directory security group. This can help limit the caching of users' plaintext credentials.")
T1003_005.hasMitigation.append("Consider adding users to the Protected Users Active Directory security group. This can help limit the caching of users' plaintext credentials.")
T1003_006.hasMitigation.append("Manage the access control list for Replicating Directory Changes and other permissions associated with domain controller replication.")
T1072.hasMitigation.append("Ensure proper system and access isolation for critical network systems through use of group policy.")
T1649.hasMitigation.append("Ensure certificate authorities (CA) are properly secured, including treating CA servers (and other resources hosting CA certificates) as tier 0 assets. Harden abusable CA settings and attributes.For example, consider disabling the usage of AD CS certificate SANs within relevant authentication protocol settings to enforce strict user mappings and prevent certificates from authenticating as other identifies.Also consider enforcing CA Certificate Manager approval for the templates that include SAN as an issuance requirement.")
T1558.hasMitigation.append("For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.")
T1558_001.hasMitigation.append("For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.")
T1552.hasMitigation.append("Remove vulnerable Group Policy Preferences.")
T1552_006.hasMitigation.append("Remove vulnerable Group Policy Preferences.")
T1550_003.hasMitigation.append("To contain the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.")
T1078.hasMitigation.append("Disable legacy authentication, which does not support MFA, and require the use of modern authentication protocols instead.")
T1078_004.hasMitigation.append("Disable legacy authentication, which does not support MFA, and require the use of modern authentication protocols instead.")
T1547_006.hasMitigation.append("Common tools for detecting Linux rootkits include: rkhunter , chrootkit , although rootkits may be designed to evade certain detection tools.")
T1059.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1059_001.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1059_005.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1059_006.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1036.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1036_008.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1027.hasMitigation.append("Anti-virus can be used to automatically detect and quarantine suspicious files. Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10+ to analyze commands after being processed/interpreted. ")
T1027_002.hasMitigation.append("Employ heuristic-based malware detection. Ensure updated virus definitions and create custom signatures for observed malware.")
T1027_009.hasMitigation.append("Anti-virus can be used to automatically detect and quarantine suspicious files.")
T1027_010.hasMitigation.append("Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10+ to analyze commands after being processed/interpreted.")
T1566.hasMitigation.append("Anti-virus can automatically quarantine suspicious files.")
T1566_001.hasMitigation.append("Anti-virus can also automatically quarantine suspicious files.")
T1566_003.hasMitigation.append("Anti-virus can also automatically quarantine suspicious files.")
T1080.hasMitigation.append("Anti-virus can be used to automatically quarantine suspicious files.")
T1221.hasMitigation.append("Network/Host intrusion prevention systems, antivirus, and detonation chambers can be employed to prevent documents from fetching and/or executing malicious payloads.")
T1212.hasMitigation.append("Application developers should consider taking measures to validate authentication requests by enabling one-time passwords, providing timestamps or sequence numbers for messages sent, using digital signatures, and/or using random session keys.")
T1564_009.hasMitigation.append("Configure applications to use the application bundle structure which leverages the /Resources folder location.")
T1574.hasMitigation.append("When possible, include hash values in manifest files to help prevent side-loading of malicious libraries.")
T1574_002.hasMitigation.append("When possible, include hash values in manifest files to help prevent side-loading of malicious libraries.")
T1559.hasMitigation.append("Enable the Hardened Runtime capability when developing applications. Do not include the com.apple.security.get-task-allow entitlement with the value set to any variation of true.")
T1559_003.hasMitigation.append("Enable the Hardened Runtime capability when developing applications. Do not include the com.apple.security.get-task-allow entitlement with the value set to any variation of true.")
T1647.hasMitigation.append("Ensure applications are using Apple's developer guidance which enables hardened runtime.")
T1593.hasMitigation.append("Application developers uploading to public code repositories should be careful to avoid publishing sensitive information such as credentials and API keys.")
T1593_003.hasMitigation.append("Application developers uploading to public code repositories should be careful to avoid publishing sensitive information such as credentials and API keys.")
T1078.hasMitigation.append("Ensure that applications do not store sensitive data or credentials insecurely. (e.g. plaintext credentials in code, published credentials in repositories, or credentials in public cloud storage).")
T1189.hasMitigation.append("Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.")
T1548_005.hasMitigation.append("Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges.")
T1548_005.hasDetection.append("Log API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken.")
T1098_006.hasMitigation.append("Require multi-factor authentication for user accounts integrated into container clusters through cloud deployments or via authentication protocols such as LDAP or SAML.")
T1098_006.hasMitigation.append("Ensure that low-privileged accounts do not have permissions to add permissions to accounts or to update container cluster roles.")
T1098_006.hasDetection.append("Collect usage logs from accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to high-privileged cluster roles that go over a certain threshold of known admins.")
T1659.hasMitigation.append("Where possible, ensure that online traffic is appropriately encrypted through services such as trusted VPNs.")
T1659.hasMitigation.append("Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns.")
T1659.hasDetection.append("Monitor for unexpected and abnormal file creations that may indicate malicious content injected through online network communications.")
T1659.hasDetection.append("Monitor for other unusual network traffic that may indicate additional malicious content transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious payloads, content obfuscation, and exploit code.")
T1659.hasDetection.append("Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, or evidence of Discovery.")
T1555_006.hasMitigation.append("Limit the number of cloud accounts and services with permission to query the secrets manager to only those required. Ensure that accounts and services with permissions to query the secrets manager only have access to the secrets they require.")
T1189.hasMitigation.append("Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. The risks of additional exploits and weaknesses in implementation may still exist for these types of systems.")
T1611.hasMitigation.append("Consider utilizing seccomp, seccomp-bpf, or a similar solution that restricts certain system calls such as mount. In Kubernetes environments, consider defining Pod Security Standards that limit container access to host process namespaces, the host network, and the host file system.")
T1190.hasMitigation.append("Application isolation will limit what other processes and system features the exploited target can access.")
T1203.hasMitigation.append("Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.  ")
T1203.hasMitigation.append("Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. Risks of additional exploits and weaknesses in those systems may still exist. ")
T1212.hasMitigation.append("Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist.")
T1211.hasMitigation.append("Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. ")
T1068.hasMitigation.append("Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. ")
T1210.hasMitigation.append("Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. ")
T1559.hasMitigation.append("Ensure all COM alerts and Protected View are enabled.")
T1559_001.hasMitigation.append("Ensure all COM alerts and Protected View are enabled.")
T1559_002.hasMitigation.append("Ensure Protected View is enabled.")
T1027_006.hasMitigation.append("Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.")
T1021_003.hasMitigation.append("Ensure all COM alerts and Protected View are enabled.")
T1548.hasMitigation.append("Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.")
T1548_002.hasMitigation.append("Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.")
T1087_004.hasMitigation.append("Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.")
T1560.hasMitigation.append("System scans can be performed to identify unauthorized archival utilities.")
T1560_001.hasMitigation.append("System scans can be performed to identify unauthorized archival utilities.")
T1176.hasMitigation.append("Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.")
T1612.hasMitigation.append("Audit images deployed within the environment to ensure they do not contain any malicious components.")
T1059_006.hasMitigation.append("Inventory systems for unauthorized Python installations.")
T1543.hasMitigation.append("Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.")
T1543_003.hasMitigation.append("Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.")
T1543_004.hasMitigation.append("Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.")
T1530.hasMitigation.append("Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.")
T1213.hasMitigation.append("Consider periodic review of accounts and privileges for critical and sensitive repositories.")
T1213_001.hasMitigation.append("Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.")
T1213_002.hasMitigation.append("Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.")
T1213_003.hasMitigation.append("Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.")
T1610.hasMitigation.append("Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.")
T1484.hasMitigation.append("Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as BloodHound (version 1.5.1 and later).")
T1484_001.hasMitigation.append("Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as BloodHound (version 1.5.1 and later).")
T1482.hasMitigation.append("Map the trusts within existing domains/forests and keep trust relationships to a minimum.")
T1114.hasMitigation.append("Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.")
T1114.hasMitigation.append("In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.")
T1114_003.hasMitigation.append("Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.")
T1114.hasMitigation.append("In an Exchange environment, Administrators can use Get-InboxRule / Remove-InboxRule and Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious auto-fowarding and transport rules. In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.")
T1546_006.hasMitigation.append("Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn u2019t included as part of an update, it should be investigated.")
T1606.hasMitigation.append("Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.")
T1606.hasMitigation.append("Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.")
T1606_001.hasMitigation.append("Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.")
T1606_002.hasMitigation.append("Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.")
T1564_008.hasMitigation.append("Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis.")
T1564.hasMitigation.append("In an Exchange environment, Administrators can use Get-InboxRule / Remove-InboxRule and Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious inbox and transport rules.")
T1574.hasMitigation.append("Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.")
T1574.hasMitigation.append("Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.")
T1574.hasMitigation.append("Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.")
T1574.hasMitigation.append("Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.")
T1574_001.hasMitigation.append("Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.")
T1574.hasMitigation.append("Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.")
T1574_005.hasMitigation.append("Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.")
T1574_007.hasMitigation.append("Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.")
T1574.hasMitigation.append("Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.")
T1574_008.hasMitigation.append("Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.")
T1574.hasMitigation.append("Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.")
T1574_009.hasMitigation.append("Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.")
T1574.hasMitigation.append("Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.")
T1574_010.hasMitigation.append("Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.")
T1562.hasMitigation.append("Routinely check account role permissions to ensure only expected users and roles have permission to modify defensive tools and settings.")
T1562_002.hasMitigation.append("Consider periodic review of auditpol settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.")
T1562_004.hasMitigation.append("Routinely check account role permissions to ensure only expected users and roles have permission to modify system firewalls.")
T1562_007.hasMitigation.append("Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls.")
T1562.hasMitigation.append("To ensure Audit rules can not be modified at runtime, add the auditctl -e 2 as the last command in the audit.rules files. Once started, any attempt to change the configuration in this mode will be audited and denied. The configuration can only be changed by rebooting the machine.")
T1525.hasMitigation.append("Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.")
T1070_008.hasMitigation.append("In an Exchange environment, Administrators can use Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious transport rules.")
T1556.hasMitigation.append("Review authentication logs to ensure that mechanisms such as enforcement of MFA are functioning as intended.")
T1556.hasMitigation.append("Periodically review the hybrid identity solution in use for any discrepancies. For example, review all Pass Through Authentication (PTA) agents in the Azure Management Portal to identify any unwanted or unapproved ones. If ADFS is in use, review DLLs and executable files in the AD FS and Global Assembly Cache directories to ensure that they are signed by Microsoft. Note that in some cases binaries may be catalog-signed, which may cause the file to appear unsigned when viewing file properties.")
T1556.hasMitigation.append("Periodically review for new and unknown network provider DLLs within the Registry (HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Services <NetworkProviderName> NetworkProvider ProviderPath). Ensure only valid network provider DLLs are registered. The name of these can be found in the Registry key at HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order, and have corresponding service subkey pointing to a DLL at HKEY_LOCAL_MACHINE SYSTEM CurrentC ontrolSet Services <NetworkProviderName> NetworkProvider.")
T1556_006.hasMitigation.append("Review MFA actions alongside authentication logs to ensure that MFA-based logins are functioning as intended. Review user accounts to ensure that all accounts have MFA enabled.")
T1556_007.hasMitigation.append("Periodically review the hybrid identity solution in use for any discrepancies. For example, review all PTA agents in the Azure Management Portal to identify any unwanted or unapproved ones. If ADFS is in use, review DLLs and executable files in the AD FS and Global Assembly Cache directories to ensure that they are signed by Microsoft. Note that in some cases binaries may be catalog-signed, which may cause the file to appear unsigned when viewing file properties.")
T1556_008.hasMitigation.append("Periodically review for new and unknown network provider DLLs within the Registry (HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Services <NetworkProviderName> NetworkProvider ProviderPath).")
T1556.hasMitigation.append("Ensure only valid network provider DLLs are registered. The name of these can be found in the Registry key at HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order, and have corresponding service subkey pointing to a DLL at HKEY_LOCAL_MACHINE SYSTEM CurrentC ontrolSet Services <NetworkProviderName> NetworkProvider.")
T1578.hasMitigation.append("Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.")
T1578_001.hasMitigation.append("Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.")
T1578_002.hasMitigation.append("Routinely check user permissions to ensure only the expected users have the capability to create new instances.")
T1578_003.hasMitigation.append("Routinely check user permissions to ensure only the expected users have the capability to delete new instances.")
T1027.hasMitigation.append("Consider periodic review of common fileless storage locations (such as the Registry or WMI repository) to potentially identify abnormal and malicious data.")
T1027_011.hasMitigation.append("Consider periodic review of common fileless storage locations (such as the Registry or WMI repository) to potentially identify abnormal and malicious data.")
T1566_002.hasMitigation.append("Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.")
T1542_004.hasMitigation.append("Periodically check the integrity of system image to ensure it has not been modified.")
T1542_005.hasMitigation.append("Periodically check the integrity of the running configuration and system image to ensure they have not been modified.")
T1563_002.hasMitigation.append("Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.")
T1021_001.hasMitigation.append("Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.")
T1021_005.hasMitigation.append("Inventory workstations for unauthorized VNC server software.")
T1053.hasMitigation.append("Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. ")
T1053_002.hasMitigation.append("Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.  Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft Windows NT CurrentVersion Schedule TaskCache Tree At1.  In Linux and macOS environments, scheduled tasks using at can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. ")
T1053_003.hasMitigation.append("Review changes to the cron schedule. cron execution can be reviewed within the /var/log directory. To validate the location of the cron log file, check the syslog config at /etc/rsyslog.conf or /etc/syslog.conf")
T1053_005.hasMitigation.append("Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. ")
T1593.hasMitigation.append("Scan public code repositories for exposed credentials or other sensitive information before making commits. Ensure that any leaked credentials are removed from the commit history, not just the current latest version of the code.")
T1593_003.hasMitigation.append("Scan public code repositories for exposed credentials or other sensitive information before making commits. Ensure that any leaked credentials are removed from the commit history, not just the current latest version of the code.")
T1505.hasMitigation.append("Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.")
T1505_001.hasMitigation.append("Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.")
T1505_002.hasMitigation.append("Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.")
T1505_004.hasMitigation.append("Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.")
T1505_005.hasMitigation.append("Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.")
T1528.hasMitigation.append("Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.")
T1649.hasMitigation.append("Check and remediate unneeded existing authentication certificates as well as common abusable misconfigurations of CA settings and permissions, such as AD CS certificate enrollment permissions and published overly permissive certificate templates (which define available settings for created certificates). For example, available AD CS certificate templates can be checked via the Certificate Authority MMC snap-in (certsrv.msc). certutil.exe can also be used to examine various information within an AD CS CA database.")
T1558_004.hasMitigation.append("Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled. ")
T1552.hasMitigation.append("Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.")
T1552_001.hasMitigation.append("Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.")
T1552_002.hasMitigation.append("Proactively search for credentials within the Registry and attempt to remediate the risk.")
T1552_004.hasMitigation.append("Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.")
T1552_006.hasMitigation.append("Search SYSVOL for any existing GGPs that may contain credentials and remove them.")
T1552_008.hasMitigation.append("Preemptively search through communication services to find shared unsecured credentials. Searching for common patterns like password is , password= and take actions to reduce exposure when found.")
T1550_001.hasMitigation.append("Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.")
T1204_003.hasMitigation.append("Audit images deployed within the environment to ensure they do not contain any malicious components.")
T1495.hasMitigation.append("Check the integrity of the existing BIOS and device firmware to determine if it is vulnerable to modification.")
T1601.hasMitigation.append("Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. ")
T1601_001.hasMitigation.append("Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. ")
T1601_002.hasMitigation.append("Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. ")
T1542.hasMitigation.append("Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.  ")
T1542_001.hasMitigation.append("Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification. Use Trusted Platform Module technology.  Move system's root of trust to hardware to prevent tampering with the SPI flash memory. Technologies such as Intel Boot Guard can assist with this. ")
T1542_003.hasMitigation.append("Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.  ")
T1542_004.hasMitigation.append("Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software. ")
T1542_005.hasMitigation.append("Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software. ")
T1553_006.hasMitigation.append("Use of Secure Boot may prevent some implementations of modification to code signing policies.")
T1195_003.hasMitigation.append("Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.  ")
T1059.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Visual Basic and JavaScript scripts from executing potentially malicious downloaded content .")
T1059_005.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Visual Basic scripts from executing potentially malicious downloaded content .")
T1059_007.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent JavaScript scripts from executing potentially malicious downloaded content .")
T1543.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system. On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed drivers.")
T1543_003.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system. On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed service drivers.")
T1486.hasMitigation.append("On Windows 10, enable cloud-delivered protection and Attack Surface Reduction (ASR) rules to block the execution of files that resemble ransomware. ")
T1006.hasMitigation.append("Some endpoint security solutions can be configured to block some types of behaviors related to efforts by an adversary to create backups, such as command execution or preventing API calls to backup related services.")
T1546_003.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent malware from abusing WMI to attain persistence.")
T1574.hasMitigation.append("Some endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).")
T1574_013.hasMitigation.append("Some endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).")
T1559.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.")
T1559_002.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.")
T1036.hasMitigation.append("Implement security controls on the endpoint, such as a Host Intrusion Prevention System (HIPS), to identify and prevent execution of potentially malicious files (such as those with mismatching file signatures).")
T1036_008.hasMitigation.append("Implement security controls on the endpoint, such as a Host Intrusion Prevention System (HIPS), to identify and prevent execution of files with mismatching file signatures.")
T1106.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office VBA macros from calling Win32 APIs. ")
T1027.hasMitigation.append("On Windows 10+, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated payloads. ")
T1027_009.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts.")
T1027_010.hasMitigation.append("On Windows 10+, enable Attack Surface Reduction (ASR) rules to block execution of potentially obfuscated scripts.")
T1137.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_001.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_002.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_003.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_004.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_005.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1137_006.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. ")
T1003.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to secure LSASS and prevent credential stealing. ")
T1003_001.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to secure LSASS and prevent credential stealing. ")
T1055.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process. For example, on Windows 10, Attack Surface Reduction (ASR) rules may prevent Office applications from code injection. ")
T1055_001.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_002.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_003.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_004.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_005.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_008.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_009.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_011.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_012.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_013.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_014.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1055_015.hasMitigation.append("Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.")
T1091.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to block unsigned/untrusted executable files (such as .exe, .dll, or .scr) from running from USB removable drives. ")
T1216_001.hasMitigation.append("On Windows 10, update Windows Defender Application Control policies to include rules that block the older, vulnerable versions of PubPrn.")
T1569.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by PsExec from running. ")
T1569_002.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by PsExec from running. ")
T1204.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent executable files from running unless they meet a prevalence, age, or trusted list criteria and to prevent Office applications from creating potentially malicious executable content by blocking malicious code from being written to disk. Note: cloud-delivered protection must be enabled to use certain rules. ")
T1204_002.hasMitigation.append("On Windows 10, various Attack Surface Reduction (ASR) rules can be enabled to prevent the execution of potentially malicious executable files (such as those that have been downloaded and executed by Office applications/scripting interpreters/email clients or that do not meet specific prevalence, age, or trusted list criteria). Note: cloud-delivered protection must be enabled for certain rules. ")
T1047.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by WMI commands from running. Note: many legitimate tools and applications utilize WMI for command execution. ")
T1059.hasMitigation.append("Where possible, only permit execution of signed scripts.")
T1059_001.hasMitigation.append("Set PowerShell execution policy to execute only signed scripts.")
T1059_002.hasMitigation.append("Require that all AppleScript be signed by a trusted developer ID before being executed - this will prevent random AppleScript code from executing. This subjects AppleScript code to the same scrutiny as other .app files passing through Gatekeeper.")
T1554.hasMitigation.append("Ensure all application component binaries are signed by the correct application developers.")
T1543.hasMitigation.append("Enforce registration and execution of only legitimately signed service drivers where possible.")
T1543_003.hasMitigation.append("Enforce registration and execution of only legitimately signed service drivers where possible.")
T1546_006.hasMitigation.append("Enforce that all binaries be signed by the correct Apple Developer IDs.")
T1546_013.hasMitigation.append("Enforce execution of only signed PowerShell scripts. Sign profiles to avoid them from being modified.")
T1525.hasMitigation.append("Several cloud service providers support content trust models that require container images be signed by trusted sources.")
T1036.hasMitigation.append("Require signed binaries.")
T1036_001.hasMitigation.append("Require signed binaries.")
T1036_005.hasMitigation.append("Require signed binaries and images.")
T1601.hasMitigation.append("Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. ")
T1601_001.hasMitigation.append("Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. ")
T1601_002.hasMitigation.append("Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. ")
T1505.hasMitigation.append("Ensure all application component binaries are signed by the correct application developers.")
T1505_001.hasMitigation.append("Ensure all application component binaries are signed by the correct application developers.")
T1505_002.hasMitigation.append("Ensure all application component binaries are signed by the correct application developers.")
T1505_004.hasMitigation.append("Ensure IIS DLLs and binaries are signed by the correct application developers.")
T1204_003.hasMitigation.append("Utilize a trust model such as Docker Content Trust with digital signatures to ensure runtime verification of the integrity and publisher of specific image tags.")
T1547_008.hasMitigation.append("On Windows 10 and Server 2016, enable Windows Defender Credential Guard  to run lsass.exe in an isolated virtualized environment without any device drivers. ")
T1601.hasMitigation.append("Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. ")
T1601_001.hasMitigation.append("Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. ")
T1601_002.hasMitigation.append("Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. ")
T1599.hasMitigation.append("Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations.")
T1599_001.hasMitigation.append("Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. ")
T1003.hasMitigation.append("With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.  It also does not protect against all forms of credential dumping. ")
T1003_001.hasMitigation.append("With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements. It also does not protect against all forms of credential dumping.")
T1485.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1486.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for regularly taking and testing data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery. Consider enabling versioning in cloud environments to maintain backup copies of storage objects.")
T1491.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1491_001.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1491_002.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1561.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1561_001.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1561_002.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.")
T1490.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery. In cloud environments, enable versioning on storage objects where possible, and copy backups to other accounts or regions to isolate them from the original copies.")
T1005.hasMitigation.append("Data loss prevention can restrict access to sensitive data and detect sensitive data that is unencrypted.")
T1025.hasMitigation.append("Data loss prevention can restrict access to sensitive data and detect sensitive data that is unencrypted.")
T1048.hasMitigation.append("Data loss prevention can detect and block sensitive data being uploaded via web browsers.")
T1048_002.hasMitigation.append("Data loss prevention can detect and block sensitive data being uploaded via web browsers.")
T1048_003.hasMitigation.append("Data loss prevention can detect and block sensitive data being sent over unencrypted protocols.")
T1041.hasMitigation.append("Data loss prevention can detect and block sensitive data being sent over unencrypted protocols.")
T1052.hasMitigation.append("Data loss prevention can detect and block sensitive data being copied to physical mediums.")
T1052_001.hasMitigation.append("Data loss prevention can detect and block sensitive data being copied to USB devices.")
T1567.hasMitigation.append("Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers.")
T1098_002.hasMitigation.append("If email delegation is not required, disable it. In Google Workspace this can be accomplished through the Google Admin console.")
T1098_004.hasMitigation.append("Disable SSH if it is not necessary on a host or restrict SSH access for specific users/groups using /etc/ssh/sshd_config.")
T1595_003.hasMitigation.append("Remove or disable access to any systems, resources, and infrastructure that are not explicitly required to be available externally.")
T1557.hasMitigation.append("Disable legacy network protocols that may be used to intercept network traffic if applicable, especially those that are not needed within an environment.")
T1557_001.hasMitigation.append("Disable LLMNR and NetBIOS in local computer security settings or by group policy if they are not needed within an environment. ")
T1557_002.hasMitigation.append("Consider disabling updating the ARP cache on gratuitous ARP replies.")
T1547_007.hasMitigation.append("This feature can be disabled entirely with the following terminal command: defaults write -g ApplePersistence -bool no.")
T1059.hasMitigation.append("Disable or remove any unnecessary or unused shells or interpreters.")
T1059_001.hasMitigation.append("It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions.")
T1059.hasMitigation.append("Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.")
T1059_005.hasMitigation.append("Turn off or restrict access to unneeded VB components.")
T1059_007.hasMitigation.append("Turn off or restrict access to unneeded scripting components.")
T1092.hasMitigation.append("Disable Autoruns if it is unnecessary.")
T1609.hasMitigation.append("Remove unnecessary tools and software from containers.")
T1555_004.hasMitigation.append("Consider enabling the Network access: Do not allow storage of passwords and credentials for network authentication setting that will prevent network credentials from being stored by the Credential Manager.")
T1114_003.hasMitigation.append("Consider disabling external email forwarding.")
T1611.hasMitigation.append("Remove unnecessary tools and software from containers.")
T1546_002.hasMitigation.append("Use Group Policy to disable screensavers if they are unnecessary.")
T1546_014.hasMitigation.append("Consider disabling emond by removing the Launch Daemon plist file.")
T1011.hasMitigation.append("Disable WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel in local computer security settings or by group policy if it is not needed within an environment.")
T1011_001.hasMitigation.append("Disable Bluetooth in local computer security settings or by group policy if it is not needed within an environment.")
T1052.hasMitigation.append("Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if they are not required for business operations. ")
T1052_001.hasMitigation.append("Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if they are not required for business operations. ")
T1210.hasMitigation.append("Minimize available services to only those that are necessary.")
T1133.hasMitigation.append("Disable or block remotely available services that may be unnecessary.")
T1564_006.hasMitigation.append("Disable Hyper-V if not necessary within a given environment.")
T1564_007.hasMitigation.append("Turn off or restrict access to unneeded VB components.")
T1562_010.hasMitigation.append("Consider removing previous versions of tools that are unnecessary to the environment when possible.")
T1559.hasMitigation.append("Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution.  Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.")
T1559_002.hasMitigation.append("Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution.  Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.")
T1046.hasMitigation.append("Ensure that unnecessary ports and services are closed to prevent risk of discovery and potential exploitation.")
T1137.hasMitigation.append("Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.")
T1137.hasMitigation.append("Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. ")
T1137_001.hasMitigation.append("Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.")
T1137.hasMitigation.append("Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. ")
T1563.hasMitigation.append("Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary.")
T1563_001.hasMitigation.append("Ensure that agent forwarding is disabled on systems that do not explicitly require this feature to prevent misuse. ")
T1563_002.hasMitigation.append("Disable the RDP service if it is unnecessary.")
T1021.hasMitigation.append("If remote services, such as the ability to make direct connections to cloud virtual machines, are not required, disable these connection types where feasible.")
T1021_001.hasMitigation.append("Disable the RDP service if it is unnecessary.")
T1021_003.hasMitigation.append("Consider disabling DCOM through Dcomcnfg.exe.")
T1021_004.hasMitigation.append("Disable the SSH daemon on systems that do not require it. For macOS ensure Remote Login is disabled under Sharing Preferences.")
T1021_005.hasMitigation.append("Uninstall any VNC server software where not required.")
T1021_006.hasMitigation.append("Disable the WinRM service.")
T1091.hasMitigation.append("Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if it is not required for business operations. ")
T1505.hasMitigation.append("Consider disabling software components from servers when possible to prevent abuse by adversaries.")
T1505_003.hasMitigation.append("Consider disabling functions from web technologies such as PHP’s eval() that may be abused for web shells.")
T1649.hasMitigation.append("Consider disabling old/dangerous authentication protocols (e.g. NTLM), as well as unnecessary certificate features, such as potentially vulnerable AD CS web and other enrollment server roles.")
T1553_005.hasMitigation.append("Consider disabling auto-mounting of disk image files (i.e., .iso, .img, .vhd, and .vhdx). This can be achieved by modifying the Registry values related to the Windows Explorer file associations in order to disable the automatic Explorer Mount and Burn dialog for these file extensions. Note: this will not deactivate the mount functionality itself.")
T1218.hasMitigation.append("Many native binaries may not be necessary within a given environment.")
T1218_003.hasMitigation.append("CMSTP.exe may not be necessary within a given environment (unless using it for VPN connection installation).")
T1218_004.hasMitigation.append("InstallUtil may not be necessary within a given environment.")
T1218_005.hasMitigation.append("Mshta.exe may not be necessary within a given environment since its functionality is tied to older versions of Internet Explorer that have reached end of life.")
T1218_007.hasMitigation.append("Consider disabling the AlwaysInstallElevated policy to prevent elevated execution of Windows Installer packages.")
T1218_008.hasMitigation.append("Odbcconf.exe may not be necessary within a given environment.")
T1218_009.hasMitigation.append("Regsvcs and Regasm may not be necessary within a given environment.")
T1218_012.hasMitigation.append("Consider removing verclsid.exe if it is not necessary within a given environment.")
T1218_013.hasMitigation.append("Consider removing mavinject.exe if Microsoft App-V is not used within a given environment.")
T1218_014.hasMitigation.append("MMC may not be necessary within a given environment since it is primarily used by system administrators, not regular users or clients.")
T1221.hasMitigation.append("Consider disabling Microsoft Office macros/active content to prevent the execution of malicious payloads in documents , though this setting may not mitigate the Forced Authentication use for this technique.")
T1205.hasMitigation.append("Disable Wake-on-LAN if it is not needed within an environment.")
T1127.hasMitigation.append("Specific developer utilities may not be necessary within a given environment and should be removed if not used.")
T1127_001.hasMitigation.append("MSBuild.exe may not be necessary within an environment and should be removed if not being used.")
T1552_005.hasMitigation.append("Disable unnecessary metadata services and restrict or disable insecure versions of metadata services that are in use to prevent adversary access.")
T1480.hasMitigation.append("Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised. If targeted, efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior if compromised.")
T1480_001.hasMitigation.append("Environmental Keying likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised. If targeted, efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior if compromised.")
T1557.hasMitigation.append("Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.")
T1557_002.hasMitigation.append("Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.")
T1119.hasMitigation.append("Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through Brute Force techniques.")
T1020_001.hasMitigation.append("Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.")
T1530.hasMitigation.append("Encrypt data stored at rest in cloud storage. Managed encryption keys can be rotated by most providers. At a minimum, ensure an incident response plan to storage breach includes rotating the keys and test for impact on client applications.")
T1602.hasMitigation.append("Configure SNMPv3 to use the highest level of security (authPriv) available.")
T1602_001.hasMitigation.append("Configure SNMPv3 to use the highest level of security (authPriv) available.")
T1602_002.hasMitigation.append("Configure SNMPv3 to use the highest level of security (authPriv) available.")
T1565.hasMitigation.append("Consider encrypting important information to reduce an adversary’s ability to perform tailored data modifications.")
T1565_001.hasMitigation.append("Consider encrypting important information to reduce an adversary’s ability to perform tailored data modifications.")
T1565_002.hasMitigation.append("Encrypt all important data flows to reduce the impact of tailored modifications on data in transit.")
T1114.hasMitigation.append("Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.")
T1114_001.hasMitigation.append("Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.")
T1114_002.hasMitigation.append("Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.")
T1114_003.hasMitigation.append("Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.")
T1070.hasMitigation.append("Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.")
T1070_001.hasMitigation.append("Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.")
T1070_002.hasMitigation.append("Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.")
T1040.hasMitigation.append("Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.")
T1003.hasMitigation.append("Ensure Domain Controller backups are properly secured.")
T1003_003.hasMitigation.append("Ensure Domain Controller backups are properly secured.")
T1649.hasMitigation.append("Ensure certificates as well as associated private keys are appropriately secured. Consider utilizing additional hardware credential protections such as trusted platform modules (TPM) or hardware security modules (HSM). Enforce HTTPS and enable Extended Protection forAuthentication.")
T1558.hasMitigation.append("Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.")
T1558_002.hasMitigation.append("Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.")
T1558_003.hasMitigation.append("Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.")
T1558_004.hasMitigation.append("Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.")
T1552.hasMitigation.append("When possible, store keys on separate cryptographic hardware instead of on the local system.")
T1552_004.hasMitigation.append("When possible, store keys on separate cryptographic hardware instead of on the local system. For example, on Windows systems use a TPM to secure keys and other sensitive credential material.")
T1550_001.hasMitigation.append("File encryption should be enforced across email communications containing sensitive information that may be obtained through access to email services.")
T1562_003.hasMitigation.append("Prevent users from changing the HISTCONTROL, HISTFILE, and HISTFILESIZE environment variables. ")
T1070_003.hasMitigation.append("Making the environment variables associated with command history read only may ensure that the history is preserved.")
T1548.hasMitigation.append("System settings can prevent applications from running that haven't been downloaded from legitimate repositories which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.")
T1548_004.hasMitigation.append("System settings can prevent applications from running that haven't been downloaded through the Apple Store which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.")
T1547_004.hasMitigation.append("Identify and block potentially malicious software that may be executed through the Winlogon helper process by using application control  tools like AppLockerthat are capable of auditing and/or blocking unknown DLLs.")
T1547_006.hasMitigation.append("Application control and software restriction tools, such as SELinux, KSPP, grsecurity MODHARDEN, and Linux kernel tuning can aid in restricting kernel module loading.")
T1176.hasMitigation.append("Set a browser extension allow or deny list as appropriate for your security policy. ")
T1059.hasMitigation.append("Use application control where appropriate. For example, PowerShell Constrained Language mode can be used to restrict access to sensitive or otherwise dangerous language elements such as those used to execute arbitrary Windows APIs or files (e.g., Add-Type).")
T1059_001.hasMitigation.append("Use application control where appropriate. PowerShell Constrained Language mode can be used to restrict access to sensitive or otherwise dangerous language elements such as those used to execute arbitrary Windows APIs or files (e.g., Add-Type).")
T1059_002.hasMitigation.append("Use application control where appropriate.")
T1059_003.hasMitigation.append("Use application control where appropriate.")
T1059_004.hasMitigation.append("Use application control where appropriate.")
T1059_005.hasMitigation.append("Use application control where appropriate. VBA macros obtained from the Internet, based on the file's Mark of the Web (MOTW) attribute, may be blocked from executing in Office applications (ex: Access, Excel, PowerPoint, Visio, and Word) by default starting in Windows Version 2203.")
T1059_006.hasMitigation.append("Denylist Python where not required.")
T1059_007.hasMitigation.append("Denylist scripting where appropriate.")
T1059_008.hasMitigation.append("TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. ")
T1059_009.hasMitigation.append("Use application control where appropriate to block use of PowerShell CmdLets or other host based resources to access cloud API resources.")
T1609.hasMitigation.append("Use read-only containers, read-only file systems, and minimal images when possible to prevent the execution of commands. Where possible, also consider using application control and software restriction tools (such as those provided by SELinux) to restrict access to files, processes, and system calls in containers.")
T1611.hasMitigation.append("Use read-only containers, read-only file systems, and minimal images when possible to prevent the running of commands. Where possible, also consider using application control and software restriction tools (such as those provided by SELinux) to restrict access to files, processes, and system calls in containers.")
T1546_002.hasMitigation.append("Block .scr files from being executed from non-standard locations.")
T1546_006.hasMitigation.append("Allow applications via known hashes.")
T1546_008.hasMitigation.append("Adversaries can replace accessibility features binaries with alternate binaries to execute this technique. Identify and block potentially malicious software executed through accessibility features functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1546_009.hasMitigation.append("Adversaries install new AppCertDLL binaries to execute this technique. Identify and block potentially malicious software executed through AppCertDLLs functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1546_010.hasMitigation.append("Adversaries can install new AppInit DLLs binaries to execute this technique. Identify and block potentially malicious software executed through AppInit DLLs functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1068.hasMitigation.append("Consider blocking the execution of known vulnerable drivers that adversaries may exploit to execute code in kernel mode. Validate driver block rules in audit mode to ensure stability prior to production deployment.")
T1564_003.hasMitigation.append("Limit or restrict program execution using anti-virus software. On MacOS, allowlist programs that are allowed to have the plist tag. All other programs should be considered suspicious.")
T1564_006.hasMitigation.append("Use application control to mitigate installation and use of unapproved virtualization software.")
T1574.hasMitigation.append("Adversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.")
T1574_001.hasMitigation.append("Adversaries may use new DLLs to execute this technique. Identify and block potentially malicious software executed through search order hijacking by using application control solutions capable of blocking DLLs loaded by legitimate software.")
T1574_006.hasMitigation.append("Adversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.")
T1574_007.hasMitigation.append("Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.")
T1574_008.hasMitigation.append("Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.")
T1574_009.hasMitigation.append("Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.")
T1574_012.hasMitigation.append("Identify and block potentially malicious unmanaged COR_PROFILER profiling DLLs by using application control solutions like AppLocker that are capable of auditing and/or blocking unapproved DLLs.")
T1562.hasMitigation.append("Use application control where appropriate, especially regarding the execution of tools outside of the organization's security policies (such as rootkit removal tools) that have been abused to impair system defenses. Ensure that only approved security applications are used and running on enterprise systems.")
T1562_001.hasMitigation.append("Use application control where appropriate, especially regarding the execution of tools outside of the organization's security policies (such as rootkit removal tools) that have been abused to impair system defenses. Ensure that only approved security applications are used and running on enterprise systems.")
T1562_011.hasMitigation.append("Use application controls to mitigate installation and use of payloads that may be utilized to spoof security alerting.")
T1036.hasMitigation.append("Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed.")
T1036_005.hasMitigation.append("Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed.")
T1036_008.hasMitigation.append("Ensure that input sanitization is performed and that files are validated properly before execution; furthermore, implement a strict allow list to ensure that only authorized file types are processed. Restrict and/or block execution of files where headers and extensions do not match.")
T1106.hasMitigation.append("Identify and block potentially malicious software executed that may be executed through this technique by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1219.hasMitigation.append("Use application control to mitigate installation and use of unapproved software that can be used for remote access.")
T1505_004.hasMitigation.append("Restrict unallowed ISAPI extensions and filters from running by specifying a list of ISAPI extensions and filters that can run on IIS.")
T1129.hasMitigation.append("Identify and block potentially malicious software executed through this technique by using application control tools capable of preventing unknown modules from being loaded.")
T1553.hasMitigation.append("System settings can prevent applications from running that haven't been downloaded through the Apple Store (or other legitimate repositories) which can help mitigate some of these issues. Also enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious content.")
T1553_001.hasMitigation.append("System settings can prevent applications from running that haven't been downloaded through the Apple Store which can help mitigate some of these issues.")
T1553_003.hasMitigation.append("Enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.")
T1553_005.hasMitigation.append("Consider blocking container file types at web and/or email gateways. Consider unregistering container file extensions in Windows File Explorer.")
T1218.hasMitigation.append("Consider using application control to prevent execution of binaries that are susceptible to abuse and not required for a given system or network.")
T1218_001.hasMitigation.append("Consider using application control to prevent execution of hh.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_002.hasMitigation.append("Identify and block potentially malicious and unknown .cpl files by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1218_003.hasMitigation.append("Consider using application control configured to block execution of CMSTP.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_004.hasMitigation.append("Use application control configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_005.hasMitigation.append("Use application control configured to block execution of mshta.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the mshta.exe application and to prevent abuse.")
T1218_008.hasMitigation.append("Use application control configured to block execution of Odbcconf.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_009.hasMitigation.append("Block execution of Regsvcs.exe and Regasm.exe if they are not required for a given system or network to prevent potential misuse by adversaries.")
T1218_012.hasMitigation.append("Use application control configured to block execution of verclsid.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_013.hasMitigation.append("Use application control configured to block execution of mavinject.exe if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1218_014.hasMitigation.append("Use application control configured to block execution of MMC if it is not required for a given system or network to prevent potential misuse by adversaries.")
T1216.hasMitigation.append("Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries.")
T1216_001.hasMitigation.append("Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries.")
T1080.hasMitigation.append("Identify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using application control  tools, like AppLocker,or Software Restriction Policies  where appropriate. ")
T1127.hasMitigation.append("Certain developer utilities should be blocked or restricted if not required.")
T1127_001.hasMitigation.append("Use application control configured to block execution of msbuild.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the msbuild.exe application and to prevent abuse.")
T1204.hasMitigation.append("Application control may be able to prevent the running of executables masquerading as other files.")
T1204_002.hasMitigation.append("Application control may be able to prevent the running of executables masquerading as other files.")
T1047.hasMitigation.append("Use application control configured to block execution of wmic.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the wmic.exe application and to prevent abuse.")
T1220.hasMitigation.append("If msxsl.exe is unnecessary, then block its execution to prevent abuse by adversaries.")
T1189.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility.")
T1190.hasMitigation.append("Web Application Firewalls may be used to limit exposure of applications to prevent exploit traffic from reaching the application.")
T1203.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility.")
T1212.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.")
T1211.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.")
T1068.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation.")
T1210.hasMitigation.append("Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for all software or services targeted.")
T1218.hasMitigation.append("Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using using trusted binaries to bypass application control.")
T1218_010.hasMitigation.append("Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass application control.  Identify and block potentially malicious software executed through regsvr32 functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. ")
T1218_011.hasMitigation.append("Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass application control.")
T1080.hasMitigation.append("Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).")
T1557.hasMitigation.append("Use network appliances and host-based security software to block network traffic that is not necessary within the environment, such as legacy protocols that may be leveraged for AiTM conditions.")
T1557_001.hasMitigation.append("Use host-based security software to block LLMNR/NetBIOS traffic. Enabling SMB Signing can stop NTLMv2 relay attacks.")
T1557_002.hasMitigation.append("Consider enabling DHCP Snooping and Dynamic ARP Inspection on switches to create mappings between IP addresses requested via DHCP and ARP tables and tie the values to a port on the switch that may block bogus traffic.")
T1557_003.hasMitigation.append("Consider filtering DHCP traffic on ports 67 and 68 to/from unknown or untrusted DHCP servers. Additionally, port security may also be enabled on layer switches. Furthermore, consider enabling DHCP snooping on layer 2 switches as it will prevent DHCP spoofing attacks and starvation attacks. Consider tracking available IP addresses through a script or a tool.")
T1557.hasMitigation.append("Additionally, block DHCPv6 traffic and incoming router advertisements, especially if IPv6 is not commonly used in the network.")
T1071_004.hasMitigation.append("Consider filtering DNS requests to unknown, untrusted, or known bad domains and resources. Resolving DNS requests with on-premise/proxy servers may also disrupt adversary attempts to conceal data within DNS packets.")
T1197.hasMitigation.append("Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.")
T1530.hasMitigation.append("Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP allowlisting along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.")
T1602.hasMitigation.append("Apply extended ACLs to block unauthorized protocols outside the trusted network.")
T1602_001.hasMitigation.append("Apply extended ACLs to block unauthorized protocols outside the trusted network.")
T1602_002.hasMitigation.append("Apply extended ACLs to block unauthorized protocols outside the trusted network.")
T1499.hasMitigation.append("Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies.")
T1499_001.hasMitigation.append("Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies.")
T1499_002.hasMitigation.append("Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1499_003.hasMitigation.append("Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1499_004.hasMitigation.append("Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1048.hasMitigation.append("Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network. Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP allowlisting along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.")
T1048_001.hasMitigation.append("Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.")
T1048_002.hasMitigation.append("Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.")
T1048_003.hasMitigation.append("Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.")
T1187.hasMitigation.append("Block SMB traffic from exiting an enterprise network with egress filtering or by blocking TCP ports 139, 445 and UDP port 137. Filter or block WebDAV protocol traffic from exiting the network. If access to external resources over SMB and WebDAV is necessary, then traffic should be tightly limited with allowlisting.  ")
T1570.hasMitigation.append("Consider using the host firewall to restrict file sharing communications such as SMB. ")
T1599.hasMitigation.append("Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised. Continue to monitor for additional activity and to ensure that the blocks are indeed effective.")
T1599_001.hasMitigation.append("Block Traffic Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised. Continue to monitor for additional activity and to ensure that the blocks are indeed effective.")
T1498.hasMitigation.append("When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.")
T1498.hasMitigation.append("Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1498.hasMitigation.append("As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.")
T1498_001.hasMitigation.append("When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.")
T1498.hasMitigation.append("Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1498.hasMitigation.append("As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.")
T1498_002.hasMitigation.append("When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.")
T1498.hasMitigation.append("Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.")
T1498.hasMitigation.append("As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.")
T1095.hasMitigation.append("Filter network traffic to prevent use of protocols across the network boundary that are unnecessary.")
T1572.hasMitigation.append("Consider filtering network traffic to untrusted or known bad domains and resources.")
T1090.hasMitigation.append("Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network allow and block lists. It should be noted that this kind of blocking may be circumvented by other techniques like Domain Fronting.")
T1090_003.hasMitigation.append("Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network allow and block lists. It should be noted that this kind of blocking may be circumvented by other techniques like Domain Fronting.")
T1219.hasMitigation.append("Properly configure firewalls, application firewalls, and proxies to limit outgoing traffic to sites and services used by remote access software.")
T1021_002.hasMitigation.append("Consider using the host firewall to restrict file sharing communications such as SMB. ")
T1021_005.hasMitigation.append("VNC defaults to TCP ports 5900 for the server, 5800 for browser access, and 5500 for a viewer in listening mode. Filtering or blocking these ports will inhibit VNC traffic utilizing default ports.")
T1218_012.hasMitigation.append("Consider modifying host firewall rules to prevent egress traffic from verclsid.exe.")
T1205.hasMitigation.append("Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.")
T1205_001.hasMitigation.append("Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.")
T1205_002.hasMitigation.append("Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.")
T1537.hasMitigation.append("Implement network-based filtering restrictions to prohibit data transfers to untrusted VPCs.")
T1552.hasMitigation.append("Limit access to the Instance Metadata API. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.")
T1552_005.hasMitigation.append("Limit access to the Instance Metadata API. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.")
T1557.hasMitigation.append("Limit access to network infrastructure and resources that can be used to reshape traffic or otherwise produce AiTM conditions.")
T1557_002.hasMitigation.append("Create static ARP entries for networked devices. Implementing static ARP entries may be infeasible for large networks.")
T1612.hasMitigation.append("Limit communications with the container service to local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API on port 2375. Instead, communicate with the Docker API over TLS on port 2376.")
T1609.hasMitigation.append("Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.")
T1613.hasMitigation.append("Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.")
T1610.hasMitigation.append("Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API, Kubernetes API Server, and container orchestration web applications. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.")
T1546_008.hasMitigation.append("If possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.")
T1133.hasMitigation.append("Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems.")
T1200.hasMitigation.append("Establish network access control policies, such as using device certificates and the 802.1x standard.  Restrict use of DHCP to registered devices to prevent unregistered devices from communicating with trusted systems.")
T1542_005.hasMitigation.append("Restrict use of protocols without encryption or authentication mechanisms. Limit access to administrative and management interfaces from untrusted network sources.")
T1563_002.hasMitigation.append("Use remote desktop gateways.")
T1021_001.hasMitigation.append("Use remote desktop gateways.")
T1021_002.hasMitigation.append("Consider disabling Windows administrative shares.")
T1552.hasMitigation.append("Limit network access to sensitive services, such as the Instance Metadata API.")
T1552_005.hasMitigation.append("Limit access to the Instance Metadata API using a host-based firewall such as iptables.")
T1552_007.hasMitigation.append("Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.")
T1052.hasMitigation.append("Limit the use of USB devices and removable media within a network.")
T1052_001.hasMitigation.append("Limit the use of USB devices and removable media within a network.")
T1200.hasMitigation.append("Block unknown devices and accessories by endpoint security configuration and monitoring agent.")
T1091.hasMitigation.append("Limit the use of USB devices and removable media within a network.")
T1547_013.hasMitigation.append("Restrict software installation to trusted repositories only and be cautious of orphaned software packages.")
T1176.hasMitigation.append("Only install browser extensions from trusted sources that can be verified. Browser extensions for some browsers can be controlled through Group Policy. Change settings to prevent the browser from installing extensions without sufficient permissions.")
T1059_006.hasMitigation.append("Prevent users from installing Python where not required.")
T1543.hasMitigation.append("Restrict software installation to trusted repositories only and be cautious of orphaned software packages.")
T1543_002.hasMitigation.append("Restrict software installation to trusted repositories only and be cautious of orphaned software packages.")
T1021_005.hasMitigation.append("Restrict software installation to user groups that require it. A VNC server must be manually installed by the user or adversary.")
T1072.hasMitigation.append("Restrict the use of third-party software suites installed within an enterprise network.")
T1098.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1098_001.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the CreateKeyPair and ImportKeyPair API calls through IAM policies.")
T1098_002.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1098_003.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1098_005.hasMitigation.append("Require multi-factor authentication to register devices in Azure AD. Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts. When first enrolling MFA, use conditional access policies to restrict device enrollment to trusted locations or devices, and consider using temporary access passes as an initial MFA solution to enroll a device.")
T1110.hasMitigation.append("Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.")
T1110_001.hasMitigation.append("Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.")
T1110_002.hasMitigation.append("Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.")
T1110_003.hasMitigation.append("Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.")
T1110_004.hasMitigation.append("Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.")
T1136.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1136_001.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1136_002.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1136_003.hasMitigation.append("Use multi-factor authentication for user and privileged accounts.")
T1530.hasMitigation.append("Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.")
T1213_003.hasMitigation.append("Use multi-factor authentication for logons to code repositories.")
T1114.hasMitigation.append("Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.")
T1114_002.hasMitigation.append("Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.")
T1133.hasMitigation.append("Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of Multi-Factor Authentication Interception techniques for some two-factor authentication implementations.")
T1556.hasMitigation.append("Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.")
T1556_001.hasMitigation.append("Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.")
T1556_003.hasMitigation.append("Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information.")
T1556_004.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control. ")
T1556_006.hasMitigation.append("Ensure that MFA and MFA policies and requirements are properly implemented for existing and deactivated or dormant accounts and devices. If possible, consider configuring MFA solutions to fail closed rather than grant access in case of serious errors.")
T1556_007.hasMitigation.append("Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.")
T1601.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.")
T1601_001.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.")
T1601_002.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.")
T1621.hasMitigation.append("Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.")
T1599.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.")
T1599_001.hasMitigation.append("Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control. ")
T1040.hasMitigation.append("Use multi-factor authentication wherever possible.")
T1021.hasMitigation.append("Use multi-factor authentication on remote service logons where possible.")
T1021_001.hasMitigation.append("Use multi-factor authentication for remote logins.")
T1021_004.hasMitigation.append("Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.")
T1021_007.hasMitigation.append("Use multi-factor authentication on cloud services whenever possible.")
T1072.hasMitigation.append("Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.")
T1539.hasMitigation.append("A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.")
T1199.hasMitigation.append("Require MFA for all delegated administrator accounts.")
T1078_002.hasMitigation.append("Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.")
T1078_004.hasMitigation.append("Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.")
T1557.hasMitigation.append("Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.")
T1557_001.hasMitigation.append("Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.")
T1557_002.hasMitigation.append("Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.")
T1557_003.hasMitigation.append("Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.")
T1071.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1071_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1071_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1071_003.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1071_004.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1132.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. ")
T1132_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.")
T1132_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.")
T1602.hasMitigation.append("Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.")
T1602_001.hasMitigation.append("Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.")
T1602_002.hasMitigation.append("Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources. Create signatures to detect Smart Install (SMI) usage from sources other than trusted director.")
T1001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.")
T1001_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.")
T1001_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.")
T1001_003.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.")
T1030.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.")
T1568.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Malware researchers can reverse engineer malware variants that use dynamic resolution and determine future C2 infrastructure that the malware will attempt to contact, but this is a time and resource intensive effort.")
T1568_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Malware researchers can reverse engineer malware variants that use DGAs and determine future domains that the malware will attempt to contact, but this is a time and resource intensive effort. Malware is also increasingly incorporating seed values that can be unique for each instance, which would then need to be determined to extract future generated domains. In some cases, the seed that a particular sample uses can be extracted from DNS traffic. Even so, there can be thousands of possible domains generated per day; this makes it impractical for defenders to preemptively register all possible C2 domains due to the cost.")
T1573.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1573_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1573_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1048.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.")
T1048_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.")
T1048_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.")
T1048_003.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.")
T1041.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools. ")
T1008.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. ")
T1105.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.")
T1570.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. ")
T1104.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1046.hasMitigation.append("Use network intrusion detection/prevention systems to detect and prevent remote service scans.")
T1095.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1571.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1566.hasMitigation.append("Network intrusion prevention systems and systems designed to scan and remove malicious email attachments or links can be used to block activity.")
T1566_001.hasMitigation.append("Network intrusion prevention systems and systems designed to scan and remove malicious email attachments can be used to block activity.")
T1542_004.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations.")
T1542_005.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations.")
T1572.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1090.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. ")
T1090_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.")
T1090_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.")
T1219.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures may be able to prevent traffic to remote access services.")
T1029.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools. ")
T1221.hasMitigation.append("Network/Host intrusion prevention systems, antivirus, and detonation chambers can be employed to prevent documents from fetching and/or executing malicious payloads.")
T1204.hasMitigation.append("If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity.")
T1204_001.hasMitigation.append("If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity.")
T1204_003.hasMitigation.append("Network prevention intrusion systems and systems designed to scan and remove malicious downloads can be used to block activity.")
T1102.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1102_001.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1102_002.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1102_003.hasMitigation.append("Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.")
T1098.hasMitigation.append("Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.")
T1098_001.hasMitigation.append("Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.")
T1557.hasMitigation.append("Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.")
T1557_001.hasMitigation.append("Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.")
T1612.hasMitigation.append("Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.")
T1613.hasMitigation.append("Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.")
T1136.hasMitigation.append("Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.")
T1136_002.hasMitigation.append("Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.")
T1136_003.hasMitigation.append("Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.")
T1602.hasMitigation.append("Segregate SNMP traffic on a separate management network.")
T1602_001.hasMitigation.append("Segregate SNMP traffic on a separate management network.")
T1602_002.hasMitigation.append("Segregate SNMP traffic on a separate management network.")
T1565.hasMitigation.append("Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.")
T1565_003.hasMitigation.append("Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.")
T1610.hasMitigation.append("Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.")
T1482.hasMitigation.append("Employ network segmentation for sensitive domains..")
T1048.hasMitigation.append("Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.")
T1048_001.hasMitigation.append("Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.")
T1048_002.hasMitigation.append("Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.")
T1048_003.hasMitigation.append("Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.")
T1190.hasMitigation.append("Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure.")
T1210.hasMitigation.append("Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.")
T1133.hasMitigation.append("Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.")
T1046.hasMitigation.append("Ensure proper network segmentation is followed to protect critical servers and devices.")
T1040.hasMitigation.append("Deny direct access of broadcasts and multicast sniffing, and prevent attacks such as LLMNR/NBT-NS Poisoning and SMB Relay")
T1095.hasMitigation.append("Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems. Also ensure hosts are only provisioned to communicate over authorized interfaces.")
T1571.hasMitigation.append("Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.")
T1563.hasMitigation.append("Enable firewall rules to block unnecessary traffic between network security zones within a network.")
T1563_002.hasMitigation.append("Enable firewall rules to block RDP traffic between network security zones within a network.")
T1021_001.hasMitigation.append("Do not leave RDP accessible from the internet. Enable firewall rules to block RDP traffic between network security zones within a network.")
T1021_003.hasMitigation.append("Enable Windows firewall, which prevents DCOM instantiation by default.")
T1021_006.hasMitigation.append("If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.")
T1489.hasMitigation.append("Operate intrusion detection, analysis, and response systems on a separate network from the production environment to lessen the chances that an adversary can see and interfere with critical response functions.")
T1072.hasMitigation.append("Ensure proper system isolation for critical network systems through use of firewalls.")
T1199.hasMitigation.append("Network segmentation can be used to isolate infrastructure components that do not require broad network access.")
T1552_007.hasMitigation.append("Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.")
T1548.hasMitigation.append("Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised. Additionally, the number of programs with setuid or setgid bits set should be minimized across a system. Ensuring that the sudo tty_tickets setting is enabled will prevent this leakage across tty sessions.")
T1548_001.hasMitigation.append("Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised. Additionally, the number of programs with setuid or setgid bits set should be minimized across a system.")
T1548_003.hasMitigation.append("Ensuring that the tty_tickets setting is enabled will prevent this leakage across tty sessions.")
T1087.hasMitigation.append("Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration > [Policies] > Administrative Templates > Windows Components > Credential User Interface: E numerate administrator accounts on elevation. ")
T1087_001.hasMitigation.append("Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located at HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration > [Policies] > Administrative Templates > Windows Components > Credential User Interface: Enumerate administrator accounts on elevation.")
T1087_002.hasMitigation.append("Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located at HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration > [Policies] > Administrative Templates > Windows Components > Credential User Interface: Enumerate administrator accounts on elevation.")
T1098.hasMitigation.append("Protect domain controllers by ensuring proper security configuration for critical servers to limit access by potentially unnecessary protocols and services, such as SMB file sharing.")
T1197.hasMitigation.append("Consider reducing the default BITS job lifetime in Group Policy or by editing the JobInactivityTimeout and MaxDownloadTime Registry values in HKEY_LOCAL_MACHINE Software Policies Microsoft Windows BITS.")
T1092.hasMitigation.append("Disallow or restrict removable media at an organizational policy level if they are not required for business operations.")
T1136.hasMitigation.append("Protect domain controllers by ensuring proper security configuration for critical servers.")
T1136_002.hasMitigation.append("Protect domain controllers by ensuring proper security configuration for critical servers.")
T1543.hasMitigation.append("Ensure that Driver Signature Enforcement is enabled to restrict unsigned drivers from being installed.")
T1543_003.hasMitigation.append("Ensure that Driver Signature Enforcement is enabled to restrict unsigned drivers from being installed.")
T1546_008.hasMitigation.append("To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.")
T1011.hasMitigation.append("Prevent the creation of new network adapters where possible.")
T1011_001.hasMitigation.append("Prevent the creation of new network adapters where possible.")
T1564_002.hasMitigation.append("If the computer is domain joined, then group policy can help restrict the ability to create or hide users. Similarly, preventing the modification of the /Library/Preferences/com.apple.loginwindow Hide500Users value will force all users to be visible.")
T1574_006.hasMitigation.append("When System Integrity Protection (SIP) is enabled in macOS, the aforementioned environment variables are ignored when executing protected binaries. Third-party applications can also leverage Apple’s Hardened Runtime, ensuring these environment variables are subject to imposed restrictions. Admins can add restrictions to applications by setting the setuid and/or setgid bits, use entitlements, or have a __RESTRICT segment in the Mach-O binary.")
T1562_003.hasMitigation.append("Make sure that the HISTCONTROL environment variable is set to ignoredups instead of ignoreboth or ignorespace.")
T1490.hasMitigation.append("Consider technical controls to prevent the disabling of services or deletion of files involved in system recovery. Additionally, ensure that WinRE is enabled using the following command: reagentc /enable.")
T1036_007.hasMitigation.append("Disable the default to hide file extensions for known file types in Windows OS.")
T1556.hasMitigation.append("Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages.")
T1556.hasMitigation.append("Starting in Windows 11 22H2, the EnableMPRNotifications policy can be disabled through Group Policy or through a configuration service provider to prevent Winlogon from sending credentials to network providers.")
T1556_002.hasMitigation.append("Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages.")
T1556_008.hasMitigation.append("Starting in Windows 11 22H2, the EnableMPRNotifications policy can be disabled through Group Policy or through a configuration service provider to prevent Winlogon from sending credentials to network providers.")
T1135.hasMitigation.append("Enable Windows Group Policy Do Not Allow Anonymous Enumeration of SAM Accounts and Shares security setting to limit users who can enumerate network shares.")
T1003.hasMitigation.append("Consider disabling or restricting NTLM. Consider disabling WDigest authentication.")
T1003_001.hasMitigation.append("Consider disabling or restricting NTLM. Consider disabling WDigest authentication.")
T1003_002.hasMitigation.append("Consider disabling or restricting NTLM.")
T1003_005.hasMitigation.append("Consider limiting the number of cached credentials (HKLM SOFTWARE Microsoft Windows NT Current Version Winlogon cachedlogonscountvalue)")
T1542_005.hasMitigation.append("Follow vendor device hardening best practices to disable unnecessary and unused features and services, avoid using default configurations and passwords, and introduce logging and auditing for detection.")
T1563_002.hasMitigation.append("Change GPOs to define shorter timeouts sessions and maximum amount of time any single session can be active. Change GPOs to specify the maximum amount of time that a disconnected session stays active on the RD session host server.")
T1021_001.hasMitigation.append("Change GPOs to define shorter timeouts sessions and maximum amount of time any single session can be active. Change GPOs to specify the maximum amount of time that a disconnected session stays active on the RD session host server.")
T1053.hasMitigation.append("Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. ")
T1053_002.hasMitigation.append("Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. ")
T1053_005.hasMitigation.append("Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. ")
T1553.hasMitigation.append("Windows Group Policy can be used to manage root certificates and the Flags value of HKLM SOFTWARE Policies Microsoft SystemCertificates Root ProtectedRoots can be set to 1 to prevent non-administrator users from making further root installations into their own HKCU certificate store. ")
T1553_004.hasMitigation.append("Windows Group Policy can be used to manage root certificates and the Flags value of HKLM SOFTWARE Policies Microsoft SystemCertificates Root ProtectedRoots can be set to 1 to prevent non-administrator users from making further root installations into their own HKCU certificate store. ")
T1552.hasMitigation.append("There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead.")
T1552_003.hasMitigation.append("There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead.")
T1110.hasMitigation.append("Refer to NIST guidelines when creating password policies.")
T1110_001.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1110_002.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1110_003.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1110_004.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1555.hasMitigation.append("The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.")
T1555.hasMitigation.append("Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.")
T1555_001.hasMitigation.append("The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.")
T1555_003.hasMitigation.append("Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.")
T1555_005.hasMitigation.append("Refer to NIST guidelines when creating password policies for master passwords.")
T1187.hasMitigation.append("Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.")
T1556.hasMitigation.append("Ensure that AllowReversiblePasswordEncryption property is set to disabled unless there are application requirements.")
T1556_005.hasMitigation.append("Ensure that AllowReversiblePasswordEncryption property is set to disabled unless there are application requirements.")
T1601.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1601_001.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1601_002.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1599.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1599_001.hasMitigation.append("Refer to NIST guidelines when creating password policies. ")
T1003.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_001.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_002.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_003.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_004.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_005.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_006.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1003_007.hasMitigation.append("Ensure that root accounts have complex, unique passwords across all systems on the network.")
T1003_008.hasMitigation.append("Ensure that root accounts have complex, unique passwords across all systems on the network.")
T1201.hasMitigation.append("Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages. ")
T1563_001.hasMitigation.append("Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.")
T1021_002.hasMitigation.append("Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.")
T1072.hasMitigation.append("Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.")
T1558.hasMitigation.append("Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.")
T1558_002.hasMitigation.append("Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.")
T1558_003.hasMitigation.append("Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.")
T1558_004.hasMitigation.append("Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. ")
T1537.hasMitigation.append("Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.")
T1552.hasMitigation.append("Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.")
T1552_001.hasMitigation.append("Establish an organizational policy that prohibits password storage in files.")
T1552_002.hasMitigation.append("Do not store credentials within the Registry.")
T1552_004.hasMitigation.append("Use strong passphrases for private keys to make cracking difficult.")
T1550_003.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords.")
T1078.hasMitigation.append("Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. When possible, applications that use SSH keys should be updated periodically and properly secured.")
T1078.hasMitigation.append("Policies should minimize (if not eliminate) reuse of passwords between different user accounts, especially employees using the same credentials for personal accounts that may not be defended by enterprise security resources.")
T1078_001.hasMitigation.append("Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. ")
T1078_003.hasMitigation.append("Ensure that local administrator accounts have complex, unique passwords across all systems on the network.")
T1078_004.hasMitigation.append("Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.")
T1650.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_001.hasMitigation.append("Organizations may intentionally register similar domains to their own to deter adversaries from creating typosquatting domains. Other facets of this technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_006.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_007.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1583_008.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should be focused on initial access activities, such as drive by compromise where ad blocking adblockers can help prevent malicious code from executing.")
T1595.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1595_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1595_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1595_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1586.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1586_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1586_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1586_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_006.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1584_007.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1587.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1587_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1587_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1587_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1587_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1585.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1585_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1585_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1585_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1592.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1592_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1592_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1592_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1592_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1589.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1589_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1589_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1589_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_002.hasMitigation.append("This cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1590_006.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1591.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1591_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1591_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1591_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1591_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1588.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1588_006.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1597.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1597_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1597_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1596_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1593_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1593_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1594.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.")
T1608.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_001.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_002.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_003.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_004.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_005.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1608_006.hasMitigation.append("This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.")
T1548.hasMitigation.append("Remove users from the local administrator group on systems.")
T1548.hasMitigation.append("By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.")
T1548_002.hasMitigation.append("Remove users from the local administrator group on systems.")
T1548_003.hasMitigation.append("By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.")
T1134.hasMitigation.append("Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.")
T1134_001.hasMitigation.append("Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.")
T1134.hasMitigation.append("Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command runas.")
T1134_002.hasMitigation.append("Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.")
T1134.hasMitigation.append("Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command runas.")
T1134_003.hasMitigation.append("Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Replace a process level token.")
T1134.hasMitigation.append("Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command runas.")
T1098.hasMitigation.append("Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1098_001.hasMitigation.append("Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1098_002.hasMitigation.append("Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1098_003.hasMitigation.append("Ensure that all accounts use the least privileges they require. In Azure AD environments, consider using Privileged Identity Management (PIM) to define roles that require two or more approvals before assignment to users.")
T1547_006.hasMitigation.append("Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.")
T1612.hasMitigation.append("Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.")
T1651.hasMitigation.append("Limit the number of cloud accounts with permissions to remotely execute commands on virtual machines, and ensure that these are not used for day-to-day operations. In Azure, limit the number of accounts with the roles Azure Virtual Machine Contributer and above, and consider using temporary Just-in-Time (JIT) roles to avoid permanently assigning privileged access to virtual machines. In Azure AD, limit the number of Global and Intune administrators to only those required. In AWS, limit users with permission to execute the ssm:SendCommand action, and use tags to restrict the number of machines those users can execute commands on.")
T1059.hasMitigation.append("When PowerShell is necessary, consider restricting PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.")
T1059.hasMitigation.append("PowerShell JEA (Just Enough Administration) may also be used to sandbox administration and limit what commands admins/users can execute through remote PowerShell sessions.")
T1059_001.hasMitigation.append("When PowerShell is necessary, consider restricting PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.")
T1059.hasMitigation.append("PowerShell JEA (Just Enough Administration) may also be used to sandbox administration and limit what commands admins/users can execute through remote PowerShell sessions.")
T1059_008.hasMitigation.append("Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization ")
T1059_009.hasMitigation.append("Use of proper Identity and Access Management (IAM) with Role Based Access Control (RBAC) policies to limit actions administrators can perform and provide a history of administrative actions to detect unauthorized use and abuse.")
T1609.hasMitigation.append("Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers and using the NodeRestriction admission controller to deny the kublet access to nodes and pods outside of the node it belongs to. ")
T1136.hasMitigation.append("Limit the number of accounts with permissions to create other accounts. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1136_001.hasMitigation.append("Limit the number of accounts permitted to create other accounts. Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.")
T1136_002.hasMitigation.append("Limit the number of accounts with permissions to create other accounts. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1136_003.hasMitigation.append("Limit the number of accounts with permissions to create other accounts. Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1543_002.hasMitigation.append("The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges.")
T1555.hasMitigation.append("Limit the number of accounts and services with permission to query information from password stores to only those required. Ensure that accounts and services with permissions to query password stores only have access to the secrets they require.")
T1484.hasMitigation.append("Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.")
T1484_002.hasMitigation.append("Use the principal of least privilege and protect administrative access to domain trusts.")
T1611.hasMitigation.append("Ensure containers are not running as root by default and do not use unnecessary privileges or mounted components. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.")
T1546_003.hasMitigation.append("Prevent credential overlap across systems of administrator and privileged accounts.")
T1190.hasMitigation.append("Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.")
T1210.hasMitigation.append("Minimize permissions and access for service accounts to limit impact of exploitation.")
T1222.hasMitigation.append("Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.")
T1222_001.hasMitigation.append("Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.")
T1222_002.hasMitigation.append("Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.")
T1495.hasMitigation.append("Prevent adversary access to privileged accounts or access necessary to replace system firmware.")
T1606.hasMitigation.append("Restrict permissions and access to the AD FS server to only originate from privileged access workstations.")
T1606_002.hasMitigation.append("Restrict permissions and access to the AD FS server to only originate from privileged access workstations.")
T1562_009.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.")
T1525.hasMitigation.append("Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.")
T1056_003.hasMitigation.append("Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1559.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Classes  AppID  {AppID_GUID} associated with the process-wide security of individual COM applications.")
T1559.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Microsoft  Ole associated with system-wide security defaults for all COM applications that do no set their own process-wide security. ")
T1559_001.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Classes  AppID  {AppID_GUID} associated with the process-wide security of individual COM applications.")
T1559.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Microsoft  Ole associated with system-wide security defaults for all COM applications that do no set their own process-wide security. ")
T1556.hasMitigation.append("Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. ")
T1556.hasMitigation.append("Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.")
T1556.hasMitigation.append("Limit on-premises accounts with access to the hybrid identity solution in place. For example, limit Azure AD Global Administrator accounts to only those required, and ensure that these are dedicated cloud-only accounts rather than hybrid ones.")
T1556_001.hasMitigation.append("Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. ")
T1556_003.hasMitigation.append("Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.")
T1556_004.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1556_005.hasMitigation.append("Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1556_007.hasMitigation.append("Limit on-premises accounts with access to the hybrid identity solution in place. For example, limit Azure AD Global Administrator accounts to only those required, and ensure that these are dedicated cloud-only accounts rather than hybrid ones.")
T1601.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1601_001.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1601_002.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1599.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1599_001.hasMitigation.append("Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.")
T1003.hasMitigation.append("Windows:Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003.hasMitigation.append("Linux:Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.")
T1003_001.hasMitigation.append("Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_002.hasMitigation.append("Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_003.hasMitigation.append("Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_004.hasMitigation.append("Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_005.hasMitigation.append("Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_006.hasMitigation.append("Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.")
T1003_007.hasMitigation.append("Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.")
T1003_008.hasMitigation.append("Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.")
T1542.hasMitigation.append("Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions")
T1542_001.hasMitigation.append("Prevent adversary access to privileged accounts or access necessary to perform this technique.")
T1542_003.hasMitigation.append("Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.")
T1542_005.hasMitigation.append("Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization.  ")
T1055.hasMitigation.append("Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.")
T1055_008.hasMitigation.append("Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.")
T1563.hasMitigation.append("Do not allow remote access to services as a privileged account unless necessary.")
T1563_001.hasMitigation.append("Do not allow remote access via SSH as root or other privileged accounts.")
T1563_002.hasMitigation.append("Consider removing the local Administrators group from the list of groups allowed to log in through RDP.")
T1021_001.hasMitigation.append("Consider removing the local Administrators group from the list of groups allowed to log in through RDP.")
T1021_002.hasMitigation.append("Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.")
T1021_003.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE SOFTWARE Classes AppID {{AppID_GUID}} associated with the process-wide security of individual COM applications.")
T1021.hasMitigation.append("")
T1021.hasMitigation.append("Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE SOFTWARE Microsoft Ole associated with system-wide security defaults for all COM applications that do not set their own process-wide security. ")
T1021_006.hasMitigation.append("If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.")
T1021_007.hasMitigation.append("Limit the number of high-privileged domain and cloud accounts, and ensure that these are not used for day-to-day operations. Ensure that on-premises accounts do not have privileged cloud permissions and that isolated, cloud-only accounts are used for managing cloud environments.")
T1053.hasMitigation.append("Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Increase scheduling priority. ")
T1053_002.hasMitigation.append("Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Increase scheduling priority. ")
T1053_005.hasMitigation.append("Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Increase scheduling priority. ")
T1053_006.hasMitigation.append("Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files.")
T1053_007.hasMitigation.append("Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.")
T1505.hasMitigation.append("Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1505_001.hasMitigation.append("Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1505_002.hasMitigation.append("Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.")
T1505_004.hasMitigation.append("Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.")
T1072.hasMitigation.append("Grant access to application deployment systems only to a limited number of authorized administrators.")
T1558.hasMitigation.append("Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.")
T1558.hasMitigation.append("")
T1558.hasMitigation.append("Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.")
T1558_001.hasMitigation.append("Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.")
T1558_002.hasMitigation.append("Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.")
T1558_003.hasMitigation.append("Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.")
T1553_006.hasMitigation.append("Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.")
T1218.hasMitigation.append("Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.")
T1218_007.hasMitigation.append("Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.")
T1569.hasMitigation.append("Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.")
T1569_002.hasMitigation.append("Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.")
T1552.hasMitigation.append("If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.")
T1552_002.hasMitigation.append("If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.")
T1552_007.hasMitigation.append("Use the principle of least privilege for privileged accounts such as the service account in Kubernetes. For example, if a pod is not required to access the Kubernetes API, consider disabling the service account altogether.")
T1550.hasMitigation.append("Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.")
T1550_002.hasMitigation.append("Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.")
T1550_003.hasMitigation.append("Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.")
T1078.hasMitigation.append("Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. ")
T1078_002.hasMitigation.append("Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.")
T1078_003.hasMitigation.append("Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.")
T1078.hasMitigation.append("For example, audit the use of service accounts in Kubernetes, and avoid automatically granting them access to the Kubernetes API if this is not required. Implementing LAPS may also help prevent reuse of local administrator credentials across a domain.")
T1078_004.hasMitigation.append("Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access, such as Global Administrator and Privileged Role Administrator in Azure AD. These reviews should also check if new privileged cloud accounts have been created that were not authorized. For example, in Azure AD environments configure alerts to notify when accounts have gone many days without using privileged roles, as these roles may be able to be removed. Consider using temporary, just-in-time (JIT) privileged access to Azure AD resources rather than permanently assigning privileged roles.")
T1047.hasMitigation.append("Prevent credential overlap across systems of administrator and privileged accounts. ")
T1547_002.hasMitigation.append("Windows 8.1, Windows Server 2012 R2, and later versions, may make LSA run as a Protected Process Light (PPL) by setting the Registry key HKLM SYSTEM CurrentControlSet Control Lsa RunAsPPL, which requires all DLLs loaded by LSA to be signed by Microsoft.  ")
T1547_005.hasMitigation.append("Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key HKLM SYSTEM CurrentControlSet Control Lsa RunAsPPL, which requires all SSP DLLs to be signed by Microsoft.  ")
T1547_008.hasMitigation.append("On Windows 8.1 and Server 2012 R2, enable LSA Protection by setting the Registry key HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa RunAsPPL to dword:00000001.  LSA Protection ensures that LSA plug-ins and drivers are only loaded if they are digitally signed with a Microsoft signature and adhere to the Microsoft Security Development Lifecycle (SDL) process guidance.")
T1556.hasMitigation.append("Enabled features, such as Protected Process Light (PPL), for LSA.")
T1556_001.hasMitigation.append("Enabled features, such as Protected Process Light (PPL), for LSA.")
T1003.hasMitigation.append("On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.")
T1003_001.hasMitigation.append("On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.")
T1119.hasMitigation.append("Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means.")
T1565.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and manipulate backups.")
T1565_001.hasMitigation.append("Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and manipulate backups.")
T1070.hasMitigation.append("Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1070_001.hasMitigation.append("Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1070_002.hasMitigation.append("Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1070_003.hasMitigation.append("Forward logging of historical data to remote data store and centralized logging solution to preserve historical command line log data.")
T1070_007.hasMitigation.append("Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1070_008.hasMitigation.append("Automatically forward mail data and events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1070_009.hasMitigation.append("Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.")
T1072.hasMitigation.append("If the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.")
T1548.hasMitigation.append("The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege.")
T1548_003.hasMitigation.append("The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege.")
T1098_004.hasMitigation.append("Restrict access to the authorized_keys file.")
T1547_003.hasMitigation.append("Consider using Group Policy to configure and block additions/modifications to W32Time DLLs. ")
T1547_013.hasMitigation.append("Restrict write access to XDG autostart entries to only select privileged users.")
T1037.hasMitigation.append("Restrict write access to logon scripts to specific administrators.")
T1037_002.hasMitigation.append("Restrict write access to logon scripts to specific administrators.")
T1037_003.hasMitigation.append("Restrict write access to logon scripts to specific administrators.")
T1037_004.hasMitigation.append("Limit privileges of user accounts so only authorized users can edit the rc.common file.")
T1037_005.hasMitigation.append("Since StartupItems are deprecated, preventing all users from writing to the /Library/StartupItems directory would prevent any startup items from getting registered.")
T1543.hasMitigation.append("Restrict read/write access to system-level process files to only select privileged users who have a legitimate need to manage system services.")
T1543_001.hasMitigation.append("Set group policies to restrict file permissions to the ~/launchagents folder.")
T1543_002.hasMitigation.append("Restrict read/write access to systemd unit files to only select privileged users who have a legitimate need to manage system services.")
T1530.hasMitigation.append("Use access control lists on storage systems and objects.")
T1565.hasMitigation.append("Ensure least privilege principles are applied to important information resources to reduce exposure to data manipulation risk.")
T1565_001.hasMitigation.append("Ensure least privilege principles are applied to important information resources to reduce exposure to data manipulation risk.")
T1565_003.hasMitigation.append("Prevent critical business and system processes from being replaced, overwritten, or reconfigured to load potentially malicious code.")
T1546_004.hasMitigation.append("Making these files immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.")
T1546_013.hasMitigation.append("Making PowerShell profiles immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.")
T1048.hasMitigation.append("Use access control lists on cloud storage systems and objects.")
T1222.hasMitigation.append("Applying more restrictive permissions to files and directories could prevent adversaries from modifying their access control lists. Additionally, ensure that user settings regarding local and remote symbolic links are properly set or disabled where unneeded.")
T1222_001.hasMitigation.append("Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.")
T1222_002.hasMitigation.append("Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.")
T1564_004.hasMitigation.append("Consider adjusting read and write permissions for NTFS EA, though this should be tested to ensure routine OS operations are not impeded. ")
T1574.hasMitigation.append("Install software in write-protected locations. Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard library folders.")
T1574_004.hasMitigation.append("Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard dylib folders.")
T1574_007.hasMitigation.append("Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.")
T1574_008.hasMitigation.append("Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.")
T1574_009.hasMitigation.append("Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.")
T1562.hasMitigation.append("Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security/logging services.")
T1562_001.hasMitigation.append("Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security services.")
T1562_002.hasMitigation.append("Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with logging or deleting or modifying .evtx logging files. Ensure .evtx files, which are located at C: Windows system32 Winevt Logs, have the proper file permissions for limited, legitimate access and audit policies for detection.")
T1562_004.hasMitigation.append("Ensure proper process and file permissions are in place to prevent adversaries from disabling or modifying firewall settings.")
T1562_006.hasMitigation.append("Ensure event tracers/forwarders , firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls.")
T1070.hasMitigation.append("Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1070_001.hasMitigation.append("Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1070_002.hasMitigation.append("Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1070_003.hasMitigation.append("Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their ~/.bash_history or ConsoleHost_history.txt files.")
T1070_008.hasMitigation.append("Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1070_009.hasMitigation.append("Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1036.hasMitigation.append("Use file system access controls to protect folders such as C: Windows System32.")
T1036_003.hasMitigation.append("Use file system access controls to protect folders such as C: Windows System32.")
T1036_005.hasMitigation.append("Use file system access controls to protect folders such as C: Windows System32.")
T1556.hasMitigation.append("Restrict write access to the /Library/Security/SecurityAgentPlugins directory.")
T1055_009.hasMitigation.append("Restrict the permissions on sensitive files such as /proc/[pid]/maps or /proc/[pid]/mem.")
T1563_001.hasMitigation.append("Ensure proper file permissions are set and harden system to prevent root privilege escalation opportunities.")
T1053_006.hasMitigation.append("Restrict read/write access to systemd .timer unit files to only select privileged users who have a legitimate need to manage system services.")
T1489.hasMitigation.append("Ensure proper process and file permissions are in place to inhibit adversaries from disabling or interfering with critical services.")
T1553_003.hasMitigation.append("Restrict storage and execution of SIP DLLs to protected directories, such as C: Windows, rather than user directories.")
T1218_002.hasMitigation.append("Restrict storage and execution of Control Panel items to protected directories, such as C: Windows, rather than user directories.")
T1569.hasMitigation.append("Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.")
T1569_002.hasMitigation.append("Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.")
T1080.hasMitigation.append("Protect shared folders by minimizing users who have write access.")
T1552.hasMitigation.append("Restrict file shares to specific directories with access only to necessary users.")
T1552_001.hasMitigation.append("Restrict file shares to specific directories with access only to necessary users.")
T1552_004.hasMitigation.append("Ensure permissions are properly set on folders containing sensitive private keys to prevent unintended access. Additionally, on Cisco devices, set the nonexportable flag during RSA key pair generation.")
T1547_008.hasMitigation.append("Ensure safe DLL search mode is enabled HKEY_LOCAL_MACHINE System CurrentControlSet Control Session Manager SafeDllSearchMode to mitigate risk that lsass.exe loads a malicious code library. ")
T1574.hasMitigation.append("Disallow loading of remote DLLs. This is included by default in Windows Server 2012+ and is available by patch for XP+ and Server 2003+.")
T1574.hasMitigation.append("Enable Safe DLL Search Mode to force search for system DLLs in directories with greater restrictions (e.g. %SYSTEMROOT%)to be used before local directory DLLs (e.g. a user's home directory)")
T1574.hasMitigation.append("The Safe DLL Search Mode can be enabled via Group Policy at Computer Configuration > [Policies] > Administrative Templates > MSS (Legacy): MSS: (SafeDllSearchMode) Enable Safe DLL search mode. The associated Windows Registry key for this is located at HKLM SYSTEM CurrentControlSet Control Session Manager SafeDLLSearchMode")
T1574_001.hasMitigation.append("Disallow loading of remote DLLs. This is included by default in Windows Server 2012+ and is available by patch for XP+ and Server 2003+.")
T1574.hasMitigation.append("Enable Safe DLL Search Mode to force search for system DLLs in directories with greater restrictions (e.g. %SYSTEMROOT%)to be used before local directory DLLs (e.g. a user's home directory)")
T1574.hasMitigation.append("The Safe DLL Search Mode can be enabled via Group Policy at Computer Configuration > [Policies] > Administrative Templates > MSS (Legacy): MSS: (SafeDllSearchMode) Enable Safe DLL search mode. The associated Windows Registry key for this is located at HKLM SYSTEM CurrentControlSet Control Session Manager SafeDLLSearchMode")
T1547_003.hasMitigation.append("Consider using Group Policy to configure and block modifications to W32Time parameters in the Registry. ")
T1037.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys for logon scripts that may lead to persistence.")
T1037_001.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys for logon scripts that may lead to persistence.")
T1574.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.")
T1574_011.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.")
T1574_012.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys associated with COR_PROFILER.")
T1562.hasMitigation.append("Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security/logging services.")
T1562_001.hasMitigation.append("Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security services.")
T1562_002.hasMitigation.append("Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering logging. The addition of the MiniNT registry key disables Event Viewer.")
T1562_004.hasMitigation.append("Ensure proper Registry permissions are in place to prevent adversaries from disabling or modifying firewall settings.")
T1070_007.hasMitigation.append("Protect generated event files and logs that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.")
T1556.hasMitigation.append("Restrict Registry permissions to disallow the modification of sensitive Registry keys such as HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order.")
T1556_008.hasMitigation.append("Restrict Registry permissions to disallow the modification of sensitive Registry keys such as HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order.")
T1112.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.")
T1505.hasMitigation.append("Consider using Group Policy to configure and block modifications to service and other critical server parameters in the Registry.")
T1505_005.hasMitigation.append("Consider using Group Policy to configure and block modifications to Terminal Services parameters in the Registry.")
T1489.hasMitigation.append("Ensure proper registry permissions are in place to inhibit adversaries from disabling or interfering with critical services.")
T1553.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented.")
T1553_003.hasMitigation.append("Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented.")
T1553_006.hasMitigation.append("Ensure proper permissions are set for the Registry to prevent users from modifying keys related to code signing policies.")
T1059.hasMitigation.append("Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.")
T1059_005.hasMitigation.append("Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.")
T1059_007.hasMitigation.append("Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.")
T1189.hasMitigation.append("For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.")
T1189.hasMitigation.append("Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.")
T1568.hasMitigation.append("In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.")
T1568_002.hasMitigation.append("In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.")
T1567.hasMitigation.append("Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.")
T1567_001.hasMitigation.append("Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.")
T1567_002.hasMitigation.append("Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.")
T1567_003.hasMitigation.append("Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.")
T1566.hasMitigation.append("Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.")
T1566_001.hasMitigation.append("Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.")
T1566_002.hasMitigation.append("Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.")
T1566_003.hasMitigation.append("Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.")
T1528.hasMitigation.append("Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.")
T1528.hasMitigation.append("Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:")
T1528.hasMitigation.append("Users -> User settings -> App registrations: Users can register applications can be set to no to prevent users from registering new applications. Enterprise applications -> User settings -> Enterprise applications: Users can consent to apps accessing company data on their behalf can be set to no to prevent users from consenting to allow third-party multi-tenant applications")
T1218_001.hasMitigation.append("Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files")
T1550_001.hasMitigation.append("Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific—include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.")
T1204.hasMitigation.append("If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.")
T1204_001.hasMitigation.append("If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.")
T1102.hasMitigation.append("Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.")
T1102_001.hasMitigation.append("Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.")
T1102_002.hasMitigation.append("Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.")
T1102_003.hasMitigation.append("Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.")
T1555_005.hasMitigation.append("Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.")
T1602.hasMitigation.append("Allowlist MIB objects and implement SNMP views.")
T1602_001.hasMitigation.append("Allowlist MIB objects and implement SNMP views.")
T1602_002.hasMitigation.append("Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.")
T1546_013.hasMitigation.append("Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.")
T1606.hasMitigation.append("Configure browsers/applications to regularly delete persistent web credentials (such as cookies).")
T1606_001.hasMitigation.append("Configure browsers/applications to regularly delete persistent web cookies.")
T1562.hasMitigation.append("Consider implementing policies on internal web servers, such HTTP Strict Transport Security, that enforce the use of HTTPS/network traffic encryption to prevent insecure connections.")
T1562_006.hasMitigation.append("Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.")
T1562_009.hasMitigation.append("Ensure that endpoint defenses run in safe mode.")
T1562_010.hasMitigation.append("Consider implementing policies on internal web servers, such HTTP Strict Transport Security, that enforce the use of HTTPS/network traffic encryption to prevent insecure connections.")
T1559.hasMitigation.append("Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.")
T1559_002.hasMitigation.append("Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.")
T1137.hasMitigation.append("For the Office Test method, create the Registry key used to execute it and set the permissions to Read Control to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. ")
T1137_002.hasMitigation.append("Create the Registry key used to execute it and set the permissions to Read Control to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.")
T1566.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.")
T1566_001.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.")
T1566_002.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation..")
T1566.hasMitigation.append("Furthermore, policies may enforce / install browser extensions that protect against IDN and homograph attacks.")
T1598.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.")
T1598_002.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.")
T1598_003.hasMitigation.append("Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.")
T1598.hasMitigation.append("Furthermore, policies may enforce / install browser extensions that protect against IDN and homograph attacks. Browser password managers may also be configured to only populate credential fields when the URL matches that of the original, legitimate site.")
T1539.hasMitigation.append("Configure browsers or tasks to regularly delete persistent cookies.")
T1553.hasMitigation.append("HTTP Public Key Pinning (HPKP) is one method to mitigate potential Adversary-in-the-Middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. ")
T1553_004.hasMitigation.append("HTTP Public Key Pinning (HPKP) is one method to mitigate potential Adversary-in-the-Middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. ")
T1535.hasMitigation.append("Cloud service providers may allow customers to deactivate unused regions.")
T1550_004.hasMitigation.append("Configure browsers or tasks to regularly delete persistent cookies.")
T1573.hasMitigation.append("SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols.")
T1573_002.hasMitigation.append("SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols.")
T1090.hasMitigation.append("If it is possible to inspect HTTPS traffic, the captures can be analyzed for connections that appear to be domain fronting.")
T1090_004.hasMitigation.append("If it is possible to inspect HTTPS traffic, the captures can be analyzed for connections that appear to be domain fronting.")
T1212.hasMitigation.append("Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.")
T1211.hasMitigation.append("Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.")
T1068.hasMitigation.append("Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.")
T1210.hasMitigation.append("Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.")
T1548_002.hasMitigation.append("Consider updating Windows to the latest version and patch level to utilize the latest protective measures against UAC bypass.")
T1176.hasMitigation.append("Ensure operating systems and browsers are using the most current version.")
T1110_001.hasMitigation.append("Upgrade management services to the latest supported and compatible version. Specifically, any version providing increased password complexity or policy enforcement preventing default or weak passwords.")
T1555_005.hasMitigation.append("Update password managers regularly by employing patch management for internal enterprise endpoints and servers.")
T1602.hasMitigation.append("Keep system images and software updated and migrate to SNMPv3.")
T1602_001.hasMitigation.append("Keep system images and software updated and migrate to SNMPv3.")
T1602_002.hasMitigation.append("Keep system images and software updated and migrate to SNMPv3.")
T1189.hasMitigation.append("Ensure all browsers and plugins kept updated can help prevent the exploit phase of this technique. Use modern browsers with security features turned on.")
T1546_010.hasMitigation.append("Upgrade to Windows 8 or later and enable secure boot.")
T1546_011.hasMitigation.append("Microsoft released an optional patch update - KB3045645 - that will remove the auto-elevate flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC.")
T1190.hasMitigation.append("Update software regularly by employing patch management for externally exposed applications.")
T1212.hasMitigation.append("Update software regularly by employing patch management for internal enterprise endpoints and servers.")
T1211.hasMitigation.append("Update software regularly by employing patch management for internal enterprise endpoints and servers.")
T1068.hasMitigation.append("Update software regularly by employing patch management for internal enterprise endpoints and servers.")
T1210.hasMitigation.append("Update software regularly by employing patch management for internal enterprise endpoints and servers.")
T1495.hasMitigation.append("Patch the BIOS and other firmware as necessary to prevent successful use of known vulnerabilities.")
T1574.hasMitigation.append("Update software regularly to include patches that fix DLL side-loading vulnerabilities.")
T1574_002.hasMitigation.append("Update software regularly to include patches that fix DLL side-loading vulnerabilities.")
T1137.hasMitigation.append("For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.")
T1137_003.hasMitigation.append("For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.")
T1137_004.hasMitigation.append("For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.")
T1137_005.hasMitigation.append("For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.")
T1542.hasMitigation.append("Patch the BIOS and EFI as necessary.")
T1542_001.hasMitigation.append("Patch the BIOS and EFI as necessary.")
T1542_002.hasMitigation.append("Perform regular firmware updates to mitigate risks of exploitation and/or abuse.")
T1072.hasMitigation.append("Patch deployment systems regularly to prevent potential remote access through Exploitation for Privilege Escalation.")
T1195.hasMitigation.append("A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.")
T1195_001.hasMitigation.append("A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.")
T1195_002.hasMitigation.append("A patch management process should be implemented to check unused applications, unmaintained and/or previously vulnerable software, unnecessary features, components, files, and documentation.")
T1552.hasMitigation.append("Apply patch KB2962486 which prevents credentials from being stored in GPPs.")
T1552_006.hasMitigation.append("Apply patch KB2962486 which prevents credentials from being stored in GPPs.")
T1550_002.hasMitigation.append("Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group.")
T1548.hasMitigation.append("Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking.")
T1548_002.hasMitigation.append("Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking.")
T1546_011.hasMitigation.append("Changing UAC settings to Always Notify will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.")
T1574.hasMitigation.append("Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System] to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged. ")
T1574_005.hasMitigation.append("Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System] to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged. ")
T1574_010.hasMitigation.append("Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System]to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.")
T1550_002.hasMitigation.append("Enable pass the hash mitigations to apply UAC restrictions to local accounts on network logon. The associated Registry key is located HKLM SOFTWARE Microsoft Windows CurrentVersion Policies System LocalAccountTokenFilterPolicy.")
T1550.hasMitigation.append("Through GPO: Computer Configuration > [Policies] > Administrative Templates > SCM: Pass the Hash Mitigations: Apply UAC restrictions to local accounts on network logons.")
T1548.hasMitigation.append("Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges.")
T1134.hasMitigation.append("An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.")
T1134_001.hasMitigation.append("An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.")
T1134_002.hasMitigation.append("An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.")
T1134_003.hasMitigation.append("An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.")
T1087_004.hasMitigation.append("Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1098.hasMitigation.append("Ensure that low-privileged user accounts do not have permissions to modify accounts or account-related policies.")
T1098_001.hasMitigation.append("Ensure that low-privileged user accounts do not have permission to add access keys to accounts. In AWS environments, prohibit users from calling the sts:GetFederationToken API unless explicitly required.")
T1098_003.hasMitigation.append("Ensure that low-privileged user accounts do not have permissions to add permissions to accounts or update IAM policies.")
T1098_004.hasMitigation.append("In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.")
T1020_001.hasMitigation.append("In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.")
T1197.hasMitigation.append("Consider limiting access to the BITS interface to specific users or groups.")
T1547_004.hasMitigation.append("Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.")
T1547_006.hasMitigation.append("Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in com.apple.syspolicy.kernel-extension-policy.")
T1547_009.hasMitigation.append("Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration > [Policies] > Windows Settings > Security Settings > Local Policies > User Rights Assignment: Create symbolic links. ")
T1547_012.hasMitigation.append("Limit user accounts that can load or unload device drivers by disabling SeLoadDriverPrivilege.")
T1547_013.hasMitigation.append("Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.")
T1185.hasMitigation.append("Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and Bypass User Account Control opportunities can limit the exposure to this technique.")
T1110.hasMitigation.append("Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.")
T1110_004.hasMitigation.append("Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.")
T1580.hasMitigation.append("Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1538.hasMitigation.append("Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.")
T1619.hasMitigation.append("Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.")
T1059_008.hasMitigation.append("Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. ")
T1609.hasMitigation.append("Enforce authentication and role-based access control on the container service to restrict users to the least privileges required. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.")
T1613.hasMitigation.append("Enforce the principle of least privilege by limiting dashboard visibility to only the required users. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.")
T1543.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.")
T1543_002.hasMitigation.append("Limit user access to system utilities such as systemctl to only users who have a legitimate need.")
T1543_003.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.")
T1543_004.hasMitigation.append("Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.")
T1530.hasMitigation.append("Configure user permissions groups and roles for access to cloud storage. Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access. Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.")
T1213.hasMitigation.append("Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.")
T1213_001.hasMitigation.append("Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.")
T1213_002.hasMitigation.append("Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.")
T1213_003.hasMitigation.append("Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.")
T1610.hasMitigation.append("Enforce the principle of least privilege by limiting container dashboard access to only the necessary users. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.")
T1006.hasMitigation.append("Ensure only accounts required to configure and manage backups have the privileges to do so. Monitor these accounts for unauthorized backup activity.")
T1484.hasMitigation.append("Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.")
T1484_001.hasMitigation.append("Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.")
T1546_003.hasMitigation.append("By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.")
T1048.hasMitigation.append("Configure user permissions groups and roles for access to cloud storage. Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access. Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.")
T1606.hasMitigation.append("Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles. In AWS environments, prohibit users from calling the sts:GetFederationToken API unless explicitly required.")
T1606_002.hasMitigation.append("Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.")
T1574.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.")
T1574.hasMitigation.append("Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution.")
T1574_005.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.")
T1574_010.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.")
T1574_012.hasMitigation.append("Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.")
T1562.hasMitigation.append("Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.")
T1562_001.hasMitigation.append("Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.")
T1562_002.hasMitigation.append("Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.")
T1562_004.hasMitigation.append("Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.")
T1562_006.hasMitigation.append("Ensure event tracers/forwarders , firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.")
T1562_007.hasMitigation.append("Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.")
T1562_008.hasMitigation.append("Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.")
T1490.hasMitigation.append("Limit the user accounts that have access to backups to only those required.")
T1556.hasMitigation.append("Ensure that proper policies are implemented to dictate the the secure enrollment and deactivation of authentication mechanisms, such as MFA, for user accounts.")
T1556_006.hasMitigation.append("Ensure that proper policies are implemented to dictate the secure enrollment and deactivation of MFA for user accounts.")
T1578.hasMitigation.append("Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1578_001.hasMitigation.append("Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1578_002.hasMitigation.append("Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1578_003.hasMitigation.append("Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.")
T1040.hasMitigation.append("In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.")
T1566_002.hasMitigation.append("Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications.")
T1563.hasMitigation.append("Limit remote user permissions if remote access is necessary.")
T1563_002.hasMitigation.append("Limit remote user permissions if remote access is necessary.")
T1021.hasMitigation.append("Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.")
T1021_001.hasMitigation.append("Limit remote user permissions if remote access is necessary.")
T1021_004.hasMitigation.append("Limit which user accounts are allowed to login via SSH.")
T1053.hasMitigation.append("Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.")
T1053_002.hasMitigation.append("Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to at can be managed using at.allow and at.deny files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.")
T1053_003.hasMitigation.append("cron permissions are controlled by /etc/cron.allow and /etc/cron.deny. If there is a cron.allow file, then the user or users that need to use cron will need to be listed in the file. cron.deny is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.")
T1053_005.hasMitigation.append("Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.")
T1053_006.hasMitigation.append("Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.")
T1053_007.hasMitigation.append("Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.")
T1505.hasMitigation.append("Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.")
T1505_003.hasMitigation.append("Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.")
T1648.hasMitigation.append("Remove permissions to create, modify, or run serverless resources from users that do not explicitly require them.")
T1489.hasMitigation.append("Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.")
T1072.hasMitigation.append("Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.")
T1528.hasMitigation.append("Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set automountServiceAccountToken: false in the YAML specification of pods that do not require access to service account tokens.")
T1569.hasMitigation.append("Prevent users from installing their own launch agents or launch daemons.")
T1569_001.hasMitigation.append("Prevent users from installing their own launch agents or launch daemons.")
T1537.hasMitigation.append("Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.")
T1199.hasMitigation.append("Properly manage accounts and permissions used by parties in trusted relationships to minimize potential abuse by the party and if the party is compromised by an adversary. In Office 365 environments, partner relationships and roles can be viewed under the Partner Relationships page.")
T1552_007.hasMitigation.append("Enforce authentication and role-based access control on the container API to restrict users to the least privileges required. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.")
T1550.hasMitigation.append("Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.")
T1550_002.hasMitigation.append("Do not allow a domain user to be in the local administrator group on multiple systems.")
T1550_003.hasMitigation.append("Do not allow a user to be a local administrator for multiple systems.")
T1078.hasMitigation.append("Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.")
T1078_004.hasMitigation.append("Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.")
T1047.hasMitigation.append("By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.")
T1557.hasMitigation.append("Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application’s certificate does not match the one expected by the host.")
T1557_002.hasMitigation.append("Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application’s certificate does not match the one expected by the host.")
T1547_007.hasMitigation.append("Holding the Shift key while logging in prevents apps from opening automatically.")
T1176.hasMitigation.append("Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.")
T1185.hasMitigation.append("Close all browser sessions regularly and when they are no longer needed.")
T1213.hasMitigation.append("Develop and publish policies that define acceptable information to be stored in repositories.")
T1213_001.hasMitigation.append("Develop and publish policies that define acceptable information to be stored in Confluence repositories.")
T1213_002.hasMitigation.append("Develop and publish policies that define acceptable information to be stored in SharePoint repositories.")
T1213_003.hasMitigation.append("Develop and publish policies that define acceptable information to be stored in code repositories.")
T1056_002.hasMitigation.append("Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).")
T1036.hasMitigation.append("Train users not to open email attachments or click unknown links (URLs). Such training fosters more secure habits within your organization and will limit many of the risks.")
T1036_007.hasMitigation.append("Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.")
T1111.hasMitigation.append("Remove smart cards when not in use.")
T1621.hasMitigation.append("Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.")
T1027.hasMitigation.append("Ensure that a finite amount of ingress points to a software deployment system exist with restricted access for those required to allow and enable newly deployed software.")
T1003.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1003_001.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1003_002.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1003_003.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1003_004.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1003_005.hasMitigation.append("Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.")
T1566.hasMitigation.append("Users can be trained to identify social engineering techniques and phishing emails.")
T1566_001.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing emails.")
T1566_002.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0. Additionally, users may perform visual checks of the domains they visit; however, homographs in ASCII and in IDN domains and URL schema obfuscation may render manual checks difficult. Phishing training and other cybersecurity training may raise awareness to check URLs before visiting the sites.")
T1566_003.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.")
T1598.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing attempts.")
T1598_001.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing attempts.")
T1598_002.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing attempts.")
T1598_003.hasMitigation.append("Users can be trained to identify social engineering techniques and spearphishing attempts. Additionally, users may perform visual checks of the domains they visit; however, homographs in ASCII and in IDN domains and URL schema obfuscation may render manual checks difficult. Phishing training and other cybersecurity training may raise awareness to check URLs before visiting the sites.")
T1072.hasMitigation.append("Have a strict approval policy for use of deployment systems.")
T1528.hasMitigation.append("Users need to be trained to not authorize third-party applications they don’t recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.")
T1539.hasMitigation.append("Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.")
T1221.hasMitigation.append("Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.")
T1552.hasMitigation.append("Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.")
T1552_001.hasMitigation.append("Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.")
T1552_008.hasMitigation.append("Ensure that developers and system administrators are aware of the risk associated with sharing unsecured passwords across communication services.")
T1204.hasMitigation.append("Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.")
T1204_001.hasMitigation.append("Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.")
T1204_002.hasMitigation.append("Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.")
T1204_003.hasMitigation.append("Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.")
T1078.hasMitigation.append("Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.")
T1078_002.hasMitigation.append("Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.")
T1078_004.hasMitigation.append("Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.")
T1190.hasMitigation.append("Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure.")
T1210.hasMitigation.append("Regularly scan the internal network for available services to identify new and potentially vulnerable services.")
T1195.hasMitigation.append("Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.")
T1195_001.hasMitigation.append("Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.")
T1195_002.hasMitigation.append("Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.")

# Set Detection for Technique 
T1649.hasDetection.append("Monitor AD CS certificate requests (ex: EID 4886) as well as issued certificates (ex: EID 4887) for abnormal activity, including unexpected certificate enrollments and signs of abuse within certificate attributes (such as abusable EKUs).")
T1558.hasDetection.append("Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.Monitor the lifetime of TGT tickets for values that differ from the default domain duration.Monitor for indications ofPass the Ticketbeing used to move laterally.")
T1558_001.hasDetection.append("Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.")
T1558_003.hasDetection.append("Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).")
T1558_004.hasDetection.append("Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).")
T1550.hasDetection.append("Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.")
T1550_002.hasDetection.append("Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.")
T1550_003.hasDetection.append("Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to Integrity check on decrypted field failed and indicates misuse by a previously invalidated golden ticket.")
T1615.hasDetection.append("Monitor for abnormal LDAP queries with filters forgroupPolicyContainerand high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.")
T1003.hasDetection.append("Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.. Monitor for replication requestsfrom IPs not associated with known domain controllers.")
T1003_006.hasDetection.append("Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.")
T1033.hasDetection.append("Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.. Monitor for replication requestsfrom IPs not associated with known domain controllers.")
T1098.hasDetection.append("Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.")
T1484.hasDetection.append("Monitor for newly constructed active directory objects, such as Windows EID 5137.")
T1484_001.hasDetection.append("Monitor for newly constructed active directory objects, such as Windows EID 5137.")
T1484_002.hasDetection.append("Monitor for newly constructed active directory objects, such as Windows EID 5137.")
T1207.hasDetection.append("Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.")
T1484.hasDetection.append("Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.")
T1484_001.hasDetection.append("Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.")
T1134.hasDetection.append("Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.")
T1134_005.hasDetection.append("Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History.")
T1531.hasDetection.append("Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).")
T1098.hasDetection.append("Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.")
T1037.hasDetection.append("Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.")
T1037_003.hasDetection.append("Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.")
T1484.hasDetection.append("Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).")
T1484_001.hasDetection.append("Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).")
T1484_002.hasDetection.append("Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.")
T1222.hasDetection.append("Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1222_001.hasDetection.append("Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1556.hasDetection.append("Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.")
T1556_005.hasDetection.append("Monitor property changes in Group Policy:Computer Configuration Windows Settings Security Settings Account Policies Password Policy Store passwords using reversible encryption. By default, the property should be set to Disabled.")
T1556_006.hasDetection.append("Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.")
T1207.hasDetection.append("Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929).")
T1649.hasDetection.append("Monitor for changes to CA attributes and settings, such as AD CS certificate template modifications (ex: EID 4899/4900 once a potentially malicious certificate is enrolled).")
T1098_002.hasDetection.append("Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.")
T1098_005.hasDetection.append("Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.Additionally, joined devices can be viewed via the Azure AD portal.")
T1557.hasDetection.append("Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.")
T1557_003.hasDetection.append("Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.")
T1110.hasDetection.append("Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.")
T1110_001.hasDetection.append("Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.")
T1110_002.hasDetection.append("Monitor authentication logs for system and application login failures ofValid Accounts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such asOS Credential DumpingorKerberoasting.")
T1110_003.hasDetection.append("Monitor authentication logs for system and application login failures ofValid Accounts. Consider the following event IDs:Domain Controllers: Audit Logon (Success & Failure) for event ID 4625.Domain Controllers: Audit Kerberos Authentication Service (Success & Failure) for event ID 4771.All systems: Audit Logon (Success & Failure) for event ID 4648.")
T1110_004.hasDetection.append("Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.")
T1213.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.")
T1213_001.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.")
T1213_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.")
T1213_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.")
T1622.hasDetection.append("Monitor debugger logs for signs of abnormal and potentially malicious activity.")
T1491.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network.")
T1491_001.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users.")
T1491_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.")
T1610.hasDetection.append("Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.")
T1189.hasDetection.append("Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.")
T1114.hasDetection.append("Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples includeX-MS-Exchange-Organization-AutoForwardedset to true,X-MailFwdByandX-Forwarded-To. TheforwardingSMTPAddressparameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.High volumes of emails that bear theX-MS-Exchange-Organization-AutoForwardedheader (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.")
T1114_002.hasDetection.append("In Office365 environments, consider using PurviewAudit to collect MailItemsAccessed events and monitoring for unusual email access behavior.")
T1114_003.hasDetection.append("Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.In environments using Exchange, monitor logs for the creation or modification of mail transport rules.")
T1499.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.")
T1499_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.")
T1499_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.")
T1499_004.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.")
T1048.hasDetection.append("Monitor cloud-based file hosting services, such as Google Drive and Microsoft OneDrive, for unusual instances of file downloads – for example, many downloads by a single user in a short period of time. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. Additionally, data loss prevention policies can be defined to detect and alert on exfiltration events on particularly sensitive data.")
T1567.hasDetection.append("Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks or other features that could be abused to exfiltrate data.")
T1190.hasDetection.append("Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.")
T1203.hasDetection.append("Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.")
T1212.hasDetection.append("Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.")
T1211.hasDetection.append("Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.")
T1210.hasDetection.append("Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.")
T1133.hasDetection.append("When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.")
T1200.hasDetection.append("Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.")
T1564.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_008.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries. In environments using Exchange, monitor logs for the creation or modification of mail transport rules.")
T1562_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.")
T1070.hasDetection.append("Monitor logs for abnormal modifications to application settings, such as the creation of malicious Exchange transport rules.")
T1070_008.hasDetection.append("In environments using Exchange, monitor logs for the creation or modification of mail processing settings, such as transport rules.")
T1534.hasDetection.append("Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.")
T1556.hasDetection.append("Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Azure AD Application Proxy Connector, which are typically generated only when a new Pass Through Authentication (PTA) Agent is added.If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.")
T1556_007.hasDetection.append("Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Azure AD Application Proxy Connector, which are typically generated only when a new PTA Agent is added.If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.")
T1621.hasDetection.append("Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.")
T1027_005.hasDetection.append("The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.")
T1137.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.")
T1137_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.")
T1137_004.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.")
T1137_005.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.")
T1069.hasDetection.append("Monitor for logging, messaging, and other artifacts provided by cloud services.")
T1069_003.hasDetection.append("Monitor for events collected that may attempt to find cloud groups and permission settings.")
T1566.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events.")
T1566_001.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.")
T1566_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can help detect links leading to known malicious sites.Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).")
T1566_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems.")
T1598.hasDetection.append("Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers.")
T1598_001.hasDetection.append("Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.")
T1598_002.hasDetection.append("Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.")
T1598_003.hasDetection.append("Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can also help detect links leading to known malicious sites.Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).")
T1594.hasDetection.append("Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.")
T1505.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.")
T1505_001.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.Consider enabling audit features that can log malicious startup activities.")
T1505_002.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.")
T1505_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.")
T1648.hasDetection.append("Monitor logs generated by serverless execution for unusual activity. For example, in Exchange environments emails sent by Power Automate via the Outlook 365 connector include the phrase ‘Power App’ or ‘Power Automate’ in the SMTP header 'x-ms-mail-application.'")
T1072.hasDetection.append("Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.Perform application deployment at regular times so that irregular deployment activity stands out.")
T1649.hasDetection.append("Ensure CA audit logs are enabled and monitor these services for signs of abuse.")
T1199.hasDetection.append("Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network. Monitor logs for unexpected actions taken by any delegated administrator accounts.")
T1552.hasDetection.append("Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.")
T1552_008.hasDetection.append("Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.")
T1550.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.")
T1550_004.hasDetection.append("Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.")
T1204.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.")
T1204_003.hasDetection.append("Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.")
T1588.hasDetection.append("Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1588_004.hasDetection.append("Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates.")
T1562.hasDetection.append("Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging and DeleteTrail. In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink. In Azure, monitor for az monitor diagnostic-settings delete. Additionally, a sudden loss of a log source may indicate that it has been disabled.")
T1562_008.hasDetection.append("Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging, UpdateTrail DeleteTrail. In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink and google.logging.v2.ConfigServiceV2.DeleteSink. In Azure, monitor for az monitor diagnostic-settings update and az monitor diagnostic-settings delete. Additionally, a sudden loss of a log source may indicate that it has been disabled.")
T1526.hasDetection.append("Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.")
T1555.hasDetection.append("Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from cloud secrets managers, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests.")
T1046.hasDetection.append("Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.")
T1578.hasDetection.append("Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.")
T1546.hasDetection.append("Monitor the creation and modification of cloud resources that may be abused for persistence, such as functions and workflows monitoring cloud events.")
T1562.hasDetection.append("Monitor changes made to cloud services for unexpected modifications to settings and/or data.")
T1562_008.hasDetection.append("Monitor changes made to cloud services for unexpected modifications to settings and/or data")
T1648.hasDetection.append("Monitor the creation and modification of serverless resources such as functions and workflows.")
T1619.hasDetection.append("Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.")
T1530.hasDetection.append("Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.")
T1048.hasDetection.append("Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.")
T1537.hasDetection.append("Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts.")
T1485.hasDetection.append("Monitor for unexpected deletion of a cloud storage infrastructure, such as theDeleteDBClusterandDeleteGlobalClusterevents in AWS, or a high quantity of data deletion events, such asDeleteBucket. Many of these events within a short period of time may indicate malicious activity.")
T1490.hasDetection.append("Monitor for unexpected deletion of a cloud storage objects (ex: AWSdelete-object), especially those associated with cloud backups.")
T1580.hasDetection.append("Monitor cloud logs for API calls and other potentially unusual activity related to cloud data object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.")
T1619.hasDetection.append("Monitor cloud logs for API calls used for file or object enumeration for unusual activity. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.")
T1537.hasDetection.append("Periodically baseline cloud storage infrastructure to identify malicious modifications or additions.")
T1486.hasDetection.append("Monitor for changes made in cloud environments for events that indicate storage objects have been anomalously modified.")
T1537.hasDetection.append("Monitor for anomalous file transfer activity between accounts and/or to untrusted/unexpected VPCs.")
T1548.hasDetection.append("Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.")
T1548_001.hasDetection.append("Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.")
T1548_002.hasDetection.append("Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.")
T1548_003.hasDetection.append("Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as thesudocommand.")
T1134.hasDetection.append("Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of therunascommand. Detailed command-line logging is not enabled by default in Windows.")
T1134_001.hasDetection.append("Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.")
T1134_002.hasDetection.append("Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.")
T1134_003.hasDetection.append("Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.")
T1087.hasDetection.append("Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.")
T1087_001.hasDetection.append("Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such asnet user,net account,net localgroup,Get-LocalUser, anddscl.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.")
T1087_002.hasDetection.append("Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such asnet user /domainandnet group /domain,dscacheutil -q groupon macOS, andldapsearchon Linux.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.")
T1087_003.hasDetection.append("Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such asGet-AddressList,Get-GlobalAddressList, andGet-OfflineAddressBook.")
T1087_004.hasDetection.append("Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.")
T1098.hasDetection.append("Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as theauthorized_keysor/etc/ssh/sshd_config).Monitor executed commands and arguments of suspicious commands (such asAdd-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.")
T1098_004.hasDetection.append("Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.")
T1010.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.Note: Commands can also be obtained from Payload event field for PowerShell event id 4103. For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management.Analytic 1 - Suspicious Commandssuspicious_commands = filter commands where event_id == 4103 AND ((command_line LIKE '%Get-Process%' AND command_line_parameter LIKE '%mainWindowTitle%'))")
T1560.hasDetection.append("Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.")
T1560_001.hasDetection.append("Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.")
T1123.hasDetection.append("Monitor executed commands and arguments for actions that can leverage a computer’s peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.")
T1119.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to collect internal data.")
T1020.hasDetection.append("Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection")
T1197.hasDetection.append("Monitor executed commands and arguments from the BITSAdmin tool (especially the ‘Transfer’, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)Admin logs, PowerShell logs, and the Windows Event log for BITS activity.Also consider investigating more detailed information about jobs by parsing the BITS job database.")
T1547.hasDetection.append("Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.")
T1547_001.hasDetection.append("Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.")
T1547_002.hasDetection.append("Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.")
T1547_003.hasDetection.append("Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.")
T1547_004.hasDetection.append("Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and or executables when a user logs in.Analytic 1 - Modification of the Winlogon Registry Keysuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (ProcessCommandLine LIKE '%MicrosoftWindows NTCurrentVersionWinlogon%' AND (ProcessCommandLine LIKE '%Userinit%' OR ProcessCommandLine LIKE '%Shell%' OR ProcessCommandLine LIKE '%Notify%')) AND (ProcessCommandLine LIKE '%reg%' OR ProcessCommandLine LIKE '%add%' OR ProcessCommandLine LIKE '%/d%' OR ProcessCommandLine LIKE '%Set-ItemProperty%' OR ProcessCommandLine LIKE '%New-ItemProperty%' ProcessCommandLine LIKE '%-value%')")
T1547_005.hasDetection.append("Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.")
T1547_006.hasDetection.append("Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:modprobe,insmod,lsmod,rmmod, ormodinfoAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled.Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.On macOS, monitor for execution ofkextloadcommands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in thekext_policytable. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database,/var/db/SystemPolicyConfiguration/KextPolicy.")
T1547_007.hasDetection.append("Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.")
T1547_013.hasDetection.append("Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.")
T1547_014.hasDetection.append("Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.")
T1037.hasDetection.append("Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.")
T1037_001.hasDetection.append("Monitor executed commands and arguments for logon scripts")
T1037_002.hasDetection.append("Monitor executed commands with arguments to install or modify login hooks.")
T1037_003.hasDetection.append("Monitor executed commands and arguments for logon scripts")
T1037_004.hasDetection.append("Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior")
T1037_005.hasDetection.append("Monitor executed commands and arguments for logon scripts")
T1176.hasDetection.append("Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.")
T1217.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.")
T1110.hasDetection.append("Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.")
T1115.hasDetection.append("Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.")
T1651.hasDetection.append("Monitor commands and scripts executed on virtual machines. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of executed jobs are available in theC:PackagesPluginsMicrosoft.CPlat.Core.RunCommandWindowsdirectory on Windows virtual machines.")
T1059.hasDetection.append("Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.")
T1059_001.hasDetection.append("If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations).PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.")
T1059_002.hasDetection.append("Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.")
T1059_003.hasDetection.append("Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1059_004.hasDetection.append("Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1059_005.hasDetection.append("Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.")
T1059_006.hasDetection.append("Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.")
T1059_007.hasDetection.append("Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system informationDiscovery,Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA throughosascriptand usage ofOSAScriptAPI that may be related to other suspicious behavior occurring on the system.")
T1059_008.hasDetection.append("Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.")
T1059_009.hasDetection.append("Consider reviewing command history in either host machines or cloud audit logs to determine if unauthorized or suspicious commands were executed.Cloud API activity logging is typically enabled by default and may be reviewed in sources like the Microsoft Unified Audit Log, AWS CloudTrail, and GCP Admin Acitivty logs. Review these sources for history of executed API commands. Host logs may also be reviewed to capture CLI commands or PowerShell module usage to invoke Cloud API functions.")
T1609.hasDetection.append("Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.")
T1136.hasDetection.append("Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd")
T1136_001.hasDetection.append("Monitor executed commands and arguments for actions that are associated with local account creation, such asnet user /add,useradd,dscl -create, andkubectl create serviceaccount.")
T1136_002.hasDetection.append("Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.")
T1543.hasDetection.append("Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.")
T1543_001.hasDetection.append("Ensure Launch Agent'sProgramArgumentskey pointing to executables located in the/tmpor/sharedfolders are in alignment with enterprise policy. Ensure all Launch Agents with theRunAtLoadkey set totrueare in alignment with policy.")
T1543_002.hasDetection.append("Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services:systemctl list-units -–type=service –all. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as/usr/sbin/servicemay reveal malicious systemd service execution.")
T1543_003.hasDetection.append("Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.")
T1543_004.hasDetection.append("Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with theRunAtLoadparameter set to true, ensure theProgramparameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such asProgramandProgramArgumentsparameters but one must be present.")
T1555.hasDetection.append("Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.")
T1555_001.hasDetection.append("Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.")
T1555_002.hasDetection.append("Monitor executed commands and arguments that may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain.")
T1555_003.hasDetection.append("Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.")
T1555_004.hasDetection.append("Monitor executed commands and arguments for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds: Windows Credentials")
T1555_005.hasDetection.append("Monitor executed commands and arguments that may acquire user credentials from third-party password managers.")
T1485.hasDetection.append("Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.")
T1486.hasDetection.append("Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit")
T1005.hasDetection.append("Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1039.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1025.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1074.hasDetection.append("Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1074_001.hasDetection.append("Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1074_002.hasDetection.append("Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1622.hasDetection.append("Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.")
T1652.hasDetection.append("Monitor executed commands (lsmod,driverquery, etc.) with arguments highlighting potentially malicious attempts to enumerate device drivers.")
T1006.hasDetection.append("Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used throughPowerShell, additional logging of PowerShell scripts is recommended.")
T1561.hasDetection.append("Monitor for direct access read/write attempts using the.notation.Monitor for unusual kernel driver installation activity.")
T1561_001.hasDetection.append("Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.")
T1561_002.hasDetection.append("Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.")
T1555_006.hasDetection.append("Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from the secrets manager, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests. ")
T1567_004.hasMitigation.append("Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers.")
T1567_004.hasDetection.append("Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks.")
T1567_004.hasDetection.append("Monitor executed commands and arguments that may exfiltrate data to a webhook as a malicious command and control channel. Additionally, monitor commands that may create new webhook configurations in SaaS services - for example, gh webhook forward in Github or mgc subscriptions create in Office 365.")
T1567_004.hasDetection.append("Monitor for files being accessed to exfiltrate data to a webhook as a malicious command and control channel.")
T1567_004.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1567_004.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1657.hasMitigation.append("Limit access/authority to execute sensitive transactions, and switch to systems and procedures designed to authenticate/approve payments and purchase requests outside of insecure communication lines such as email.")
T1657.hasMitigation.append("Train and test users to identify social engineering techniques used to enable financial theft.")
T1657.hasDetection.append("Review and monitor financial application logs for signs of financial theft, such as abnormal monetary transactions or resource balances.")
T1657.hasDetection.append("Email logs may also highlight account takeovers, impersonation, or another activity that may enable monetary theft.")
T1564_011.hasDetection.append("Monitor executed commands and arguments, such as nohup, that may attempt to hide processes from interrupt signals.")
T1564_011.hasDetection.append("Monitor newly created processes for artifacts, such as nohup or PowerShell -ErrorAction SilentlyContinue, that may attempt to hide processes from interrupt signals.")
T1562_012.hasMitigation.append("Routinely check account role permissions to ensure only expected users and roles have permission to modify logging settings. To ensure Audit rules can not be modified at runtime, add the auditctl -e 2 as the last command in the audit.rules files. Once started, any attempt to change the configuration in this mode will be audited and denied. The configuration can only be changed by rebooting the machine.")
T1562_012.hasMitigation.append("An adversary must already have root level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require. ")
T1562_012.hasDetection.append("Command-line invocation of the auditctl utility may be unusual, depending on how systems are typically used in a particular environment. At runtime, look for commands to modify or create rules using the auditctl utility.")
T1562_012.hasDetection.append("Monitor for missing log files from machines with known active periods.")
T1562_012.hasDetection.append("Monitor changes made to the /etc/audit/audit.rules file containing the sequence of auditctl commands loaded at boot time.")
T1562_012.hasDetection.append("Monitor for abnormal execution of syslog and other functions associated with system logging.")
T1562_012.hasDetection.append("Using another process or third-party tools, monitor for potentially malicious modifications or access to the auditd system process.")
T1656.hasMitigation.append("Threat intelligence helps defenders and users be aware of and defend against common lures and active campaigns that have been used for impersonation.")
T1656.hasMitigation.append("Train users to be aware of impersonation tricks and how to counter them, for example confirming incoming requests through an independent platform like a phone call or in-person, to reduce risk.")
T1656.hasDetection.append("Review and monitor email and other user communication logs for signs of impersonation, such as suspicious emails (e.g., from known malicious or compromised accounts) or content associated with an adversary's actions on objective (e.g., abnormal monetary transactions).")
T1654.hasMitigation.append("Limit the ability to access and export sensitive logs to privileged accounts where possible.")
T1654.hasDetection.append("Monitor for the use of commands and arguments of utilities and other tools used to access and export logs.")
T1654.hasDetection.append("Monitor for access to system and service log files, especially from unexpected and abnormal users.")
T1654.hasDetection.append("Monitor for unexpected process activity associated with utilities that can access and export logs, such as wevutil.exe on Windows and CollectGuestLogs.exe on Azure hosted VMs.")
T1036_009.hasDetection.append("Monitor for API calls such as fork() which can be abused to masquerade or manipulate process metadata.")
T1036_009.hasDetection.append("Monitor for the abnormal creation of background processes as well as processes executing from abnormal locations, such as /dev/shm.")
T1578_005.hasMitigation.append("Routinely monitor user permissions to ensure only the expected users have the capability to request quota adjustments or modify tenant-level compute settings.")
T1578_005.hasMitigation.append("Limit permissions to request quotas adjustments or modify tenant-level compute setting to only those required.")
T1578_005.hasDetection.append("Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.")
T1027_012.hasMitigation.append("Use signatures or heuristics to detect malicious LNK and subsequently downloaded files.")
T1027_012.hasMitigation.append("On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts or payloads.")
T1027_012.hasDetection.append("Monitor for downloaded malicious files, though developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by LNK Icon Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.")
T1027_012.hasDetection.append("Monitor contextual data about a file that may highlight embedded malicious content, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives.")
T1566_004.hasMitigation.append("Users can be trained to identify and report social engineering techniques and spearphishing attempts, while also being suspicious of and verifying the identify of callers.")
T1566_004.hasDetection.append("Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events.")
T1598_004.hasMitigation.append("Users can be trained to identify and report social engineering techniques and spearphishing attempts, while also being suspicious of and verifying the identify of callers.")
T1598_004.hasDetection.append("Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers.")
T1653.hasMitigation.append("Periodically inspect systems for abnormal and unexpected power settings that may indicate malicious activty.")
T1653.hasDetection.append("Monitor and inspect commands and arguments associated with manipulating the power settings of a system.")
T1653.hasDetection.append("Monitor for unexpected changes to configuration files associated with the power settings of a system.")
T1021_008.hasMitigation.append("If direct virtual machine connections are not required for administrative use, disable these connection types where feasible.")
T1021_008.hasMitigation.append("Limit which users are allowed to access compute infrastructure via cloud native methods.")
T1021_008.hasDetection.append("Monitor cloud audit logs and host logs for logon session events. These can be found in CloudTrail, Unified Audit Logs, Windows Event Logs and /var/log/auth.log or /var/log/secure for Linux systems.")
T1016_002.hasDetection.append("Monitor executed commands and arguments that may collect Wi-Fi information on compromised systems.")
T1016_002.hasDetection.append("Monitor for API calls (such as those from wlanAPI.dll) that may gather details about locally reachable Wi-Fi networks.")
T1484.hasDetection.append("Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.")
T1484_001.hasDetection.append("Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.")
T1484_002.hasDetection.append("Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.Monitor for PowerShell commands such as:Update-MSOLFederatedDomain –DomainName: Federated Domain Name, orUpdate-MSOLFederatedDomain –DomainName: Federated Domain Name –supportmultipledomain.")
T1482.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.")
T1114.hasDetection.append("Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.")
T1114_001.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1114_002.hasDetection.append("Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.")
T1114_003.hasDetection.append("On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.")
T1546.hasDetection.append("Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.")
T1546_001.hasDetection.append("Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.")
T1546_002.hasDetection.append("Monitor executed commands and arguments of .scr files.Analytic 1 - Modify the HKCUControl PanelDesktop registry keysuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (ProcessCommandLine LIKE '%reg%' AND ProcessCommandLine LIKE '%add%' AND ProcessCommandLine LIKE '%HKCUControl PanelDesktop%')")
T1546_003.hasDetection.append("Monitor executed commands and arguments that can be used to register WMI persistence, such as theRegister-WmiEventPowerShellcmdlet")
T1546_004.hasDetection.append("Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user’s shell.")
T1546_005.hasDetection.append("Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.")
T1546_006.hasDetection.append("Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.")
T1546_007.hasDetection.append("Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.")
T1546_008.hasDetection.append("Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of Accessibility Features.")
T1546_009.hasDetection.append("Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.")
T1546_010.hasDetection.append("Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.")
T1546_011.hasDetection.append("Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.")
T1546_012.hasDetection.append("Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.")
T1546_013.hasDetection.append("Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.")
T1546_014.hasDetection.append("Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).")
T1546_015.hasDetection.append("Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on changes to COM registry keys, including HKCUSoftwareClassesCLSID*.")
T1546_016.hasDetection.append("Monitor executed commands and arguments that may be related to abuse of installer packages, including malicious commands triggered by application installations.")
T1480.hasDetection.append("Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.")
T1480_001.hasDetection.append("Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.")
T1048.hasDetection.append("Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.")
T1048_001.hasDetection.append("Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1048_002.hasDetection.append("Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1048_003.hasDetection.append("Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1041.hasDetection.append("Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.")
T1011.hasDetection.append("Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel")
T1011_001.hasDetection.append("Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.")
T1052.hasDetection.append("Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.")
T1052_001.hasDetection.append("Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.")
T1567.hasDetection.append("Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.")
T1567_001.hasDetection.append("Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.")
T1567_002.hasDetection.append("Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.")
T1083.hasDetection.append("Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1222.hasDetection.append("Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1222_001.hasDetection.append("Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.")
T1222_002.hasDetection.append("Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments includechmod +x,chmod -R 755, andchmod 777.")
T1615.hasDetection.append("Monitor for suspicious use ofgpresult. Monitor for the use of PowerShell functions such asGet-DomainGPOandGet-DomainGPOLocalGroupand processes spawning with command-line arguments containingGPOLocalGroup.")
T1564.hasDetection.append("Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_001.hasDetection.append("Monitor the file system and shell commands for files being created with a leading and the Windows command-line use of attrib.exe to add the hidden attribute.")
T1564_002.hasDetection.append("Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.")
T1564_003.hasDetection.append("Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.")
T1564_006.hasDetection.append("Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex.-silent,-ignore-reboot), as well as those associated with running a headless (in the background with no UI) virtual instance (ex.VBoxManage startvm $VM --type headless).Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex.VBoxManage.exe setextradata global GUI/SuppressMessages all). Monitor for commands which enable hypervisors such as Hyper-V.")
T1564_008.hasDetection.append("On Windows and Exchange systems, monitor for creation or modification of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.")
T1564_009.hasDetection.append("Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.")
T1574.hasDetection.append("Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.")
T1574_006.hasDetection.append("Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.")
T1574_011.hasDetection.append("Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.")
T1574_012.hasDetection.append("Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, andReg. Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.")
T1562.hasDetection.append("Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.")
T1562_001.hasDetection.append("Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such asSet-MpPreference-DisableScriptScanning 1in Windows,sudo spctl --master-disablein macOS, andsetenforce 0in Linux. Furthermore, on Windows monitor for the execution of taskkill.exe or Net Stop commands which may deactivate antivirus software and other security systems.")
T1562_002.hasDetection.append("Monitor executed commands and arguments for commands that can be used to disable logging. For example,Wevtutil, auditpol,sc stop EventLog,reg add,Set- or Stop-Service,Set- or New-ItemProperty,sc config, and offensive tooling (such asMimikatzand Invoke-Phant0m) may be used to clear logs and/or change the EventLog/audit policy.")
T1562_003.hasDetection.append("Correlating a user session with a distinct lack of new commands in their.bash_historycan be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with-HistorySaveStyle SaveNothingcommand-line arguments and use of the PowerShell commandsSet-PSReadlineOption -HistorySaveStyle SaveNothingandSet-PSReadLineOption -HistorySavePath {File Path}. For network devices, monitor for missing or inconsistencies in Network Device CLI logging present in AAA logs as well as in specific RADIUS and TACAS+ logs.")
T1562_004.hasDetection.append("Monitor executed commands and arguments associated with disabling or the modification of system firewalls such asnetsh advfirewall firewall set rule group=file and printer sharing new enable=Yes,ufw disable, andufw logging off.")
T1562_006.hasDetection.append("Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. Adversaries may attempt to evade system defenses by unloading minifilter drivers used by host-based sensors such as Sysmon through the use of the fltmc command-line utility. Accordingly, this analytic looks for command-line invocations of this utility when used to unload minifilter drivers.Analytic 1 - Indicator Blocking - Driver Unloadedfltmc_processes = filter processes where (exe = fltmc.exe AND command_line = unload)")
T1562_009.hasDetection.append("Monitor executed commands and arguments associated with making configuration changes to boot settings, such asbcdedit.exeandbootcfg.exe.")
T1562_010.hasDetection.append("Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex:powershell –v 2).")
T1070.hasDetection.append("Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_001.hasDetection.append("Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell) such asRemove-EventLog -LogName Security.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on attempts to Clear Windows Event Logs. In particular, Powershell has a built-in Clear-EventLog cmdlet that allows for a specified log to be cleared.")
T1070_002.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.")
T1070_003.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to clear command history, such asClear-Historyon Windows orclear logging/clear historyvia a Network Device CLI in AAA logs, or to disable writing command history, such ashistory -cin bash/zsh .Analytic 1 : Clear Powershell Console Command Historysuspicious_commands = filter ProcessId, ProcessFilePath, command_line where (event_id == 1 OR event_id == 4688) AND (command_line LIKE '%rm (Get-PSReadlineOption).HistorySavePath%' OR command_line LIKE '%del (Get-PSReadlineOption).HistorySavePath%' OR command_line LIKE '%Set-PSReadlineOption –HistorySaveStyle SaveNothing%’ OR command_line LIKE '%Remove-Item (Get-PSReadlineOption).HistorySavePath%' OR (command_line LIKE '%del%' AND command_line LIKE '%MicrosoftWindowsPowershellPSReadlineConsoleHost_history.txt%'))Analytic 2 : Powershell Commandssuspicious_commands = filter CommandName, CommandType where event_id == 4103 AND (CommandName LIKE '%Clear-History%' OR (CommandName LIKE '%Remove-Item%' AND CommandParameterValue LIKE '%ConsoleHost_history.text%'))")
T1070_004.hasDetection.append("Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.")
T1070_005.hasDetection.append("Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.")
T1070_007.hasDetection.append("Monitor executed commands and arguments that may delete or alter malicious network configuration settings as well as generated artifacts on a host system, including logs and files such asDefault.rdpor/var/log/.")
T1070_008.hasDetection.append("Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails. In Exchange environments, monitor for PowerShell cmdlets that may create or alter transport rules, such asNew-TransportRuleandSet-TransportRule.")
T1070_009.hasDetection.append("Monitor executed commands and arguments that may delete or alter generated artifacts associated with persistence on a host system.")
T1202.hasDetection.append("Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters.")
T1105.hasDetection.append("Monitor executed commands and arguments for suspicious activity associated with downloading external content.")
T1490.hasDetection.append("Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit.")
T1056_002.hasDetection.append("Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.")
T1570.hasDetection.append("Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files")
T1036.hasDetection.append("Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Masquerading.")
T1036_003.hasDetection.append("Monitor executed commands and arguments that may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities.")
T1036_004.hasDetection.append("Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.")
T1036_008.hasDetection.append("Monitor for abnormal command execution from otherwise non-executable file types (such as.txtand.jpg).")
T1556_005.hasDetection.append("Monitor command-line usage for-AllowReversiblePasswordEncryption $trueor other actions that could be related to malicious tampering of user settings (i.e.Group Policy Modification).")
T1112.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.")
T1046.hasDetection.append("Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.")
T1135.hasDetection.append("Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.")
T1040.hasDetection.append("Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network")
T1027.hasDetection.append("Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.")
T1027_004.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.")
T1027_010.hasDetection.append("Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.")
T1137.hasDetection.append("Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.")
T1137_001.hasDetection.append("Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.")
T1137_002.hasDetection.append("Monitor executed commands and arguments that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.")
T1137_003.hasDetection.append("Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.")
T1137_004.hasDetection.append("Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.")
T1137_005.hasDetection.append("Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.")
T1137_006.hasDetection.append("Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.")
T1003.hasDetection.append("Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools likeMimikatz.PowerShellscripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.")
T1003_001.hasDetection.append("Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 from the Microsoft-Windows-PowerShell/Operational log captures Powershell script blocks, whose contents can be further analyzed to determine if they’re performing LSASS dumping.")
T1003_002.hasDetection.append("Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.")
T1003_003.hasDetection.append("Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.Note: Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of commands and parameters being executed via creation of a new process. Event 800 (PowerShell) provides context of commands and parameters being executed via PowerShell. This detection is based on known Windows utilities commands and parameters that can be used to copy the ntds.dit file. It is recommended to keep the list of commands and parameters up to date.Analytic 1 - Command line attempt to access or create a copy of ntds.dit filesuspicious_command = filter command_execution where ((event_id = 4688 OR event_id = 1 OR event_id = 800) AND ((command_line = ntds AND command_line = ntdsutil AND command_line = create) OR (command_line = vssadmin AND command_line = create AMD command_line = shadow) OR (command_line = copy AND command_line = ntds.dit)")
T1003_004.hasDetection.append("Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.")
T1003_005.hasDetection.append("Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Detection of compromisedValid Accountsin-use by adversaries may help as well.")
T1003_007.hasDetection.append("Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or/proc.")
T1003_008.hasDetection.append("Monitor executed commands and arguments that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking.")
T1201.hasDetection.append("Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1120.hasDetection.append("Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.")
T1069.hasDetection.append("Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1069_001.hasDetection.append("Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.")
T1069_002.hasDetection.append("Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.")
T1069_003.hasDetection.append("Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings.")
T1647.hasDetection.append("Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in~/LaunchAgents,~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm, and an application'sInfo.plist.")
T1542.hasDetection.append("Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.")
T1542_005.hasDetection.append("Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.")
T1057.hasDetection.append("Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.")
T1012.hasDetection.append("Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management. The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider Registry")
T1563.hasDetection.append("Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.")
T1563_001.hasDetection.append("Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.")
T1563_002.hasDetection.append("Monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking. Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor to RDP hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName Remote Desktop Users | select -expand ComputerName.")
T1021.hasDetection.append("Monitor executed commands and arguments that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Malicious actors may rename built-in commands or external tools, such as those provided by SysInternals, to better blend in with the environment. In those cases, the file path name is arbitrary and may blend in well with the background. If the arguments are closely inspected, it may be possible to infer what tools are running and understand what an adversary is doing. When any legitimate software shares the same command lines, it must be whitelisted according to the expected parameters.Any tool of interest with commonly known command line usage can be detecting by command line analysis. Known substrings of command lines includePuTTYport forwarding-R * -pwsecure copy (scp)-pw * *@mimikatzsekurlsa::RAR-hpArchive* a * Additionally, it may be useful to find IP addresses in the command lined{1,3}.d{1,3}.d{1,3}.d{1,3}Analytic 1 - Suspicious Argumentsport_fwd = filter process where (command_line match -R .-pw)scp = filter process where (command_line match -pw ...@.mimikatz = filter process where (command_line match sekurlsa)rar = filter process where (command_line match  -hp )archive = filter process where (command_line match .a .*)ip_addr = filter process where (command_line match d{1,3}.d{1,3}.d{1,3}.d{1,3})")
T1021_002.hasDetection.append("Monitor executed commands and arguments that connect to remote shares, such asNet, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential connections and writing to remote shares.")
T1021_006.hasDetection.append("Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.")
T1018.hasDetection.append("Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor toRDP Hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName Remote Desktop Users | select -expand ComputerName.")
T1496.hasDetection.append("Monitor executed commands and arguments that may indicate common cryptomining or proxyware functionality.")
T1053.hasDetection.append("Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_002.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data.")
T1053_003.hasDetection.append("Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.")
T1053_005.hasDetection.append("Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.Analytic 1 : New processes whose command line includes commands that create or modify scheduled tasks with a suspicious script, extension or user writable pathsuspicious_processes = filter ProcessId, ProcessFilePath, command_line, ProcessParentFilePath,ProcessParentCommandLine where (EventId == 1 OR EventId == 4688) AND command_line LIKE '%SCHTASKS%' AND (command_line LIKE '%/CREATE%' OR command_line LIKE '%/CHANGE%') AND (command_line LIKE '%.cmd%' OR command_line LIKE '%.ps1%' OR command_line LIKE '%.vbs%' OR command_line LIKE '%.py%' OR command_line LIKE '%.js%' OR command_line LIKE '%.exe%' OR command_line LIKE '%.bat%' OR command_line LIKE '%javascript%' OR command_line LIKE '%powershell%' OR command_line LIKE '%rundll32%' OR command_line LIKE '%wmic%' OR command_line LIKE '%cmd%' OR command_line LIKE '%cscript%' OR command_line LIKE '%wscript%' OR command_line LIKE '%regsvr32%' OR command_line LIKE '%mshta%' OR command_line LIKE '%bitsadmin%' OR command_line LIKE '%certutil%' OR command_line LIKE '%msiexec%' OR command_line LIKE '%javaw%' OR command_line LIKE '%[%]APPDATA[%]%' OR command_line LIKE '%AppDataRoaming%' OR command_line LIKE '%[%]PUBLIC[%]%' OR command_line LIKE '%C:UsersPublic%' OR command_line LIKE '%[%]ProgramData[%]%' OR command_line LIKE '%C:ProgramData%' OR command_line LIKE '%[%]TEMP[%]%' OR command_line LIKE '%AppDataLocalTemp%' OR command_line LIKE '%WindowsPLASystem%' OR command_line LIKE '%tasks%' OR command_line LIKE '%RegistrationCRMLog%' OR command_line LIKE '%FxsTmp%' OR command_line LIKE '%spooldriverscolor%' OR command_line LIKE '%tracing%' OR)")
T1053_006.hasDetection.append("Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers")
T1113.hasDetection.append("Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.")
T1505_004.hasDetection.append("Monitor execution and command-line arguments ofAppCmd.exe, which may be abused to install malicious IIS modules.")
T1505_005.hasDetection.append("Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.")
T1489.hasDetection.append("Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.")
T1518.hasDetection.append("Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.")
T1518_001.hasDetection.append("Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Security Software Discovery.")
T1649.hasDetection.append("Monitor for the execution of commands and other utilities abused to forge and/or steal certificates and related private keys.")
T1558.hasDetection.append("Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enablePass the Ticket.")
T1553.hasDetection.append("Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.")
T1553_001.hasDetection.append("Monitor and investigate attempts to modify extended file attributes with utilities such asxattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1553_004.hasDetection.append("Monitor for commands, such assecurity add-trusted-cert(macOS) orcertutil -addstore(Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.The Sysinternals Sigcheck utility can also be used (sigcheck.exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.")
T1553_006.hasDetection.append("Monitor for the execution of commands that could modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.")
T1218.hasDetection.append("Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.")
T1218_001.hasDetection.append("Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.")
T1218_002.hasDetection.append("When executed from the command line or clicked, control.exe will execute the CPL file (ex:control.exe file.cpl) beforeRundll32is used to call the CPL's API functions (ex:rundll32.exe shell32.dll,Control_RunDLL file.cpl). CPL files can be executed directly via the CPL API function with just the latterRundll32command, which may bypass detections and/or execution filters for control.exe.")
T1218_003.hasDetection.append("Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.")
T1218_004.hasDetection.append("Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.")
T1218_005.hasDetection.append("Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.")
T1218_007.hasDetection.append("Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.")
T1218_008.hasDetection.append("Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.")
T1218_009.hasDetection.append("Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.")
T1218_010.hasDetection.append("Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.")
T1218_011.hasDetection.append("Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Typical command-line usage of rundll32.exe isrundll32.exe DllFile,EntryPointwhereDllFileis the name of the DLL file being called and EntryPoint the name of the entry point in the DLL file.DLLs stored on SMB shares can similarly be called using the syntax ofrundll32.exe DllFile,EntryPointwhereis the IPv4 address of the host of the SMB share.Rundll32 can also be used to execute arbitrary Javascript using the syntaxrundll32.exe javascript:<code_block>where <code_block> is a string defining the Javascript code to be executed.")
T1218_012.hasDetection.append("Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.")
T1218_013.hasDetection.append("Adversaries may rename abusable binaries to evade detections, but the argumentINJECTRUNNINGis required for mavinject.exe to performDynamic-link Library Injectionand may therefore be monitored to alert malicious activity.")
T1218_014.hasDetection.append("Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.")
T1082.hasDetection.append("Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1614.hasDetection.append("Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.")
T1614_001.hasDetection.append("Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.")
T1016.hasDetection.append("Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1016_001.hasDetection.append("Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.")
T1049.hasDetection.append("Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1033.hasDetection.append("Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools likeMimikatz.PowerShellscripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.")
T1216.hasDetection.append("Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.")
T1216_001.hasDetection.append("Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.")
T1007.hasDetection.append("Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.")
T1569.hasDetection.append("Monitor for command line invocations of tools capable of modifying services that doesn’t correspond to normal usage patterns and known software, patch cycles, etc.")
T1569_001.hasDetection.append("Monitor command-line execution of thelaunchctlcommand immediately followed by abnormal network connections.")
T1569_002.hasDetection.append("Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.")
T1529.hasDetection.append("Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.")
T1124.hasDetection.append("Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.")
T1127.hasDetection.append("Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.")
T1127_001.hasDetection.append("Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.")
T1552.hasDetection.append("While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). SeeValid Accountsfor more information.")
T1552_001.hasDetection.append("While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). SeeValid Accountsfor more information.")
T1552_002.hasDetection.append("Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.")
T1552_003.hasDetection.append("While users do typically rely on their history of commands, they often access this history through other utilities like history instead of commands likecat ~/.bash_history.")
T1552_004.hasDetection.append("Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.")
T1552_006.hasDetection.append("Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.")
T1552_007.hasDetection.append("Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.")
T1204.hasDetection.append("Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used toDeobfuscate/Decode Files or Informationin payloads.")
T1204_003.hasDetection.append("Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.")
T1125.hasDetection.append("Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.")
T1497.hasDetection.append("Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_001.hasDetection.append("Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_002.hasDetection.append("Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_003.hasDetection.append("Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1047.hasDetection.append("Monitor executed commands and arguments for actions that are used to perform remote behavior")
T1610.hasDetection.append("Monitor for newly constructed containers that may deploy a container into an environment to facilitate execution or evade defenses.")
T1611.hasDetection.append("Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root.")
T1053.hasDetection.append("Monitor for newly constructed containers that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_007.hasDetection.append("Monitor for newly constructed containers")
T1204.hasDetection.append("Monitor for newly constructed containers that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.")
T1204_003.hasDetection.append("Track the deployment of new containers, especially from newly built images.")
T1613.hasDetection.append("Monitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.")
T1610.hasDetection.append("Monitor for activation or invocation of a container that may deploy a container into an environment to facilitate execution or evade defenses.")
T1204.hasDetection.append("Monitor for the activation or invocation of a container (ex: docker start or docker restart)")
T1204_003.hasDetection.append("Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.")
T1583.hasDetection.append("Monitor for queried domain name system (DNS) registry data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_001.hasDetection.append("Monitor queried domain name system (DNS) registry data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.")
T1584.hasDetection.append("Monitor for queried domain name system (DNS) registry data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_001.hasDetection.append("Monitor for queried domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_002.hasDetection.append("Monitor for queried domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583.hasDetection.append("Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_001.hasDetection.append("Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.")
T1584.hasDetection.append("Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.")
T1584_001.hasDetection.append("Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.")
T1583.hasDetection.append("Monitor for logged domain name system (DNS) data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_001.hasDetection.append("Monitor logged domain name system (DNS) data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.")
T1584.hasDetection.append("Monitor for logged domain name system (DNS) data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_001.hasDetection.append("Monitor for logged domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_002.hasDetection.append("Monitor for logged domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1092.hasDetection.append("Monitor for unexpected file access on removable media")
T1006.hasDetection.append("Monitor handle opens on volumes that are made by processes to determine when they may be directly collecting data from logical drives.")
T1561.hasDetection.append("Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1561_001.hasDetection.append("Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1561_002.hasDetection.append("Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1092.hasDetection.append("Monitor for newly executed processes when removable media is mounted.")
T1052.hasDetection.append("Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data via a physical medium, such as a removable drive.")
T1052_001.hasDetection.append("Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data over a USB connected physical device.")
T1200.hasDetection.append("Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.")
T1091.hasDetection.append("Monitor for newly constructed drive letters or mount points to removable media")
T1561.hasDetection.append("Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1561_001.hasDetection.append("Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1561_002.hasDetection.append("Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.")
T1542.hasDetection.append("Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.")
T1542_003.hasDetection.append("Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.")
T1014.hasDetection.append("Monitor for changes made to drive letters or mount points of data storage devices for unexpected modifications that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.")
T1087.hasDetection.append("Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.")
T1087_001.hasDetection.append("Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the Windows SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.")
T1119.hasDetection.append("Monitor for unexpected files (e.g., .pdf, .docx, .jpg, etc.) viewed for collecting internal data.")
T1020.hasDetection.append("Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.")
T1217.hasDetection.append("Monitor for unusual access to stored browser data, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration.")
T1555.hasDetection.append("Monitor for files being accessed that may search for common password storage locations to obtain user credentials.")
T1555_001.hasDetection.append("Monitor for Keychain files being accessed that may be related to malicious credential collection.")
T1555_003.hasDetection.append("Identify web browser files that contain credentials such as Google Chrome’s Login Data database file:AppDataLocalGoogleChromeUser DataDefaultLogin Data. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.")
T1555_004.hasDetection.append("Consider monitoring file reads to Vault locations,%Systemdrive%Users[Username]AppDataLocalMicrosoft[Vault/Credentials], for suspicious activity.")
T1555_005.hasDetection.append("Monitor file reads that may acquire user credentials from third-party password managers.")
T1005.hasDetection.append("Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.")
T1039.hasDetection.append("Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) interacting with network shares.")
T1025.hasDetection.append("Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system.")
T1074.hasDetection.append("Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.")
T1074_001.hasDetection.append("Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.")
T1074_002.hasDetection.append("Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.")
T1114.hasDetection.append("Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.")
T1114_001.hasDetection.append("Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.")
T1048.hasDetection.append("Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.")
T1048_001.hasDetection.append("Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1048_002.hasDetection.append("Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1048_003.hasDetection.append("Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.")
T1041.hasDetection.append("Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.")
T1011.hasDetection.append("Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.")
T1011_001.hasDetection.append("Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.")
T1052.hasDetection.append("Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.")
T1052_001.hasDetection.append("Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.")
T1567.hasDetection.append("Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.")
T1567_001.hasDetection.append("Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.")
T1567_002.hasDetection.append("Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.")
T1187.hasDetection.append("Monitor for unexpected files used to gather credentials when the files are rendered")
T1003.hasDetection.append("Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.")
T1003_002.hasDetection.append("Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.")
T1003_003.hasDetection.append("Monitor for access or copy of the NTDS.dit.Note: Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users requesting access or accessing file objects (ObjectType = File) such as C:WindowsNTDSntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. Access rights that allow read operations on file objects and its attributes are %%4416 Read file data, %%4419 Read extended file attributes, %%4423 Read file attributes. If you search for just the name of the file and not the entire directory, you may get access events related to the ntds.dit file within a snapshot or volume shadow copy.Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users creating or copying file objects (ObjectType = File) such as C:WindowsNTDSntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. In order to filter file creation events, filter access rigths %%4417 Write data to the file and %%4424 Write file attributes.Event 11 (Microsoft Windows Sysmon) provide context of processes and users creating or copying files. Unfortunately, this event provides context of the file being created or copied, but not the file being copied. A good starting point would be to look for new files created or copied with extension .dit.Analytic 1suspicious_file = filter file_access where ((event_id = 4656 OR event_id = 4663) AND (object_type = File) AND(file_name = ntds.dit) AND(access_list = %%4416 OR access_list = %%4419 OR access_list = %%4416)Analytic 2suspicious_file = filter file_access where ((event_id = 4656 OR event_id = 4663) AND (object_type = File) AND(file_name = ntds.dit) AND(access_list = %%4417 OR access_list = %%4424)Analytic 3suspicious_file = filter file_access where ((event_id = 11) AND (file_name = *.dit")
T1003_007.hasDetection.append("Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc//maps, where thedirectory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.")
T1003_008.hasDetection.append("Monitor for files being accessed that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access/etc/passwdand/etc/shadow, alerting on the pid, process name, and arguments of such programs.")
T1018.hasDetection.append("Monitor for files (such as/etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.For Windows, Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on access attempts of local files that store host data, including C:WindowsSystem32Driversetchosts.For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on access attempts of local files that store host data, including /etc/hosts.")
T1091.hasDetection.append("Monitor for unexpected files accessed on removable media.")
T1649.hasDetection.append("Monitor for attempts to access files that store information about certificates and their associated private keys. For example, personal certificates for users may be stored on disk in folders such as%APPDATA%MicrosoftSystemCertificatesMyCertificates.")
T1558.hasDetection.append("Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessingsecrets.ldband.secrets.mkeylocated in/var/lib/sss/secrets/.")
T1539.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.")
T1033.hasDetection.append("Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.")
T1552.hasDetection.append("Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's.bash_historyis read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like history instead of commands likecat ~/.bash_history.")
T1552_001.hasDetection.append("Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained.")
T1552_003.hasDetection.append("Monitoring when the user's.bash_historyis read can help alert to suspicious activity.")
T1552_004.hasDetection.append("Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity.")
T1552_006.hasDetection.append("Monitor for attempts to access SYSVOL that involve searching for XML files.")
T1560.hasDetection.append("Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.")
T1560_001.hasDetection.append("Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.")
T1560_002.hasDetection.append("Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.")
T1560_003.hasDetection.append("Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.")
T1547.hasDetection.append("Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.")
T1547_006.hasDetection.append("Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.")
T1547_008.hasDetection.append("Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.")
T1547_009.hasDetection.append("Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.")
T1547_012.hasDetection.append("Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.")
T1547_013.hasDetection.append("Malicious XDG autostart entries may be detected by auditing file creation events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.")
T1547_015.hasDetection.append("All login items created via shared file lists are viewable by using the System Preferences GUI or in the~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btmfile.These locations should be monitored and audited.")
T1037.hasDetection.append("Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.")
T1037_002.hasDetection.append("Monitor for the creation of and/or changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.")
T1037_003.hasDetection.append("Monitor for newly constructed files by unusual accounts outside of normal administration duties")
T1037_004.hasDetection.append("Monitor for newly constructed /etc/rc.local file")
T1037_005.hasDetection.append("Monitor for newly constructed files by unusual accounts outside of normal administration duties")
T1176.hasDetection.append("Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions")
T1554.hasDetection.append("Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.")
T1543.hasDetection.append("Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.")
T1543_001.hasDetection.append("Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.")
T1543_002.hasDetection.append("Systemd service unit files may be detected by auditing file creation and modification events within the/etc/systemd/system,/usr/lib/systemd/system/, and/home//.config/systemd/user/directories, as well as associated symbolic links")
T1543_004.hasDetection.append("Monitor for new files added to the/Library/LaunchDaemons/folder. The System LaunchDaemons are protected by SIP.")
T1486.hasDetection.append("Monitor for newly constructed files in user directories.")
T1565.hasDetection.append("Monitor for newly constructed files in order to manipulate external outcomes or hide activity")
T1565_001.hasDetection.append("Monitor for newly constructed files in order to manipulate external outcomes or hide activity")
T1565_003.hasDetection.append("Monitor for newly constructed files in order to manipulate external outcomes or hide activity")
T1074.hasDetection.append("Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.")
T1074_001.hasDetection.append("Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.")
T1074_002.hasDetection.append("Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.")
T1491.hasDetection.append("Monitor for newly constructed visual content for internal or external enterprise networks.")
T1491_001.hasDetection.append("Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.")
T1491_002.hasDetection.append("Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.")
T1006.hasDetection.append("Monitor for the creation of volume shadow copy and backup files, especially unexpected and irregular activity (relative to time, user, etc.).")
T1189.hasDetection.append("Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.")
T1546.hasDetection.append("Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.")
T1546_002.hasDetection.append("Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 - Created on disk that are being used as Screensaver filesscreensaver_key_modification = filter ProcessGuid, ProcessFilePath, UserName, RegistryKeyPath, RegistryKeyValueData where event_id == 13 AND RegistryKeyPath LIKE '%SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE%'new_files = filter ProcessFilePath, UserName, FileName where event_id == 11suspicious_files = filter k.ProcessGuid, k.ProcessFilePath, k.UserName, k.RegistryKeypath, k.RegistryKeyValueData FROM screensaver_key_modification kINNER JOIN new_files fON k.RegistryKeyValueData = f.FileName")
T1546_004.hasDetection.append("Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user’s shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the/etc/shellsfile.")
T1546_005.hasDetection.append("Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.")
T1546_008.hasDetection.append("Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.")
T1546_013.hasDetection.append("Locations whereprofile.ps1can be stored should be monitored for new profiles.Example profile locations include:*$PsHomeProfile.ps1*$PsHomeMicrosoft.{HostProgram}_profile.ps1*$HomeMy DocumentsPowerShellProfile.ps1*$HomeMy DocumentsPowerShellMicrosoft.{HostProgram}_profile.ps1")
T1546_014.hasDetection.append("Monitor emond rules creation by checking for files created in/etc/emond.d/rules/and/private/var/db/emondClients.")
T1546_016.hasDetection.append("Monitor creation of files associated with installer packages that may be abused for malicious execution.")
T1187.hasDetection.append("Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources")
T1564.hasDetection.append("Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_001.hasDetection.append("Monitor the file system and shell commands for files being created with a leading .")
T1564_006.hasDetection.append("Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).")
T1564_009.hasDetection.append("Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.")
T1574.hasDetection.append("Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.")
T1574_001.hasDetection.append("Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.")
T1574_002.hasDetection.append("Monitor for newly constructed files in common folders on the computer system.")
T1574_004.hasDetection.append("Monitor for newly constructed dylibs")
T1574_005.hasDetection.append("Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.")
T1574_006.hasDetection.append("Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.")
T1574_007.hasDetection.append("Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.")
T1574_008.hasDetection.append("Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.")
T1574_009.hasDetection.append("Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.")
T1574_001.hasDetection.append("Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.")
T1105.hasDetection.append("Monitor for file creation and files transferred into the network")
T1570.hasDetection.append("Monitor newly constructed files to/from a lateral tool transfer")
T1036_007.hasDetection.append("Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.")
T1556.hasDetection.append("Monitor for suspicious additions to the/Library/Security/SecurityAgentPluginsdirectory.Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).")
T1556_002.hasDetection.append("Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.")
T1556_008.hasDetection.append("Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).")
T1027.hasDetection.append("Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).")
T1027_004.hasDetection.append("Monitor for newly constructed files for payloads")
T1027_006.hasDetection.append("Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.")
T1027_009.hasDetection.append("Monitor for newly constructed files containing large amounts of data. Abnormal file sizes may be an indicator of embedded content.")
T1137.hasDetection.append("Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.")
T1137_001.hasDetection.append("Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.")
T1137_002.hasDetection.append("Monitor for newly constructed files that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.")
T1137_006.hasDetection.append("Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.")
T1003_002.hasDetection.append("OS Credential Dumping:Security Account Manager	Monitor newly constructed files being written with default names that have extracted credentials from the Security Account Manager.")
T1566.hasDetection.append("Monitor for newly constructed files from a phishing messages to gain access to victim systems.")
T1566_001.hasDetection.append("Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.")
T1091.hasDetection.append("Monitor for newly constructed files on removable media")
T1496.hasDetection.append("Monitor for common cryptomining or proxyware files on local systems that may indicate compromise and resource usage.")
T1053.hasDetection.append("Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_005.hasDetection.append("Monitor Windows Task Scheduler stores in %systemroot%System32Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. In order to gain persistence, privilege escalation, or remote execution, an adversary may use the Windows Task Scheduler to schedule a command to be run at a specified time, date, and even host. Task Scheduler stores tasks as files in two locations - C:WindowsTasks (legacy) or C:WindowsSystem32Tasks. Accordingly, this analytic looks for the creation of task files in these two locations.Analytic 1 - Scheduled Task - File Creationtask_files = filter files where ( (file_path = C:WindowsSystem32Tasks* or file_path = C:WindowsTasks*) and image_path != C:WINDOWSsystem32svchost.exe")
T1053_007.hasDetection.append("Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.")
T1505.hasDetection.append("Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.")
T1505_002.hasDetection.append("Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.")
T1505_003.hasDetection.append("File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.")
T1505_004.hasDetection.append("Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.")
T1553_005.hasDetection.append("Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.")
T1218.hasDetection.append("Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.")
T1218_001.hasDetection.append("Monitor presence and use of CHM files, especially if they are not typically used within an environment.")
T1218_002.hasDetection.append("Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.")
T1218_005.hasDetection.append("Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious")
T1218_014.hasDetection.append("Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such asservices.mscoreventvwr.msc. Invoking non-Microsoft .msc files may be an indicator of malicious activity.")
T1080.hasDetection.append("Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.")
T1204.hasDetection.append("Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).")
T1204_001.hasDetection.append("malicious documents and files that are downloaded from a link and executed on the user's computer")
T1204_002.hasDetection.append("Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).While batch files are not inherently malicious, it is uncommon to see them created after OS installation, especially in the Windows directory. This analytic looks for the suspicious activity of a batch file being created within the C:WindowsSystem32 directory tree. There will be only occasional false positives due to administrator actions.For Windows, Sysmon Event ID 11 (File create) can be used to track file creation events. This event also provides the Process ID of the process that created the file, which can be correlated with process creation events (e.g., Sysmon Event ID 1) to determine if the file was downloaded from an external network.For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as File Monitor can be used to track file creation events.Analytic 1 : Batch File Write to System32batch_files = filter files where ( extension =.bat AND file_path = C:Windowssystem32* )")
T1554.hasDetection.append("Monitor for unexpected deletion of client software binaries to establish persistent access to systems.")
T1485.hasDetection.append("Monitor for unexpected deletion to a file (ex: Sysmon EID 23)")
T1565.hasDetection.append("Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity")
T1565_001.hasDetection.append("Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity")
T1565_003.hasDetection.append("Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity")
T1562.hasDetection.append("Monitor for missing log files hosts and services with known active periods.")
T1070.hasDetection.append("Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_001.hasDetection.append("Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: The audit log was cleared). When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared. For Security logs, its event code 1100 and 1102. For System logs, it is event code 104.It is unlikely that event log data would be cleared during normal operations, and it is likely that malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared, it is suspicious.This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Alerting when a Clear Event Log is generated could point to this intruder technique. Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk.Attackers may set the option of the sources of events withLimit-EventLog -LogName Security -OverflowAction DoNotOverwriteto not delete old Evenlog when the .evtx is full. By default the Security Log size is configured with the minimum value of 20 480KB (~23 000 EventLog). So if this option is enabled, all the new EventLogs will be automatically deleted. We can detect this behavior with the Security EventLog 1104.Attackers may delete .evtx withdel C:WindowsSystem32winevtlogsSecurity.evtxorRemove-Item C:WindowsSystem32winevtlogsSecurity.evtxafter having disabled and stopped the Eventlog service. As the EventLog service is disabled and stopped, the .evtx files are no longer used by this service and can be deleted. The new EventLog will be Unavailable until the configuration is reset.Attackers may use the powershell commandRemove-EventLog -LogName Securityto unregister source of events that are part of Windows (Application, Security…). This command deletes the security EventLog (which also generates EventId 1102) but the new Eventlogs are still recorded until the system is rebooted . After the System is rebooted, the Security log is unregistered and doesn’t log any new Eventlog. However logs generated between the command and the reboot are still available in the .evtx file.Analytic 1 - User Activity from Clearing Event Logscleared_logs = filter log_files where ((log_name = Security) AND (event_id = 1100 OR event_id =1102 OR event_id = 1104)) OR (log_name = System AND event_code = 104")
T1070_002.hasDetection.append("Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs.")
T1070_003.hasDetection.append("Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.Analytic 1 : Deletion of command history filessuspicious_files = filter ProcessGuid, ProcessFilePath, UserName, FilePath where (event_id == 23 AND FilePath LIKE '%ConsoleHost_history.txt%') OR (event_id == 4663 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (UserAccessList LIKE '%1537%' OR UserAccessList LIKE '%DELETE%'))")
T1070_004.hasDetection.append("Monitor for unexpected deletion of files from the system")
T1070_008.hasDetection.append("Monitor for deletion of generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:UsersUsernameAppDataLocalCommsUnistoredata. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.")
T1070_009.hasDetection.append("Monitor for a file that may delete or alter generated artifacts associated with persistence on a host system.")
T1490.hasDetection.append("The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.")
T1548.hasDetection.append("Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).")
T1548_001.hasDetection.append("Monitor the file system for files that have the setuid or setgid bits set.")
T1554.hasDetection.append("Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment")
T1543_003.hasDetection.append("Adversaries may modify the binary file for an existing service to achievePersistencewhile potentiallyDefense Evasion. If a newly created or modified runs as a service, it may indicate APT activity. However, services are frequently installed by legitimate software. A well-tuned baseline is essential to differentiating between benign and malicious service modifications. Look for events where a file was created and then later run as a service. In these cases, a new service has been created or the binary has been modified. Many programs, such as msiexec.exe, do these behaviors legitimately and can be used to help validate legitimate service creations/modifications.Analytic 1 - Service Binary Modificationslegitimate_installers = [C:windowssystem32msiexec.exe, C:windowssyswow64msiexec.exe, ...]file_change = search File:Create,Modifyprocess = search Process:Createservice_process = filter processes where (parent_exe == services.exe)modified_service = join (search, filter) where ( file_change.time < service_process.time and file_change.file_path == service_process.image_path)modified_service = filter modified_service where (modified_service.file_change.image_path not in legitimate_installers)output modified_service")
T1565.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity")
T1565_003.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity")
T1546.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.")
T1546_006.hasDetection.append("Changes to binaries that do not line up with application updates or patches are also extremely suspicious.")
T1222.hasDetection.append("Monitor and investigate attempts to modify ACLs and file/directory ownership.")
T1222_001.hasDetection.append("Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID  NT AUTHORITYSYSTEM ) and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 : Access Permission Modification for Windowsfile_dacl_events = filter log_events where (event_id == 4670 ANDobject_type == File ANDsubject_security_id != NT AUTHORITYSYSTEM)Analytic 2 - Access Permission Modification for Linuxchmod_processes = filter processes where command_line == chmod *")
T1222_002.hasDetection.append("Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID  NT AUTHORITYSYSTEM ) and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 : Access Permission Modification for Windowsfile_dacl_events = filter log_events where (event_id == 4670 ANDobject_type == File ANDsubject_security_id !=NT AUTHORITYSYSTEM)Analytic 2 - Access Permission Modification for Linuxchmod_processes = filter processes where command_line == chmod *")
T1564.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_001.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.")
T1564_004.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA.")
T1564_007.hasDetection.append("If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if thePROJECTstream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to thePROJECTstream will inhibit attempts of reading the VBA source code through the GUI.")
T1564_009.hasDetection.append("Identify files with thecom.apple.ResourceForkextended attribute and large data amounts stored in resource forks.")
T1070.hasDetection.append("Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_006.hasDetection.append("Monitor for file modifications that collects information on file handle opens and can compare timestamp values")
T1570.hasDetection.append("Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.")
T1036.hasDetection.append("Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters u202E ,  [U+202E] , and  %E2%80%AE .Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.In Linux, thefilecommand may be used to check the file signature.")
T1036_001.hasDetection.append("Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.")
T1036_002.hasDetection.append("Monitor for common formats of RTLO characters within filenames such as u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.")
T1036_003.hasDetection.append("Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.")
T1036_005.hasDetection.append("Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.")
T1036_006.hasDetection.append("Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.")
T1036_007.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.")
T1027.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.File-based signatures may be capable of detecting code obfuscation depending on the methods used.")
T1027_001.hasDetection.append("Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.")
T1027_002.hasDetection.append("Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.")
T1027_003.hasDetection.append("Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.")
T1027_004.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.")
T1027_007.hasDetection.append("Depending on the method used to obfuscate API function calls, a file-based signature may be capable of detecting dynamical resolution.")
T1027_008.hasDetection.append("Detecting the presence of stripped payloads may be difficult and unwarranted in real-time, though analyzing contextual data about files (such as content and character entropy) may highlight attempts at obfuscation.")
T1027_009.hasDetection.append("Monitor contextual data about a file that may highlight embedded payloads, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives.")
T1055.hasDetection.append("Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.")
T1055_013.hasDetection.append("Scan file objects reported during the PsSetCreateProcessNotifyRoutine,which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access.Also consider comparing file objects loaded in memory to the corresponding file on disk.")
T1553.hasDetection.append("Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.")
T1553_001.hasDetection.append("Reviewfalsevalues under theLSFileQuarantineEnabledentry in an application'sInfo.plistfile (required by every application).falseunderLSFileQuarantineEnabledindicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecifiedLSFileQuarantineEnabledentry will default to not setting the quarantine flag.QuarantineEvents is a SQLite database containing a list of all files assigned thecom.apple.quarantineattribute, located at~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.")
T1553_002.hasDetection.append("Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.")
T1553_005.hasDetection.append("Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).")
T1195.hasDetection.append("Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.")
T1195_001.hasDetection.append("Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.")
T1195_002.hasDetection.append("Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.")
T1218_011.hasDetection.append("Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.")
T1548.hasDetection.append("On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile. Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.")
T1548_001.hasDetection.append("Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user’s context.")
T1548_003.hasDetection.append("On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile.")
T1098.hasDetection.append("Monitor for changes made to files related to account settings, such as/etc/ssh/sshd_configand the authorized_keys file for each user on a system.")
T1098_004.hasDetection.append("Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.")
T1547.hasDetection.append("Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.")
T1547_001.hasDetection.append("Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders.")
T1547_006.hasDetection.append("Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.")
T1547_007.hasDetection.append("Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.")
T1547_008.hasDetection.append("Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.")
T1547_009.hasDetection.append("Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.")
T1547_013.hasDetection.append("Malicious XDG autostart entries may be detected by auditing file modification events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.")
T1547_015.hasDetection.append("All login items created via shared file lists are viewable by using the System Preferences GUI or in the~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btmfile.These locations should be monitored and audited.")
T1037.hasDetection.append("Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.")
T1037_002.hasDetection.append("Monitor for changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.")
T1037_003.hasDetection.append("Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties")
T1037_004.hasDetection.append("Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory")
T1037_005.hasDetection.append("Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder")
T1554.hasDetection.append("Monitor changes to client software that do not correlate with known software or patch cycles.")
T1543.hasDetection.append("Monitor for changes to files associated with system-level processes.")
T1543_001.hasDetection.append("Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.")
T1543_002.hasDetection.append("Systemd service unit files may be detected by auditing file creation and modification events within the/etc/systemd/system,/usr/lib/systemd/system/, and/home//.config/systemd/user/directories, as well as associated symbolic links")
T1543_004.hasDetection.append("Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.")
T1485.hasDetection.append("Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:WindowsSystem32.")
T1486.hasDetection.append("Monitor for changes made to files in user directories.")
T1565.hasDetection.append("Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity")
T1565_001.hasDetection.append("Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity")
T1565_003.hasDetection.append("Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity")
T1491.hasDetection.append("Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.")
T1491_001.hasDetection.append("Monitor internal and websites for unplanned content changes.")
T1491_002.hasDetection.append("Monitor external websites for unplanned content changes.")
T1140.hasDetection.append("Monitor for changes made to files for unexpected modifications that attempt to hide artifacts. On Windows, Event ID 4663 (Security Log - An attempt was made to access an object) can be used to alert on suspicious file accesses (e.g., attempting to write to a file which shouldn’t be further modified) that may coincide with attempts to hide artifacts.")
T1546.hasDetection.append("Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.")
T1546_002.hasDetection.append("Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.Note: Although there are no standard events for file modification, Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted accesses of screensaver files (typically ending in a file extension of .scr).")
T1546_004.hasDetection.append("Monitor for changes to/etc/profileand/etc/profile.d, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.")
T1546_005.hasDetection.append("Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.")
T1546_006.hasDetection.append("Monitor file systems for changes to application binaries and invalid checksums/signatures.")
T1546_008.hasDetection.append("Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.")
T1546_001.hasDetection.append("Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.")
T1546_013.hasDetection.append("Locations whereprofile.ps1can be stored should be monitored for modifications.Example profile locations include:*$PsHomeProfile.ps1*$PsHomeMicrosoft.{HostProgram}_profile.ps1*$HomeMy DocumentsPowerShellProfile.ps1*$HomeMy DocumentsPowerShellMicrosoft.{HostProgram}_profile.ps1")
T1546_014.hasDetection.append("Monitor emond rules creation by checking for files modified in/etc/emond.d/rules/and/private/var/db/emondClients.")
T1187.hasDetection.append("Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources")
T1564.hasDetection.append("Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_002.hasDetection.append("Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the/Library/Preferences/com.apple.loginwindowplist file for unexpected modifications to theHide500Userskey value on macOS.")
T1564_003.hasDetection.append("Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for theapple.awt.UIElementor any other suspicious plist tag in plist files and flag them.")
T1564_004.hasDetection.append("There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex:file.ext:ads[.ext]) is commonly associated with ADSs.For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.")
T1564_005.hasDetection.append("Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.")
T1564_008.hasDetection.append("On MacOS systems, monitor for modifications to theRulesActiveState.plist,SyncedRules.plist,UnsyncedRules.plist, andMessageRules.plistfiles.")
T1574.hasDetection.append("Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.")
T1574_001.hasDetection.append("Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.")
T1574_002.hasDetection.append("Monitor for changes made to files for unexpected modifications to access permissions and attributes")
T1574_004.hasDetection.append("Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.")
T1574_005.hasDetection.append("Monitor for changes to binaries and service executables that may normally occur during software updates.")
T1574_006.hasDetection.append("Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.")
T1574_008.hasDetection.append("Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.")
T1574_009.hasDetection.append("Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.")
T1574_001.hasDetection.append("Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.")
T1562.hasDetection.append("Monitor changes made to configuration files that contain settings for logging and defensive tools.")
T1070.hasDetection.append("Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_002.hasDetection.append("Monitor for changes made to system log files, typically stored in /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes")
T1070_003.hasDetection.append("Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.Analytic 1 : Modification of access rights to command history filessuspicious_files = filter ProcessGuid, ProcessFilePath, UserName, FilePath where (event_id == 4663 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (UserAccessList LIKE '%1539%' or UserAccessList LIKE '%WRITE_DAC%')) OR (event_id == 4670 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (ObjectNewSd LIKE '%;FA%' OR ObjectNewSd LIKE '%;FW%' OR ObjectNewSd LIKE '%;BU%'))")
T1070_006.hasDetection.append("Monitor for unexpected modifications to file timestamps")
T1070_007.hasDetection.append("Monitor changes to files that may be indicators of deleting or altering malicious network configuration settings as well as generated artifacts on a host system that highlight network connection history, such asDefault.rdpor/var/log/.")
T1070_008.hasDetection.append("Monitor for changes made to generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:UsersUsernameAppDataLocalCommsUnistoredata. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.")
T1070_009.hasDetection.append("Monitor for changes made to a file may delete or alter generated artifacts associated with persistence on a host system.")
T1056.hasDetection.append("Monitor for changes made to files for unexpected modifications to access permissions and attributes")
T1056_003.hasDetection.append("Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.")
T1036.hasDetection.append("Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted file accesses that may be associate with Masquerading.")
T1036_003.hasDetection.append("Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.Note: There are no standard Windows events for file modification. However, Event ID 4663 (An attempt was made to access an object) can be used to audit and alert on attempts to access system utility binaries; the Accesses field can be used to filter by type of access (e.g., MODIFY vs DELETE).")
T1036_008.hasDetection.append("Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.In Linux, thefilecommand may be used to check the file signature.")
T1556.hasDetection.append("Monitor for suspicious modification of files associated with authentication processes, such as configuration files and module paths (e.g./etc/pam.d/). Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files. Also monitor for access to certificates and cryptographic keys material.")
T1556_001.hasDetection.append("Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).")
T1556_003.hasDetection.append("Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.")
T1556_004.hasDetection.append("Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.")
T1556_007.hasDetection.append("Monitor for suspicious modification of files associated with hybrid identity authentication processes, such as configuration files. Monitor for access to certificates and cryptographic keys material.")
T1601.hasDetection.append("Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file.Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.")
T1601_001.hasDetection.append("Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13")
T1601_002.hasDetection.append("Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file.")
T1137.hasDetection.append("Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.")
T1137_001.hasDetection.append("Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated")
T1137_002.hasDetection.append("Monitor for changes made to files that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.")
T1137_006.hasDetection.append("Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.")
T1647.hasDetection.append("Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from~/Library/Scriptsor~/Library/Preferences. Also, monitor for significant changes to any path pointers in a modified plist.")
T1055.hasDetection.append("Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_009.hasDetection.append("Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases.")
T1014.hasDetection.append("Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR.")
T1053.hasDetection.append("Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_002.hasDetection.append("On Windows, monitor Windows Task Scheduler stores in%systemroot%System32Tasksfor change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, allatjobs are stored in/var/spool/cron/atjobs/.")
T1053_003.hasDetection.append("Monitor for changes made to files for unexpected modifications to access permissions and attributes")
T1053_005.hasDetection.append("Monitor Windows Task Scheduler stores in %systemroot%System32Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.")
T1053_006.hasDetection.append("Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links")
T1505.hasDetection.append("Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.")
T1505_003.hasDetection.append("Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.")
T1505_004.hasDetection.append("Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to%windir%system32inetsrvconfigapplicationhost.configcould indicate an IIS module installation.")
T1505_005.hasDetection.append("Monitor unexpected changes and/or interactions withtermsrv.dll, which is typically stored in%SystemRoot%System32.")
T1489.hasDetection.append("Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.")
T1553.hasDetection.append("Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure Hide Microsoft Entries and Hide Windows Entries are both deselected.On macOS, the removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.")
T1553_001.hasDetection.append("The removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.")
T1553_003.hasDetection.append("Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure Hide Microsoft Entries and Hide Windows Entries are both deselected.")
T1569.hasDetection.append("Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.")
T1569_001.hasDetection.append("Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users/Library/LaunchAgentsor/Library/LaunchDaemonsfolders.Launch AgentorLaunch Daemonwith executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.")
T1080.hasDetection.append("Monitor for files that write or overwrite many files to a network shared directory may be suspicious.")
T1600.hasDetection.append("File Modification")
T1600_001.hasDetection.append("There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.")
T1600_002.hasDetection.append("There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.")
T1562.hasDetection.append("Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)")
T1562_004.hasDetection.append("Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)")
T1562_007.hasDetection.append("Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)")
T1518.hasDetection.append("Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)")
T1518_001.hasDetection.append("Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands).hasDetection.append(Monitor for unusual access to stored browser data, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration.")
T1518.hasDetection.append("Monitor for contextual data about a firewall and activity around it such as name, policy, or status.hasDetection.append(Monitor for files being accessed that may search for common password storage locations to obtain user credentials.)")
T1518_001.hasDetection.append("Monitor for contextual data about a firewall and activity around it such as name, policy, or status.hasDetection.append(Monitor for Keychain files being accessed that may be related to malicious credential collection.)")
T1562.hasDetection.append("Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms")
T1562_004.hasDetection.append("Monitor for changes made to firewall rules that might allow remote communication over protocols such as SMD and RDP. Modification of firewall rules might also consider opening local ports and services for different network profiles such as public and domain")
T1562_007.hasDetection.append("Monitor cloud logs for modification or creation of new security groups or firewall rules")
T1070.hasDetection.append("Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic")
T1070_007.hasDetection.append("Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic")
T1495.hasDetection.append("Monitor for changes made to the firmware for unexpected modifications to settings and/or data.Log attempts to read/write to BIOS and compare against known patching behavior.")
T1564.hasDetection.append("Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_005.hasDetection.append("Monitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools.Bootkit")
T1542.hasDetection.append("Monitor for changes made on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI")
T1542_001.hasDetection.append("Monitor for changes made to firmware.Dump and inspect BIOS images on vulnerable systems and compare against known good images.Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.")
T1542_002.hasDetection.append("Monitor for changes that may reveal indicators of malicious firmware such as strings. Also consider comparing components, including hashes of component firmware and behavior, against known good images.")
T1542_004.hasDetection.append("There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.")
T1542_005.hasDetection.append("Monitor for changes to boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.")
T1014.hasDetection.append("Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior.")
T1087_001.hasDetection.append("Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.")
T1087_002.hasDetection.append("Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.")
T1069.hasDetection.append("Monitor for an extracted list of ACLs of available groups and/or their associated settings.")
T1069_001.hasDetection.append("Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.")
T1069_002.hasDetection.append("Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.")
T1069_003.hasDetection.append("Monitor for an extracted list of available groups and/or their associated setting")
T1069.hasDetection.append("Monitor for contextual data about a group which describes group and activity around it.")
T1069_003.hasDetection.append("Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings.")
T1098.hasDetection.append("Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.")
T1098_002.hasDetection.append("Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts.")
T1612.hasDetection.append("Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment.")
T1525.hasDetection.append("Monitor interactions with images and containers by users to identify ones that are added anomalously.")
T1204.hasDetection.append("Monitor for newly constructed image that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.")
T1204_003.hasDetection.append("Monitor the local image registry to make sure malicious images are not added.")
T1485.hasDetection.append("Monitor for unexpected deletion of a virtual machine image (ex: Azure Compute Service Images DELETE)")
T1564_006.hasDetection.append("Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.Network adapter information may also be helpful in detecting the use of virtual instances.")
T1525.hasDetection.append("Periodically baseline virtual machine images to identify malicious modifications or additions.")
T1036.hasDetection.append("Collecting disk and resource filenames for binaries, comparing that the InternalName, OriginalFilename, and/or ProductName match what is expected, could provide useful leads but may not always be indicative of malicious activity.")
T1036_005.hasDetection.append("In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.")
T1525.hasDetection.append("Monitor interactions with images and containers by users to identify ones that are modified anomalously.In containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration.")
T1578.hasDetection.append("The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.")
T1578_002.hasDetection.append("The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.")
T1535.hasDetection.append("Monitor system logs to review instance activities occurring across all cloud environments and regions.")
T1204.hasDetection.append("Monitor for newly constructed instances that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.")
T1204_003.hasDetection.append("Monitor for newly constructed instances that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.")
T1485.hasDetection.append("Monitor for unexpected deletion of an instance (ex: instance.delete within GCP Audit Logs)")
T1578.hasDetection.append("The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.")
T1578_003.hasDetection.append("The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.")
T1580.hasDetection.append("Monitor cloud logs for API calls and other potentially unusual activity related to cloud instance enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.")
T1578.hasDetection.append("Periodically baseline instances to identify malicious modifications or additions.")
T1578_002.hasDetection.append("Periodically baseline instances to identify malicious modifications or additions.")
T1578_003.hasDetection.append("Periodically baseline instances to identify malicious modifications or additions.")
T1578_004.hasDetection.append("Periodically baseline instances to identify malicious modifications or additions.")
T1535.hasDetection.append("Monitor and consider configuring alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.")
T1578.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1578_004.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1578.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1578_004.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1204.hasDetection.append("Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)")
T1204_003.hasDetection.append("Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)")
T1578.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1578_004.hasDetection.append("Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1583.hasDetection.append("Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_003.hasDetection.append("Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_004.hasDetection.append("Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.")
T1583_006.hasDetection.append("Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) orExfiltration Over Web Service.")
T1583_007.hasDetection.append("Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle.")
T1583_008.hasDetection.append("If infrastructure or patterns in the malicious web content related to malvertising have been previously identified, internet scanning may uncover when an adversary has staged malicious web content. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.")
T1584.hasDetection.append("Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.")
T1584_003.hasDetection.append("Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.")
T1584_004.hasDetection.append("Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.")
T1584_006.hasDetection.append("Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and ControlWeb ServiceorExfiltration Over Web Service.")
T1584_007.hasDetection.append("Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle.")
T1587.hasDetection.append("Consider use of services that may aid in the tracking of capabilities, such as certificates, in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of information to uncover other adversary infrastructure.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1587_003.hasDetection.append("Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate.")
T1592.hasDetection.append("Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.")
T1592_001.hasDetection.append("Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.")
T1592_002.hasDetection.append("Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.")
T1592_004.hasDetection.append("Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.")
T1588.hasDetection.append("Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal capabilities that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1588_004.hasDetection.append("Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal SSL/TLS certificates that can be used during targeting. Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate.")
T1608.hasDetection.append("If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors.")
T1608_001.hasDetection.append("If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asUser ExecutionorIngress Tool Transfer.")
T1608_002.hasDetection.append("If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asIngress Tool Transfer.")
T1608_003.hasDetection.append("Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.Detection efforts may be focused on related behaviors, such asWeb ProtocolsorAsymmetric Cryptography.")
T1608_004.hasDetection.append("If infrastructure or patterns in the malicious web content utilized to deliver aDrive-by Compromisehave been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.")
T1608_005.hasDetection.append("If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as duringSpearphishing Link,Spearphishing Link, orMalicious Link.")
T1608_006.hasDetection.append("If infrastructure or patterns in the malicious web content related to SEO poisoning orDrive-by Targethave been previously identified, internet scanning may uncover when an adversary has staged web content supporting a strategic web compromise. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.")
T1583.hasDetection.append("Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_003.hasDetection.append("Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1583_004.hasDetection.append("Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584.hasDetection.append("Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_003.hasDetection.append("Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1584_004.hasDetection.append("Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.")
T1547.hasDetection.append("Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.")
T1547_006.hasDetection.append("LKMs are typically loaded into/lib/modulesand have had the extension .ko (kernel object) since version 2.6 of the Linux kernel.")
T1611.hasDetection.append("Monitor for the installation of kernel modules that could be abused to escape containers on a host.")
T1185.hasDetection.append("Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.")
T1538.hasDetection.append("Monitor for newly constructed logon behavior across cloud service management consoles.")
T1213.hasDetection.append("Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents.Sharepoint audit logging can also be configured to report when a user shares a resource.The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter.Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.")
T1213_001.hasDetection.append("Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter.Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.")
T1213_002.hasDetection.append("Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents.As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.")
T1213_003.hasDetection.append("Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.")
T1114.hasDetection.append("Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).")
T1114_002.hasDetection.append("Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).")
T1606.hasDetection.append("Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.")
T1606_001.hasDetection.append("Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.")
T1606_002.hasDetection.append("Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.")
T1556.hasDetection.append("Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.")
T1556_001.hasDetection.append("Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.")
T1556_003.hasDetection.append("Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1556_006.hasDetection.append("Monitor for logon sessions for user accounts and devices that did not require MFA for authentication.")
T1556_007.hasDetection.append("Monitor for discrepancies in authentication to cloud services, such as PTA sign-ins recorded in Azure AD that lack corresponding events in AD.")
T1621.hasDetection.append("Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.")
T1003_001.hasDetection.append("Monitor for newly constructed logon behavior from credentials being accessed by process memory of the LSASS. For example, detect behaviors of Secretsdump against a system, not being a Domain Controller.")
T1563.hasDetection.append("Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.")
T1563_001.hasDetection.append("Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.")
T1563_002.hasDetection.append("Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Windows security log Event ID 4624 (An account was successfully logged on) is generated when a user logs onto a remote machine using RDP.Correlating logon session creation events with RDP network flows can provide a clearer picture of RDP activity and serve as a useful starting point for investigating suspicious RDP connections.")
T1021.hasDetection.append("Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for screensharingd and Authentication event messages.Note: When using Security event id 4624, %$ means user names that do not end with $ character. Usually, computer accounts or local system accounts names end with the $ character. When using Security event 4624, UserName and UserLogonId correspond to TargetUserName and TargetLogonId respectively. When using Security event 4624, LogonType 3 corresponds to a Network LogonAnalytic 1 - New services being created under network logon sessions by non-system usersremote_logon_sessions = filter Hostname, UserName, UserLogonId, SourceIp where event_id == 4624 AND LogonType == 3 AND UserName NOT LIKE '%$'new_services = filter UserName, UserLogonId, ServiceName where event_id = 4697suspicious_services = filter l.UserName, l.UserLogonId, l.SourceIp, s.ServicenameFROM remote_logon_sessions lINNER JOIN new_services sON l.UserLogonId = s.UserLogonId")
T1021_001.hasDetection.append("Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.Monitoring logon and logoff events for hosts on the network is very important for situational awareness. This information can be used as an indicator of unusual activity as well as to corroborate activity seen elsewhere.Could be applied to a number of different types of monitoring depending on what information is desired. Some use cases include monitoring for all remote connections and building login timelines for users. Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista.Analyticfiltered_logons = filter logon_events where ( (event_id = 4624) AND user NOT IN TOP30(user))")
T1021_002.hasDetection.append("Monitor for logon behavior (ex: EID 4624 Logon Type 3) usingValid Accountsto interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.")
T1021_004.hasDetection.append("Monitor for user accounts logged into systems that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in/var/log/auth.logor/var/log/securedepending on the distro you are using.For Linux systems, the Audit framework (auditd) can be used to monitor any writes to SSH log files that store information about logged in accounts such as /var/log/auth.log.For macOS systems (10.12+), Unified Logs can be queried to show SSH daemon (sshd) messages that include information on logged in accounts. The following command-line can be used to query the last hour’s worth of unified logs in this manner:log show -info --debug --predicate 'processImagePath CONTAINS sshd AND eventMessage CONTAINS Accepted' --last 1h | grep sshd")
T1021_005.hasDetection.append("Monitor for user accounts logged into systems that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systemslog show --predicate 'process = screensharingd and eventMessage contains Authentication:'can be used to review incoming VNC connection attempts for suspicious activity.")
T1021_006.hasDetection.append("Monitor for user accounts logging into the system viaValid Accountsto interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.")
T1021_007.hasDetection.append("Monitor for newly constructed logon behavior to cloud services. For example, in Azure AD, consider using Identity Protection to monitor for suspicious login behaviors to cloud resources.")
T1649.hasDetection.append("Monitor certificate-based authentication events, such as EID 4768 when an AD CS certificate is used for Kerberos authentication (especially those that don’t correspond to legitimately issued certificates) or when Secure Channel (Schannel, associated with SSL/TLS) is highlighted as theLogon Processassociated with an EID 4624 logon event.")
T1199.hasDetection.append("Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.")
T1550.hasDetection.append("Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.")
T1550_002.hasDetection.append("Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.Note: Analytic Event ID is for Windows Security Log (Event ID 4624 - An account was successfully logged on). The successful use of Pass the Hash for lateral movement between workstations would trigger Event ID 4624, with an event level of Information, from the Windows Security log. This event would show an account logon with a LogonType of 3 using NTLM authentication, a logon that is not a domain logon, and the user account not being the ANONYMOUS LOGON account.Analytic 1logons = filter log_events where (event_id== 4624 AND target_user_name != ANONYMOUS LOGON ANDauthentication_package_name == NTLM")
T1550_003.hasDetection.append("Monitor for newly constructed logon behavior that may pass the ticket using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.")
T1078.hasDetection.append("Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1078_001.hasDetection.append("Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.")
T1078_002.hasDetection.append("Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft’s Audit Logon Events page.Analytic 1 - Remote Desktop Logonsuspicious_netconn = filter network_connections where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10)Analytic 2 - Simultaneous Logins on a Hostusers_grouped = group users_list by hostnameusers_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_countmultiple_logins = filter users_grouped where (latest_time - earliest_time <= 1 hour and user_count > 1)")
T1078_003.hasDetection.append("Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft’s Audit Logon Events page.Analytic 1 - Remote Desktop Logonsuspicious_netconn = filter network_connections where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10)Analytic 2 - Simultaneous Logins on a Hostusers_grouped = group users_list by hostnameusers_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_countmultiple_logins = filter users_grouped where (latest_time - earliest_time <= 1 hour and user_count > 1)")
T1078_004.hasDetection.append("Monitor for suspicious account behavior across cloud services that share account.")
T1133.hasDetection.append("Follow best practices for detecting adversary use ofValid Accountsfor authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.")
T1606_002.hasDetection.append("Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.")
T1621.hasDetection.append("Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.")
T1021_001.hasDetection.append("Monitor authentication logs and analyze for unusual access patterns. A remote desktop logon, through RDP, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Analyticsuspicious_logon = filter logons where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10")
T1558.hasDetection.append("Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).")
T1558_001.hasDetection.append("Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets).")
T1558_002.hasDetection.append("Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).")
T1199.hasDetection.append("Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1078.hasDetection.append("Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.")
T1078_002.hasDetection.append("Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1078_003.hasDetection.append("Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1078_004.hasDetection.append("Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).")
T1570.hasDetection.append("Monitor for contextual data about named pipes on the system.")
T1587.hasDetection.append("Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1587_001.hasDetection.append("Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.")
T1588.hasDetection.append("Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.")
T1588_001.hasDetection.append("Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.")
T1587.hasDetection.append("Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1587_001.hasDetection.append("Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.")
T1587_002.hasDetection.append("Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate.")
T1588.hasDetection.append("Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.")
T1588_001.hasDetection.append("Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.")
T1588_002.hasDetection.append("Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.")
T1588_003.hasDetection.append("Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate.")
T1547.hasDetection.append("Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.")
T1547_002.hasDetection.append("Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.")
T1547_003.hasDetection.append("There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.")
T1547_004.hasDetection.append("New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.")
T1547_005.hasDetection.append("Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.")
T1547_008.hasDetection.append("Also monitor DLL load operations in lsass.exe.")
T1547_010.hasDetection.append("Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.")
T1547_012.hasDetection.append("Monitor for abnormal DLLs that are loaded byspoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious. New print processor DLLs are written to the print processor directory.")
T1059.hasDetection.append("Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (ex: JScript.dll or vbscript.dll).")
T1059_001.hasDetection.append("Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).Analytic 1 - Processes loading PowerShell assembliessuspicious_processes = filter ProcessGuid, ProcessFilePath, ModulePath, FileDescription where EventId == 7 AND (ModulePath LIKE '%system.management.automation%' OR FileDescription LIKE '%system.management.automation%')")
T1059_005.hasDetection.append("Monitor for the loading of modules associated with VB languages (ex: vbscript.dll).Note: For Windows, Sysmon Event ID 7 (Image loaded) can be used to alert on the loading of DLL modules (e.g., vbscript.dll) associated with Visual Basic into processes. Due to the high frequency of image load operations, Event ID 7 can generate a large volume of events. Therefore, we recommend tuning the Sysmon configuration file to exclude common, benign image loads that may result in false positives.")
T1059_007.hasDetection.append("Monitor for the loading of modules associated with scripting languages (ex: JScript.dll).")
T1546.hasDetection.append("Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.")
T1546_006.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1546_007.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1546_009.hasDetection.append("Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location.")
T1546_010.hasDetection.append("Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.")
T1546_011.hasDetection.append("Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.")
T1546_015.hasDetection.append("Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.")
T1574.hasDetection.append("Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.")
T1574_001.hasDetection.append("Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.")
T1574_002.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1574_004.hasDetection.append("Monitor for dynamic libraries being loaded. Run path dependent libraries can include LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, and LC_RPATH. Other special keywords are recognized by the macOS loader are @rpath, @loader_path, and @executable_path.These loader instructions can be examined for individual binaries or frameworks using the otool -l command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking")
T1574_005.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1574_006.hasDetection.append("Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.")
T1574_012.hasDetection.append("Monitor DLL files that are associated with COR_PROFILER environment variables.")
T1559.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1559_001.hasDetection.append("Monitor for COM objects loading DLLs and other modules not typically associated with the application.")
T1559_002.hasDetection.append("Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).")
T1556.hasDetection.append("Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.")
T1556_002.hasDetection.append("Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.")
T1556_007.hasDetection.append("Monitor the hybrid identity solution in use for the loading of unauthorized DLLs. For example, monitor all PTA agent servers for the creation of DLLs as well as the loading of DLLs into theAzureADConnectAuthenticationAgentServiceprocess.If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.")
T1106.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.")
T1027.hasDetection.append("Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated code functionality. Dynamic malware analysis may also expose signs of code obfuscation.")
T1027_007.hasDetection.append("Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated API function calls. Dynamic malware analysis may also expose signs of function obfuscation, such as memory reads that correspond to addresses of API function code within modules.")
T1137.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1137_002.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1055.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1055_001.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module loads to help reduce the number of events that are produced.")
T1055_014.hasDetection.append("Monitor library load events, especially unusual creation of these binary files followed by loading into processes. Look for libraries that are not recognized or not normally loaded into a process.")
T1620.hasDetection.append("Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe)")
T1021.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes, that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Note: On Windows, Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes, including those designed to accept remote connections. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module to help reduce the number of events that are produced.")
T1021_003.hasDetection.append("Monitor for COM objects loading DLLs and other modules not typically associated with the application.Note: Sysmon Event ID 7 (Image loaded) can be used to monitor for suspicious DLLs loaded by the DCOM Server Process Launcher which runs inside of svchost.exe. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign svchost.exe module loads that occur as part of its typical operation.")
T1505_005.hasDetection.append("Monitor module loads by the Terminal Services process (ex:svchost.exe -k termsvcs) for unexpected DLLs (the default is%SystemRoot%System32termsrv.dll, though an adversary could also useMatch Legitimate Name or Locationto potentially conceal a malicious payload).")
T1129.hasDetection.append("Monitoring module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of shared modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled, or system modules such that deviation from known module loads may be suspiciousLimiting module loads to trusted directories, such as%SystemRoot%and%ProgramFiles%on Windows, may protect against module loads from unsafe paths.")
T1553.hasDetection.append("Enable CryptoAPI v2 (CAPI) event loggingto monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).")
T1553_003.hasDetection.append("Enable CryptoAPI v2 (CAPI) event loggingto monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).")
T1218.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1218_002.hasDetection.append("Monitor for DLL/PE file events, such as theControl_RunDLLandControlRunDLLAsUserAPI functions in shell32.dll.")
T1218_007.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1218_008.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1218_010.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1218_011.hasDetection.append("Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls. Static Portable Executable (PE) analysis tools can be used to examine and dump the exports of a particular DLL.")
T1220.hasDetection.append("Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.")
T1486.hasDetection.append("Monitor for unexpected network shares being accessed on target systems or on large numbers of systems.")
T1039.hasDetection.append("Monitor for unexpected and abnormal accesses to network shares.")
T1570.hasDetection.append("Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as SMB.")
T1021.hasDetection.append("Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB).")
T1021_002.hasDetection.append("Monitor interactions with network shares, such as reads or file transfers, using Server Message Block (SMB).")
T1080.hasDetection.append("Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity.")
T1020.hasDetection.append("Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts.")
T1020_001.hasDetection.append("Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts.")
T1197.hasDetection.append("Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).")
T1176.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1612.hasDetection.append("Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.")
T1602.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)")
T1602_001.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))")
T1602_002.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)")
T1039.hasDetection.append("Monitor for newly constructed network connections that may search network shares on computers they have compromised to find files of interest. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares.")
T1030.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated")
T1189.hasDetection.append("Monitor for newly constructed network connections to untrusted hosts that are used to send or receive data.")
T1568.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1568_001.hasDetection.append("Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.")
T1114.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1114_002.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1048.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1048_001.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1048_002.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1048_003.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1041.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation.")
T1011.hasDetection.append("Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.Analytic 1 - Windows Process Network Connectionnetcon_from_sysproc = filter process_open_sockets where remote_port != 0 AND proc_name!= '';")
T1011_001.hasDetection.append("Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1567.hasDetection.append("Monitor for newly constructed network connections to web and cloud services associated with abnormal or non-browser processes.")
T1567_002.hasDetection.append("Monitor for newly constructed network connections to cloud services associated with abnormal or non-browser processes.")
T1133.hasDetection.append("Monitor for newly constructed network connections that may use Valid Accounts to access and/or persist within a network using External Remote Services. Use of External Remote Services may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using External Remote Services.")
T1008.hasDetection.append("Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.Analytic 1 - Windows Process Network Connectionnetcon_from_sysproc = filter process_open_sockets where remote_port != 0 AND proc_name!= '';")
T1105.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.")
T1104.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1542.hasDetection.append("Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.")
T1542_005.hasDetection.append("Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS.The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.")
T1572.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1090.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1090_001.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1090_002.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1090_003.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1219.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1021.hasDetection.append("Monitor for newly constructed network connections that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network service protocols such as SSH and RDP.Analytic 1 - Suspicious Protocolssuspicious_protocol = filter network_traffic where ((server_port = 636 AND protocol = 6) OR (server_port = 389 AND protocol = 17))")
T1021_001.hasDetection.append("Monitor for newly constructed network connections (typically over port 3389) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.")
T1021_002.hasDetection.append("Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.Note: Event ID is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. Preference would be to detect smb2_write_response event (instead of smb2_write_request), because it would confirm the file was actually written to the remote destination. Unfortunately, Bro/Zeek does not have an event for that SMB message-type yet. From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes).Analytic 1 is indication of an SMB file write to a Windows Admin File Share: ADMIN$ or C$Analytic 2 is observed originating from the same host, regardless of write-attempts and regardless of whether or not any connection is successful —just connection attempts— within a specified period of time.From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.The Service Control Manager (SCM) can be used to copy a file to the ADMIN$ share and execute it as a service. This can be detected by looking for incoming RPC network connections to the Service Control Manager, followed by services.exe spawning a child process.Analytic 1 - Basicsuspicious_smb_traffic = filter log_events where ((event_id == smb2_write_request OR event_type == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$))Analytic 2 - Multiple Attempts (Time Window)suspicious_smb_traffic = filter log_events where ( (event_type == smb2_tree_connect_request OR event_type == smb1_tree_connect_andx_request) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip )")
T1021_003.hasDetection.append("Monitor for newly constructed network connections that may useValid Accountsto interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.Analytic 1 - RPC Mapperrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) AND (rpc_mapper.src_ip == rpc_endpoint.src_ip AND rpc_mapper.dest_ip == rpc_endpoint.dest_ip))")
T1021_004.hasDetection.append("Monitor for newly constructed network connections (typically port 22) that may useValid Accountsto log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.Network Analysis Frameworks such as Zeek can be used to capture, decode, and alert on network traffic. Accordingly, they can be used to look for the creation of SSH network connections.")
T1021_005.hasDetection.append("Monitor for newly constructed network connections that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.")
T1021_006.hasDetection.append("Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).")
T1018.hasDetection.append("Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.")
T1496.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts, look for connections to/from strange ports, as well as reputation of IPs and URLs related cryptocurrency hosts.Note: Destination Host Name is not a comprehensive list of potential cryptocurrency URLs.Analytic 1 - Suspicious Port Connectionssuspicious_netcoms = filter network traffic where ((src_port = 3333 OR src_port = 4444 OR src_port = 5555 OR src_port = 6666) AND (dst_host_name = cryptmonero.com OR dst_host_name = crypto-pool.fr OR dst_host_name = crypto-pool.info OR dst_host_name = cryptonight-hub.miningpoolhub.com))")
T1029.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1218.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1218_003.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.")
T1218_005.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1218_007.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1218_010.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1221.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1205.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1205_001.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1205_002.hasDetection.append("Monitor recently started applications creating raw socket connections.")
T1204.hasDetection.append("Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).")
T1204_001.hasDetection.append("Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).")
T1102.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1102_002.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1102_003.hasDetection.append("Monitor for newly constructed network connections that are sent or received by untrusted hosts.")
T1047.hasDetection.append("Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC groupnetsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.htmlAfter the WMI connection has been initialized, a process can be remotely launched using the command:wmic /node: process call create , which is detected in the third Detection Pseudocode.This leaves artifacts at both a network (RPC) and process (command line) level. Whenwmic.exe(or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine.After RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified.When the command line is executed, it has the parent process ofC:windowssystem32wbemWmiPrvSE.exe. This analytic looks for these two events happening in sequence, so that the network connection and target process are output.Certain strings can be identifiers of the WMI by looking up the interface UUID forIRemUnknown2in different formats- UUID00000143-0000-0000-c000-000000000046(decoded)- Hex43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46(raw)- ASCIICF(printable text only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is- UUID8a885d04-1ceb-11c9-9fe8-08002b104860(decoded)- Hex04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60(raw)- ASCII`]+H``(printable text only)Thus, a great ASCII based signature is-CF]+HCFCFhost Note: To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2. Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.Analytic 1 - Remote WMI over RPCwmi_flow = filter network_flow where (dest_port == 135 and proto_info.rpc_interface == IRemUnknown2)Analytic 2 : Remotely Launched Executables via WMIwmi_children = filter processes where (parent_process == wmiprvse.exe)wmi_flow = filter network flow where (src_port ≥ 49152 and dest_port ≥ 49152 and proto_info.rpc_interface == IRemUnknown2)remote_wmi_process = join wmi_children, wmi_flow where (wmi_flow.time < wmi_children.time < wmi_flow.time + 1 sec and wmi_flow.hostname == wmi_children.hostname")
T1087_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).")
T1595.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1595_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1595_003.hasDetection.append("Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).")
T1557.hasDetection.append("Monitor network traffic for anomalies associated with known AiTM behavior.")
T1557_001.hasDetection.append("Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.")
T1557_002.hasDetection.append("Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.")
T1557_003.hasDetection.append("Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor network traffic for rogue DHCPv6 activity.")
T1071.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_004.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNS over TLS (DoT) and DNS over HTTPS (DoH), that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1020.hasDetection.append("Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.")
T1612.hasDetection.append("Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.")
T1586.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1586_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1132.hasDetection.append("Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols and packet contents.")
T1132_001.hasDetection.append("Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.")
T1132_002.hasDetection.append("Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.")
T1602.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)")
T1602_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))")
T1602_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)")
T1039.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1565.hasDetection.append("Monitor for networks that solicits and obtains the configuration information of the queried device.")
T1565_002.hasDetection.append("Monitor for networks that solicits and obtains the configuration information of the queried device.")
T1001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1001_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1001_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).")
T1001_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1491.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for indication of unplanned service interruptions or unauthorized content changes.")
T1491_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1491_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1482.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).")
T1189.hasDetection.append("Monitor for other unusual network traffic that may indicate additional tools transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.")
T1568.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1568_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1573.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1573_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1573_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1499.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1499_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1499_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1499_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1499_004.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1585.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1585_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1048.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1048_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1048_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1048_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1041.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1011.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1011_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1567.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1567_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1567_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1567_003.hasDetection.append("Monitor and analyze network traffic for exfiltration attempts using text storage sites, i.e. POST requests to text storage sites.")
T1190.hasDetection.append("Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.")
T1210.hasDetection.append("Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.")
T1133.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1187.hasDetection.append("For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.")
T1589.hasDetection.append("Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.")
T1589_002.hasDetection.append("Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.")
T1615.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1070.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1070_005.hasDetection.append("Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.")
T1105.hasDetection.append("Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.")
T1534.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1570.hasDetection.append("Monitor for unusual processes with internal network connections creating files on-system may be suspiciousNote: Analytic Event Type is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. From a network traffic capture standpoint, it’s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes).Analytic 1 - Basicsuspicious_smb_traffic = filter log_events where ((event_id == smb2_write_response OR event_id == smb1_write_response OR event_id == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) )Analytic 2 - Multiple Attempts (Time Window)suspicious_smb_traffic = filter log_events where ((event_id == smb2_write_response OR event_id == smb1_write_response OR event_id == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip)")
T1599.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1599_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1095.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1571.hasDetection.append("Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.")
T1003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1003_006.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1566.hasDetection.append("Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.")
T1566_001.hasDetection.append("Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.")
T1566_002.hasDetection.append("Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for cloned sites as well as homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).")
T1566_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1598.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1598_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1598_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1598_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Also monitor and analyze traffic patterns and packet inspection for indicators of cloned websites. For example, if adversaries use HTTrack to clone websites,Mirrored from (victim URL)may be visible in the HTML section of packets.")
T1572.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1090.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1090_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1090_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1090_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1090_004.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1219.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1563.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1563_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1563_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols including RDP.")
T1207.hasDetection.append("Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts.DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).")
T1505.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1505_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1033.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols.")
T1221.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1205.hasDetection.append("Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes ofFFfollowed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.")
T1537.hasDetection.append("Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous internal traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.")
T1199.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure) from a trusted entity. Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1204.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).")
T1204_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).")
T1102.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1102_001.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1102_002.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1102_003.hasDetection.append("Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1595.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1595_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1595_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1557.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1557_001.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1557_002.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1557_003.hasDetection.append("Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.")
T1071.hasDetection.append("Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_001.hasDetection.append("Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_002.hasDetection.append("Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_003.hasDetection.append("Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1071_004.hasDetection.append("Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1020.hasDetection.append("Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.")
T1020_001.hasDetection.append("Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.")
T1612.hasDetection.append("Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.")
T1543_003.hasDetection.append("Monitor for several ways that code can execute on a remote host. One of the most common methods is via the Windows Service Control Manager (SCM), which allows authorized users to remotely create and modify services. Several tools, such asPsExec, use this functionality.When a client remotely communicates with the Service Control Manager, there are two observable behaviors. First, the client connects to the RPC Endpoint Mapper over 135/tcp. This handles authentication, and tells the client what port the endpoint—in this case the SCM—is listening on. Then, the client connects directly to the listening port on services.exe. If the request is to start an existing service with a known command line, the the SCM process will run the corresponding command.This compound behavior can be detected by looking for services.exe receiving a network connection and immediately spawning a child process.Analytic 1 - Remotely Launched Executables via Servicesservice = filter process where (parent_exe == services.exe)remote_start = join (flow, service ) where ( flow.hostname == service.hostname and flow.pid == service.pid and (flow.time < service.time < flow.time + 1 second))")
T1039.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares. Although there may be more native ways to detect detailed SMB events on the host, they can be extracted out of network traffic. With the right protocol decoders, port 445 traffic can be filtered and even the file path (relative to the share) can be retrieved.Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity. Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise.Analytic 1 - SMB Events Monitoringsmb_events = filter flow where (dest_port == 445 and protocol == smb)smb_events.file_name = smb_events.proto_info.file_name")
T1565.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices.")
T1565_002.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices.")
T1030.hasDetection.append("Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).")
T1568.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1568_001.hasDetection.append("In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.")
T1568_002.hasDetection.append("Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.Another approach is to use deep learning to classify domains as DGA-generated]")
T1499.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1499_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1499_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1499_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1499_004.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1048.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1048_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1048_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1048_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1041.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1011.hasDetection.append("Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.")
T1011_001.hasDetection.append("Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.")
T1567.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1567_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for use of code repositories for data exfiltration.Analytic 1 - Suspicious Data Exfilsuspicious_exfil = filter network_traffic where (httpHost = github.com or httpHost =justpaste.it or httpHost= pastebin.com or httpHost=onpaste.com or httpHost=transfernow.net or httpHost = codepad.org")
T1567_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for cloud storages for data exfiltration.Analytic 1 - Suspicious Data Exfilsuspicious_exfil = filter network_traffic where (httpHost = dropbox.com or httpHost = box.com or httpHost = drive.google.com or httpHost = mega.io or httpHost = mediafire.com")
T1567_003.hasDetection.append("Monitor network data for uncommon data flows, specifically to text storage sites such asPastebin[.]com,Paste[.]ee, andPastebin[.]pl.")
T1133.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1008.hasDetection.append("Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.")
T1187.hasDetection.append("Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.Analytic 1 - SMB Session Setupssmb_setup = filter flow where (dest_port == 445 and protocol == smb.setup)smb_setup.user = smb_write.proto_info.user_namesmb_setup.target_host = smb_write.proto_info.hostname")
T1200.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1105.hasDetection.append("Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1534.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1570.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1112.hasDetection.append("Remote access to the registry can be achieved viaWindows API function RegConnectRegistrycommand line via reg.exegraphically via regedit.exeAll of these behaviors call into the Windows API, which uses the NamedPipe WINREG over SMB to handle the protocol information. This network can be decoded with wireshark or a similar sensor, and can also be detected by hooking the API function.Analytic 1 - Remote Registryflows = search Flow:Messagewinreg = filter flows where (dest_port == 445 and proto_info.pipe == WINREG)winreg_modify = filter flows where (proto_info.function == Create or proto_info.function == SetValue")
T1104.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1599.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1599_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1498.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1498_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1498_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1046.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services.After compromising an initial machine, adversaries commonly attempt to laterally move across the network. The first step to attempt theLateral Movementoften involves conducting host identification, port and service scans on the internal network via the compromised machine using tools such as Nmap, Cobalt Strike, etc.Analytic 1 - Identifying Port Scanning Activityflow = filter flow where (src_type = firewall_logs AND dest_ip = internal_subnet )")
T1095.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1571.hasDetection.append("Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.")
T1003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1003_006.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1566.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1566_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1566_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1566_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1598.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1598_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1598_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1598_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1572.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1090.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1090_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1090_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1090_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1219.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Suspicious Port Usagesuspicious_ports = filter network_traffic where ((protocol =6 and (serverPort = 5938 or serverPort = 6568 or serverPort = 5650 or serverPort = 5655 or serverPort =5631)) or (protocol = 17 and (serverPort = 15000 and serverPort = 5632 )) or(httpHost = remoteutilities.co))")
T1563.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1563_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1563_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. RDP sessions may be split up into multiple flows and would therefore need to be aggregated.Anomaly detection using machine learning or other methods based on baselined RDP network flows may be a viable approach to alerting on potential RDP session hijacking.")
T1021.hasDetection.append("Monitor network data for uncommon data flows that may be related to abuse ofValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.")
T1021_001.hasDetection.append("Monitor network traffic for uncommon data flows that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP).The Remote Desktop Protocol (RDP), built in to Microsoft operating systems, allows a user to remotely log in to the desktop of another host. It allows for interactive access of the running windows, and forwards key presses, mouse clicks, etc. Network administrators, power users, and end-users may use RDP for day-to-day operations. From an adversary’s perspective, RDP provides a means to laterally move to a new host. Determining which RDP connections correspond to adversary activity can be a difficult problem in highly dynamic environments, but will be useful in identifying the scope of a compromise.Remote Desktop can be detected in several waysNetwork connections to port 3389/tcp (assuming use of the default port)Packet capture analysisWindows security logs (Event ID 4624, 4634, 4647, 4778)Detecting network connections frommstsc.exeExecution of the processrdpclip.exeRuns as the clipboard manager on the RDP target if clipboard sharing is enabledAnalytic 1rdp_start = filter flow_start where (port == 3389)rdp_end = filter flow_start where (port == 3389)rdp = group flow_start, flow_end by src_ip, src_port, dest_ip, dest_port")
T1021_002.hasDetection.append("Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on SMB network flows.Notes:The logic for Implementation 1 is based around detecting on SMB write requests, which are often used by adversaries to move laterally to another host. Unlike SMB Reads, SMB Write requests typically require an additional level of access, resulting in less activity. Focusing on SMB Write activity narrows the field to looking at techniques associated with actively changing remote hosts, instead of passively reading files.The logic for Implementation 2 is based around detection of new processes that were created from a file written to an SMB share. First, a file is remotely written to a host via an SMB share; then, a variety of Execution techniques can be used to remotely establish execution of the file or script. To detect this behavior, look for files that are written to a host over SMB and then later run directly as a process or in the command line arguments. SMB File Writes and Remote Execution may happen normally in an environment, but the combination of the two behaviors is less frequent and more likely to indicate adversarial activity.Analytic 1 - SMB Writesmb_write = filter flow where (dest_port == 445 AND protocol == smb.write)Analytic 2 - SMB Copy and Executionremote_start = join (smb:write, process:create) where ( smb_write.hostname == process.hostname AND smb_write.file_path == process.image_path AND (smb_write.time < process.time))Analytic 3 - RPC Activityrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) and (rpc_mapper.src_ip == rpc_endpoint.src_ip and rpc_mapper.dest_ip == rpc_endpoint.dest_ip))")
T1021_006.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows.When a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI /wsman is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.). This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host. Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis.Note: Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.Analytic 1 - RPC Activityrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) AND (rpc_mapper.src_ip == rpc_endpoint.src_ip AND rpc_mapper.dest_ip == rpc_endpoint.dest_ip))Analytic 2 - WinRMwinrm = filter flow where (dest_port == 5985)winrm_s = filter flow where (dest_port == 5986)")
T1496.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1053_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. When AT.exe is used to remotely schedule tasks, Windows uses named pipes over SMB to communicate with the API on the remote machine. After authentication over SMB, the Named PipeATSVCis opened, over which the JobAdd function is called. On the remote host, the job files are created by the Task Scheduler and follow the conventionC:WindowsSystem32AT.This pipe activity could be discovered with a network decoder, such as that in wireshark, that can inspect SMB traffic to identify the use of pipes. It could also be detected by looking for raw packet capture streams or from a custom sensor on the host that hooks the appropriate API functions. If no network or API level of visibility is possible, this traffic may inferred by looking at SMB connections over 445/tcp followed by the creation of files matching the patternC:WindowsSystem32AT<job_id>.To detect AT via network traffic, a sensor is needed that has the ability to extract and decode PCAP information. Specifically, it needs to properly decode SMB and the functions that are implemented over it via NamedPipes. If a sensor meets these criteria, then the PCAP data needs to search for instances of the commandJobAddover the pipeATSVC, which is all implemented over Windows SMB 445/tcp.Analytic 1 - Remotely Scheduled Tasks via ATflows = search Flow:Messageat_proto = filter flows where (dest_port == 445 and proto_info.pipe == ATSVC)at_create = filter flows where (proto_info.function == JobAdd")
T1053_005.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Look for RPC traffic after being mapped, which implies a destination port of at least 49152. If network inspection is available via packet captures or a NIDS, then traffic through theITaskSchedulerServiceinterface can be detected. Microsoft has a list of the possible methods that are implemented for theITaskSchedulerServiceinterface, which may be useful in differentiating read and query operations from creations and modifications.When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established, the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.Certain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formatsUUID86d35949-83c9-4044-b424-db363231fd0c(decoded)Hex49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c(raw)ASCIIIYD@$621(printable bytes only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic.Analytic 1 - Remotely Scheduled Tasks via Schtasksschtasks_rpc = filter flows where (src_port >= 49152 AND dest_port >= 49152 AND proto_info.rpc_interface == ITaskSchedulerService)sch_create = filter flows where (proto_info.function == SchRpcRegisterTask OR proto_info.function == SchRpcRun OR proto_info.function == SchRpcEnableTask")
T1029.hasDetection.append("Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.")
T1505.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1505_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1033.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1569.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Service Control Manager spawning Command Shellservice_proto = filter flows where (dest_port == 445 and proto_info.pipe == SVCCTL)service_create = filter flows where (proto_info.function == CreateServiceW OR proto_info.function == CreateServiceA OR proto_info.function == StartServiceW OR proto_info.function == StartServiceA )")
T1205.hasDetection.append("Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.")
T1205_001.hasDetection.append("Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.")
T1102.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1102_001.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1102_002.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1102_003.hasDetection.append("Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.")
T1586.hasDetection.append("Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing).")
T1586_001.hasDetection.append("Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).")
T1585.hasDetection.append("Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing).")
T1585_001.hasDetection.append("Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).")
T1610.hasDetection.append("Monitor for newly constructed pods that may deploy a container into an environment to facilitate execution or evade defenses.")
T1613.hasDetection.append("Monitor logs for actions that could be taken to gather information about pods, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.")
T1610.hasDetection.append("Monitor for changes made to pods for unexpected modifications to settings and/or control data that may deploy a container into an environment to facilitate execution or evade defenses.")
T1548.hasDetection.append("Also look for any process API calls for behavior that may be indicative ofProcess Injection. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.")
T1548_004.hasDetection.append("Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.")
T1134.hasDetection.append("Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g.,LogonUser,DuplicateTokenEx, andImpersonateLoggedOnUser). Please see the referenced Windows API pages for more information.")
T1134_001.hasDetection.append("Monitor for API calls associated with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators, such as DuplicateToken(Ex), ImpersonateLoggedOnUser , and SetThreadToken.")
T1134_002.hasDetection.append("Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such asCreateProcessWithTokenWand correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.")
T1134_003.hasDetection.append("Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior, such as LogonUser and SetThreadToken. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators")
T1134_004.hasDetection.append("Monitor for API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.")
T1134_005.hasDetection.append("Monitor for API calls, such as PowerShell Get-ADUser cmdlet or Windows API DsAddSidHistory function, to examine data in user’s SID-History attributes, especially users who have SID-History values from the same domain.")
T1087_001.hasDetection.append("Monitor for API calls (such asNetUserEnum()) that may attempt to gather local accounts information such as type of user, privileges and groups.")
T1087_002.hasDetection.append("Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.")
T1010.hasDetection.append("Monitor for API calls (such asGetForegroundWindow()) that may attempt to get a listing of open application windows.GetForegroundWindowapi returns a handle to the foreground window (the window with which the user is currently working). Other API calls relevant to Local Group discovery includeGetProcessesandGetForegroundWindow.GetProcessesapi returns an array of type Process that represents all the process resources running on the local computer.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.Analytic 1 - Suspicious API Callssuspicious_apis = filter processes where ApiName LIKE '%GetProcesses%' OR ApiName LIKE '%GetForegroundWindow%'")
T1123.hasDetection.append("Monitor for API calls associated with leveraging a computer peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.")
T1547.hasDetection.append("Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.")
T1547_010.hasDetection.append("Monitor process API calls toAddMonitor.")
T1547_012.hasDetection.append("Monitor process API calls toAddPrintProcessorandGetPrintProcessorDirectory.")
T1115.hasDetection.append("Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.")
T1059_002.hasDetection.append("Monitor for execution of AppleScript throughosascriptand usage of theNSAppleScriptandOSAScriptAPIs that may be related to other suspicious behavior occurring on the system.")
T1543.hasDetection.append("Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.")
T1543_003.hasDetection.append("Monitor for API calls that may create or modify Windows services (ex:CreateServiceW()) to repeatedly execute malicious payloads as part of persistence.")
T1555.hasDetection.append("Monitor for API calls that may search for common password storage locations to obtain user credentials.")
T1555_001.hasDetection.append("Monitor for Keychain Services API calls, specifically legacy extensions such asSecKeychainFindInternetPassword, that may collect Keychain data from a system to acquire credentials.")
T1555_003.hasDetection.append("Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.")
T1555_004.hasDetection.append("Consider monitoring API calls such asCredEnumerateAthat may list credentials from the Windows Credential Manager.")
T1555_005.hasDetection.append("Monitor for API calls that may search for common password storage locations to obtain user credentials.")
T1005.hasDetection.append("Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.")
T1565.hasDetection.append("Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.")
T1565_002.hasDetection.append("Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.")
T1565_003.hasDetection.append("Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.")
T1622.hasDetection.append("Monitor for API calls (such asIsDebuggerPresent()) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.")
T1652.hasDetection.append("Monitor for API calls (such asEnumDeviceDrivers()) that may attempt to gather information about local device drivers.")
T1482.hasDetection.append("Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.")
T1611.hasDetection.append("Monitor for unexpected usage of syscalls such asmountthat may indicate an attempt to escape from a privileged container to host.")
T1546_009.hasDetection.append("Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such asRegCreateKeyExandRegSetValueEx.")
T1546_010.hasDetection.append("Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such asRegCreateKeyExandRegSetValueEx.")
T1083.hasDetection.append("Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.")
T1564.hasDetection.append("Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_004.hasDetection.append("Monitor calls to theZwSetEaFileandZwQueryEaFileWindows API functions as well as binaries used to interact with EA,and consider regularly scanning for the presence of modified information.")
T1574_013.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asWriteProcessMemory()andNtQueryInformationProcess()with the parameter set toProcessBasicInformationmay be used for this technique.")
T1562.hasDetection.append("Monitor for the abnormal execution of API functions associated with system logging.")
T1070.hasDetection.append("Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_001.hasDetection.append("Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.")
T1056.hasDetection.append("Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState")
T1056_001.hasDetection.append("Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.")
T1056_004.hasDetection.append("Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using toolsor by programmatically examining internal kernel structures.")
T1036.hasDetection.append("Monitor for API calls such asfork()which can be abused to masquerade or manipulate process metadata.")
T1556.hasDetection.append("Monitor for calls toOpenProcessthat can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).Monitor for abnormal API calls toNPLogonNotify()that may highlight malicious network provider DLLs.")
T1556_001.hasDetection.append("Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller")
T1556_008.hasDetection.append("Monitor for abnormal API calls toNPLogonNotify().")
T1112.hasDetection.append("Monitor for API calls associated with concealing Registry keys, such as Reghide.Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autorunsand RegDelNull. Other API calls relevant to Registry Modification includeRegOpenKeyExA,RegCreateKeyExA,RegDeleteKeyExA,RegDeleteValueExA,RegEnumKeyExA,RegEnumValueExA, among others.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1111.hasDetection.append("Monitor for API calls associated with polling to intercept keystrokes.")
T1106.hasDetection.append("Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.")
T1135.hasDetection.append("Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.")
T1027.hasDetection.append("Monitor and analyze calls to functions such asGetProcAddress()that are associated with malicious code obfuscation.")
T1027_007.hasDetection.append("Monitor and analyze calls to functions such asGetProcAddress()andLoadLibrary()that are associated with dynamically loading API functions.")
T1003.hasDetection.append("Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.")
T1003_001.hasDetection.append("Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). OS API calls associated with LSASS process dumping includeOpenProcessandMiniDumpWriteDump. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing) and 10 (Microsoft Sysmon)Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1120.hasDetection.append("Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.")
T1069_001.hasDetection.append("Monitor for API calls associated with finding local system groups and permission settings, such as NetLocalGroupEnum. Other API calls relevant to Local Group discovery include NetQueryDisplayInformation and NetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1069_002.hasDetection.append("Monitor for API calls associated with finding domain-level groups and permission settings, such asNetGroupEnum. Other API calls relevant to Domain Group discovery includeNetQueryDisplayInformationandNetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1542.hasDetection.append("Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation.")
T1542_002.hasDetection.append("Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology)disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.")
T1057.hasDetection.append("Monitor for API calls may attempt to get information about running processes on a system.")
T1055.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.")
T1055_001.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.Search for remote thread creations that start at LoadLibraryA or LoadLibraryW. Depending on the tool, it may provide additional information about the DLL string that is an argument to the function. If there is any security software that legitimately injects DLLs, it must be carefully whitelisted.Microsoft Windows allows for processes to remotely create threads within other processes of the same privilege level. This functionality is provided via the Windows API CreateRemoteThread. Both Windows and third-party software use this ability for legitimate purposes. For example, the Windows process csrss.exe creates threads in programs to send signals to registered callback routines. Both adversaries and host-based security software use this functionality to inject DLLs, but for very different purposes. An adversary is likely to inject into a program to evade defenses or bypass User Account Control, but a security program might do this to gain increased monitoring of API calls. One of the most common methods of DLL Injection is through the Windows API LoadLibrary.Allocate memory in the target program with VirtualAllocExWrite the name of the DLL to inject into this program with WriteProcessMemoryCreate a new thread and set its entry point to LoadLibrary using the API CreateRemoteThread.This behavior can be detected by looking for thread creations across processes, and resolving the entry point to determine the function name. If the function is LoadLibraryA or LoadLibraryW, then the intent of the remote thread is clearly to inject a DLL. When this is the case, the source process must be examined so that it can be ignored when it is both expected and a trusted process.Analytic 1 - DLL Injection via Load Libraryremote_thread = filter (start_function == LoadLibraryA or start_function == LoadLibraryW)remote_thread = filter (src_image_path != C:PathToTrustedProgram.exe)")
T1055_002.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.")
T1055_003.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.")
T1055_004.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asSuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.")
T1055_005.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.")
T1055_008.hasDetection.append("Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.")
T1055_011.hasDetection.append("Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLongand SetWindowLong. Malware associated with this technique have also used SendNotifyMessageto trigger the associated window procedure and eventual malicious injection.")
T1055_012.hasDetection.append("Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.")
T1055_013.hasDetection.append("Monitor and analyze calls toCreateTransaction,CreateFileTransacted,RollbackTransaction, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls toNtCreateProcessExandNtCreateThreadExas well as API calls used to modify memory within another process, such asWriteProcessMemory.")
T1055_014.hasDetection.append("Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.")
T1055_015.hasDetection.append("Consider monitoring for excessive use ofSendMessageand/orPostMessageAPI functions withLVM_SETITEMPOSITIONand/orLVM_GETITEMPOSITIONarguments.Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asFindWindow,FindWindowEx,EnumWindows,EnumChildWindows, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be abused for this technique.")
T1012.hasDetection.append("Monitor for API calls (such asRegOpenKeyExA) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. OS API calls associated with querying the Windows Registry are RegOpenKeyEx , RegOpenUserClassesRoot, RegQueryValueExA, and RegQueryValueExW. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing). Also monitor for RegOpenUserClassesRoot api to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user. The returned key has a view of the registry that merges the contents of the HKEY_LOCAL_MACHINESoftwareClasses key with the contents of the SoftwareClasses keys in the user's registry hive.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls.Analytic 1 - Suspicious API Callssuspicious_apis = filter api_calls where ApiName LIKE '%RegOpenKeyEx%' OR ApiName LIKE '%RegOpenUserClassesRoot%'")
T1620.hasDetection.append("Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such asAssembly.Load()andNative APIfunctions such asCreateThread(),memfd_create(),execve(), and/orexecveat().")
T1113.hasDetection.append("Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such asCopyFromScreen,xwd, orscreencapture.. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.")
T1489.hasDetection.append("Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example,ChangeServiceConfigWmay be used by an adversary to prevent services from starting.")
T1129.hasDetection.append("Monitor for API calls that may execute malicious payloads via loading shared modules.")
T1518.hasDetection.append("Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.")
T1518_001.hasDetection.append("Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. OS API calls associated with LSASS process dumping include EnumProcesses, which can be used to enumerate the set of processes running on a host and filtered to look for security-specific processes.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1218.hasDetection.append("Monitor for API calls that bypass process and/or signature based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries.")
T1218_002.hasDetection.append("Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.")
T1082.hasDetection.append("Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell. In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.")
T1614.hasDetection.append("Remote access tools with built-in features may interact directly with the Windows API, such as callingGetLocaleInfoWto gather information.")
T1614_001.hasDetection.append("Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.")
T1016.hasDetection.append("Monitor for API calls (such asGetAdaptersInfo()andGetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.")
T1049.hasDetection.append("Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.")
T1033.hasDetection.append("Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.")
T1007.hasDetection.append("Monitor for API calls associated with gathering information about registered local system services, such as QueryServiceStatusEx. Other Windows API calls worth monitoring include EnumServicesStatusExA, which can be used to enumerate services in the service control manager database.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.")
T1124.hasDetection.append("Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.")
T1125.hasDetection.append("Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.")
T1497.hasDetection.append("Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_001.hasDetection.append("Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_002.hasDetection.append("Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1497_003.hasDetection.append("Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.")
T1185.hasDetection.append("This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor forProcess Injectionagainst browser applications.")
T1555.hasDetection.append("Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.")
T1555_002.hasDetection.append("Monitor for processes being accessed that may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain.")
T1555_003.hasDetection.append("Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).")
T1555_005.hasDetection.append("Monitor process being accessed that may acquire user credentials from third-party password managers.")
T1559.hasDetection.append("Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.")
T1559_003.hasDetection.append("Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.")
T1556.hasDetection.append("Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.")
T1556_001.hasDetection.append("Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.")
T1003.hasDetection.append("Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/<pid>/maps, where the<pid>directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.")
T1003_001.hasDetection.append("Monitor for unexpected processes interacting with LSASS.exe.Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.Usage of Procdump and Windows Task Manager for LSASS dumping can also be detected via process creation events, since they both have a predictable set of command-line arguments (i.e., for specifying the process to be dumped).Note: Sysmon process access events (Event ID 10) can be extremely noisy, which necessitates tweaking the Sysmon configuration file. We recommend taking an approach analogous to that of the Sysmon Modular Configuration project (https://github.com/olafhartong/sysmon-modular) and filtering out any benign processes in your environment that produce large volumes of process access events.The GrantedAccess value in the below analytic for Mimikatz is meant to be used solely as an illustrative example of detecting Mimikatz LSASS access. However, actual GrantedAccess values change over time with different versions of Mimikatz and therefore detection engineers need to verify the accuracy of any GrantedAccess values that their analytics are using.Analytic 1 - Mimikatzprocesses = filter processes where (event_id == 10 AND target_process == *lsass.exe AND granted_access == 0x1410)Analytic 2 - Procdumpprocesses = filter processes where (event_id == 10 AND target_process == lsass.exe AND source_process == procdump.exe)Analytic 3 - Windows Task Managerprocesses = filter processes where (event_id == 10 AND target_process == *lsass.exe AND source_process == c:windows*taskmgr.exe)")
T1055.hasDetection.append("Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_001.hasDetection.append("Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_002.hasDetection.append("Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_003.hasDetection.append("Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_004.hasDetection.append("Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_005.hasDetection.append("Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_008.hasDetection.append("Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_012.hasDetection.append("Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.")
T1539.hasDetection.append("Monitor for attempts by programs to inject into or dump browser process memory.")
T1033.hasDetection.append("Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/<pid>/maps, where the<pid>directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.")
T1548.hasDetection.append("Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. Tools such as Meterpreter, Cobalt Strike, and Empire carry out automated steps to Get System, which is the same as switching over to the System user account. Most of these tools utilize multiple techniques to try and attain SYSTEM: in the first technique, they create a named pipe and connects an instance of cmd.exe to it, which allows them to impersonate the security context of cmd.exe, which is SYSTEM. In the second technique, a malicious DLL is injected into a process that is running as SYSTEM; the injected DLL steals the SYSTEM token and applies it where necessary to escalate privileges. This analytic looks for both of these techniques.Analytic 1 : Get System Elevationsuspicious_processes = filter processes where ( (parent_image_path == C:WindowsSystem32services.exe AND image_path == C:WindowsSystem32cmd.exe AND command_line == echo AND command_line == pipe*) OR (image_path == C:WindowsSystem32rundll32.exe AND command_line == ,a /p:*))")
T1548_002.hasDetection.append("Monitor newly executed processes, such aseventvwr.exeandsdclt.exe, that may bypass UAC mechanisms to elevate process privileges on system.Threat actors often, after compromising a machine, try to disable User Access Control (UAC) to escalate privileges. This is often done by changing the registry key for system policies using reg.exe, a legitimate tool provided by Microsoft for modifying the registry via command prompt or scripts. This action interferes with UAC and may enable a threat actor to escalate privileges on the compromised system, thereby allowing further exploitation of the system.Analytic 1 : UAC Bypasspossible_uac_bypass = filter processes where ( integrity_level == High and (parent_image_path == c:windowssystem32fodhelper.exe) or (command_line == .execleanmgr.exe /autoclean) or (image_path == c:program fileswindows media playerosk.exe) or (parent_image_path == c:windowssystem32slui.exe) or (parent_command_line == 'c:windowssystem32dism.exe.xml' and image_path != c:users*appdatalocaltemp*dismhost.exe) or (command_line == 'c:windowssystem32wusa.exe/quiet*' and user != NOT_TRANSLATED and current_working_directory == c:windowssystem32 and parent_image_path != c:windowsexplorer.exe) or (parent_image_path == c:windows*dccw.exe and image_path != c:windowssystem32cttune.exe))Analytic 2 : Disable UACcmd_processes = filter processes where ( (parent_image = C:WindowsSystem32cmd.exe) AND (command_line = reg.exe%HKLMSOFTWAREMicrosoftWindowsCurrentVersionPoliciesSystem%REG_DWORD /d 0%))")
T1548_003.hasDetection.append("Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.")
T1548_004.hasDetection.append("Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate thatAuthorizationExecuteWithPrivilegesis being executed. MacOS system logs may also indicate whenAuthorizationExecuteWithPrivilegesis being called.")
T1134.hasDetection.append("Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.")
T1134_004.hasDetection.append("Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe")
T1087.hasDetection.append("Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.")
T1087_001.hasDetection.append("Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). - For Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on the enumeration/reading of files that store local users, including/etc/passwd. - For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asidandgroups.Analytic 1 - Net Discovery Commandsprocesses = filter processes where ((event_id=10 OR event_id=4688) AND exe == net.exe OR exe == net1.exe)")
T1087_002.hasDetection.append("Monitor for processes that can be used to enumerate domain accounts and groups, such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.")
T1087_003.hasDetection.append("Monitor for newly executed processes, such asWindows Management InstrumentationandPowerShell, with arguments that can be used to enumerate email addresses and accounts.")
T1098.hasDetection.append("Monitor for newly constructed processes indicative of modifying account settings, such as those that modifyauthorized_keysor/etc/ssh/sshd_configfiles.")
T1098_004.hasDetection.append("Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.")
T1010.hasDetection.append("Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Suspicious Processessuspicious_processes = filter process where (event_id == 1 OR event_id == 4688) AND (command_line LIKE '%Get-Process%' AND command_line LIKE '%mainWindowTitle%')")
T1560.hasDetection.append("Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.")
T1560_001.hasDetection.append("Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip. BeforeExfiltrationthat an adversary hasCollection, it is very likely that aArchive Collected Datawill be created, so that transfer times are minimized and fewer files are transmitted. There is variety between the tools used to compress data, but the command line usage and context of archiving tools, such as ZIP, RAR, and 7ZIP, should be monitored.In addition to looking for RAR or 7z program names, command line usage of 7Zip or RAR can be detected with the flag usage of * a *. This is helpful, as adversaries may change program names.Note: This analytic looks for the command line argument a, which is used by RAR. However, there may be other programs that have this as a legitimate argument and may need to be filtered out.Analytic 1 - Command Line Usage of Archiving Softwarerar_argument = filter processes where (command_line == a)")
T1197.hasDetection.append("Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose).Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 is oriented around looking for the creation of Microsoft Background Intelligent Transfer Service utility (bitsadmin.exe) processes that schedule a BITS job to persist on an endpoint. The analytic identifies the command-line parameters used to create, resume or add a file to a BITS job; these are typically seen combined in a single command-line or executed in sequence.Analytic 2 identifies Microsoft Background Intelligent Transfer Service utilitybitsadmin.exeusing thetransferparameter to download a remote object. In addition, look fordownloadoruploadon the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Network connection or file modification events related will not spawn or create frombitsadmin.exe, but the artifacts will appear in a parallel process ofsvchost.exewith a command-line similar tosvchost.exe -k netsvcs -s BITS. It’s important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can usebitsadmin /list /verboseto list out the jobs during investigation.Analytic 1 - BITS Job Persistenceprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe =C:WindowsSystem32bitsadmin.exe AND (command_line == create OR command_line == addfile OR command_line == setnotifyflags OR command_line == setnotifycmdline OR command_line == setminretrydelay OR command_line == setcustomheaders OR command_line == resume))Analytic 2 : BITSAdmin Download Filebitsadmin_commands = filter processes where ( exe =C:WindowsSystem32bitsadmin.exe AND command_line =transfer)output bitsadmin_commands")
T1547.hasDetection.append("Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.")
T1547_001.hasDetection.append("Monitor for newly executed processes executed from the Run/RunOnce registry keys through Windows EID 9707 or SoftwareMicrosoftWindowsCurrentVersionRun and SoftwareMicrosoftWindowsCurrentVersionRunOnce registry keys with the full command line.Registry modifications are often essential in establishing persistence via known Windows mechanisms. Many legitimate modifications are done graphically via regedit.exe or by using the corresponding channels, or even calling the Registry APIs directly. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exe will likely be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be learned so they can be tuned out accordingly.Output DescriptionThe sequence of processes that resulted in reg.exe being started from a shell. That is, a hierarchy that looks like• great-grand_parent.exe• grand_parent.exe• parent.exe• reg.exeAnalytic 1 - Reg.exe called from Command Shellreg = filter processes where (exe == reg.exe and parent_exe == cmd.exe)cmd = filter processes where (exe == cmd.exe and parent_exe != explorer.exe)reg_and_cmd = join (reg, cmd) where (reg.ppid == cmd.pid and reg.hostname == cmd.hostname)Analytic 2 - Rare LolBAS Command Lineslolbas_processes = filter processes where (exe = At.exe OR exe = Atbroker.exe OR exe = Bash.exe OR exe = Bitsadmin.exe OR exe = Certutil.exe OR exe = Cmd.exe OR exe = Cmdkey.exe OR exe = Cmstp.exe OR exe = Control.exe OR exe = Csc.exe OR exe = Cscript.exe OR exe = Dfsvc.exe OR exe = Diskshadow.exe OR exe = Dnscmd.exe OR exe = Esentutl.exe OR exe = Eventvwr.exe OR exe = Expand.exe OR exe = Extexport.exe OR exe = Extrac32.exe OR exe = Findstr.exe OR exe = Forfiles.exe OR exe = Ftp.exe OR exe = Gpscript.exe OR exe = Hh.exe OR exe = Ie4uinit.exe OR exe = Ieexec.exe OR exe = Infdefaultinstall.exe OR exe = Installutil.exe OR exe = Jsc.exe OR exe = Makecab.exe OR exe = Mavinject.exe OR exe = Microsoft.Workflow.r.exe OR exe = Mmc.exe OR exe = Msbuild.exe OR exe = Msconfig.exe OR exe = Msdt.exe OR exe = Mshta.exe OR exe = Msiexec.exe OR exe = Odbcconf.exe OR exe = Pcalua.exe OR exe = Pcwrun.exe OR exe = Presentationhost.exe OR exe = Print.exe OR exe = Reg.exe OR exe = Regasm.exe OR exe = Regedit.exe OR exe = Register-cimprovider.exe OR exe = Regsvcs.exe OR exe = Regsvr32.exe OR exe = Replace.exe OR exe = Rpcping.exe OR exe = Rundll32.exe OR exe = Runonce.exe OR exe = Runscripthelper.exe OR exe = Sc.exe OR exe = Schtasks.exe OR exe = Scriptrunner.exe OR exe = SyncAppvPublishingServer.exe OR exe = Tttracer.exe OR exe = Verclsid.exe OR exe = Wab.exe OR exe = Wmic.exe OR exe = Wscript.exe OR exe = Wsreset.exe OR exe = Xwizard.exe OR exe = Advpack.dll OR exe = Comsvcs.dll OR exe = Ieadvpack.dll OR exe = Ieaframe.dll OR exe = Mshtml.dll OR exe = Pcwutl.dll OR exe = Setupapi.dll OR exe = Shdocvw.dll OR exe = Shell32.dll OR exe = Syssetup.dll OR exe = Url.dll OR exe = Zipfldr.dll OR exe = Appvlp.exe OR exe = Bginfo.exe OR exe = Cdb.exe OR exe = csi.exe OR exe = Devtoolslauncher.exe OR exe = dnx.exe OR exe = Dxcap.exe OR exe = Excel.exe OR exe = Mftrace.exe OR exe = Msdeploy.exe OR exe = msxsl.exe OR exe = Powerpnt.exe OR exe = rcsi.exe OR exe = Sqler.exe OR exe = Sqlps.exe OR exe = SQLToolsPS.exe OR exe = Squirrel.exe OR exe = te.exe OR exe = Tracker.exe OR exe = Update.exe OR exe = vsjitdebugger.exe OR exe = Winword.exe OR exe = Wsl.exe OR exe = CL_Mutexverifiers.ps1 OR exe = CL_Invocation.ps1 OR exe = Manage-bde.wsf OR exe = Pubprn.vbs OR exe = Slmgr.vbs OR exe = Syncappvpublishingserver.vbs OR exe = winrm.vbs OR exe = Pester.bat)process_count = count(lolbas_processes) by processprocess_count_avg = average(process_count)process_count_stdev = standard_deviation(process_count)lower_bound = process_count_avg - stdev * 1.5outliers = filter lolbas_processes where (process_count < lower_bound)")
T1547_003.hasDetection.append("Monitor newly executed processes, such as the W32tm.exe utility.The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.")
T1547_006.hasDetection.append("Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.")
T1547_009.hasDetection.append("Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.")
T1547_013.hasDetection.append("Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.")
T1547_014.hasDetection.append("Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.")
T1547_015.hasDetection.append("Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.")
T1037.hasDetection.append("Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry keyHKEY_CURRENT_USEREnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path.Analytic 1 - Boot or Logon Initialization Scriptslogon_script_key_processes = filter processes where ( command_line = regaddEnvironmentUserInitMprLogonScript)registry = search (Registry:Add OR Registry:Edit)registry_logon_key_events = filter registry where ( key = EnvironmentUserInitMprLogonScript)")
T1037_001.hasDetection.append("Monitor for newly constructed processes and/or command-lines that execute logon scripts")
T1037_002.hasDetection.append("Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.")
T1037_003.hasDetection.append("Monitor for newly constructed processes and/or command-lines that execute logon scripts")
T1037_004.hasDetection.append("Monitor for newly constructed processes and/or command-lines that execute /etc/rc.local if present.")
T1037_005.hasDetection.append("Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior")
T1176.hasDetection.append("Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence.")
T1217.hasDetection.append("Monitor for processes with arguments that may be associated with gathering browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).")
T1651.hasDetection.append("Monitor virtual machines for the creation of processes associated with cloud virtual machine agents. In Windows-based Azure machines, monitor for the WindowsAzureGuestAgent.exe process.")
T1059.hasDetection.append("Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.")
T1059_001.hasDetection.append("Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). - The logic for Analytic 1 is based around detecting on non-interactive Powershell sessions (i.e., those not launched by a user through explorer.exe). This may lead to false positives when used in a production environment, so we recommend tuning any such analytics by including additional logic (e.g., looking for suspicious parent processes) that helps filter such events.- The logic for Analytic 2 is based around detecting on remote Powershell sessions. PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe.Analytic 1- Non-interactive Powershell Sessionsprocesses = filter process where ((event_id=10 OR event_id=4688) AND exe == powershell.exe AND parent_exe != explorer.exe)Analytic 2- Remote Powershell Sessionsprocesses = filter process where ((event_id=10 OR event_id=4688) AND exe == wsmprovhost.exe and parent_exe == svchost.exe)")
T1059_002.hasDetection.append("Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.")
T1059_003.hasDetection.append("Monitor for newly executed processes that may abuse the Windows command shell for execution.Note: This Analytic works by creating a baseline of parent processes ofcmdseen over the last 30 days and a list of parent processes ofcmdseen today. Parent processes in the baseline are removed from the set of parent processes seen today, leaving a list of new parent processes. This analytic attempts to identify suspicious programs spawningcmdby looking for programs that do not normally createcmd. It is very common for some programs to spawncmdas a subprocess, for example to run batch files or Windows commands. However, many processes don’t routinely launch a command prompt - e.g., Microsoft Outlook. A command prompt being launched from a process that normally doesn’t launch command prompts could be the result of malicious code being injected into that process, or of an attacker replacing a legitimate program with a malicious one.Analytic 1cmd == filter processes where ((event_id == 1 OR event_id == 4688) AND exe == cmd.exe)cmd == from cmd select parent_exehistoric_cmd == filter cmd (where timestamp < now - 1 day AND timestamp > now - 1 day)current_cmd == filter cmd (where timestamp >= now - 1 day)new_cmd == historic_cmd - current_cmd")
T1059_004.hasDetection.append("Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.")
T1059_005.hasDetection.append("Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.")
T1059_006.hasDetection.append("Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.")
T1059_007.hasDetection.append("Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts")
T1609.hasDetection.append("Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.")
T1136.hasDetection.append("Monitor newly executed processes associated with account creation, such as net.exe")
T1136_001.hasDetection.append("Monitor newly executed processes associated with account creation, such as net.exeAnalytic 1 - Create local admin accounts using net.execertutil_downloads = filter processes where ( (exe = C:WindowsSystem32net.exe OR exe = C:WindowsSystem32net1.exe ) AND command_line = * -exportPFX * )")
T1136_002.hasDetection.append("Monitor newly executed processes associated with account creation, such as net.exe")
T1543.hasDetection.append("New, benign system processes may be created during installation of new software.")
T1543_002.hasDetection.append("Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.")
T1543_003.hasDetection.append("Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.Windows runs the Service Control Manager (SCM) within the process services.exe. Windows launches services as independent processes or DLL loads within a svchost.exe group. To be a legitimate service, a process (or DLL) must have the appropriate service entry point SvcMain. If an application does not have the entry point, then it will timeout (default is 30 seconds) and the process will be killed.To survive the timeout, adversaries and red teams can create services that direct to cmd.exe with the flag /c, followed by the desired command. The /c flag causes the command shell to run a command and immediately exit. As a result, the desired program will remain running and it will report an error starting the service. This analytic will catch that command prompt instance that is used to launch the actual malicious executable. Additionally, the children and descendants of services.exe will run as a SYSTEM user by default.Note: Create a baseline of services seen over the last 30 days and a list of services seen today. Remove services in the baseline from services seen today, leaving a list of new services. Returns all processes named cmd.exe that have services.exe as a parent process. Because this should never happen, the /c flag is redundant in the search.Analytic 1 : Service Outlier Executablesservices = filter processes where (parent_image_path == C:WindowsSystem32services.exe)historic_services = filter services (where timestamp < now - 1 day AND timestamp > now - 1 day)current_services = filter services (where timestamp >= now - 1 day)new_services = historic_services - current_servicesAnalytic 2 : Services launching CMDsuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (exe == cmd.exe and parent_exe == services.exe)")
T1543_004.hasDetection.append("Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.")
T1555.hasDetection.append("Monitor newly executed processes that may search for common password storage locations to obtain user credentials.")
T1555_001.hasDetection.append("Monitor processes spawned by command line utilities to manipulate keychains directly, such assecurity, combined with arguments to collect passwords, such asdump-keychain -d.")
T1555_004.hasDetection.append("Monitor newly executed processes for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds:Windows Credentials).")
T1485.hasDetection.append("Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.")
T1486.hasDetection.append("Monitor for newly constructed processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.")
T1005.hasDetection.append("Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.")
T1622.hasDetection.append("Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.")
T1140.hasDetection.append("Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding an encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The analytic is oriented around the creation of CertUtil.exe processes, which may be used to encode and decode files, including PE and script code. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process.Analytic 1 - CertUtil with Decode Argumentprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe =C:WindowsSystem32certutil.exe AND command_line =decode)")
T1652.hasDetection.append("Monitor processes (lsmod,driverquery.exe, etc.) for events that may highlight potentially malicious attempts to enumerate device drivers.")
T1561.hasDetection.append("Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.")
T1561_001.hasDetection.append("Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.")
T1561_002.hasDetection.append("Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.")
T1482.hasDetection.append("Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.")
T1189.hasDetection.append("Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence ofProcess Injectionfor attempts to hide execution, or evidence of Discovery.")
T1611.hasDetection.append("Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host.")
T1546.hasDetection.append("Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.")
T1546_001.hasDetection.append("Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.")
T1546_002.hasDetection.append("Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 : New processes whose image files are being used as Screensaver files and make an outbound network connection to unknown IP addressnew_processes = filter ProcessGuid, ProcessFilePath, ProcessCommandLine, UserNameFROM ProcessCreationDataWHERE event_id == 1new_network_connections = filter ProcessFilePath, DestinationIpFROM NetworkConnectionDataWHERE event_id == 3screensaver_key_modification = filter ProcessGuid, ProcessFilePath, UserName, RegistryKeyPath, RegistryKeyValueData FROM KeyModificationDataWHERE event_id == 13 AND RegistryKeyPath LIKE '%SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE%'screensaver_processes = filter p.ProcessGuid, p.ProcessFilePath, p.UserNameFROM new_processes pINNER JOIN screensaver_key_modification kON p.ProcessFilePath = k.RegistryKeyValueDatasuspicious_processes = filter p.ProcessGuid, p.ProcessFilePath, p.UserName, n.DestinationIpFROM new_network_connections nINNER JOIN screensaver_processes pON p.ProcessFilePath = n.ProcessFilePathWHERE n.DestinationIP NOT IN ('KnownIp01','KnownIp02')")
T1546_003.hasDetection.append("Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).Note: Windows Event ID 4688 (A new process has been created) and Sysmon Event ID 1 (Process creation) can be used to alert on processes created by WMI event subscription triggers by filtering on events with a parent process name of WmiPrvSe.exe.")
T1546_004.hasDetection.append("Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user’s shell.")
T1546_005.hasDetection.append("Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.")
T1546_006.hasDetection.append("Monitor processes for those that may be used to modify binary headers.")
T1546_007.hasDetection.append("It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.")
T1546_008.hasDetection.append("Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.An adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within Remote Desktop. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled. If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of cmd.exe or powershell.exe launched directly from the logon process, winlogon.exe.Several accessibility programs can be run using the Ease of Access centersethc.exe handles StickyKeysutilman.exe is the Ease of Access menuosk.exe runs the On-Screen Keyboardnarrator.exe reads screen text over audiomagnify.exe magnifies the view of the screen near the cursorOne simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the system32 folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set.The Windows Registry location HKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Options allows for parameters to be set for applications during execution. One feature used by malicious actors is the Debugger option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument. Adversaries can set a Debugger for Accessibility Applications. The analytic looks for the original command line as an argument to the Debugger. When the strings sethc.exe, utilman.exe, osk.exe, narrator.exe, and Magnify.exe are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic example looks for any creation of common accessibility processes such as sethc.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the parent process) that helps reduce false positives.Analytic 2 could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string sethc.exe being used as an argument for another application is unlikely, it still is a possibility.Analytic 1 : Command Launched from Winlogonprocesses = filter process where ((event_id == 1 OR event_id=4688) AND (parent_exe == winlogon.exe and exe == cmd.exe) AND command_line=(sethc.exe OR utilman.exe OR osk.exe OR narrator.exe OR magnify.exe)Analytic 2 : Debuggers for Accessibility Applicationsdebuggers = filter process where (command_line match $..(sethcutilmanosknarratormagnify).exe)")
T1546_009.hasDetection.append("Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.")
T1546_010.hasDetection.append("Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.Note: Sysmon Event ID 1 (process create) and Windows Security Log Event ID 4688 (a new process has been created) can be used to detect new reg.exe processes that modify the AppInit DLL registry keys since the registry keys are specified as a command-line parameter.")
T1546_011.hasDetection.append("Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. There are several public tools available that will detect shims that are currently available:* Shim-Process-Scanner - checks memory of every running process for any shim flags* Shim-Detector-Lite - detects installation of custom shim databases* Shim-Guard - monitors registry for any shim installations* ShimScanner - forensic tool to find active shims in memory* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)")
T1546_012.hasDetection.append("Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such asDEBUG_PROCESSandDEBUG_ONLY_THIS_PROCESS.")
T1546_013.hasDetection.append("Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.")
T1546_014.hasDetection.append("Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).")
T1546_015.hasDetection.append("Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.")
T1546_016.hasDetection.append("Monitor processes with arguments that may be related to abuse of installer packages, including malicious, likely elevated processes triggered by application installations.")
T1480.hasDetection.append("Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.")
T1480_001.hasDetection.append("Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.")
T1052.hasDetection.append("Monitor for newly executed processes when removable media is mounted.")
T1052_001.hasDetection.append("Monitor for newly executed processes when removable media is mounted")
T1203.hasDetection.append("Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.")
T1212.hasDetection.append("Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.")
T1211.hasDetection.append("Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.")
T1068.hasDetection.append("Monitor for newly executed processes that may exploit software vulnerabilities in an attempt to elevate privileges.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for an invocation of either spoolsv.exe or conhost.exe by a user, thus alerting us of any potentially malicious activity. A common way of escalating privileges in a system is by externally invoking and exploiting these executables, both of which are legitimate Windows applications.Analytic 1 - Unusual Child Process for spoolsv.exe or connhost.exeprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe ==C:WindowsSystem32spoolsv.exe OR exe ==C:WindowsSystem32conhost.exe) AND parent_image_path == C:WindowsSystem32cmd.exe)")
T1083.hasDetection.append("Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.")
T1222.hasDetection.append("Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.")
T1222_001.hasDetection.append("Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.")
T1222_002.hasDetection.append("Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.")
T1615.hasDetection.append("Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.")
T1564.hasDetection.append("Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_001.hasDetection.append("Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.")
T1564_002.hasDetection.append("Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.")
T1564_003.hasDetection.append("Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.")
T1564_006.hasDetection.append("Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).")
T1564_009.hasDetection.append("Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.")
T1564_010.hasDetection.append("Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring forProcess Hollowing, which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.")
T1574.hasDetection.append("Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.")
T1574_002.hasDetection.append("Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.")
T1574_005.hasDetection.append("Monitor for newly constructed processes to match an existing service executables.")
T1574_006.hasDetection.append("Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).")
T1574_007.hasDetection.append("Monitor for newly executed processes for process executable paths that are named for partial directories.")
T1574_008.hasDetection.append("Monitor for newly executed processes for process executable paths that are named for partial directories.")
T1574_009.hasDetection.append("Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.")
T1574_010.hasDetection.append("Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.")
T1574_011.hasDetection.append("Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.")
T1574_012.hasDetection.append("Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.")
T1562.hasDetection.append("Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.")
T1562_001.hasDetection.append("In an attempt to avoid detection after compromising a machine, threat actors often try to disable Windows Defender. This is often done using sc [service control], a legitimate tool provided by Microsoft for managing services. This action interferes with event detection and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Note: Though this analytic is utilizing Event ID 1 for process creation, the arguments are specifically looking for the use of service control for querying or trying to stop Windows Defender.Analytic 1 - Detecting Tampering of Windows Defender Command Prompttarget_processes = filter processes where ((exe=C:WindowsSystem32sc.exe) AND (command_line=scconfig OR command_line=scstop OR command_line=scquery))")
T1562_002.hasDetection.append("Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.Analytic 1 - Disable Windows Event Loggingsusp_processes = filter processes where ((command_line CONTAINS(New-Item) OR command_line CONTAINS(reg add)) OR command_line CONTAINS(MiniNt)) OR (command_line CONTAINS(Stop-Service)AND command_line CONTAINS(EventLog)) OR (command_line CONTAINS(EventLog) AND (command_line CONTAINS(Set-Service) OR command_line CONTAINS(reg add) OR command_line CONTAINS(Set-ItemProperty) OR command_line CONTAINS(New-ItemProperty) OR command_line CONTAINS(sc config))) OR (command_line CONTAINS(auditpol) AND (command_line CONTAINS(/set) OR command_line CONTAINS(/clear) OR command_line CONTAINS(/revove))) OR ((command_line CONTAINS(wevtutil) AND (command_line CONTAINS(sl) OR command_line CONTAINS(set-log))))")
T1562_009.hasDetection.append("Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.")
T1562_010.hasDetection.append("Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.")
T1562_011.hasDetection.append("Consider monitoring for suspicious processes that may be spoofing security tools and monitoring messages.")
T1070.hasDetection.append("Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_001.hasDetection.append("Monitor for newly executed processes that may clear Windows Event Logs to hide the activity of an intrusion. In an attempt to clear traces after compromising a machine, threat actors often try to clear Windows Event logs. This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Analytic 1 - Clearing Windows Logs with Wevtutilcleared_logs = filter processes where (event_id = 1 AND process_name = wevtutil AND cmd_line= cl")
T1070_005.hasDetection.append("Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for various methods of removing network shares via the command line, which is otherwise a rare event.Analytic 1: Network Share Connection Removaltarget_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == C:WindowsSystem32net.exe AND command_line == delete) OR command_line=Remove-SmbShare OR command_line=Remove-FileShare )")
T1070_007.hasDetection.append("Monitor created processes with arguments that may delete or alter malicious network configuration settings as well as generated artifacts that highlight network connection history on a host system -- which may include logs, files, or Registry values.")
T1070_008.hasDetection.append("Monitor for newly executed processes with arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails.")
T1070_009.hasDetection.append("Monitor for newly executed processes that may delete or alter generated artifacts associated with persistence on a host system.")
T1202.hasDetection.append("Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)")
T1490.hasDetection.append("Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit. After compromising a network of systems, threat actors often try to delete/resize Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies. This action is often employed by ransomware, may lead to a failure in recovering systems after an attack. The pseudo code detection focus on Windows Security and Sysmon process creation (4688 and 1). The use of wmic to delete shadow copy generates WMI-Activity Operationnal 5857 event and could generate 5858 (if the operation fails). These 2 EventIDs could be interesting when attackers use wmic without process creation and/or for forensics.Analytic 1 - Detecting Shadow Copy Deletion or Resizedeleted_copy = filter processes where ((event_id =4688 OR event_id =1) (CommandLine=vssadmindeleteshadows OR CommandLine=wmicshadowcopydelete OR CommandLine=vssadminresizeshadowstorage)) OR (event_id =5857 ProviderName=MSVSS__PROVIDER) OR (event_id =5858 Operation=Win32_ShadowCopy)Analytic 2 - BCDEdit Failure Recovery Modificationbcdedit_commands = filter processes where ( exe = C:WindowsSystem32bcdedit.exe AND command_line=recoveryenabled )")
T1056.hasDetection.append("Monitor for newly executed processes conducting malicious activity")
T1056_002.hasDetection.append("Monitor for newly executed processes")
T1559.hasDetection.append("Monitor for newly executed processes that are associated with abuse of IPC mechanisms")
T1559_001.hasDetection.append("Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.")
T1559_002.hasDetection.append("Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.Analytic 1 - Unusual Child Process spawned using DDE exploittarget_processes = filter processes where ( (parent_image=excel.exe OR parent_image=word.exe OR parent_image=outlook.exe) AND image=.exe)")
T1570.hasDetection.append("Monitor newly constructed processes that assist in lateral tool transfers.")
T1036.hasDetection.append("Monitor for newly executed processes that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints.Analytic 1 - Suspicious Run Locationssuspicious_locations = filter process where ( image_path == :RECYCLER* or image_path == :SystemVolumeInformation* or image_path == %windir%Tasks* or image_path == %systemroot%debug")
T1036_005.hasDetection.append("Monitor for newly executed processes that may match or approximate the name or location of legitimate files or resources when naming/placing them. Looks for mismatches between process names and their image paths.Malware authors often use this technique to hide malicious executables behind legitimate Windows executable names (e.g. lsass.exe, svchost.exe, etc).There are several sub-techniques, but this analytic focuses onMatch Legitimate Name or Locationonly.Note: With process monitoring, hunt for processes matching these criteria:process name is svchost.exe, smss.exe, wininit.exe, taskhost.exe, etc.process path is not C:WindowsSystem32 or C:WindowsSysWow64Examples (true positive):C:Usersadministratorsvchost.exeTo make sure the rule doesn’t miss cases where the executable would be started from a sub-folder of these locations, the entire path is checked for the process path. The below example should be considered as suspicious: C:WindowsSystem32srvsvchost.exeAnalytic 1 - Common Windows Process Masqueradingsuspicious_processes = filter processes where ( (exe=svchost.exe AND (image_path!=C:WindowsSystem32svchost.exe OR process_path!=C:WindowsSysWow64svchost.exe)) OR (exe=smss.exe AND image_path!=C:WindowsSystem32smss.exe) OR (exe=wininit.exe AND image_path!=C:WindowsSystem32wininit.exe) OR (exe=taskhost.exe AND image_path!=C:WindowsSystem32taskhost.exe) OR (exe=lasass.exe AND image_path!=C:WindowsSystem32lsass.exe) OR (exe=winlogon.exe AND image_path!=C:WindowsSystem32winlogon.exe) OR (exe=csrss.exe AND image_path!=C:WindowsSystem32csrss.exe) OR (exe=services.exe AND image_path!=C:WindowsSystem32services.exe) OR (exe=lsm.exe AND image_path!=C:WindowsSystem32lsm.exe) OR (exe=explorer.exe AND image_path!=C:Windowsexplorer.exe))")
T1112.hasDetection.append("Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe). The analytic is oriented around detecting invocations ofRegwhere the parent executable is an instance of cmd.exe that wasn’t spawned by explorer.exe. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exewill typically be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be baselined so they can be tuned out accordingly. Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Suspicious Processesreg_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == reg.exe AND parent_exe == cmd.exe))cmd_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == cmd.exe AND parent_exe != explorer.exe))reg_and_cmd_processes = join (reg_processes, cmd_processes) where (reg.parent_pid == cmd.pid and reg.hostname == cmd.hostname)Analytic 2 - Rare LolBAS Command Lineslolbas_processes = filter processes where (exe = At.exe OR exe = Atbroker.exe OR exe = Bash.exe OR exe = Bitsadmin.exe OR exe = Certutil.exe OR exe = Cmd.exe OR exe = Cmdkey.exe OR exe = Cmstp.exe OR exe = Control.exe OR exe = Csc.exe OR exe = Cscript.exe OR exe = Dfsvc.exe OR exe = Diskshadow.exe OR exe = Dnscmd.exe OR exe = Esentutl.exe OR exe = Eventvwr.exe OR exe = Expand.exe OR exe = Extexport.exe OR exe = Extrac32.exe OR exe = Findstr.exe OR exe = Forfiles.exe OR exe = Ftp.exe OR exe = Gpscript.exe OR exe = Hh.exe OR exe = Ie4uinit.exe OR exe = Ieexec.exe OR exe = Infdefaultinstall.exe OR exe = Installutil.exe OR exe = Jsc.exe OR exe = Makecab.exe OR exe = Mavinject.exe OR exe = Microsoft.Workflow.r.exe OR exe = Mmc.exe OR exe = Msbuild.exe OR exe = Msconfig.exe OR exe = Msdt.exe OR exe = Mshta.exe OR exe = Msiexec.exe OR exe = Odbcconf.exe OR exe = Pcalua.exe OR exe = Pcwrun.exe OR exe = Presentationhost.exe ORexe = Print.exe OR exe = Reg.exe OR exe = Regasm.exe OR exe = Regedit.exe OR exe = Register-cimprovider.exe OR exe = Regsvcs.exe OR exe = Regsvr32.exe OR exe = Replace.exe OR exe = Rpcping.exe OR exe = Rundll32.exe OR exe = Runonce.exe OR exe = Runscripthelper.exe OR exe = Sc.exe OR exe = Schtasks.exe OR exe = Scriptrunner.exe OR exe = SyncAppvPublishingServer.exe OR exe = Tttracer.exe OR exe = Verclsid.exe OR exe = Wab.exe OR exe = Wmic.exe OR exe = Wscript.exe OR exe = Wsreset.exe OR exe = Xwizard.exe OR exe = Advpack.dll OR exe = Comsvcs.dll OR exe = Ieadvpack.dll OR exe = Ieaframe.dll OR exe = Mshtml.dll OR exe = Pcwutl.dll OR exe = Setupapi.dll OR exe = Shdocvw.dll OR exe = Shell32.dll OR exe = Syssetup.dll ORexe = Url.dll OR exe = Zipfldr.dll OR exe = Appvlp.exe OR exe = Bginfo.exe OR exe = Cdb.exe OR exe = csi.exe OR exe = Devtoolslauncher.exe OR exe = dnx.exe OR exe = Dxcap.exe OR exe = Excel.exe OR exe = Mftrace.exe OR exe = Msdeploy.exe OR exe = msxsl.exe OR exe = Powerpnt.exe OR exe = rcsi.exe OR exe = Sqler.exe OR exe = Sqlps.exe OR exe = SQLToolsPS.exe OR exe = Squirrel.exe OR exe = te.exe OR exe = Tracker.exe OR exe = Update.exe OR exe = vsjitdebugger.exe OR exe = Winword.exe OR exe = Wsl.exe OR exe = CL_Mutexverifiers.ps1 OR exe = CL_Invocation.ps1 OR exe = Manage-bde.wsf OR exe = Pubprn.vbs OR exe = Slmgr.vbs OR exe = Syncappvpublishingserver.vbs OR exe = winrm.vbs OR exe = Pester.bat)process_count = count(lolbas_processes) by processprocess_count_avg = average(process_count)process_count_stdev = standard_deviation(process_count)lower_bound = process_count_avg - stdev * 1.5outliers = filter lolbas_processes where (process_count < lower_bound)")
T1135.hasDetection.append("Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.")
T1040.hasDetection.append("Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the networkNote: The Analytic is for Windows systems and looks for new processes that have the names of the most common network sniffing tools. While this may be noisy on networks where sysadmins are using any of these tools on a regular basis, in most networks their use is noteworthy.Analytic 1 - Windowsprocesses = filter processes where ((event_id == 1 OR event_id == 4688) ANDexe == tshark.exe ORexe == windump.exe OR(exe == logman.exe AND parent_exe exists AND parent_exe!=C:Program FilesWindows Event ReportingCoreEventReporting.AgentService.exe) ORexe == tcpdump.exe ORexe == wprui.exe ORexe == wpr.exe )")
T1027.hasDetection.append("Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.")
T1027_004.hasDetection.append("Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.")
T1137.hasDetection.append("Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.")
T1137_001.hasDetection.append("Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.")
T1137_002.hasDetection.append("Monitor newly executed processes that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.")
T1137_003.hasDetection.append("Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.")
T1137_004.hasDetection.append("Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.")
T1137_005.hasDetection.append("Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.")
T1137_006.hasDetection.append("Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.")
T1003.hasDetection.append("Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.")
T1003_001.hasDetection.append("Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Try monitoring for Sysmon Event ID 1 and/or Windows Security Event ID 4688 for process activity.Note: Rundll32/MiniDump has a different command-line syntax than that of Procdump, in that the process being dumped is specified via process ID instead of name (as with Procdump). Therefore, because the LSASS process ID is non-deterministic, the MiniDump detection isn’t specific to LSASS dumping and may need to be tuned to help reduce false positives.Analytic 1 - Procdumpprocesses = filter processes where ((event_id == 1 OR event_id == 4688) AND exe == procdump.exe and command_line == lsass*)Analytic 2 - MiniDump via rundll32processes = filter processes where ((event_id == 1 OR event_id == 4688) AND exe == rundll32.exe and command_line == comsvcs.dll MiniDump")
T1201.hasDetection.append("Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.")
T1120.hasDetection.append("Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.")
T1069.hasDetection.append("Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.")
T1069_001.hasDetection.append("Monitor newly executed processes that may attempt to find local system groups and permission settings.Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). The logic in the Analytic looks for any instances of net.exe used for local user/group discovery; although this utility is not normally used for benign purposes, such usage by system administrator actions may trigger false positives.Analytic 1 - Suspicious Processesprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe = net.exe AND ( command_line=netuser OR command_line=netgroup OR command_line=netlocalgroup OR command_line=get-localgroup OR command_line=get-ADPrincipalGroupMembership* )")
T1069_002.hasDetection.append("Monitor newly executed processes that may attempt to find domain-level groups and permission settings.For Linux, auditing frameworks that support alerting on process creation, including the audit daemon (auditd), can be used to alert on invocations of commands such asldapsearch.For MacOS, utilities that work in concert with Apple’s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asdscacheutil -q group.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Local Permission Group Discovery - Netprocesses = filter processes where ((event_id=10 OR event_id=4688) AND (exe == net.exe OR exe == net1.exe) AND command_line=group/domain")
T1069_003.hasDetection.append("Monitor newly executed processes that may attempt to find cloud groups and permission settings.")
T1647.hasDetection.append("Monitor for newly executed processes with arguments that can modify property list (plist) files.")
T1057.hasDetection.append("Monitor for newly executed processes that may attempt to get information about running processes on a system. To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment.Because these commands are built in, they may be run frequently by power users or even by normal users. Thus, an analytic looking at this information should have well-defined white- or blacklists, and should consider looking at an anomaly detection approach, so that this information can be learned dynamically.Within the built-in Windows Commands:hostnameipconfignetquserqwinstasc with flags query, queryex, qcsysteminfotasklistdsquerywhoamiNote dsquery is only pre-existing on Windows servers.Analytic 1 - Host Discovery Commandsinfo_command = filter process where ( exe == hostname.exe or exe == ipconfig.exe or exe == net.exe or exe == quser.exe or exe == qwinsta.exe or exe == sc and (command_line match  query or command_line match  qc)) or exe == systeminfo.exe or exe == tasklist.exe or exe == whoami.exe)")
T1055_012.hasDetection.append("Monitor for newly executed processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Adversaries may start legitimate processes and then use their memory space to run malicious code. This analytic looks for common Windows processes that have been abused this way in the past; when the processes are started for this purpose they may not have the standard parent that we would expect. This list is not exhaustive, and it is possible for cyber actors to avoid this discepency. These signatures only work if Sysmon reports the parent process, which may not always be the case if the parent dies before sysmon processes the event.Analytic 1 - Processes Started From Irregular Parentsmismatch_processes = filter processes where ( parent_exe exists AND (exe=smss.exe AND (parent_exe!=smss.exe AND parent_exe!=System) OR (exe=csrss.exe AND (parent_exe!=smss.exe AND parent_exe!=svchost.exe)) OR (exe=wininit.exe AND parent_exe!=smss.exe) OR (exe=winlogon.exe AND parent_exe!=smss.exe) OR (exe=lsass.exe AND (parent_exe!=wininit.exe AND parent_exe!=winlogon.exe)) OR (exe=LogonUI.exe AND (parent_exe!=winlogon.exe AND parent_exe!=wininit.exe)) OR (exe=services.exe AND parent_exe!=wininit.exe) OR (exe=spoolsv.exe AND parent_exe!=services.exe) OR (exe=taskhost.exe AND (parent_exe!=services.exe AND parent_exe!=svchost.exe)) OR (exe=taskhostw.exe AND (parent_exe!=services.exe AND parent_exe!=svchost.exe)) OR (exe=userinit.exe AND (parent_exe!=dwm.exe AND parent_exe!=winlogon.exe))")
T1012.hasDetection.append("Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider Registry). The Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations.Note for Analytic 3: Replace FilePathToLolbasProcessXX.exe with lolBAS process names that are used by your organization. The number_standard_deviations parameter should be tuned accordingly. Identifying outliers by comparing distance from a data point to the average value against a certain number of standard deviations is recommended for data values that are symmetrical distributed. If your data is not distributed, try a different algorithm such as the Interquartile Range (IQR).Analytic 1 - Suspicious Processes with Registry keyssuspicious_processes = filter processes where (EventId == 1 OR EventId == 4688) AND((ProcessCommandLine LIKE '%reg%' AND ProcessCommandLine LIKE '%query%') OR (ProcessCommandLine LIKE '%Registry%' AND (ProcessCommandLine LIKE '%HKEY_CLASSES_ROOT%' OR ProcessCommandLine '%HKCR%')))Analytic 2 - reg.exe spawned from suspicious cmd.exereg_processes = filter processes where (EventId == 1 OR EventId == 4688) AND (ProcessFilePath LIKE '%reg.exe%' AND ProcessParentFilePath LIKE '%cmd.exe%')cmd_processes = filter command_line where (event_id == 1 OR event_id == 4688) AND (ProcessFilePath LIKE '%cmd.exe%' AND ProcessParentFilePath NOT LIKE '%explorer.exe%')suspicious_processes = SELECT r.ProcessGuid, r.ProcessFilePath, c.ProcessFilePath AS ProcessParentFilePathFROM reg_processes rINNER JOIN cmd_processes cON r.ProcessParentGuid = c.ProcessGuidAnalytic 3 - Rare LolBAS command linescount_lolbas_processes = filter processes where (EventId == 1 OR EventId == 4688) AND ProcessFilePath IN ('FilePathToLolbasProcess01.exe','FilePathToLolbasProcess02.exe')GROUP BY ProcessFilePathnumber_standard_deviations = 1.5suspicious_processes = SELECT ProcessFilePath, ProcessCount, AVG(ProcessCount) Over() - STDEV(ProcessCount) Over() * number_standard_deviations as LowerBound FROM count_lolbas_processesWHERE ProcessCount < LowerBound")
T1219.hasDetection.append("Monitor for applications and processes related to remote admin software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators.Domain Frontingmay be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions.")
T1563.hasDetection.append("Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.")
T1563_001.hasDetection.append("Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.")
T1563_002.hasDetection.append("Consider monitoring processes for tscon.exe usage. Using tscon.exe to hijack an RDP session requires SYSTEM level permissions. Therefore, we recommend also looking for Privilege Escalation techniques that may be used for this purpose in conjunction with RDP Session Hijacking.In addition to tscon.exe, mstsc.exe can similarly be used to hijack existing RDP sessions. In this case, we recommend looking for the command-line parameters of/noconsentPromptand/shadow:, which allow for stealthy hijacking of an RDP session with no prompt and without kicking off the existing session.")
T1021.hasDetection.append("Monitor for newly executed processes that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.")
T1021_001.hasDetection.append("Monitor for newly executed processes (such asmstsc.exe) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.")
T1021_002.hasDetection.append("Monitor for the creation of WMI Win32_Process class and method Create to interact with a remote network share using Server Message Block (SMB). Relevant indicators detected by Bro/Zeek is IWbemServices::ExecMethod or IWbemServices::ExecMethodAsync. One thing to notice is that when the Create method is used on a remote system, the method is run under a host process named Wmiprvse.exe.The process WmiprvSE.exe is what spawns the process defined in the CommandLine parameter of the Create method. Therefore, the new process created remotely will have Wmiprvse.exe as a parent. WmiprvSE.exe is a DCOM server and it is spawned underneath the DCOM service host svchost.exe with the following parameters C:WINDOWSsystem32svchost.exe -k DcomLaunch -p. From a logon session perspective, on the target, WmiprvSE.exe is spawned in a different logon session by the DCOM service host. However, whatever is executed by WmiprvSE.exe occurs on the new network type (3) logon session created by the user that authenticated from the network.Analytic 1 - Basicsuspicious_smb_traffic = filter processes where((event_id = 4688 or event_id = 1) AND parent_process_name = wmiprvse.exe AND targetlogonid = 0x3e7)")
T1021_003.hasDetection.append("Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also precede malicious use.The Microsoft Management Console (mmc.exe) can be by used by threat actors used to spawn arbitrary processes through DCOM. The typical process tree for this method looks like: svchost.exe —> mmc.exe —>.exe.Accordingly, look for process creation events of mmc.exe in conjunction with the -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.Similar to the Microsoft Management Console, Excel can also be used to execute processes through DCOM. In this case, the typical process tree looks like: svchost.exe —> excel.exe —>.exe.Look for process creation events of excel.exe in conjunction with the /automation -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.")
T1021_004.hasDetection.append("Monitor for newly executed processes that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on macOS systemslog show --predicate 'process = sshd'can be used to review incoming SSH connection attempts for suspicious activity. The commandlog show --info --predicate 'process = ssh or eventMessage contains ssh'can be used to review outgoing SSH connection activity.For Linux systems, the Audit framework (auditd) can be used to monitor for the creation of SSH related processes such as ssh.For macOS systems (10.12+), the above command can be used to look through the Unified Logs for SSH connection activity, though we also recommend including the —debug parameter to ensure that all relevant data is returned:log show --info --debug --predicate 'process = ssh or eventMessage contains ssh'")
T1021_005.hasDetection.append("Monitor for newly executed processes that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems thescreensharingdprocess may be related to VNC connection activity.")
T1021_006.hasDetection.append("Monitor for newly executed processes that may useValid Accountsto interact with remote systems using Windows Remote Management (WinRM), as well as service processes such aswmiprvse.exeon destination hosts.")
T1018.hasDetection.append("Monitor for newly executed processes that can be used to discover remote systems, such asping.exeandtracert.exe, especially when executed in quick succession.")
T1091.hasDetection.append("Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.")
T1496.hasDetection.append("Monitor for common cryptomining or proxyware software process names that may indicate compromise and resource usage.")
T1053.hasDetection.append("Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_002.hasDetection.append("Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn fromsvchost.exeor the Windows Task Schedulertaskeng.exefor older OS versions.Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Instances of the process at.exe running imply the querying or creation of tasks. Although the command_line is not essential for the analytic to run, it is critical when identifying the command that was scheduled.Analyticat = filter process where (exe == at.exe)")
T1053_003.hasDetection.append("Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.")
T1053_005.hasDetection.append("Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows.If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Look for instances ofschtasks.exerunning as processes. Thecommand_linefield is necessary to disambiguate between types of schtasks commands. These include the flags/create,/run,/query,/delete,/change, and/end.Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 - New processes whose parent processes are svchost.exe or taskeng.exesuspicious_processes = filter ProcessId, ProcessFilePath, ProcessParentFilePath where (EventId == 1 OR EventId == 4688) AND (ProcessParentFilePath LIKE '%svchost.exe%' OR ProcessParentFilePath LIKE '%taskeng.exe%')Analytic 2 - Scheduled Task Creation or Modification Containing Suspicious Scripts, Extensions or User Writable Pathssusp_tasks_processes = filter processes where command_line CONTAINS(SCHTASKS) AND (command_line CONTAINS(/CREATE) OR command_line CONTAINS(/CHANGE)) AND (command_line CONTAINS(.cmd) OR command_line CONTAINS(.ps1) OR command_line CONTAINS(.vbs) OR command_line CONTAINS(.py) OR command_line CONTAINS(.js) OR command_line CONTAINS(.exe) OR command_line CONTAINS(.bat) OR (command_line CONTAINS(javascript) OR command_line CONTAINS(powershell) OR command_line CONTAINS(wmic) OR command_line CONTAINS(rundll32) OR command_line CONTAINS(cmd) OR command_line CONTAINS(cscript) OR command_line CONTAINS(wscript) OR command_line CONTAINS(regsvr32) OR command_line CONTAINS(mshta) OR command_line CONTAINS(bitsadmin) OR command_line CONTAINS(certutil) OR command_line CONTAINS(msiexec) OR command_line CONTAINS(javaw) OR (command_line CONTAINS(%APPDATA%) OR command_line CONTAINS(AppDataRoaming) OR command_line CONTAINS(%PUBLIC%) OR command_line CONTAINS(C:UsersPublic) OR command_line CONTAINS(%ProgramData%) OR command_line CONTAINS(C:ProgramData) OR command_line CONTAINS(%TEMP%) OR command_line CONTAINS(AppDataLocalTemp) OR command_line CONTAINS(WindowsPLASystem) OR command_line CONTAINS(tasks) OR command_line CONTAINS(RegistrationCRMLog) OR command_line CONTAINS(FxsTmp) OR command_line CONTAINS(spooldriverscolor) OR command_line CONTAINS(tracing))))tasks = search Task:createsusp_tasks = filter tasks where (task_content CONTAINS(.cmd) OR task_content CONTAINS(.ps1) OR task_content CONTAINS(.vbs) OR task_content CONTAINS(.py) OR task_content CONTAINS(.js) OR task_content CONTAINS(.exe) OR task_content CONTAINS(.bat) OR (task_content CONTAINS(javascript) OR task_content CONTAINS(powershell) OR task_content CONTAINS(wmic) OR task_content CONTAINS(rundll32) OR task_content CONTAINS(cmd) OR task_content CONTAINS(cscript) OR task_content CONTAINS(wscript) OR task_content CONTAINS(regsvr32) OR task_content CONTAINS(mshta) OR task_content CONTAINS(bitsadmin) OR task_content CONTAINS(certutil) OR task_content CONTAINS(msiexec) OR task_content CONTAINS(javaw) OR (task_content CONTAINS(%APPDATA%) OR task_content CONTAINS(AppDataRoaming) OR task_content CONTAINS(%PUBLIC%) OR task_content CONTAINS(C:UsersPublic) OR task_content CONTAINS(%ProgramData%) OR task_content CONTAINS(C:ProgramData) OR task_content CONTAINS(%TEMP%) OR task_content CONTAINS(AppDataLocalTemp) OR task_content CONTAINS(WindowsPLASystem) OR task_content CONTAINS(tasks) OR task_content CONTAINS(RegistrationCRMLog) OR task_content CONTAINS(FxsTmp) OR task_content CONTAINS(spooldriverscolor) OR task_content CONTAINS(tracing))))")
T1053_006.hasDetection.append("Monitor for newly constructed processes and/or command-lines that will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.")
T1505.hasDetection.append("Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.")
T1505_003.hasDetection.append("Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:<?php @eval($_POST['password']);>Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.A web shell is a web script placed on an openly accessible web server to allow an adversary to use the server as a gatway in a network. As the shell operates, commands will be issued from within the web application into the broader server operating system. This analytic looks for host enumeration executables initiated by any web service that would not normally be executed within that environment.Analytic 1 - Webshell-Indicative Process Treesuspicious_processes = filter processes where ( (parent_exe == w3wp.exe OR parent_exe == httpd.exe OR parent_exe == tomcat*.exe OR parent_exe == nginx.exe ) AND (exe == cmd.exe OR exe == powershell.exe OR exe == net.exe OR exe == whoami.exe OR exe == hostname.exe OR exe == systeminfo.exe OR exe == ipconfig.exe) )")
T1505_005.hasDetection.append("Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.")
T1489.hasDetection.append("Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.")
T1072.hasDetection.append("Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems.")
T1518.hasDetection.append("Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.")
T1518_001.hasDetection.append("Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.")
T1553.hasDetection.append("Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.")
T1553_001.hasDetection.append("Monitor and investigate attempts to modify extended file attributes with utilities such asxattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1553_004.hasDetection.append("Monitor for processes, such ascertmgr.exe(macOS) orcertutil.exe(Windows), that can be used to install root certificates. A system root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.The Sysinternals Sigcheck utility can also be used (sigcheck.exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.Analytic 1 - Attempt to Add Certificate to Untrusted Storeaddstore_commands = filter processes where ( exe =C:WindowsSystem32certutil.exe AND command_line=-addstore )")
T1553_006.hasDetection.append("Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.")
T1218.hasDetection.append("Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.")
T1218_001.hasDetection.append("Monitor and analyze the execution and arguments of hh.exe.Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of any HTML Help Executable (hh.exe) processes. Adversaries may hide malicious code in.chmcompiled help files; whenever a user tries to open one of these files, Windows executes the HTML Help Executable. Therefore, if there are legitimate uses of compiled help files in your environment, this analytic may lead to false positives and will require additional tuning.Analytic 1 - Compiled HTML Accessprocesses = filter processes where ((event_id == 1 OR event_id == 4688) AND exe=C:Windowssyswow64hh.exe OR exe=C:Windowssystem32hh.exe)")
T1218_002.hasDetection.append("Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.")
T1218_003.hasDetection.append("Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include:* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of a new CMSTP.exe process which initiates a network connection to a non-local IP address. This is a specific implementation where CMSTP.exe can be leveraged to setup listeners that will receive and install malware from remote sources in a trusted fashion.Analytic 1 - CMSTPprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == C:WindowsSystem32CMSTP.exe AND src_ip NOT IN [10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12] )")
T1218_004.hasDetection.append("Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity")
T1218_005.hasDetection.append("Use process monitoring to monitor the execution and arguments of mshta.exe.")
T1218_007.hasDetection.append("Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.")
T1218_008.hasDetection.append("Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.")
T1218_009.hasDetection.append("Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.")
T1218_010.hasDetection.append("Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). - Analytic 1 is a more generic analytic that looks for suspicious usage of regsvr32.exe, specifically for cases where regsvr32.exe creates child processes that aren’t itself. It’s not likely that this will result in millions of hits, but it does occur during benign activity so some form of baselining would be necessary for this to be useful as an alerting analytic.- Analytic 2 is around Squiblydoo, which is a specific usage of regsvr32.exe to load a COM scriptlet directly from the internet and execute it in a way that bypasses application whitelisting. It looks for regsvr32.exe process creation events that load scrobj.dll via the command-line (which executes the COM scriptlet).Analytic 1 - Generic Regsvr32processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND parent_image_path == regsvr32.exe and exe != regsvr32.exe*)Analytic 2 - Squiblydooprocesses = filter process where ( (event_id == 1 OR event_id == 4688) AND (process_path == regsvr32.exe and command_line == scrobj.dll))")
T1218_011.hasDetection.append("Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.When monitoring for all instances of Rundll32 execution, as defined by the logic in the Detection Pseudocode, it is imperative to also investigate the full set of command-line parameters used. These parameters contain key information about the DLL payload, including the name, entry point, and optional arguments.Note: Event IDs are for Sysmon (Event ID 10 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of rundll32.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the user that created the process) that helps reduce false positives.Analytic 1 - RunDLL32.exe Monitoringprocesses = filter process where ((event_id == 1 OR event_id == 4688) AND exe == rundll32.exe")
T1218_012.hasDetection.append("Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.")
T1218_013.hasDetection.append("Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.")
T1218_014.hasDetection.append("Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.")
T1082.hasDetection.append("Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.")
T1614.hasDetection.append("Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.")
T1614_001.hasDetection.append("Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.")
T1016.hasDetection.append("Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.Note: The Analytic looks for the creation ofipconfig,route, andnbtstatprocesses, all of which are system administration utilities that can be used for the purpose of system network configuration discovery. If these tools are commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Processprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == C:WindowsSystem32ipconfig.exe OR exe == C:WindowsSystem32route.exe OR exe == C:WindowsSystem32nbtstat.exe")
T1016_001.hasDetection.append("Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.")
T1049.hasDetection.append("Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.")
T1033.hasDetection.append("Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances ofatbeing created, therefore implying the querying or creation of tasks. If this tools is commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Process Executionprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == at.exe")
T1216.hasDetection.append("Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.")
T1216_001.hasDetection.append("Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.")
T1007.hasDetection.append("Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). For event id 4688, depending on Windows version, you might need to enableAdministrative TemplatesSystemAudit Process CreationInclude command line in process creation eventsgroup policy to include command line in process creation events.Analytic 1 - Suspicious Processessuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND ((command_line LIKE '%sc%' AND command_line LIKE '%query%') OR (command_line LIKE '%tasklist%' AND command_line LIKE '%/svc%') OR (command_line LIKE '%systemctl%' AND command_line LIKE '%--type=service%') OR (command_line LIKE '%net%' AND command_line LIKE '%start%'))")
T1569.hasDetection.append("Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.")
T1569_001.hasDetection.append("Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.")
T1569_002.hasDetection.append("Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.")
T1529.hasDetection.append("Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.")
T1124.hasDetection.append("Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.")
T1080.hasDetection.append("Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.")
T1221.hasDetection.append("Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex:PowerShell), or other suspicious actions that could relate to post-compromise behavior.")
T1205.hasDetection.append("Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.")
T1205_002.hasDetection.append("Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.")
T1127.hasDetection.append("Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.")
T1127_001.hasDetection.append("Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.Trusted developer utilities such as MSBuild may be leveraged to run malicious code with elevated privileges. This analytic looks for any instances of msbuild.exe, which will execute any C# code placed within a given XML document; and msxsl.exe, which processes xsl transformation specifications for XML files and will execute a variaty of scripting languages contained within the XSL file. Both of these executables are rarely used outside of Visual Studio.Analytic 1 - MSBuild and msxsltarget_processes = filter processes where ( (exe=C:Program Files (x86)Microsoft Visual Studio*binMSBuild.exe OR exe=C:WindowsMicrosoft.NETFrameworkmsbuild.exe OR exe=C:users*appdataroamingmicrosoftmsxsl.exe) AND image_path!=Microsoft Visual Studio*")
T1552.hasDetection.append("Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.")
T1552_001.hasDetection.append("Monitor newly executed processes for local file systems and remote file shares for files containing insecurely stored credentials.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as password. In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files & Registryprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND command_line == regquery HKLM /f password /t REG_SZ /s OR command_line == regquery HKCU /f password /t REG_SZ /s OR command_line == Get-UnattendedInstallFile OR command_line == Get-Webconfig OR command_line == Get-ApplicationHost OR command_line == Get-SiteListPassword OR command_line == Get-CachedGPPPassword OR command_line == Get-RegistryAutoLogon")
T1552_002.hasDetection.append("Monitor newly executed processes for applications that can be used to query the Registry, such asReg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as password. In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files & Registryprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND command_line == regquery HKLM /f password /t REG_SZ /s OR command_line == regquery HKCU /f password /t REG_SZ /s OR command_line == Get-UnattendedInstallFile OR command_line == Get-Webconfig OR command_line == Get-ApplicationHost OR command_line == Get-SiteListPassword OR command_line == Get-CachedGPPPassword OR command_line == Get-RegistryAutoLogon")
T1204.hasDetection.append("Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used toDeobfuscate/Decode Files or Informationin payloads.")
T1204_002.hasDetection.append("Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.")
T1497.hasDetection.append("Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.")
T1497_001.hasDetection.append("Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.")
T1497_002.hasDetection.append("User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.")
T1497_003.hasDetection.append("Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.")
T1047.hasDetection.append("Monitor for newly constructed processes and/or command-lines of wmic. If the command line utilitywmic.exeis used on the source host, then it can additionally be detected on an analytic. The command line on the source host is constructed into something likewmic.exe /node:<hostname> process call create <command line>. It is possible to also connect via IP address, in which case the string<hostname>would instead look like IP Address. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility PowerShell.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Besides executing arbitrary processes, wmic.exe can also be used to executed data stored in NTFS alternate data streamsNTFS File Attributes.Looks for instances of wmic.exe as well as the substrings in the command line:- process call create- /node:Analytic 1 : Create Remote Process via WMICprocesses = filter processes where ((event_id=10 OR event_id=4688) AND exe == wmic.exe AND command_line == process call create")
T1220.hasDetection.append("Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe.Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.")
T1548.hasDetection.append("Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.")
T1548_002.hasDetection.append("Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.")
T1548_003.hasDetection.append("Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.")
T1134.hasDetection.append("Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.")
T1134_004.hasDetection.append("Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.")
T1059.hasDetection.append("Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows Event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.")
T1059_001.hasDetection.append("Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.")
T1562_010.hasDetection.append("Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically theEngineVersionfield which shows the version of PowerShell running, may highlight a malicious downgrade attack.")
T1056.hasDetection.append("Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.")
T1056_004.hasDetection.append("Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.")
T1036.hasDetection.append("Monitor for file names that are mismatched between the file name on disk and that of the binary PE metadata, this is a likely indicator that a binary was renamed after it was compiled.")
T1036_003.hasDetection.append("Monitor for file names that are mismatched between the file name on disk and that of the binary PE metadata, this is a likely indicator that a binary was renamed after it was compiled.")
T1036_005.hasDetection.append("Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.")
T1055.hasDetection.append("Monitor for process memory inconsistencies, such as checking memory ranges against a known copy of the legitimate module.")
T1055_001.hasDetection.append("Monitor for process memory inconsistencies compared to DLL files on disk by checking memory ranges against a known copy of the legitimate module.")
T1185.hasDetection.append("This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor forProcess Injectionagainst browser applications.")
T1562.hasDetection.append("Using another process or third-party tools, monitor for modifications or access to system processes associated with logging.")
T1055.hasDetection.append("Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_001.hasDetection.append("Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. Injecting a malicious DLL into a process is a common adversary TTP. Although the ways of doing this are numerous, mavinject.exe is a commonly used tool for doing so because it roles up many of the necessary steps into one, and is available within Windows. Attackers may rename the executable, so we also use the common argument INJECTRUNNING as a related signature here. Whitelisting certain applications may be necessary to reduce noise for this analytic.Analytic 1 - DLL Injection with Mavinjectmavinject_processes = filter processes where ( exe = C:WindowsSysWOW64mavinject.exe OR Image=C:WindowsSystem32mavinject.exe OR command_line = /INJECTRUNNING")
T1055_002.hasDetection.append("Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_003.hasDetection.append("Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_004.hasDetection.append("Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_005.hasDetection.append("Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_008.hasDetection.append("Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.")
T1055_012.hasDetection.append("Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.")
T1055_015.hasDetection.append("Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.")
T1562.hasDetection.append("Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.")
T1562_001.hasDetection.append("Monitor processes for unexpected termination related to security tools/services. Specifically, before execution of ransomware, monitor for rootkit tools, such as GMER, PowerTool or TDSSKiller, that may detect and terminate hidden processes and the host antivirus software.")
T1489.hasDetection.append("Monitor processes and command-line arguments to see if critical processes are terminated or stop running.")
T1053.hasDetection.append("Monitor newly constructed scheduled jobs that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.")
T1053_002.hasDetection.append("Monitor for newly constructed scheduled jobs. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. On Windows, enable the Microsoft-Windows-TaskScheduler/Operational setting within the event logging service where several events will then be logged on scheduled task activity, including:Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registeredEvent ID 4698 on Windows 10, Server 2016 - Scheduled task createdEvent ID 4700 on Windows 10, Server 2016 - Scheduled task enabledEvent ID 4701 on Windows 10, Server 2016 - Scheduled task disabledTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.")
T1053_003.hasDetection.append("Monitor for newly constructed scheduled jobs. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.")
T1053_005.hasDetection.append("Monitor for newly constructed scheduled jobs by enabling the Microsoft-Windows-TaskScheduler/Operational setting within the event logging service.Several events will then be logged on scheduled task activity, including: Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered; Event ID 4698 on Windows 10, Server 2016 - Scheduled task created;Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled;Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabledNote: Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 : New schedule tasks whose content includes suspicious scripts, extensions or user writable pathsuspicious_scheduled_jobs = filter UserName, JobName, JobContent where EventId == 4698 AND (JobContent LIKE '%.cmd%' OR JobContent LIKE '%.ps1%' OR JobContent LIKE '%.vbs%' OR JobContent LIKE '%.py%' OR JobContent LIKE '%.js%' OR JobContent LIKE '%.exe%' OR JobContent LIKE '%.bat%' OR JobContent LIKE '%javascript%' OR JobContent LIKE '%powershell%' OR JobContent LIKE '%wmic%' OR JobContent LIKE '%rundll32%' OR JobContent LIKE '%cmd%' OR JobContent LIKE '%cscript%' OR JobContent LIKE '%wscript%' OR JobContent LIKE '%regsvr32%' OR JobContent LIKE '%mshta%' OR JobContent LIKE '%bitsadmin%' OR JobContent LIKE '%certutil%' OR JobContent LIKE '%msiexec%' OR JobContent LIKE '%javaw%' OR JobContent LIKE '%[%]APPDATA[%]%' OR JobContent LIKE '%AppDataRoaming%' OR JobContent LIKE '%[%]PUBLIC[%]%' OR JobContent LIKE '%C:UsersPublic%' OR JobContent LIKE '%[%]ProgramData[%]%' OR JobContent LIKE '%C:ProgramData%' OR JobContent LIKE '%[%]TEMP[%]%' OR JobContent LIKE '%AppDataLocalTemp%' OR JobContent LIKE '%WindowsPLASystem%' OR JobContent LIKE '%tasks%' OR JobContent LIKE '%RegistrationCRMLog%' OR JobContent LIKE '%FxsTmp%' OR JobContent LIKE '%spooldriverscolor%' OR JobContent LIKE '%tracing%')")
T1053_006.hasDetection.append("Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: systemctl list-timers –all. Analyze the contents of corresponding .service files present on the file system and ensure that they refer to legitimate, expected executables.")
T1053_007.hasDetection.append("Monitor for the anomalous creation of scheduled jobs in container orchestration environments.")
T1036.hasDetection.append("Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.On Windows, Event ID 4698 (Security Log - A scheduled task was created) can be used to alert on the creation of scheduled tasks and provides metadata including the task name and task content (as XML).On Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on invocations of cron, and provides the metadata included when executing the command.")
T1036_004.hasDetection.append("Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.")
T1070.hasDetection.append("Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.")
T1070_009.hasDetection.append("Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.")
T1036.hasDetection.append("Monitor for changes made to scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.")
T1036_004.hasDetection.append("Monitor for changes made to scheduled jobs for unexpected modifications to execution launch")
T1560.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1560_002.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1560_003.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1119.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1020.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1651.hasDetection.append("Monitor commands and scripts executed on virtual machines. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of executed jobs are available in theC:PackagesPluginsMicrosoft.CPlat.Core.RunCommandWindowsdirectory on Windows virtual machines.")
T1059.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1059_001.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1059_005.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1059_007.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1005.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.")
T1140.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1482.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1615.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1564.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1564_003.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1564_007.hasDetection.append("Detection efforts should be placed finding differences between VBA source code and p-code.VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.")
T1562.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1562_002.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1056_002.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1559.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1559_001.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also proceed malicious use.")
T1559_002.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. OLE and Office Open XML files can be scanned for ‘DDEAUTO’, ‘DDE’, and other strings indicative of DDE execution.https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/")
T1556_005.hasDetection.append("Consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such asSet-ADUserandSet-ADAccountControl, that change account configurations.")
T1027.hasDetection.append("Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters.")
T1027_010.hasDetection.append("Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters.")
T1620.hasDetection.append("Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.")
T1016.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1216.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1216_001.hasDetection.append("Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.")
T1499.hasDetection.append("Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1499_001.hasDetection.append("Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1499_002.hasDetection.append("Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1499_003.hasDetection.append("Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1499_004.hasDetection.append("Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1562.hasDetection.append("Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious.")
T1562_001.hasDetection.append("Lack of expected log events may be suspicious. Monitor for telemetry that provides context for modification or deletion of information related to security software processes or services such as Windows Defender definition files in Windows and System log files in Linux.")
T1562_002.hasDetection.append("Monitor for logging, messaging that may disable Windows event logging to limit data that can be leveraged for detections and audits. For example, adversaries may modify the EventLog file path to a different file name and location.")
T1562_003.hasDetection.append("Users checking or changing theirHISTCONTROL,HISTFILE, orHISTFILESIZEenvironment variables may be suspicious.")
T1562_006.hasDetection.append("Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data. Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session.")
T1562_011.hasDetection.append("Monitor logging, messaging, and other artifacts highlighting the health of host sensors (e.g., metrics, errors, and/or exceptions from logging applications), especially correlating and comparing centralized telemetry against potentially suspicious notifications presented on individual systems.")
T1498.hasDetection.append("Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1498_001.hasDetection.append("Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1498_002.hasDetection.append("Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)")
T1496.hasDetection.append("Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources.")
T1195.hasDetection.append("Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior.")
T1195_003.hasDetection.append("Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and and compare against known good baseline behavior.")
T1529.hasDetection.append("Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may suggest the shutting down or rebooting of the system. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006.")
T1557.hasDetection.append("Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as remote logins or process creation events.")
T1557_001.hasDetection.append("Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045.Deploy an LLMNR/NBT-NS spoofing detection tool.")
T1543.hasDetection.append("Monitor for newly constructed services/daemons that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.")
T1543_001.hasDetection.append("Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s KnockKnock application.")
T1543_002.hasDetection.append("Monitor for new constructed systemd services to repeatedly execute malicious payloads as part of persistence.")
T1543_003.hasDetection.append("Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045), especially those associated with unknown/abnormal drivers. New, benign services may be created during installation of new software.Analytic 1 : Creation of new services with unusual directory paths such as temporal files in APPDATAsuspicious_services = filter ServiceName, ServiceFilePath, ServiceType, ServiceStartType, ServiceAccountName where (event_id == 7045 OR event_id == 4697) AND (ServiceFilePath LIKE `%APPDATA%` OR ServiceImagePath LIKE `%PUBLIC%`)")
T1543_004.hasDetection.append("Monitor for newly constructed services may create or modify Launch Daemons to execute malicious payloads as part of persistence.")
T1564.hasDetection.append("Monitor for newly constructed services/daemons that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_006.hasDetection.append("Monitor for newly constructed services/daemons that may carry out malicious operations using a virtual instance to avoid detection. Consider monitoring for newWindows Service, with respect to virtualization software.")
T1036.hasDetection.append("Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.")
T1036_004.hasDetection.append("Monitor for newly constructed services/daemons. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.")
T1569.hasDetection.append("Monitor for newly constructed services/daemons to execute commands or programs.")
T1569_001.hasDetection.append("Monitor for newly constructed services/daemons to execute commands or programs.")
T1569_002.hasDetection.append("Monitor newly constructed services that abuse control manager to execute malicious commands or payloads.")
T1197.hasDetection.append("BITS runs as a service and its status can be checked with the Sc query utility (sc query bits).")
T1574.hasDetection.append("Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.")
T1574_005.hasDetection.append("Monitor for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.")
T1574_010.hasDetection.append("Hashing of binaries and service executables could be used to detect replacement against historical data.")
T1562.hasDetection.append("Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.")
T1562_001.hasDetection.append("Monitor for telemetry that provides context of security software services being disabled or modified. In cloud environments, monitor virtual machine logs for the status of cloud security agents. Spyware and malware remain a serious problem and Microsoft developed security services, Windows Defender and Windows Firewall, to combat this threat. In the event Windows Defender or Windows Firewall is turned off, administrators should correct the issue immediately to prevent the possibility of infection or further infection and investigate to determine if caused by crash or user manipulation.Note: Stopping services events are Windows Event Code 7036.Analytic 1 - User Activity from Stopping Windows Defensive Serviceslog_name == System ANDevent_code == 7036param1 in [Windows Defender, Windows Firewall] ANDparam2 == stopped")
T1490.hasDetection.append("Monitor the status of services involved in system recovery.Note: For Windows, Event ID 7040 can be used to alert on changes to the start type of a service (e.g., going from enabled at startup to disabled) associated with system recovery.")
T1036.hasDetection.append("Monitor for contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.")
T1036_004.hasDetection.append("Monitor for changes made to services for unexpected modifications to names, descriptions, and/or start types")
T1021_006.hasDetection.append("Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.")
T1489.hasDetection.append("Alterations to the service binary path or the service startup type changed to disabled may be suspicious.")
T1543.hasDetection.append("Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline.")
T1543_001.hasDetection.append("Monitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence.")
T1543_002.hasDetection.append("Analyze the contents of.servicefiles present on the file system and ensure that they refer to legitimate, expected executables.")
T1543_003.hasDetection.append("Monitor for changes made to Windows services to repeatedly execute malicious payloads as part of persistence.Analytic 1 : System services via registry modificationssuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 13 AND EventType == SetValue AND RegistryKeyPath LIKE `%HKLMSystemCurrentControlSetServices%` AND (RegistryKeyPath LIKE `%ImagePath%` OR RegistryKeyPath LIKE `%Type%` OR RegistryKeyPath LIKE `%DisplayName%` OR RegistryKeyPath LIKE `%Objectname%`)")
T1543_004.hasDetection.append("Monitor services for changes made to Launch Daemons to execute malicious payloads as part of persistence.")
T1574_011.hasDetection.append("Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity.")
T1578.hasDetection.append("Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1578_001.hasDetection.append("The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the gcloud compute instances create command to create a new VM disk from a snapshot.It is also possible to detect the usage of the GCP API with thesourceSnapshotparameter pointed toglobal/snapshots/[BOOT_SNAPSHOT_NAME].")
T1537.hasDetection.append("Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts.")
T1485.hasDetection.append("Monitor for unexpected deletion of a snapshot (ex: AWS delete-snapshot)")
T1490.hasDetection.append("Monitor for unexpected deletion of snapshots (ex: AWSdelete-snapshot), especially those associated with cloud backups.")
T1578.hasDetection.append("Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the deletion of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1580.hasDetection.append("Monitor cloud logs for API calls and other potentially unusual activity related to snapshot enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.")
T1578.hasDetection.append("Periodically baseline snapshots to identify malicious modifications or additions.")
T1578_001.hasDetection.append("Periodically baseline snapshots to identify malicious modifications or additions.")
T1537.hasDetection.append("Periodically baseline snapshots to identify malicious modifications or additions.")
T1578.hasDetection.append("Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the mounting of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1537.hasDetection.append("Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs.")
T1110.hasDetection.append("Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.")
T1110_001.hasDetection.append("Monitor for many failed authentication attempts across various accounts that may result from password guessing attempts.")
T1110_002.hasDetection.append("Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)")
T1110_003.hasDetection.append("Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.")
T1110_004.hasDetection.append("Monitor for many failed authentication attempts across various accounts that may result from credential stuffing attempts.")
T1538.hasDetection.append("Correlate other security systems with login information, such as user accounts, IP addresses, and login names.")
T1212.hasDetection.append("Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.")
T1606_002.hasDetection.append("Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.")
T1070.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_003.hasDetection.append("Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.")
T1070_005.hasDetection.append("Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.")
T1556.hasDetection.append("Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.")
T1556_006.hasDetection.append("Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.")
T1621.hasDetection.append("Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user`s primary credentials have been compromised minus 2FA/MFA mechanism.")
T1207.hasDetection.append("Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with GC/) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235–4B06–11D1-AB04–00C04FC2DCD2) can be set without logging.A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.")
T1552.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.")
T1552_005.hasDetection.append("It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.")
T1552_007.hasDetection.append("It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.")
T1550.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.")
T1550_002.hasDetection.append("Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.")
T1550_003.hasDetection.append("Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.")
T1078.hasDetection.append("Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.")
T1078_001.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials")
T1078_002.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on LinuxNote:For Windows, Security Logs events, including Event ID 4624, can be monitored to track user login behavior.For Linux, auditing frameworks that support File Integrity Monitoring (FIM), including the audit daemon (auditd), can be used to alert on changes to files that store login information. These files include:/etc/login.defs,/etc/securetty,/var/log/faillog,/var/log/lastlog,/var/log/tallylog.For MacOS, auditing frameworks that support capturing information on user logins, such as OSQuery, can be used to audit user account logins and authentications.")
T1078_003.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux.Notes: For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on changes to log files that track authentication attempts, including/var/log/secure.")
T1078_004.hasDetection.append("Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account, account usage at atypical hours, or account authentication from unexpected locations or IP addresses. Service accounts should only be accessible from IP addresses from within the cloud environment.For example, in Azure AD environments, consider using Identity Protection to flag risky sign-ins based on location, device compliance, and other factors.")
T1136.hasDetection.append("Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).")
T1136_001.hasDetection.append("Monitor for newly constructed user and service accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network, a Kubernetes cluster, or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).")
T1136_002.hasDetection.append("Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).")
T1136_003.hasDetection.append("Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts, such as accounts that do not follow specified naming conventions or accounts created by unapproved users or sources.Monitor for newly created admin accounts that go over a certain threshold of known admins.")
T1564.hasDetection.append("Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_002.hasDetection.append("Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.")
T1531.hasDetection.append("Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary`s attempt to remove an account (ex: Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1070.hasDetection.append("Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary`s attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.")
T1070_009.hasDetection.append("Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary`s attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.")
T1134.hasDetection.append("Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.")
T1134_005.hasDetection.append("Examine data in user’s SID-History attributes")
T1564.hasDetection.append("Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_002.hasDetection.append("Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and theHide500Userskey value in the/Library/Preferences/com.apple.loginwindowplist file set toTRUE.")
T1556_005.hasDetection.append("Modify Authentication Process:Reversible Encryption	Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.")
T1201.hasDetection.append("Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.")
T1548.hasDetection.append("Log cloud API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken.")
T1531.hasDetection.append("Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary`s attempt to remove access to an account:Event ID 4723 - An attempt was made to change an account`s passwordEvent ID 4724 - An attempt was made to reset an account`s passwordEvent ID 4725 - A user account was disabledAlerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.")
T1098.hasDetection.append("Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.")
T1098_001.hasDetection.append("Monitor for unexpected changes to cloud user accounts, such as Azure Activity Logs highlighting malicious Service Principal and Application modifications.Monitor for the use of API and CLI commands that add access keys or tokens to accounts, such asCreateAccessKeyorGetFederationTokenin AWS orservice-accounts keys createin GCP. Also monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.")
T1098_002.hasDetection.append("Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.")
T1098_003.hasDetection.append("Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. Monitor for updates to IAM policies and roles attached to user accounts.")
T1098_005.hasDetection.append("Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.")
T1562.hasDetection.append("Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.")
T1562_008.hasDetection.append("Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.")
T1556.hasDetection.append("Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon.")
T1556_006.hasDetection.append("Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon. Monitor for attempts to disable MFA on individual user accounts.")
T1528.hasDetection.append("Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a High severity app permissions policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app’s purpose, or apps with old Last authorized fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.")
T1578.hasDetection.append("Monitor for the unexpected creation or presence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1485.hasDetection.append("Monitor for unexpected deletion of a cloud volume (ex: AWS delete-volume)")
T1578.hasDetection.append("Monitor for the unexpected deletion or absence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1580.hasDetection.append("Monitor cloud logs for API calls and other potentially unusual activity related to block object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.")
T1578.hasDetection.append("Periodically baseline cloud block storage volumes to identify malicious modifications or additions.")
T1611.hasDetection.append("Monitor cluster-level (Kubernetes) data and events associated with changing containers` volume configurations.")
T1578.hasDetection.append("Monitor for the unexpected changes to cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.")
T1606.hasDetection.append("Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.Additionally, detect on unusual API calls to generate access tokens, such assts:GetFederationTokenin AWS.")
T1606_002.hasDetection.append("Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.")
T1606.hasDetection.append("Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.")
T1606_001.hasDetection.append("Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords orPrivate Keys.")
T1606_002.hasDetection.append("Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. The Federation Service validated a new credential) in the domain.")
T1550.hasDetection.append("Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.")
T1550_001.hasDetection.append("Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application that is not meant to read emails accessing users’ mail boxes and potentially exfiltrating sensitive data, or a token associated with a cloud service account being used to make API calls from an IP address outside of the cloud environment.")
T1550_004.hasDetection.append("Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.")
T1652.hasDetection.append("Monitor for attempts to access information stored in the Registry about devices and their associated drivers, such as values underHKLMSYSTEMCurrentControlSetServicesandHKLMSYSTEMCurrentControlSetHardwareProfiles.")
T1003.hasDetection.append("Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.")
T1003_002.hasDetection.append("Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.")
T1003_004.hasDetection.append("Monitor for the LSA secrets are stored in the registry atHKEY_LOCAL_MACHINESECURITYPolicySecretsbeing accessed")
T1012.hasDetection.append("Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information.Note: For Security Auditing event ids 4656 and 4663, a System Access Control List (SACL) that controls the use of specific access rights such as Enumerate sub-keys and Query key value is required for event generation. Depending on the Registry key you are monitoring, the implementation of a new System Access Control List (SACL) might be required. Depending of Registry key used for the creation of a System Access Control List (SACL), the generation of event ids 4656 and 4663 might be noisy.Analytic 1 - Suspicious Registrysuspicious_registry = filter registry where (event_id == 4663 OR event_id == 4656) AND ObjectType == Key AND RegistryKeyPath LIKE %SOFTWAREMicrosoftWindowsCurrentVersionUninstall% AND (UserAccessList LIKE %4435% OR UserAccessList LIKE %Enumerate sub-keys% OR UserAccessList LIKE %4432% OR UserAccessList LIKE %Query key value%) AND ProcessFilePath NOT IN (FilePathToExpectedProcess01.exe,FilePathToExpectedProcess02.exe)")
T1649.hasDetection.append("Monitor for attempts to access information stored in the Registry about certificates and their associated private keys. For example, user certificates are commonly stored underHKEY_CURRENT_USERSOFTWAREMicrosoftSystemCertificates.")
T1614_001.hasDetection.append("Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.")
T1033.hasDetection.append("Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.")
T1552.hasDetection.append("Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials.")
T1552_002.hasDetection.append("Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials.")
T1547.hasDetection.append("Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.")
T1547_001.hasDetection.append("Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.")
T1547_014.hasDetection.append("Monitor Registry key additions toHKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.")
T1037.hasDetection.append("Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence.")
T1037_001.hasDetection.append("Monitor for the creation/modification to Registry keys associated with Windows logon scrips, nameleyHKCUEnvironmentUserInitMprLogonScript.")
T1176.hasDetection.append("Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.")
T1543.hasDetection.append("Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.")
T1543_003.hasDetection.append("Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence.Analytic 1 : Creation of the HKLMSystemCurrentControlSetServices Registry keysuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 12 AND RegistryKeyPath LIKE %HKLMSystemCurrentControlSetServices%")
T1562_002.hasDetection.append("Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControl, which may disable Event Viewer.")
T1562_009.hasDetection.append("Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a*in front of the Startup value name:HKLMSoftwareMicrosoftWindowsCurrentVersionRun[*Startup={Path}]or by adding a key toHKLMSYSTEMCurrentControlSetControlSafeBootMinimal.")
T1556.hasDetection.append("Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServices<NetworkProviderName>NetworkProvider).")
T1556_008.hasDetection.append("Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServices<NetworkProviderName>NetworkProvider).")
T1112.hasDetection.append("Monitor for newly constructed registry keys or values to aid in persistence and execution. Detection of creation of registry key HKEY_LOCAL_MACHINESystemCurrentControlSetControlSession ManagerSafeDllSearchMode. The key SafeDllSearchMode, if set to 0, will block the Windows mechanism for the search DLL order and adversaries may execute their own malicious dll.Analytic 1 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0safe_dll_search_processes = filter processes where command_line CONTAINS(SafeDllSearchMode) AND ((command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d)) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) OR ((command_line CONTAINS(00000000) AND command_line CONTAINS(0)))reg_keys = search Registry:value_editsafe_dll_reg_keys = filter reg_keys where value=SafeDllSearchMode AND value_data=0")
T1027.hasDetection.append("Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.")
T1027_011.hasDetection.append("Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.")
T1137.hasDetection.append("Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.")
T1137_001.hasDetection.append("Collect events related to Registry key creation for keys that could be used for Office-based persistence.")
T1137_002.hasDetection.append("Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.")
T1137_006.hasDetection.append("Audit the Registry entries relevant for enabling add-ins.")
T1053_005.hasDetection.append("Monitor for newly constructed registry keys upon creation of new task. Deletion of values/keys in the registry may further indicate malicious activity.Note: Sysmon event id 12 is used in the analyticAnalytic 1 : Suspicious Creations under Schedule Registry Keysuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 12 AND (RegistryKeyPath LIKE %HKLMSOFTWAREMicrosoftWindows NTCurrentVersionScheduleTaskCacheTasks% OR RegistryKeyPath LIKE %HKLMSOFTWAREMicrosoftWindows NTCurrentVersionScheduleTaskCacheTree%)")
T1553.hasDetection.append("Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072")
T1553_004.hasDetection.append("Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072")
T1562.hasDetection.append("Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.")
T1562_001.hasDetection.append("Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:SOFTWAREMicrosoftAMSIProviders.")
T1070.hasDetection.append("Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_009.hasDetection.append("Monitor windows registry keys that may be deleted or alter generated artifacts associated with persistence on a host system.")
T1112.hasDetection.append("Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.")
T1548.hasDetection.append("There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.")
T1548_002.hasDetection.append("Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:* Theeventvwr.exebypass uses the[HKEY_CURRENT_USER]SoftwareClassesmscfileshellopencommandRegistry key.* Thesdclt.exebypass uses the[HKEY_CURRENT_USER]SoftwareMicrosoftWindowsCurrentVersionApp Pathscontrol.exeand[HKEY_CURRENT_USER]SoftwareClassesexefileshellrunascommandisolatedCommandRegistry keys.Analysts should monitor these Registry settings for unauthorized changes.UAC Bypass is an interesting technique in that new implementations are regularly found and existing implementations may be fixed (i.e., patched) by Microsoft in new builds of Windows. Therefore, it is important to validate than detections for UAC Bypass are still relevant (i.e., they target non-patched implementations).Note: Sysmon Event ID 12 (Registry Key Create/Delete), Sysmon Event ID 13 (Registry Value Set), and Sysmon Event ID 14 (Registry Key and Value Rename) are useful for creating detections around Registry Key Modification in the context of UAC Bypass.")
T1557.hasDetection.append("Monitor HKLMSoftwarePoliciesMicrosoftWindows NTDNSClient for changes to the EnableMulticast DWORD value. A value of 0 indicates LLMNR is disabled.")
T1557_001.hasDetection.append("Monitor HKLMSoftwarePoliciesMicrosoftWindows NTDNSClient for changes to the EnableMulticast DWORD value. A value of 0 indicates LLMNR is disabled.")
T1547.hasDetection.append("Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.")
T1547_001.hasDetection.append("Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys Registry locations.Detection of the modification of the registry keyCommon Startuplocated in HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders and HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Modification of Default Startup Folder in the Registry Key ‘Common Startup’logon_reg_processes = filter processes where (command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) AND command_line CONTAINS(Common Startup))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where value=Common Startup")
T1547_002.hasDetection.append("Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.")
T1547_003.hasDetection.append("Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry.")
T1547_004.hasDetection.append("Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.Analytic 1 - Modification of the Winlogon Registry Keysuspicious_processes = filter registry where event_id == 13 AND (RegistryKeyPath LIKE %Userinit% OR RegistryKeyPath LIKE %Shell% OR RegistryKeyPath LIKE %Notify%)")
T1547_005.hasDetection.append("Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.")
T1547_010.hasDetection.append("Monitor Registry writes toHKLMSYSTEMCurrentControlSetControlPrintMonitors. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism")
T1547_012.hasDetection.append("Monitor Registry writes toHKLMSYSTEMControlSet001ControlPrintEnvironments[Windows architecture]Print Processors[user defined]DriverorHKLMSYSTEMCurrentControlSetControlPrintEnvironments[Windows architecture]Print Processors[user defined]Driveras they pertain to print processor installations.")
T1547_014.hasDetection.append("Monitor Registry key modifications toHKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.")
T1543.hasDetection.append("Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.")
T1543_003.hasDetection.append("Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry atHKLMSYSTEMCurrentControlSetServices. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.Analytic 1 : Modification of the HKLMSystemCurrentControlSetServices Registry keysuspicious_registry = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where (event_id == 13 event_id == 14) AND RegistryKeyPath LIKE %HKLMSystemCurrentControlSetServices%")
T1074.hasDetection.append("Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.")
T1074_001.hasDetection.append("Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.")
T1546.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.")
T1546_001.hasDetection.append("Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under[HKEY_CURRENT_USER]SoftwareMicrosoftWindowsCurrentVersionExplorerFileExtsand override associations configured under[HKEY_CLASSES_ROOT]. Changes to a users preference will occur under this entrys subkeys.")
T1546_002.hasDetection.append("Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Default screen saver files are stored in C:WindowsSystem32. Use these files as a reference when defining list of not suspicious screen saver files.Analytic 1 : Registry Edit from Screensaverscr_reg_events = filter processes where ( event_id == 13 AND key=*SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE AND RegistryKeyValueData NOT IN (PathToScreenSaverFile1,PathToScreenSaverFile2))")
T1546_007.hasDetection.append("Monitor theHKLMSOFTWAREMicrosoftNetshregistry key for any new or suspicious entries that do not correlate with known system files or benign software.")
T1546_008.hasDetection.append("Monitor Registry keys withinHKEY_LOCAL_MACHINESOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Options.")
T1546_009.hasDetection.append("Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc.")
T1546_001.hasDetection.append("Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWindows or HKEY_LOCAL_MACHINESoftwareWow6432NodeMicrosoftWindows NTCurrentVersionWindows are loaded by user32.dll into every process that loads user32.dll. These values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes. Accordingly, this analytic looks for modifications to these registry keys that may be indicative of this type of abuse.Analytic 1 : AppInit DLLsappinit_keys = filter registry_keys where ((event_id == 12 OR event_id == 13 event_id == 14) AND key = SOFTWAREMicrosoftWindows NTCurrentVersionWindowsAppinit_Dlls* OR key = SOFTWAREWow6432NodeMicrosoftWindows NTCurrentVersionWindowsAppinit_Dlls")
T1546_011.hasDetection.append("Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.")
T1546_012.hasDetection.append("Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc.")
T1546_015.hasDetection.append("There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex:Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USERSoftwareClassesCLSID may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINESOFTWAREClassesCLSID.Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.Analytic 1 : Component Object Model Hijackingclsid_keys = filter registry_keys where ((event_id == 12 OR event_id == 13 event_id == 14) AND key = *SoftwareClassesCLSID")
T1564.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection.")
T1564_002.hasDetection.append("Monitor for changes made to windows registry key or values for unexpected modifications of theHKLMSOFTWAREMicrosoftWindows NTCurrentVersionWinlogonSpecialAccountsUserListkey.")
T1564_005.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools.")
T1564_006.hasDetection.append("Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities.")
T1574.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs.")
T1574_007.hasDetection.append("Monitor for modifications of PATH environment variable Registry keys such asHKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlSession ManagerEnvironmentPath. An adversary can add a new directory or list of directories before other locations where programs can be executed from.")
T1574_011.hasDetection.append("Monitor for modification of Registry keys and values used by services such as HKLMSYSTEMCurrentControlSetServices that may allow adversaries to launch their own code when a service starts.")
T1574_012.hasDetection.append("For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools.")
T1562.hasDetection.append("Monitor Registry edits for modifications to services and startup programs that correspond to security tools.")
T1562_001.hasDetection.append("Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:SOFTWAREPoliciesMicrosoftWindows Defender.")
T1562_002.hasDetection.append("Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControl, which may disable Event Viewer.Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. There are different ways to perform this attack.1. The first one is to create the Registry Key HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlMiniNt. This action will not generate Security EventLog 4657 or Sysmon EventLog 13 because the value of the key remains empty. However, if an attacker uses powershell to perform this attack (and not cmd), a Security EventLog 4663 will be generated (but 4663 generates a lot of noise).2. The second way is to disable the service EventLog (display name Windows Event Log). After disabed, attacker must reboot the system. The action of disabling or put in manual the service will modify the Registry Key value HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesEventLogstart, therefore Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system.3. The third way is linked with the second. By default, the EventLog service cannot be stopped. If an attacker tries to stop the service, this one will restart immediately. Why ? Because to stop completely, this service must stop others, one in particular called netprofm (display name Network List Service). This service remains running until it is disabled. So Attacker must either disable EventLog and after to stop it or disable netprofm and after stop EventLog. Only stopping the service (even as admin) will not have an effect on the EventLog service because of the link with netprofm. Security EventLog 1100 will log the stop of the EventLog service (but also generates a lot of noise because it will generate a log everytime the system shutdown).4. The fourth way is to use auditpol.exe to modify the audit configuration and disable/modify important parameters that will lead to disable the creation of EventLog.5. The last one is to modify the Registry Key value HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesEventLogSecurityfile (or other kind of log) to modify the path where the EventLog are stocked. Importantly, with this technique, the EventViewer will use the value of the Registry Key file to know where to find the Log. Thus, using the EventViewer will always show the current event logs, but the old one will be stocked in another evtx. Also, the path must be in a folder that the Eventlog process has access (like it doesn’t work if attacker set up the new path in the Desktop). Attacker can also decrease the maxsize value of the Log to force the system to rewrite on the older EventLog (but the minimum cannot be less than 1028 KB). As the Registry key is modified, Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system. All of these attacks required administrative right. Attacks number three, four and five do not require a system reboot to be effective immediately.Analytic 1 - Disable Windows Event Loggingevent_log_reg_keys = filter reg_keys where Key=EventLog AND (value=Start OR value=File OR value=MaxSize)")
T1562_004.hasDetection.append("Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such as HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesSharedAccessParametersFirewallPolicy.")
T1562_006.hasDetection.append("To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers:HKLMSYSTEMCurrentControlSetControlWMIAutologgerAUTOLOGGER_NAME{PROVIDER_GUID}")
T1562_009.hasDetection.append("Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a*in front of the Startup value name:HKLMSoftwareMicrosoftWindowsCurrentVersionRun[*Startup={Path}]or by adding a key toHKLMSYSTEMCurrentControlSetControlSafeBootMinimal.")
T1070.hasDetection.append("Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.")
T1070_007.hasDetection.append("Clear Network Connection History and Configurations	Monitor for changes to Registry keys (ex:HKEY_CURRENT_USERSoftwareMicrosoftTerminal Server ClientDefault) and associated values that may be malicious attempts to conceal adversary network connection history.")
T1070_009.hasDetection.append("Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts associated with persistence on a host system.")
T1490.hasDetection.append("Monitor the registry for changes associated with system recovery features (ex: the creation ofHKEY_CURRENT_USERSoftwarePoliciesMicrosoftPreviousVersionsDisableLocalPage).")
T1056.hasDetection.append("Monitor for changes made to windows registry keys or values for unexpected modifications")
T1056_001.hasDetection.append("Monitor for changes made to windows registry keys or values for unexpected modifications")
T1556.hasDetection.append("Monitor for changes to Registry entries for password filters (ex:HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsaNotification Packages) and correlate then investigate the DLL files these files reference.Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlNetworkProviderOrder) and correlate then investigate the DLL files these values reference.")
T1556_002.hasDetection.append("Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsaNotification Packages) and correlate then investigate the DLL files these files reference.")
T1556_008.hasDetection.append("Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlNetworkProviderOrder) and correlate then investigate the DLL files these values reference.")
T1112.hasDetection.append("Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.Detection of modification of the registry key values of Notify, Userinit, and Shell located in HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWinlogon and HKEY_LOCAL_USERSoftwareMicrosoftWindows NTCurrentVersionWinlogon. When a user logs on, the Registry key values of Notify, Userinit and Shell are used to load dedicated Windows component. Attackers may insert malicious payload following the legitimate value to launch a malicious payload.Detection of the modification of the registry key Common Startup located in HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders and HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notifylogon_reg_processes = filter processes where command_line CONTAINS(MicrosoftWindows NTCurrentVersionWinlogon) AND (command_line CONTAINS(Userinit) OR command_line CONTAINS(Shell) OR command_line CONTAINS(Notify)) AND (((command_line CONTAINS(reg) OR command_line CONTAINS(add) OR command_line CONTAINS(/d)) OR (command_line CONTAINS(Set-ItemProperty) OR command_line CONTAINS(New-ItemProperty) OR command_line CONTAINS(-value))))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where (value=Userinit OR value=Shell OR value=Notify)Analytic 2 - Modification of Default Startup Folder in the Registry Key ‘Common Startup’logon_reg_processes = filter processes where (command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) AND command_line CONTAINS(Common Startup))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where value=Common Startup")
T1111.hasDetection.append("Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources.")
T1137.hasDetection.append("Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.")
T1137_001.hasDetection.append("Collect events related to Registry key modification for keys that could be used for Office-based persistence.")
T1137_002.hasDetection.append("Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.")
T1137_006.hasDetection.append("Audit the Registry entries relevant for enabling add-ins.")
T1003_001.hasDetection.append("Monitor for changes to Registry entries associated with credential access that is stored in the process memory of the LSASS. For example, the adversary can modify the SAM and SYSTEM files.")
T1505_005.hasDetection.append("Server Software Component:Terminal Services DLL	Monitor for changes to Registry keys associated withServiceDlland other subkey values underHKLMSystemCurrentControlSetservicesTermServiceParameters.")
T1489.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users.")
T1553.hasDetection.append("Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:Also consider enabling the Registry Global Object Access Auditingsetting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:")
T1553_003.hasDetection.append("Enable the Registry Global Object Access Auditingsetting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:*HKLMSOFTWAREMicrosoftCryptographyOID*HKLMSOFTWAREWOW6432NodeMicrosoftCryptographyOID*HKLMSOFTWAREMicrosoftCryptographyProvidersTrust*HKLMSOFTWAREWOW6432NodeMicrosoftCryptographyProvidersTrustNote:As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process usingRegsvr32.Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.")
T1553_004.hasDetection.append("Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072")
T1553_006.hasDetection.append("Consider monitoring for modifications made to Registry keys associated with code signing policies, such asHKCUSoftwarePoliciesMicrosoftWindows NTDriver Signing. Modifications to the code signing policy of a system are likely to be rare.")
T1218.hasDetection.append("Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services.")
T1218_002.hasDetection.append("Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries inHKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerControlPanelNameSpaceandHKEY_CLASSES_ROOTCLSID{GUID}. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel.* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in theCPLsandExtended PropertiesRegistry keys ofHKEY_LOCAL_MACHINE or HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionControl Panel. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (WinExec(c:windowssystem32control.exe {Canonical_Name}, SW_NORMAL);) or from a command line (control.exe /name {Canonical_Name}).* Some Control Panel items are extensible via Shell extensions registered inHKEY_LOCAL_MACHINESoftwareMicrosoftWindowsCurrentVersionControls Folder{name}ShellexPropertySheetHandlerswhere {name} is the predefined name of the system item.")
T1569.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs.")
T1569_002.hasDetection.append("Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads.")
T1546.hasDetection.append("Monitor for newly constructed WMI Objects that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.")
T1546_003.hasDetection.append("Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.Monitor for the creation of new WMIEventFilter,EventConsumer, andFilterToConsumerBindingevents. Event ID 5861 is logged on Windows 10 systems when newEventFilterToConsumerBindingevents are created.")
T1027.hasDetection.append("Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads.")
T1027_011.hasDetection.append("Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads.")
T1021.hasDetection.append("Monitor for newly constructed WMI objects that is often used to log into a service that accepts remote connects.")
T1047.hasDetection.append("Monitor for newly constructed WMI objects that will execute malicious commands and payloads.")



# Add Detections
DS0026 = Detection("DS0026")
DS0026_001 = Detection("DS0026_001")
DS0026_002 = Detection("DS0026_002")
DS0026_003 = Detection("DS0026_003")
DS0026_004 = Detection("DS0026_004")
DS0026_005 = Detection("DS0026_005")
DS0015 = Detection("DS0015")
DS0015_001 = Detection("DS0015_001")
DS0037 = Detection("DS0037")
DS0037_001 = Detection("DS0037_001")
DS0025 = Detection("DS0025")
DS0025_001 = Detection("DS0025_001")
DS0025_002 = Detection("DS0025_002")
DS0025_003 = Detection("DS0025_003")
DS0025_004 = Detection("DS0025_004")
DS0010 = Detection("DS0010")
DS0010_001 = Detection("DS0010_001")
DS0010_002 = Detection("DS0010_002")
DS0010_003 = Detection("DS0010_003")
DS0010_004 = Detection("DS0010_004")
DS0010_005 = Detection("DS0010_005")
DS0010_006 = Detection("DS0010_006")
DS0017 = Detection("DS0017")
DS0017_001 = Detection("DS0017_001")
DS0032 = Detection("DS0032")
DS0032_001 = Detection("DS0032_001")
DS0032_002 = Detection("DS0032_002")
DS0032_003 = Detection("DS0032_003")
DS0038 = Detection("DS0038")
DS0038_001 = Detection("DS0038_001")
DS0038_002 = Detection("DS0038_002")
DS0038_003 = Detection("DS0038_003")
DS0016 = Detection("DS0016")
DS0016_001 = Detection("DS0016_001")
DS0016_002 = Detection("DS0016_002")
DS0016_003 = Detection("DS0016_003")
DS0027 = Detection("DS0027")
DS0027_001 = Detection("DS0027_001")
DS0027_002 = Detection("DS0027_002")
DS0022 = Detection("DS0022")
DS0022_001 = Detection("DS0022_001")
DS0022_002 = Detection("DS0022_002")
DS0022_003 = Detection("DS0022_003")
DS0022_004 = Detection("DS0022_004")
DS0022_005 = Detection("DS0022_005")
DS0018 = Detection("DS0018")
DS0018_001 = Detection("DS0018_001")
DS0018_002 = Detection("DS0018_002")
DS0018_003 = Detection("DS0018_003")
DS0018_004 = Detection("DS0018_004")
DS0001 = Detection("DS0001")
DS0001_001 = Detection("DS0001_001")
DS0036 = Detection("DS0036")
DS0036_001 = Detection("DS0036_001")
DS0036_002 = Detection("DS0036_002")
DS0036_003 = Detection("DS0036_003")
DS0007 = Detection("DS0007")
DS0007_001 = Detection("DS0007_001")
DS0007_002 = Detection("DS0007_002")
DS0007_003 = Detection("DS0007_003")
DS0007_004 = Detection("DS0007_004")
DS0030 = Detection("DS0030")
DS0030_001 = Detection("DS0030_001")
DS0030_002 = Detection("DS0030_002")
DS0030_003 = Detection("DS0030_003")
DS0030_004 = Detection("DS0030_004")
DS0030_005 = Detection("DS0030_005")
DS0030_006 = Detection("DS0030_006")
DS0030_007 = Detection("DS0030_007")
DS0035 = Detection("DS0035")
DS0035_001 = Detection("DS0035_001")
DS0035_002 = Detection("DS0035_002")
DS0008 = Detection("DS0008")
DS0008_001 = Detection("DS0008_001")
DS0028 = Detection("DS0028")
DS0028_001 = Detection("DS0028_001")
DS0028_002 = Detection("DS0028_002")
DS0023 = Detection("DS0023")
DS0023_001 = Detection("DS0023_001")
DS0004 = Detection("DS0004")
DS0004_001 = Detection("DS0004_001")
DS0004_002 = Detection("DS0004_002")
DS0011 = Detection("DS0011")
DS0011_001 = Detection("DS0011_001")
DS0033 = Detection("DS0033")
DS0033_001 = Detection("DS0033_001")
DS0029 = Detection("DS0029")
DS0029_001 = Detection("DS0029_001")
DS0029_002 = Detection("DS0029_002")
DS0029_003 = Detection("DS0029_003")
DS0021 = Detection("DS0021")
DS0021_001 = Detection("DS0021_001")
DS0014 = Detection("DS0014")
DS0014_001 = Detection("DS0014_001")
DS0014_002 = Detection("DS0014_002")
DS0014_003 = Detection("DS0014_003")
DS0009 = Detection("DS0009")
DS0009_001 = Detection("DS0009_001")
DS0009_002 = Detection("DS0009_002")
DS0009_003 = Detection("DS0009_003")
DS0009_004 = Detection("DS0009_004")
DS0009_005 = Detection("DS0009_005")
DS0009_006 = Detection("DS0009_006")
DS0003 = Detection("DS0003")
DS0003_001 = Detection("DS0003_001")
DS0003_002 = Detection("DS0003_002")
DS0003_003 = Detection("DS0003_003")
DS0012 = Detection("DS0012")
DS0012_001 = Detection("DS0012_001")
DS0013 = Detection("DS0013")
DS0013_001 = Detection("DS0013_001")
DS0019 = Detection("DS0019")
DS0019_001 = Detection("DS0019_001")
DS0019_002 = Detection("DS0019_002")
DS0019_003 = Detection("DS0019_003")
DS0020 = Detection("DS0020")
DS0020_001 = Detection("DS0020_001")
DS0020_002 = Detection("DS0020_002")
DS0020_003 = Detection("DS0020_003")
DS0020_004 = Detection("DS0020_004")
DS0020_005 = Detection("DS0020_005")
DS0002 = Detection("DS0002")
DS0002_001 = Detection("DS0002_001")
DS0002_002 = Detection("DS0002_002")
DS0002_003 = Detection("DS0002_003")
DS0002_004 = Detection("DS0002_004")
DS0002_005 = Detection("DS0002_005")
DS0034 = Detection("DS0034")
DS0034_001 = Detection("DS0034_001")
DS0034_002 = Detection("DS0034_002")
DS0034_003 = Detection("DS0034_003")
DS0034_004 = Detection("DS0034_004")
DS0034_005 = Detection("DS0034_005")
DS0006 = Detection("DS0006")
DS0006_001 = Detection("DS0006_001")
DS0006_002 = Detection("DS0006_002")
DS0024 = Detection("DS0024")
DS0024_001 = Detection("DS0024_001")
DS0024_002 = Detection("DS0024_002")
DS0024_003 = Detection("DS0024_003")
DS0024_004 = Detection("DS0024_004")
DS0005 = Detection("DS0005")
DS0005_001 = Detection("DS0005_001")
DS0026.hasID.append("DS0026")
DS0026_001.hasID.append("DS0026.001")
DS0026_002.hasID.append("DS0026.002")
DS0026_003.hasID.append("DS0026.003")
DS0026_004.hasID.append("DS0026.004")
DS0026_005.hasID.append("DS0026.005")
DS0015.hasID.append("DS0015")
DS0015_001.hasID.append("DS0015.001")
DS0037.hasID.append("DS0037")
DS0037_001.hasID.append("DS0037.001")
DS0025.hasID.append("DS0025")
DS0025_001.hasID.append("DS0025.001")
DS0025_002.hasID.append("DS0025.002")
DS0025_003.hasID.append("DS0025.003")
DS0025_004.hasID.append("DS0025.004")
DS0010.hasID.append("DS0010")
DS0010_001.hasID.append("DS0010.001")
DS0010_002.hasID.append("DS0010.002")
DS0010_003.hasID.append("DS0010.003")
DS0010_004.hasID.append("DS0010.004")
DS0010_005.hasID.append("DS0010.005")
DS0010_006.hasID.append("DS0010.006")
DS0017.hasID.append("DS0017")
DS0017_001.hasID.append("DS0017.001")
DS0032.hasID.append("DS0032")
DS0032_001.hasID.append("DS0032.001")
DS0032_002.hasID.append("DS0032.002")
DS0032_003.hasID.append("DS0032.003")
DS0038.hasID.append("DS0038")
DS0038_001.hasID.append("DS0038.001")
DS0038_002.hasID.append("DS0038.002")
DS0038_003.hasID.append("DS0038.003")
DS0016.hasID.append("DS0016")
DS0016_001.hasID.append("DS0016.001")
DS0016_002.hasID.append("DS0016.002")
DS0016_003.hasID.append("DS0016.003")
DS0027.hasID.append("DS0027")
DS0027_001.hasID.append("DS0027.001")
DS0027_002.hasID.append("DS0027.002")
DS0022.hasID.append("DS0022")
DS0022_001.hasID.append("DS0022.001")
DS0022_002.hasID.append("DS0022.002")
DS0022_003.hasID.append("DS0022.003")
DS0022_004.hasID.append("DS0022.004")
DS0022_005.hasID.append("DS0022.005")
DS0018.hasID.append("DS0018")
DS0018_001.hasID.append("DS0018.001")
DS0018_002.hasID.append("DS0018.002")
DS0018_003.hasID.append("DS0018.003")
DS0018_004.hasID.append("DS0018.004")
DS0001.hasID.append("DS0001")
DS0001_001.hasID.append("DS0001.001")
DS0036.hasID.append("DS0036")
DS0036_001.hasID.append("DS0036.001")
DS0036_002.hasID.append("DS0036.002")
DS0036_003.hasID.append("DS0036.003")
DS0007.hasID.append("DS0007")
DS0007_001.hasID.append("DS0007.001")
DS0007_002.hasID.append("DS0007.002")
DS0007_003.hasID.append("DS0007.003")
DS0007_004.hasID.append("DS0007.004")
DS0030.hasID.append("DS0030")
DS0030_001.hasID.append("DS0030.001")
DS0030_002.hasID.append("DS0030.002")
DS0030_003.hasID.append("DS0030.003")
DS0030_004.hasID.append("DS0030.004")
DS0030_005.hasID.append("DS0030.005")
DS0030_006.hasID.append("DS0030.006")
DS0030_007.hasID.append("DS0030.007")
DS0035.hasID.append("DS0035")
DS0035_001.hasID.append("DS0035.001")
DS0035_002.hasID.append("DS0035.002")
DS0008.hasID.append("DS0008")
DS0008_001.hasID.append("DS0008.001")
DS0028.hasID.append("DS0028")
DS0028_001.hasID.append("DS0028.001")
DS0028_002.hasID.append("DS0028.002")
DS0023.hasID.append("DS0023")
DS0023_001.hasID.append("DS0023.001")
DS0004.hasID.append("DS0004")
DS0004_001.hasID.append("DS0004.001")
DS0004_002.hasID.append("DS0004.002")
DS0011.hasID.append("DS0011")
DS0011_001.hasID.append("DS0011.001")
DS0033.hasID.append("DS0033")
DS0033_001.hasID.append("DS0033.001")
DS0029.hasID.append("DS0029")
DS0029_001.hasID.append("DS0029.001")
DS0029_002.hasID.append("DS0029.002")
DS0029_003.hasID.append("DS0029.003")
DS0021.hasID.append("DS0021")
DS0021_001.hasID.append("DS0021.001")
DS0014.hasID.append("DS0014")
DS0014_001.hasID.append("DS0014.001")
DS0014_002.hasID.append("DS0014.002")
DS0014_003.hasID.append("DS0014.003")
DS0009.hasID.append("DS0009")
DS0009_001.hasID.append("DS0009.001")
DS0009_002.hasID.append("DS0009.002")
DS0009_003.hasID.append("DS0009.003")
DS0009_004.hasID.append("DS0009.004")
DS0009_005.hasID.append("DS0009.005")
DS0009_006.hasID.append("DS0009.006")
DS0003.hasID.append("DS0003")
DS0003_001.hasID.append("DS0003.001")
DS0003_002.hasID.append("DS0003.002")
DS0003_003.hasID.append("DS0003.003")
DS0012.hasID.append("DS0012")
DS0012_001.hasID.append("DS0012.001")
DS0013.hasID.append("DS0013")
DS0013_001.hasID.append("DS0013.001")
DS0019.hasID.append("DS0019")
DS0019_001.hasID.append("DS0019.001")
DS0019_002.hasID.append("DS0019.002")
DS0019_003.hasID.append("DS0019.003")
DS0020.hasID.append("DS0020")
DS0020_001.hasID.append("DS0020.001")
DS0020_002.hasID.append("DS0020.002")
DS0020_003.hasID.append("DS0020.003")
DS0020_004.hasID.append("DS0020.004")
DS0020_005.hasID.append("DS0020.005")
DS0002.hasID.append("DS0002")
DS0002_001.hasID.append("DS0002.001")
DS0002_002.hasID.append("DS0002.002")
DS0002_003.hasID.append("DS0002.003")
DS0002_004.hasID.append("DS0002.004")
DS0002_005.hasID.append("DS0002.005")
DS0034.hasID.append("DS0034")
DS0034_001.hasID.append("DS0034.001")
DS0034_002.hasID.append("DS0034.002")
DS0034_003.hasID.append("DS0034.003")
DS0034_004.hasID.append("DS0034.004")
DS0034_005.hasID.append("DS0034.005")
DS0006.hasID.append("DS0006")
DS0006_001.hasID.append("DS0006.001")
DS0006_002.hasID.append("DS0006.002")
DS0024.hasID.append("DS0024")
DS0024_001.hasID.append("DS0024.001")
DS0024_002.hasID.append("DS0024.002")
DS0024_003.hasID.append("DS0024.003")
DS0024_004.hasID.append("DS0024.004")
DS0005.hasID.append("DS0005")
DS0005_001.hasID.append("DS0005.001")
DS0026.hasName.append("Active Directory")
DS0026_001.hasName.append("Active Directory Credential Request")
DS0026_002.hasName.append("Active Directory Object Access")
DS0026_003.hasName.append("Active Directory Object Creation")
DS0026_004.hasName.append("Active Directory Object Deletion")
DS0026_005.hasName.append("Active Directory Object Modification")
DS0015.hasName.append("Application Log")
DS0015_001.hasName.append("Application Log Content")
DS0037.hasName.append("Certificate")
DS0037_001.hasName.append("Certificate Registration")
DS0025.hasName.append("Cloud Service")
DS0025_001.hasName.append("Cloud Service Disable")
DS0025_002.hasName.append("Cloud Service Enumeration")
DS0025_003.hasName.append("Cloud Service Metadata")
DS0025_004.hasName.append("Cloud Service Modification")
DS0010.hasName.append("Cloud Storage")
DS0010_001.hasName.append("Cloud Storage Access")
DS0010_002.hasName.append("Cloud Storage Creation")
DS0010_003.hasName.append("Cloud Storage Deletion")
DS0010_004.hasName.append("Cloud Storage Enumeration")
DS0010_005.hasName.append("Cloud Storage Metadata")
DS0010_006.hasName.append("Cloud Storage Modification")
DS0017.hasName.append("Command")
DS0017_001.hasName.append("Command Execution")
DS0032.hasName.append("Container")
DS0032_001.hasName.append("Container Creation")
DS0032_002.hasName.append("Container Enumeration")
DS0032_003.hasName.append("Container Start")
DS0038.hasName.append("Domain Name")
DS0038_001.hasName.append("Active DNS")
DS0038_002.hasName.append("Domain Registration")
DS0038_003.hasName.append("Passive DNS")
DS0016.hasName.append("Drive")
DS0016_001.hasName.append("Drive Access")
DS0016_002.hasName.append("Drive Creation")
DS0016_003.hasName.append("Drive Modification")
DS0027.hasName.append("Driver")
DS0027_001.hasName.append("Driver Load")
DS0027_002.hasName.append("Driver Metadata")
DS0022.hasName.append("File")
DS0022_001.hasName.append("File Access")
DS0022_002.hasName.append("File Creation")
DS0022_003.hasName.append("File Deletion")
DS0022_004.hasName.append("File Metadata")
DS0022_005.hasName.append("File Modification")
DS0018.hasName.append("Firewall")
DS0018_001.hasName.append("Firewall Disable")
DS0018_002.hasName.append("Firewall Enumeration")
DS0018_003.hasName.append("Firewall Metadata")
DS0018_004.hasName.append("Firewall Rule Modification")
DS0001.hasName.append("Firmware")
DS0001_001.hasName.append("Firmware Modification")
DS0036.hasName.append("Group")
DS0036_001.hasName.append("Group Enumeration")
DS0036_002.hasName.append("Group Enumeration")
DS0036_003.hasName.append("Group Modification")
DS0007.hasName.append("Image")
DS0007_001.hasName.append("Image Creation")
DS0007_002.hasName.append("Image Deletion")
DS0007_003.hasName.append("Image Metadata")
DS0007_004.hasName.append("Image Modification")
DS0030.hasName.append("Instance")
DS0030_001.hasName.append("Instance Creation")
DS0030_002.hasName.append("Instance Deletion")
DS0030_003.hasName.append("Instance Enumeration")
DS0030_004.hasName.append("Instance Metadata")
DS0030_005.hasName.append("Instance Modification")
DS0030_006.hasName.append("Instance Start")
DS0030_007.hasName.append("Instance Stop")
DS0035.hasName.append("Internet Scan")
DS0035_001.hasName.append("Response Content")
DS0035_002.hasName.append("Response Metadata")
DS0008.hasName.append("Kernel")
DS0008_001.hasName.append("Kernel Module Load")
DS0028.hasName.append("Logon Session")
DS0028_001.hasName.append("Logon Session Creation")
DS0028_002.hasName.append("Logon Session Metadata")
DS0023.hasName.append("Named Pipe")
DS0023_001.hasName.append("Named Pipe Metadata")
DS0004.hasName.append("Malware")
DS0004_001.hasName.append("Malware Content")
DS0004_002.hasName.append("Malware Metadata")
DS0011.hasName.append("Module")
DS0011_001.hasName.append("Module Load")
DS0033.hasName.append("Network Share")
DS0033_001.hasName.append("Network Share Access")
DS0029.hasName.append("Network Traffic")
DS0029_001.hasName.append("Network Connection Creation")
DS0029_002.hasName.append("Network Traffic Content")
DS0029_003.hasName.append("Network Traffic Flow")
DS0021.hasName.append("Persona")
DS0021_001.hasName.append("Social Media")
DS0014.hasName.append("Pod")
DS0014_001.hasName.append("Pod Creation")
DS0014_002.hasName.append("Pod Enumeration")
DS0014_003.hasName.append("Pod Modification")
DS0009.hasName.append("Process")
DS0009_001.hasName.append("OS API Execution")
DS0009_002.hasName.append("Process Access")
DS0009_003.hasName.append("Process Creation")
DS0009_004.hasName.append("Process Metadata")
DS0009_005.hasName.append("Process Modification")
DS0009_006.hasName.append("Process Termination")
DS0003.hasName.append("Scheduled Job")
DS0003_001.hasName.append("Scheduled Job Creation")
DS0003_002.hasName.append("Scheduled Job Metadata")
DS0003_003.hasName.append("Scheduled Job Modification")
DS0012.hasName.append("Script")
DS0012_001.hasName.append("Script Execution")
DS0013.hasName.append("Sensor Health")
DS0013_001.hasName.append("Host Status")
DS0019.hasName.append("Service")
DS0019_001.hasName.append("Service Creation")
DS0019_002.hasName.append("Service Metadata")
DS0019_003.hasName.append("ervice Modification")
DS0020.hasName.append("Snapshot")
DS0020_001.hasName.append("Snapshot Creation")
DS0020_002.hasName.append("Snapshot Deletion")
DS0020_003.hasName.append("Snapshot Enumeration")
DS0020_004.hasName.append("Snapshot Metadata")
DS0020_005.hasName.append("Snapshot Modification")
DS0002.hasName.append("User Account")
DS0002_001.hasName.append("User Account Authentication")
DS0002_002.hasName.append("User Account Creation")
DS0002_003.hasName.append("User Account Deletion")
DS0002_004.hasName.append("User Account Metadata")
DS0002_005.hasName.append("User Account Modification")
DS0034.hasName.append("Volume")
DS0034_001.hasName.append("Volume Creation")
DS0034_002.hasName.append("Volume Deletion")
DS0034_003.hasName.append("Volume Enumeration")
DS0034_004.hasName.append("Volume Metadata")
DS0034_005.hasName.append("Volume Metadata")
DS0006.hasName.append("Web Credential")
DS0006_001.hasName.append("Web Credential Creation")
DS0006_002.hasName.append("Web Credential Usage")
DS0024.hasName.append("Windows Registry")
DS0024_001.hasName.append("Windows Registry Key Access")
DS0024_002.hasName.append("Windows Registry Key Creation")
DS0024_003.hasName.append("Windows Registry Key Deletion")
DS0024_004.hasName.append("Windows Registry Key Modification")
DS0005.hasName.append("WMI")
DS0005_001.hasName.append("WMI Creation")
DS0026.hasDescription.append("A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)")
DS0026_001.hasDescription.append("A user requested active directory credentials, such as a ticket or token")
DS0026_002.hasDescription.append("Opening of an active directory object, typically to collect/read its value")
DS0026_003.hasDescription.append("Initial construction of a new active directory object")
DS0026_004.hasDescription.append("Removal of an active directory object")
DS0026_005.hasDescription.append("Changes made to an active directory object")
DS0015.hasDescription.append("Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)")
DS0015_001.hasDescription.append("Logging, messaging, and other artifacts provided by third-party services")
DS0037.hasDescription.append("A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications")
DS0037_001.hasDescription.append("Queried or logged information highlighting current and expired digital certificates")
DS0025.hasDescription.append("Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs")
DS0025_001.hasDescription.append("Deactivation or stoppage of a cloud service")
DS0025_002.hasDescription.append("An extracted list of cloud services")
DS0025_003.hasDescription.append("Contextual data about a cloud service and activity around it such as name, type, or purpose/function")
DS0025_004.hasDescription.append("Changes made to a cloud service, including its settings and/or data")
DS0010.hasDescription.append("Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs")
DS0010_001.hasDescription.append("Opening of a cloud storage infrastructure, typically to collect/read its value")
DS0010_002.hasDescription.append("Initial construction of new cloud storage infrastructure")
DS0010_003.hasDescription.append("Removal of cloud storage infrastructure")
DS0010_004.hasDescription.append("An extracted list of cloud storage infrastructure")
DS0010_005.hasDescription.append("Contextual data about cloud storage infrastructure and activity around it such as name, size, or owner")
DS0010_006.hasDescription.append("Changes made to cloud storage infrastructure, including its settings and/or data")
DS0017.hasDescription.append("A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task")
DS0017_001.hasDescription.append("The execution of a line of text, potentially with arguments, created from program code")
DS0032.hasDescription.append("A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another")
DS0032_001.hasDescription.append("Initial construction of a new container")
DS0032_002.hasDescription.append("An extracted list of containers")
DS0032_003.hasDescription.append("Activation or invocation of a container")
DS0038.hasDescription.append("Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names")
DS0038_001.hasDescription.append("Queried domain name system (DNS) registry data highlighting current domain to IP address resolutions")
DS0038_002.hasDescription.append("Information about domain name assignments and other domain metadata")
DS0038_003.hasDescription.append("Logged domain name system (DNS) data highlighting timelines of domain to IP address resolutions")
DS0016.hasDescription.append("A non-volatile data storage device (hard drive, floppy disk, USB flash drive) with at least one formatted partition, typically mounted to the file system and/or assigned a drive letter")
DS0016_001.hasDescription.append("Opening of a data storage device with an assigned drive letter or mount point")
DS0016_002.hasDescription.append("Initial construction of a drive letter or mount point to a data storage device")
DS0016_003.hasDescription.append("Changes made to a drive letter or mount point of a data storage device")
DS0027.hasDescription.append("A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used")
DS0027_001.hasDescription.append("Attaching a driver to either user or kernel-mode of a system")
DS0027_002.hasDescription.append("Contextual data about a driver and activity around it such as driver issues reporting or integrity (page hash, code) checking")
DS0022.hasDescription.append("A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media)")
DS0022_001.hasDescription.append("Opening a file, which makes the file contents available to the requestor")
DS0022_002.hasDescription.append("Initial construction of a new file")
DS0022_003.hasDescription.append("Removal of a file")
DS0022_004.hasDescription.append("Contextual data about a file, which may include information such as name, the content")
DS0022_005.hasDescription.append("Changes made to a file, or its access permissions and attributes, typically to alter the contents of the targeted file")
DS0018.hasDescription.append("A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules")
DS0018_001.hasDescription.append("Deactivation or stoppage of a cloud service")
DS0018_002.hasDescription.append("An extracted list of available firewalls and/or their associated settings/rules")
DS0018_003.hasDescription.append("Contextual data about a firewall and activity around it such as name, policy, or status")
DS0018_004.hasDescription.append("Changes made to a firewall rule, typically to allow/block specific network traffic")
DS0001.hasDescription.append("Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI")
DS0001_001.hasDescription.append("Changes made to firmware, including its settings and/or data, such as MBR (Master Boot Record) and VBR (Volume Boot Record)")
DS0036.hasDescription.append("A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights")
DS0036_001.hasDescription.append("An extracted list of available groups and/or their associated settings")
DS0036_002.hasDescription.append("An extracted list of available groups and/or their associated settings")
DS0036_003.hasDescription.append("Changes made to a group, such as membership, name, or permissions")
DS0007.hasDescription.append("A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment")
DS0007_001.hasDescription.append("Initial construction of a virtual machine image")
DS0007_002.hasDescription.append("Removal of a virtual machine image")
DS0007_003.hasDescription.append("Contextual data about a virtual machine image such as name, resource group, state, or type")
DS0007_004.hasDescription.append("Changes made to a virtual machine image, including setting and/or control data")
DS0030.hasDescription.append("A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers")
DS0030_001.hasDescription.append("Initial construction of a new instance")
DS0030_002.hasDescription.append("Removal of an instance")
DS0030_003.hasDescription.append("An extracted list of instances within a cloud environment")
DS0030_004.hasDescription.append("Contextual data about an instance and activity around it such as name, type, or status")
DS0030_005.hasDescription.append("Changes made to an instance, including its settings and/or control data")
DS0030_006.hasDescription.append("Activation or invocation of an instance")
DS0030_007.hasDescription.append("Deactivation or stoppage of an instance")
DS0035.hasDescription.append("Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet")
DS0035_001.hasDescription.append("Logged network traffic in response to a scan showing both protocol header and body values")
DS0035_002.hasDescription.append("Contextual data about an Internet-facing resource gathered from a scan, such as running services or ports")
DS0008.hasDescription.append("A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components")
DS0008_001.hasDescription.append("An object file that contains code to extend the running kernel of an OS, typically used to add support for new hardware (as device drivers) and/or filesystems, or for adding system calls")
DS0028.hasDescription.append("Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization")
DS0028_001.hasDescription.append("Initial construction of a successful new user logon following an authentication attempt")
DS0028_002.hasDescription.append("Contextual data about a logon session, such as username, logon type, access tokens (security context, user SIDs, logon identifiers, and logon SID), and any activity associated within it")
DS0023.hasDescription.append("Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it")
DS0023_001.hasDescription.append("Contextual data about a named pipe on a system, including pipe name and creating process")
DS0004.hasDescription.append("Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries")
DS0004_001.hasDescription.append("Code, strings, and other signatures that compromise a malicious payload")
DS0004_002.hasDescription.append("Contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information")
DS0011.hasDescription.append("Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries")
DS0011_001.hasDescription.append("Attaching a module into the memory of a process/program, typically to access shared resources/features provided by the module")
DS0033.hasDescription.append("A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS)")
DS0033_001.hasDescription.append("Opening a network share, which makes the contents available to the requestor")
DS0029.hasDescription.append("Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format")
DS0029_001.hasDescription.append("Initial construction of a network connection, such as capturing socket information with a source/destination IP and port(s)")
DS0029_002.hasDescription.append("Logged network traffic data showing both protocol header and body values")
DS0029_003.hasDescription.append("Summarized network packet data, with metrics, such as protocol headers and volume")
DS0021.hasDescription.append("A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims")
DS0021_001.hasDescription.append("Established, compromised, or otherwise acquired social media personas")
DS0014.hasDescription.append("A single unit of shared resources within a cluster, comprised of one or more containers")
DS0014_001.hasDescription.append("Initial construction of a new pod")
DS0014_002.hasDescription.append("An extracted list of pods within a cluster")
DS0014_003.hasDescription.append("Changes made to a pod, including its settings and/or control data")
DS0009.hasDescription.append("Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures")
DS0009_001.hasDescription.append("Operating system function/method calls executed by a process")
DS0009_002.hasDescription.append("Opening of a process by another process, typically to read memory of the target process")
DS0009_003.hasDescription.append("The initial construction of an executable managed by the OS, that may involve one or more tasks or threads.")
DS0009_004.hasDescription.append("Contextual data about a running process, which may include information such as environment variables, image name, user/owner, etc.")
DS0009_005.hasDescription.append("Changes made to a process, or its contents, typically to write and/or execute code in the memory of the target process")
DS0009_006.hasDescription.append("Exit of a running process")
DS0003.hasDescription.append("Automated tasks that can be executed at a specific time or on a recurring schedule running in the background")
DS0003_001.hasDescription.append("Initial construction of a new scheduled job")
DS0003_002.hasDescription.append("Contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.")
DS0003_003.hasDescription.append("Changes made to a scheduled job, such as modifications to the execution launch")
DS0012.hasDescription.append("A file or stream containing a list of commands, allowing them to be launched in sequence")
DS0012_001.hasDescription.append("The execution of a text file that contains code via the interpreter")
DS0013.hasDescription.append("Information from host telemetry providing insights about system status, errors, or other notable functional activity")
DS0013_001.hasDescription.append("Logging, messaging, and other artifacts highlighting the health of host sensors")
DS0019.hasDescription.append("A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in")
DS0019_001.hasDescription.append("Initial construction of a new service/daemon")
DS0019_002.hasDescription.append("Contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.")
DS0019_003.hasDescription.append("Changes made to a service/daemon, such as changes to name, description, and/or start type")
DS0020.hasDescription.append("A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments")
DS0020_001.hasDescription.append("Initial construction of a new snapshot")
DS0020_002.hasDescription.append("Removal of a snapshot")
DS0020_003.hasDescription.append("An extracted list of snapshops within a cloud environment")
DS0020_004.hasDescription.append("Contextual data about a snapshot, which may include information such as ID, type, and status")
DS0020_005.hasDescription.append("Changes made to a snapshop, such as metadata and control data")
DS0002.hasDescription.append("A profile representing a user, device, service, or application used to authenticate and access resources")
DS0002_001.hasDescription.append("An attempt by a user to gain access to a network or computing resource, often by providing credentials")
DS0002_002.hasDescription.append("Initial construction of a new account")
DS0002_003.hasDescription.append("Removal of an account")
DS0002_004.hasDescription.append("Contextual data about an account, which may include a username, user ID, environmental data, etc.")
DS0002_005.hasDescription.append("Changes made to an account, such as permissions and/or membership in specific groups")
DS0034.hasDescription.append("Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives")
DS0034_001.hasDescription.append("Initial construction of a cloud volume")
DS0034_002.hasDescription.append("Removal of a a cloud volume")
DS0034_003.hasDescription.append("An extracted list of available volumes within a cloud environment")
DS0034_004.hasDescription.append("Contextual data about a cloud volume and activity around it, such as id, type, state, and size")
DS0034_005.hasDescription.append("Contextual data about a cloud volume and activity around it, such as id, type, state, and size")
DS0006.hasDescription.append("Credential material, such as session cookies or tokens, used to authenticate to web applications and services")
DS0006_001.hasDescription.append("Initial construction of new web credential material")
DS0006_002.hasDescription.append("An attempt by a user to gain access to a network or computing resource by providing web credentials")
DS0024.hasDescription.append("A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations")
DS0024_001.hasDescription.append("Opening a Registry Key, typically to read the associated value")
DS0024_002.hasDescription.append("Initial construction of a new Registry Key")
DS0024_003.hasDescription.append("Removal of a Registry Key")
DS0024_004.hasDescription.append("Changes made to a Registry Key and/or Key value")
DS0005.hasDescription.append("The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers")
DS0005_001.hasDescription.append("Initial construction of a WMI object, such as a filter, consumer, subscription, binding, or provider")



# Add Mitigations
M1013 = Mitigation("M1013")
M1015 = Mitigation("M1015")
M1016 = Mitigation("M1016")
M1017 = Mitigation("M1017")
M1018 = Mitigation("M1018")
M1019 = Mitigation("M1019")
M1020 = Mitigation("M1020")
M1021 = Mitigation("M1021")
M1022 = Mitigation("M1022")
M1024 = Mitigation("M1024")
M1025 = Mitigation("M1025")
M1026 = Mitigation("M1026")
M1027 = Mitigation("M1027")
M1028 = Mitigation("M1028")
M1029 = Mitigation("M1029")
M1030 = Mitigation("M1030")
M1031 = Mitigation("M1031")
M1032 = Mitigation("M1032")
M1033 = Mitigation("M1033")
M1034 = Mitigation("M1034")
M1035 = Mitigation("M1035")
M1036 = Mitigation("M1036")
M1037 = Mitigation("M1037")
M1038 = Mitigation("M1038")
M1039 = Mitigation("M1039")
M1040 = Mitigation("M1040")
M1041 = Mitigation("M1041")
M1042 = Mitigation("M1042")
M1043 = Mitigation("M1043")
M1044 = Mitigation("M1044")
M1045 = Mitigation("M1045")
M1046 = Mitigation("M1046")
M1047 = Mitigation("M1047")
M1048 = Mitigation("M1048")
M1049 = Mitigation("M1049")
M1050 = Mitigation("M1050")
M1051 = Mitigation("M1051")
M1052 = Mitigation("M1052")
M1053 = Mitigation("M1053")
M1054 = Mitigation("M1054")
M1055 = Mitigation("M1055")
M1056 = Mitigation("M1056")
M1057 = Mitigation("M1057")
M1013.hasID.append("M1013")
M1015.hasID.append("M1015")
M1016.hasID.append("M1016")
M1017.hasID.append("M1017")
M1018.hasID.append("M1018")
M1019.hasID.append("M1019")
M1020.hasID.append("M1020")
M1021.hasID.append("M1021")
M1022.hasID.append("M1022")
M1024.hasID.append("M1024")
M1025.hasID.append("M1025")
M1026.hasID.append("M1026")
M1027.hasID.append("M1027")
M1028.hasID.append("M1028")
M1029.hasID.append("M1029")
M1030.hasID.append("M1030")
M1031.hasID.append("M1031")
M1032.hasID.append("M1032")
M1033.hasID.append("M1033")
M1034.hasID.append("M1034")
M1035.hasID.append("M1035")
M1036.hasID.append("M1036")
M1037.hasID.append("M1037")
M1038.hasID.append("M1038")
M1039.hasID.append("M1039")
M1040.hasID.append("M1040")
M1041.hasID.append("M1041")
M1042.hasID.append("M1042")
M1043.hasID.append("M1043")
M1044.hasID.append("M1044")
M1045.hasID.append("M1045")
M1046.hasID.append("M1046")
M1047.hasID.append("M1047")
M1048.hasID.append("M1048")
M1049.hasID.append("M1049")
M1050.hasID.append("M1050")
M1051.hasID.append("M1051")
M1052.hasID.append("M1052")
M1053.hasID.append("M1053")
M1054.hasID.append("M1054")
M1055.hasID.append("M1055")
M1056.hasID.append("M1056")
M1057.hasID.append("M1057")
M1013.hasName.append("Application Developer Guidance")
M1015.hasName.append("Active Directory Configuration")
M1016.hasName.append("Vulnerability Scanning")
M1017.hasName.append("User Training")
M1018.hasName.append("User Account Management")
M1019.hasName.append("Threat Intelligence Program")
M1020.hasName.append("SSL/TLS Inspection")
M1021.hasName.append("Restrict Web-Based Content")
M1022.hasName.append("Restrict File and Directory Permissions")
M1024.hasName.append("Restrict Registry Permissions")
M1025.hasName.append("Privileged Process Integrity")
M1026.hasName.append("Privileged Account Management")
M1027.hasName.append("Password Policies")
M1028.hasName.append("Operating System Configuration")
M1029.hasName.append("Remote Data Storage")
M1030.hasName.append("Network Segmentation")
M1031.hasName.append("Network Intrusion Prevention")
M1032.hasName.append("Multi-factor Authentication")
M1033.hasName.append("Limit Software Installation")
M1034.hasName.append("Limit Hardware Installation")
M1035.hasName.append("Limit Access to Resource Over Network")
M1036.hasName.append("Account Use Policies")
M1037.hasName.append("Filter Network Traffic")
M1038.hasName.append("Execution Prevention")
M1039.hasName.append("Environment Variable Permissions")
M1040.hasName.append("Behavior Prevention on Endpoint")
M1041.hasName.append("Encrypt Sensitive Information")
M1042.hasName.append("Disable or Remove Feature or Program")
M1043.hasName.append("Credential Access Protection")
M1044.hasName.append("Restrict Library Loading")
M1045.hasName.append("Code Signing")
M1046.hasName.append("Boot Integrity")
M1047.hasName.append("Audit")
M1048.hasName.append("Application Isolation and Sandboxing")
M1049.hasName.append("Antivirus/Antimalware")
M1050.hasName.append("Exploit Protection")
M1051.hasName.append("Update Software")
M1052.hasName.append("User Account Control")
M1053.hasName.append("Data Backup")
M1054.hasName.append("Software Configuration")
M1055.hasName.append("Do Not Mitigate")
M1056.hasName.append("Pre-compromise")
M1057.hasName.append("Data Loss Prevention")
M1036.hasDescription.append("Configure features related to account use like login attempt lockouts, specific login times, etc.")
M1015.hasDescription.append("Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.")
M1049.hasDescription.append("Use signatures or heuristics to detect malicious software.")
M1013.hasDescription.append("This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.")
M1048.hasDescription.append("Restrict execution of code to a virtual environment on or in transit to an endpoint system.")
M1047.hasDescription.append("Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.")
M1040.hasDescription.append("Use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, API call, etc. behavior.")
M1046.hasDescription.append("Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms.")
M1045.hasDescription.append("Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.")
M1043.hasDescription.append("Use capabilities to prevent successful credential access by adversaries; including blocking forms of credential dumping.")
M1053.hasDescription.append("Take and store data backups from end user systems and critical servers. Ensure backup and storage systems are hardened and kept separate from the corporate network to prevent compromise.")
M1057.hasDescription.append("Use a data loss prevention (DLP) strategy to categorize sensitive data, identify data formats indicative of personal identifiable information (PII), and restrict exfiltration of sensitive data.")
M1042.hasDescription.append("Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.")
M1055.hasDescription.append("This category is to associate techniques that mitigation might increase risk of compromise and therefore mitigation is not recommended.")
M1041.hasDescription.append("Protect sensitive information with strong encryption.")
M1039.hasDescription.append("Prevent modification of environment variables by unauthorized users and groups.")
M1038.hasDescription.append("Block execution of code on a system through application control, and/or script blocking.")
M1050.hasDescription.append("Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.")
M1037.hasDescription.append("Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.")
M1035.hasDescription.append("Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.")
M1034.hasDescription.append("Block users or groups from installing or using unapproved hardware on systems, including USB devices.")
M1033.hasDescription.append("Block users or groups from installing unapproved software.")
M1032.hasDescription.append("Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.")
M1031.hasDescription.append("Use intrusion detection signatures to block traffic at network boundaries.")
M1030.hasDescription.append("Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.")
M1028.hasDescription.append("Make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.")
M1027.hasDescription.append("Set and enforce secure password policies for accounts.")
M1056.hasDescription.append("This category is used for any applicable mitigation activities that apply to techniques occurring before an adversary gains Initial Access, such as Reconnaissance and Resource Development techniques.")
M1026.hasDescription.append("Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.")
M1025.hasDescription.append("Protect processes with high privileges that can be used to interact with critical system components through use of protected process light, anti-process injection defenses, or other process integrity enforcement measures.")
M1029.hasDescription.append("Use remote security log and sensitive file storage where access can be controlled better to prevent exposure of intrusion detection log data or sensitive information.")
M1022.hasDescription.append("Restrict access by setting directory and file permissions that are not specific to users or privileged accounts.")
M1044.hasDescription.append("Prevent abuse of library loading mechanisms in the operating system and software to load untrusted code by configuring appropriate library loading mechanisms and investigating potential vulnerable software.")
M1024.hasDescription.append("Restrict the ability to modify certain hives or keys in the Windows Registry.")
M1021.hasDescription.append("Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.")
M1054.hasDescription.append("Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.")
M1020.hasDescription.append("Break and inspect SSL/TLS sessions to look at encrypted web traffic for adversary activity.")
M1019.hasDescription.append("A threat intelligence program helps an organization generate their own threat intelligence information and track trends to inform defensive priorities to mitigate risk.")
M1051.hasDescription.append("Perform regular software updates to mitigate exploitation risk.")
M1052.hasDescription.append("Configure Windows User Account Control to mitigate risk of adversaries obtaining elevated process access.")
M1018.hasDescription.append("Manage the creation, modification, use, and permissions associated to user accounts.")
M1017.hasDescription.append("Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.")
M1016.hasDescription.append("Vulnerability scanning is used to find potentially exploitable software vulnerabilities to remediate them.")


# Initialize Defense
D3_FA = Defense("D3_FA")
D3_FA.hasID.append("D3-FA")
D3_FA.hasName.append("File Analysis")
D3_FA.hasDescription.append("File Analysis is an analytic process to determine a file's status. For example: virus, trojan, benign, malicious, trusted, unauthorized, sensitive, etc.")
D3_DA = Defense("D3_DA")
D3_DA.hasID.append("D3-DA")
D3_DA.hasName.append("Dynamic Analysis")
D3_DA.hasDescription.append("Executing or opening a file in a synthetic 'sandbox' environment to determine if the file is a malicious program or if the file exploits another program such as a document reader.")
D3_EFA = Defense("D3_EFA")
D3_EFA.hasID.append("D3-EFA")
D3_EFA.hasName.append("Emulated File Analysis")
D3_EFA.hasDescription.append("Emulating instructions in a file looking for specific patterns.")
D3_FCOA = Defense("D3_FCOA")
D3_FCOA.hasID.append("D3-FCOA")
D3_FCOA.hasName.append("File Content Analysis")
D3_FCOA.hasDescription.append("Employing a pattern matching algorithm to statically analyze the content of files.")
D3_FCR = Defense("D3_FCR")
D3_FCR.hasID.append("D3-FCR")
D3_FCR.hasName.append("File Content Rules")
D3_FCR.hasDescription.append("Employing a pattern matching rule language to analyze the content of files.")
D3_FH = Defense("D3_FH")
D3_FH.hasID.append("D3-FH")
D3_FH.hasName.append("File Hashing")
D3_FH.hasDescription.append("Employing file hash comparisons to detect known malware.")
D3_ID = Defense("D3_ID")
D3_ID.hasID.append("D3-ID")
D3_ID.hasName.append("Identifier Analysis")
D3_ID.hasDescription.append("Analyzing identifier artifacts such as IP address, domain names, or URL(I)s.")
D3_HD = Defense("D3_HD")
D3_HD.hasID.append("D3-HD")
D3_HD.hasName.append("Homoglyph Detection")
D3_HD.hasDescription.append("Comparing strings using a variety of techniques to determine if a deceptive or malicious string is being presented to a user.")
D3_IAA = Defense("D3_IAA")
D3_IAA.hasID.append("D3-IAA")
D3_IAA.hasName.append("Identifier Activity Analysis")
D3_IAA.hasDescription.append("Taking known malicious identifiers and determining if they are present in a system.")
D3_IRA = Defense("D3_IRA")
D3_IRA.hasID.append("D3-IRA")
D3_IRA.hasName.append("Identifier Reputation Analysis")
D3_IRA.hasDescription.append("Analyzing the reputation of an identifier.")
D3_URA = Defense("D3_URA")
D3_URA.hasID.append("D3-URA")
D3_URA.hasName.append("URL Reputation Analysis")
D3_URA.hasDescription.append("Analyzing the reputation of a URL.")
D3_UA = Defense("D3_UA")
D3_UA.hasID.append("D3-UA")
D3_UA.hasName.append("URL Analysis")
D3_UA.hasDescription.append("Determining if a URL is benign or malicious by analyzing the URL or its components.")
D3_MA = Defense("D3_MA")
D3_MA.hasID.append("D3-MA")
D3_MA.hasName.append("Message Analysis")
D3_MA.hasDescription.append("Analyzing email or instant message content to detect unauthorized activity.")
D3_SMRA = Defense("D3_SMRA")
D3_SMRA.hasID.append("D3-SMRA")
D3_SMRA.hasName.append("Sender MTA Reputation Analysis")
D3_SMRA.hasDescription.append("Characterizing the reputation of mail transfer agents (MTA) to determine the security risk in emails.")
D3_SRA = Defense("D3_SRA")
D3_SRA.hasID.append("D3-SRA")
D3_SRA.hasName.append("Sender Reputation Analysis")
D3_SRA.hasDescription.append("Ascertaining sender reputation based on information associated with a message (e.g. email/instant messaging).")
D3_NTA = Defense("D3_NTA")
D3_NTA.hasID.append("D3-NTA")
D3_NTA.hasName.append("Network Traffic Analysis")
D3_NTA.hasDescription.append("Analyzing intercepted or summarized computer network traffic to detect unauthorized activity.")      
D3_ANAA = Defense("D3_ANAA")
D3_ANAA.hasID.append("D3-ANAA")
D3_ANAA.hasName.append("Administrative Network Activity Analysis")
D3_ANAA.hasDescription.append("Detection of unauthorized use of administrative network protocols by analyzing network activity against a baseline.")
D3_CA = Defense("D3_CA")
D3_CA.hasID.append("D3-CA")
D3_CA.hasName.append("Certificate Analysis")
D3_CA.hasDescription.append("Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis.")
D3_ACA = Defense("D3_ACA")
D3_ACA.hasID.append("D3-ACA")
D3_ACA.hasName.append("Active Certificate Analysis")
D3_ACA.hasDescription.append("Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis.")
D3_PCA = Defense("D3_PCA")
D3_PCA.hasID.append("D3-PCA")
D3_PCA.hasName.append("Passive Certificate Analysis")
D3_PCA.hasDescription.append("Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity.")
D3_CSPP = Defense("D3_CSPP")
D3_CSPP.hasID.append("D3-CSPP")
D3_CSPP.hasName.append("Client-server Payload Profiling")
D3_CSPP.hasDescription.append("Passively collecting certificates and analyzing them.")
D3_CAA = Defense("D3_CAA")
D3_CAA.hasID.append("D3-CAA")
D3_CAA.hasName.append("Connection Attempt Analysis")
D3_CAA.hasDescription.append("Comparing client-server request and response payloads to a baseline profile to identify outliers.")  
D3_DNSTA = Defense("D3_DNSTA")
D3_DNSTA.hasID.append("D3-DNSTA")
D3_DNSTA.hasName.append("DNS Traffic Analysis")
D3_DNSTA.hasDescription.append("Analyzing failed connections in a network to detect unauthorized activity.")
D3_FC = Defense("D3_FC")
D3_FC.hasID.append("D3-FC")
D3_FC.hasName.append("File Carving")
D3_FC.hasDescription.append("Analysis of domain name metadata, including name and DNS records, to determine whether the domain is likely to resolve to an undesirable host.")
D3_ISVA = Defense("D3_ISVA")
D3_ISVA.hasID.append("D3-ISVA")
D3_ISVA.hasName.append("Inbound Session Volume Analysis")
D3_ISVA.hasDescription.append("Identifying and extracting files from network application protocols through the use of network stream reassembly software.")
D3_IPCTA = Defense("D3_IPCTA")
D3_IPCTA.hasID.append("D3-IPCTA")
D3_IPCTA.hasName.append("IPC Traffic Analysis")
D3_IPCTA.hasDescription.append("Analyzing inbound network session or connection attempt volume.")
D3_NTCD = Defense("D3_NTCD")
D3_NTCD.hasID.append("D3-NTCD")
D3_NTCD.hasName.append("Network Traffic Community Deviation")
D3_NTCD.hasDescription.append("Analyzing standard inter process communication (IPC) protocols to detect deviations from normal protocol activity.")
D3_PHDURA = Defense("D3_PHDURA")
D3_PHDURA.hasID.append("D3-PHDURA")
D3_PHDURA.hasName.append("Per Host Download- Upload Ratio Analysis")
D3_PHDURA.hasDescription.append("Establishing baseline communities of network hosts and identifying statistically divergent inter-community communication.")
D3_PMAD = Defense("D3_PMAD")
D3_PMAD.hasID.append("D3-PMAD")
D3_PMAD.hasName.append("Protocol Metadata Anomaly Detection")
D3_PMAD.hasDescription.append("Detecting anomalies that indicate malicious activity by comparing the amount of data downloaded versus data uploaded by a host.")
D3_RPA = Defense("D3_RPA")
D3_RPA.hasID.append("D3-RPA")
D3_RPA.hasName.append("Relay Pattern Analysis")
D3_RPA.hasDescription.append("Collecting network communication protocol metadata and identifying statistical outliers.")
D3_RTSD = Defense("D3_RTSD")
D3_RTSD.hasID.append("D3-RTSD")
D3_RTSD.hasName.append("Remote Terminal Session Detection")
D3_RTSD.hasDescription.append("The detection of an internal host relaying traffic between the internal network and the external network.")
D3_RTA = Defense("D3_RTA")
D3_RTA.hasID.append("D3-RTA")
D3_RTA.hasName.append("RPC Traffic Analysis")
D3_RTA.hasDescription.append("Detection of an unauthorized remote live terminal console session by examining network traffic to a network host.")
D3_PM = Defense("D3_PM")
D3_PM.hasID.append("D3-PM")
D3_PM.hasName.append("Platform Monitoring")
D3_PM.hasDescription.append("Monitoring the activity of remote procedure calls in communication traffic to establish standard protocol operations and potential attacker activities.")
D3_FIM = Defense("D3_FIM")
D3_FIM.hasID.append("D3-FIM")
D3_FIM.hasName.append("File Integrity Monitoring")
D3_FIM.hasDescription.append("Monitoring platform components such as operating systems software, hardware devices, or firmware.")  
D3_FBA = Defense("D3_FBA")
D3_FBA.hasID.append("D3-FBA")
D3_FBA.hasName.append("Firmware Behavior Analysis")
D3_FBA.hasDescription.append("Detecting any suspicious changes to files in a computer system.")
D3_FV = Defense("D3_FV")
D3_FV.hasID.append("D3-FV")
D3_FV.hasName.append("Firmware Verification")
D3_FV.hasDescription.append("Analyzing the behavior of embedded code in firmware and looking for anomalous behavior and suspicious activity.")
D3_FEMC = Defense("D3_FEMC")
D3_FEMC.hasID.append("D3-FEMC")
D3_FEMC.hasName.append("Firmware Embedded Monitoring Code")
D3_FEMC.hasDescription.append("Cryptographically verifying firmware integrity.")
D3_SFV = Defense("D3_SFV")
D3_SFV.hasID.append("D3-SFV")
D3_SFV.hasName.append("System Firmware Verification")
D3_SFV.hasDescription.append("Monitoring code is injected into firmware for integrity monitoring of firmware and firmware data.")  
D3_OSM = Defense("D3_OSM")
D3_OSM.hasID.append("D3-OSM")
D3_OSM.hasName.append("Operating System Monitoring")
D3_OSM.hasDescription.append("Cryptographically verifying installed system firmware integrity.")
D3_EHB = Defense("D3_EHB")
D3_EHB.hasID.append("D3-EHB")
D3_EHB.hasName.append("Endpoint Health Beacon")
D3_EHB.hasDescription.append("The operating system software, for D3FEND's purposes, includes the kernel and its process management functions, hardware drivers, initialization or boot logic. It also includes and other key system daemons and their configuration. The monitoring or analysis of these components for unauthorized activity constitute Operating System Monitoring.")
D3_IDA = Defense("D3_IDA")
D3_IDA.hasID.append("D3-IDA")
D3_IDA.hasName.append("Input Device Analysis")
D3_IDA.hasDescription.append("Monitoring the security status of an endpoint by sending periodic messages with health status, where absence of a response may indicate that the endpoint has been compromised.")
D3_MBT = Defense("D3_MBT")
D3_MBT.hasID.append("D3-MBT")
D3_MBT.hasName.append("Memory Boundary Tracking")
D3_MBT.hasDescription.append("Operating system level mechanisms to prevent abusive input device exploitation.")
D3_SJA = Defense("D3_SJA")
D3_SJA.hasID.append("D3-SJA")
D3_SJA.hasName.append("Scheduled Job Analysis")
D3_SJA.hasDescription.append("Analyzing a call stack for return addresses which point to unexpected memory locations.")
D3_SDM = Defense("D3_SDM")
D3_SDM.hasID.append("D3-SDM")
D3_SDM.hasName.append("System Daemon Monitoring")
D3_SDM.hasDescription.append("Analysis of source files, processes, destination files, or destination servers associated with a scheduled job to detect unauthorized use of job scheduling.")
D3_SFA = Defense("D3_SFA")
D3_SFA.hasID.append("D3-SFA")
D3_SFA.hasName.append("System File Analysis")
D3_SFA.hasDescription.append("Tracking changes to the state or configuration of critical system level processes.")
D3_SBV = Defense("D3_SBV")
D3_SBV.hasID.append("D3-SBV")
D3_SBV.hasName.append("Service Binary Verification")
D3_SBV.hasDescription.append("Monitoring system files such as authentication databases, configuration files, system logs, and system executables for modification or tampering.")
D3_SICA = Defense("D3_SICA")
D3_SICA.hasID.append("D3-SICA")
D3_SICA.hasName.append("System Init Config Analysis")
D3_SICA.hasDescription.append("Analyzing changes in service binary files by comparing to a source of truth.")
D3_USICA = Defense("D3_USICA")
D3_USICA.hasID.append("D3-USICA")
D3_USICA.hasName.append("User Session Init Config Analysis")
D3_USICA.hasDescription.append("Analysis of any system process startup configuration.")
D3_PA = Defense("D3_PA")
D3_PA.hasID.append("D3-PA")
D3_PA.hasName.append("Process Analysis")
D3_PA.hasDescription.append("Analyzing modifications to user session config files such as .bashrc or .bash_profile.")
D3_DQSA = Defense("D3_DQSA")
D3_DQSA.hasID.append("D3-DQSA")
D3_DQSA.hasName.append("Database Query String Analysis")
D3_DQSA.hasDescription.append("Process Analysis consists of observing a running application process and analyzing it to watch for certain behaviors or conditions which may indicate adversary activity. Analysis can occur inside of the process or through a third-party monitoring application. Examples include monitoring system and privileged calls, monitoring process initiation chains, and memory boundary allocations.")
D3_PCSV = Defense("D3_PCSV")
D3_PCSV.hasID.append("D3-PCSV")
D3_PCSV.hasName.append("Process Code Segment Verification")
D3_PCSV.hasDescription.append("Analyzing database queries to detect [SQL Injection]")
D3_PSMD = Defense("D3_PSMD")
D3_PSMD.hasID.append("D3-PSMD")
D3_PSMD.hasName.append("Process Self-Modification Detection")
D3_PSMD.hasDescription.append("Comparing the text or code memory segments to a source of truth.")
D3_PSA = Defense("D3_PSA")
D3_PSA.hasID.append("D3-PSA")
D3_PSA.hasName.append("Process Spawn Analysis")
D3_PSA.hasDescription.append("Detects processes that modify, change, or replace their own code at runtime.")
D3_PLA = Defense("D3_PLA")
D3_PLA.hasID.append("D3-PLA")
D3_PLA.hasName.append("Process Lineage Analysis")
D3_PLA.hasDescription.append("Analyzing spawn arguments or attributes of a process to detect processes that are unauthorized.")    
D3_SSC = Defense("D3_SSC")
D3_SSC.hasID.append("D3-SSC")
D3_SSC.hasName.append("Shadow Stack Comparisons")
D3_SSC.hasDescription.append("Identification of suspicious processes executing on an end-point device by examining the ancestry and siblings of a process, and the associated metadata of each node on the tree, such as process execution, duration, and order relative to siblings and ancestors.")
D3_SCA = Defense("D3_SCA")
D3_SCA.hasID.append("D3-SCA")
D3_SCA.hasName.append("System Call Analysis")
D3_SCA.hasDescription.append("Comparing a call stack in system memory with a shadow call stack maintained by the processor to determine unauthorized shellcode activity.")
D3_FCA = Defense("D3_FCA")
D3_FCA.hasID.append("D3-FCA")
D3_FCA.hasName.append("File Creation Analysis")
D3_FCA.hasDescription.append("Analyzing system calls to determine whether a process is exhibiting unauthorized behavior.")
D3_UBA = Defense("D3_UBA")
D3_UBA.hasID.append("D3-UBA")
D3_UBA.hasName.append("User Behavior Analysis")
D3_UBA.hasDescription.append("Analyzing the properties of file create system call invocations.")
D3_ANET = Defense("D3_ANET")
D3_ANET.hasID.append("D3-ANET")
D3_ANET.hasName.append("Authentication Event Thresholding")
D3_ANET.hasDescription.append("User behavior analytics as defined by Gartner, is a cybersecurity process about detection of insider threats, targeted attacks, and financial fraud. UBA solutions look at patterns of human behavior, and then apply algorithms and statistical analysis to detect meaningful anomalies from those patterns-anomalies that indicate potential threats.' Instead of tracking devices or security events, UBA tracks a system's users. Big data platforms are increasing UBA functionality by allowing them to analyze petabytes worth of data to detect insider threats and advanced persistent threats.")
D3_AZET = Defense("D3_AZET")
D3_AZET.hasID.append("D3-AZET")
D3_AZET.hasName.append("Authorization Event Thresholding")
D3_AZET.hasDescription.append("Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile.")
D3_CCSA = Defense("D3_CCSA")
D3_CCSA.hasID.append("D3-CCSA")
D3_CCSA.hasName.append("Credential Compromise Scope Analysis")
D3_CCSA.hasDescription.append("Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile.")
D3_DAM = Defense("D3_DAM")
D3_DAM.hasID.append("D3-DAM")
D3_DAM.hasName.append("Domain Account Monitoring")
D3_DAM.hasDescription.append("Determining which credentials may have been compromised by analyzing the user logon history of a particular system.")
D3_JFAPA = Defense("D3_JFAPA")
D3_JFAPA.hasID.append("D3-JFAPA")
D3_JFAPA.hasName.append("Job Function Access Pattern Analysis")
D3_JFAPA.hasDescription.append("Monitoring the existence of or changes to Domain User Accounts.")
D3_LAM = Defense("D3_LAM")
D3_LAM.hasID.append("D3-LAM")
D3_LAM.hasName.append("Local Account Monitoring")
D3_LAM.hasDescription.append("Detecting anomalies in user access patterns by comparing user access activity to behavioral profiles that categorize users by role such as job title, function, department.")
D3_RAPA = Defense("D3_RAPA")
D3_RAPA.hasID.append("D3-RAPA")
D3_RAPA.hasName.append("Resource Access Pattern Analysis")
D3_RAPA.hasDescription.append("Analyzing local user accounts to detect unauthorized activity.")
D3_SDA = Defense("D3_SDA")
D3_SDA.hasID.append("D3-SDA")
D3_SDA.hasName.append("Session Duration Analysis")
D3_SDA.hasDescription.append("Analyzing the resources accessed by a user to identify unauthorized activity.")
D3_UGLPA = Defense("D3_UGLPA")
D3_UGLPA.hasID.append("D3-UGLPA")
D3_UGLPA.hasName.append("User Geolocation Logon Pattern Analysis")
D3_UGLPA.hasDescription.append("Analyzing the duration of user sessions in order to detect unauthorized activity.")
D3_CHN = Defense("D3_CHN")
D3_CHN.hasID.append("D3-CHN")
D3_CHN.hasName.append("Connected Honeynet")
D3_CHN.hasDescription.append("A decoy service, system, or environment, that is connected to the enterprise network, and simulates or emulates certain functionality to the network, without exposing full access to a production system.")
D3_DE = Defense("D3_DE")
D3_DE.hasID.append("D3-DE")
D3_DE.hasName.append("Decoy Environment")
D3_DE.hasDescription.append("A Decoy Environment comprises hosts and networks for the purposes of deceiving an attacker.")
D3_DF = Defense("D3_DF")
D3_DF.hasID.append("D3-DF")
D3_DF.hasName.append("Decoy File")
D3_DF.hasDescription.append("A file created for the purposes of deceiving an adversary.")
D3_DNR = Defense("D3_DNR")
D3_DNR.hasID.append("D3-DNR")
D3_DNR.hasName.append("Decoy Network Resource")
D3_DNR.hasDescription.append("Deploying a network resource for the purposes of deceiving an adversary.")
D3_DO = Defense("D3_DO")
D3_DO.hasID.append("D3-DO")
D3_DO.hasName.append("Decoy Object")
D3_DO.hasDescription.append("A Decoy Object is created and deployed for the purposes of deceiving attackers.")
D3_DST = Defense("D3_DST")
D3_DST.hasID.append("D3-DST")
D3_DST.hasName.append("Decoy Session Token")
D3_DST.hasDescription.append("An authentication token created for the purposes of deceiving an adversary.")
D3_DUC = Defense("D3_DUC")
D3_DUC.hasID.append("D3-DUC")
D3_DUC.hasName.append("Decoy User Credential")
D3_DUC.hasDescription.append("A Credential created for the purpose of deceiving an adversary.")
D3_IHN = Defense("D3_IHN")
D3_IHN.hasID.append("D3-IHN")
D3_IHN.hasName.append("Integrated Honeynet")
D3_IHN.hasDescription.append("The practice of setting decoys in a production environment to entice interaction from attackers.")   
D3_SHN = Defense("D3_SHN")
D3_SHN.hasID.append("D3-SHN")
D3_SHN.hasName.append("Standalone Honeynet")
D3_SHN.hasDescription.append("An environment created for the purpose of attracting attackers and eliciting their behaviors that is not connected to any production enterprise systems.")
D3_AL = Defense("D3_AL")
D3_AL.hasID.append("D3-AL")
D3_AL.hasName.append("Account Locking")
D3_AL.hasDescription.append("The process of temporarily disabling user accounts on a system or domain.")
D3_ANCI = Defense("D3_ANCI")
D3_ANCI.hasID.append("D3-ANCI")
D3_ANCI.hasName.append("Authentication Cache Invalidation")
D3_ANCI.hasDescription.append("Removing tokens or credentials from an authentication cache to prevent further user associated account accesses.")
D3_CE = Defense("D3_CE")
D3_CE.hasID.append("D3-CE")
D3_CE.hasName.append("Credential Eviction")
D3_CE.hasDescription.append("Credential Eviction techniques disable or remove compromised credentials from a computer network.")   
D3_CR = Defense("D3_CR")
D3_CR.hasID.append("D3-CR")
D3_CR.hasName.append("Credential Revoking")
D3_CR.hasDescription.append("Deleting a set of credentials permanently to prevent them from being used to authenticate.")
D3_ER = Defense("D3_ER")
D3_ER.hasID.append("D3-ER")
D3_ER.hasName.append("Email Removal")
D3_ER.hasDescription.append("The email removal technique deletes email files from system storage.")
D3_FEV = Defense("D3_FEV")
D3_FEV.hasID.append("D3-FEV")
D3_FEV.hasName.append("File Eviction")
D3_FEV.hasDescription.append("File eviction techniques evict files from system storage.")
D3_FR = Defense("D3_FR")
D3_FR.hasID.append("D3-FR")
D3_FR.hasName.append("File Removal")
D3_FR.hasDescription.append("The file removal technique deletes malicious artifacts or programs from a computer system.")
D3_PE = Defense("D3_PE")
D3_PE.hasID.append("D3-PE")
D3_PE.hasName.append("Process Eviction")
D3_PE.hasDescription.append("Process eviction techniques terminate or remove running processes.")
D3_PS = Defense("D3_PS")
D3_PS.hasID.append("D3-PS")
D3_PS.hasName.append("Process Suspension")
D3_PS.hasDescription.append("Suspending a running process on a computer system.")
D3_PT = Defense("D3_PT")
D3_PT.hasID.append("D3-PT")
D3_PT.hasName.append("Process Termination")
D3_PT.hasDescription.append("Terminating a running application process on a computer system.")
D3_ACH = Defense("D3_ACH")
D3_ACH.hasID.append("D3-ACH")
D3_ACH.hasName.append("Application Configuration Hardening")
D3_ACH.hasDescription.append("Modifying an application's configuration to reduce its attack surface.")
D3_AH = Defense("D3_AH")
D3_AH.hasID.append("D3-AH")
D3_AH.hasName.append("Application Hardening")
D3_AH.hasDescription.append("Application Hardening makes an executable application more resilient to a class of exploits which either introduce new code or execute unwanted existing code. These techniques may be applied at compile-time or on an application binary.")
D3_BAN = Defense("D3_BAN")
D3_BAN.hasID.append("D3-BAN")
D3_BAN.hasName.append("Biometric Authentication")
D3_BAN.hasDescription.append("Using biological measures in order to authenticate a user.")
D3_BA = Defense("D3_BA")
D3_BA.hasID.append("D3-BA")
D3_BA.hasName.append("Bootloader Authentication")
D3_BA.hasDescription.append("Cryptographically authenticating the bootloader software before system boot.")
D3_CH = Defense("D3_CH")
D3_CH.hasID.append("D3-CH")
D3_CH.hasName.append("Credential Hardening")
D3_CH.hasDescription.append("Credential Hardening techniques modify system or network properties in order to protect system or network/domain credentials.")
D3_CRO = Defense("D3_CRO")
D3_CRO.hasID.append("D3-CRO")
D3_CRO.hasName.append("Credential Rotation")
D3_CRO.hasDescription.append("Expiring an existing set of credentials and reissuing a new valid set.")
D3_CTS = Defense("D3_CTS")
D3_CTS.hasID.append("D3-CTS")
D3_CTS.hasName.append("Credential Transmission Scoping")
D3_CTS.hasDescription.append("Limiting the transmission of a credential to a scoped set of relying parties.")
D3_DENCR = Defense("D3_DENCR")
D3_DENCR.hasID.append("D3-DENCR")
D3_DENCR.hasName.append("Disk Encryption")
D3_DENCR.hasDescription.append("Encrypting a hard disk partition to prevent cleartext access to a file system.")
D3_DTP = Defense("D3_DTP")
D3_DTP.hasID.append("D3-DTP")
D3_DTP.hasName.append("Domain Trust Policy")
D3_DTP.hasDescription.append("Restricting inter-domain trust by modifying domain configuration.")
D3_FE = Defense("D3_FE")
D3_FE.hasID.append("D3-FE")
D3_FE.hasName.append("File Encryption")
D3_FE.hasDescription.append("Encrypting a file using a cryptographic key.")
D3_LFP = Defense("D3_LFP")
D3_LFP.hasID.append("D3-LFP")
D3_LFP.hasName.append("Local File Permissions")
D3_LFP.hasDescription.append("Restricting access to a local file by configuring operating system functionality.")
D3_MFA = Defense("D3_MFA")
D3_MFA.hasID.append("D3-MFA")
D3_MFA.hasName.append("Multi-factor Authentication")
D3_MFA.hasDescription.append("Requiring proof of two or more pieces of evidence in order to authenticate a user.")
D3_OTP = Defense("D3_OTP")
D3_OTP.hasID.append("D3-OTP")
D3_OTP.hasName.append("One-time Password")
D3_OTP.hasDescription.append("A one-time password is valid for only one user authentication.")
D3_PH = Defense("D3_PH")
D3_PH.hasID.append("D3-PH")
D3_PH.hasName.append("Platform Hardening")
D3_PH.hasDescription.append("Hardening components of a Platform with the intention of making them more difficult to exploit. Platforms include components such as BIOS UEFI Subsystems, Hardware security devices such as Trusted Platform Modules, Boot process logic or code, Kernel software components.")
D3_PSEP = Defense("D3_PSEP")
D3_PSEP.hasID.append("D3-PSEP")
D3_PSEP.hasName.append("Process Segment Execution Prevention")
D3_PSEP.hasDescription.append("Preventing execution of any address in a memory region other than the code segment.")
D3_SAOR = Defense("D3_SAOR")
D3_SAOR.hasID.append("D3-SAOR")
D3_SAOR.hasName.append("Segment Address Offset Randomization")
D3_SAOR.hasDescription.append("Randomizing the base (start) address of one or more segments of memory during the initialization of a process.")
D3_SU = Defense("D3_SU")
D3_SU.hasID.append("D3-SU")
D3_SU.hasName.append("Software Update")
D3_SU.hasDescription.append("Replacing old software on a computer system component.")
D3_SFCV = Defense("D3_SFCV")
D3_SFCV.hasID.append("D3-SFCV")
D3_SFCV.hasName.append("Stack Frame Canary Validation")
D3_SFCV.hasDescription.append("Comparing a value stored in a stack frame with a known good value in order to prevent or detect a memory segment overwrite.")
D3_SPP = Defense("D3_SPP")
D3_SPP.hasID.append("D3-SPP")
D3_SPP.hasName.append("Strong Password Policy")
D3_SPP.hasDescription.append("Modifying system configuration to increase password strength.")
D3_SCP = Defense("D3_SCP")
D3_SCP.hasID.append("D3-SCP")
D3_SCP.hasName.append("System Configuration Permissions")
D3_SCP.hasDescription.append("Restricting system configuration modifications to a specific user or group of users.")
D3_UAP = Defense("D3_UAP")
D3_UAP.hasID.append("D3-UAP")
D3_UAP.hasName.append("User Account Permissions")
D3_UAP.hasDescription.append("Restricting a user account's access to resources.")
D3_DNSAL = Defense("D3_DNSAL")
D3_DNSAL.hasID.append("D3-DNSAL")
D3_DNSAL.hasName.append("DNS Allowlisting")
D3_DNSAL.hasDescription.append("Permitting only approved domains and their subdomains to be resolved.")
D3_DNSDL = Defense("D3_DNSDL")
D3_DNSDL.hasID.append("D3-DNSDL")
D3_DNSDL.hasName.append("DNS Denylisting")
D3_DNSDL.hasDescription.append("Blocking DNS Network Traffic based on criteria such as IP address, domain name, or DNS query type.")
D3_EF = Defense("D3_EF")
D3_EF.hasID.append("D3-EF")
D3_EF.hasName.append("Email Filtering")
D3_EF.hasDescription.append("Filtering incoming email traffic based on specific criteria.")
D3_EAL = Defense("D3_EAL")
D3_EAL.hasID.append("D3-EAL")
D3_EAL.hasName.append("Executable Allowlisting")
D3_EAL.hasDescription.append("Using a digital signature to authenticate a file before opening.")
D3_EDL = Defense("D3_EDL")
D3_EDL.hasID.append("D3-EDL")
D3_EDL.hasName.append("Executable Denylisting")
D3_EDL.hasDescription.append("Blocking the execution of files on a host in accordance with defined application policy rules.")     
D3_EI = Defense("D3_EI")
D3_EI.hasID.append("D3-EI")
D3_EI.hasName.append("Execution Isolation")
D3_EI.hasDescription.append("Execution Isolation techniques prevent application processes from accessing non-essential system resources, such as memory, devices, or files.")
D3_FRDDL = Defense("D3_FRDDL")
D3_FRDDL.hasID.append("D3-FRDDL")
D3_FRDDL.hasName.append("Forward Resolution Domain Denylisting")
D3_FRDDL.hasDescription.append("Blocking a lookup based on the query's domain name value.")
D3_HBPI = Defense("D3_HBPI")
D3_HBPI.hasID.append("D3-HBPI")
D3_HBPI.hasName.append("Hardware-based Process Isolation")
D3_HBPI.hasDescription.append("Preventing one process from writing to the memory space of another process through hardware-based address manager implementations.")
D3_HDDL = Defense("D3_HDDL")
D3_HDDL.hasID.append("D3-HDDL")
D3_HDDL.hasName.append("Hierarchical Domain Denylisting")
D3_HDDL.hasDescription.append("Blocking the resolution of any subdomain of a specified domain name.")
D3_HDL = Defense("D3_HDL")
D3_HDL.hasID.append("D3-HDL")
D3_HDL.hasName.append("Homoglyph Denylisting")
D3_HDL.hasDescription.append("Blocking DNS queries that are deceptively similar to legitimate domain names.")
D3_ITF = Defense("D3_ITF")
D3_ITF.hasID.append("D3-ITF")
D3_ITF.hasName.append("Inbound Traffic Filtering")
D3_ITF.hasDescription.append("Restricting network traffic originating from untrusted networks destined towards a private host or enclave.")
D3_IOPR = Defense("D3_IOPR")
D3_IOPR.hasID.append("D3-IOPR")
D3_IOPR.hasName.append("IO Port Restriction")
D3_IOPR.hasDescription.append("Limiting access to computer input/output (IO) ports to restrict unauthorized devices.")
D3_KBPI = Defense("D3_KBPI")
D3_KBPI.hasID.append("D3-KBPI")
D3_KBPI.hasName.append("Kernel-based Process Isolation")
D3_KBPI.hasDescription.append("Using kernel-level capabilities to isolate processes.")
D3_MAC = Defense("D3_MAC")
D3_MAC.hasID.append("D3-MAC")
D3_MAC.hasName.append("Mandatory Access Control")
D3_MAC.hasDescription.append("Controlling access to local computer system resources with kernel-level capabilities.")
D3_NI = Defense("D3_NI")
D3_NI.hasID.append("D3-NI")
D3_NI.hasName.append("Network Isolation")
D3_NI.hasDescription.append("Network Isolation techniques prevent network hosts from accessing non-essential system network resources.")
D3_NTF = Defense("D3_NTF")
D3_NTF.hasID.append("D3-NTF")
D3_NTF.hasName.append("Network Traffic Filtering")
D3_NTF.hasDescription.append("Restricting network traffic originating from any location.")
D3_OTF = Defense("D3_OTF")
D3_OTF.hasID.append("D3-OTF")
D3_OTF.hasName.append("Outbound Traffic Filtering")
D3_OTF.hasDescription.append("Restricting network traffic originating from a private host or enclave destined towards untrusted networks.")
D3_RRID = Defense("D3_RRID")
D3_RRID.hasID.append("D3-RRID")
D3_RRID.hasName.append("Reverse Resolution IP Denylisting")
D3_RRID.hasDescription.append("Blocking a reverse lookup based on the query's IP address value.")
D3_SCF = Defense("D3_SCF")
D3_SCF.hasID.append("D3-SCF")
D3_SCF.hasName.append("System Call Filtering")
D3_SCF.hasDescription.append("Configuring a kernel to use an allow or deny list to filter kernel API calls.")
D3_AM = Defense("D3_AM")
D3_AM.hasID.append("D3-AM")
D3_AM.hasName.append("Access Modeling")
D3_AM.hasDescription.append("Access modeling identifies and records the access permissions granted to administrators, users, groups, and systems.")
D3_ALLM = Defense("D3_ALLM")
D3_ALLM.hasID.append("D3-ALLM")
D3_ALLM.hasName.append("Active Logical Link Mapping")
D3_ALLM.hasDescription.append("Active logical link mapping sends and receives network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connections.")
D3_APLM = Defense("D3_APLM")
D3_APLM.hasID.append("D3-APLM")
D3_APLM.hasName.append("Active Physical Link Mapping")
D3_APLM.hasDescription.append("Active physical link mapping sends and receives network traffic as a means to map the physical layer.")
D3_AI = Defense("D3_AI")
D3_AI.hasID.append("D3-AI")
D3_AI.hasName.append("Asset Inventory")
D3_AI.hasDescription.append("Asset inventorying identifies and records the organization's assets and enriches each inventory item with knowledge about their vulnerabilities.")
D3_AVE = Defense("D3_AVE")
D3_AVE.hasID.append("D3-AVE")
D3_AVE.hasName.append("Asset Vulnerability Enumeration")
D3_AVE.hasDescription.append("Asset vulnerability enumeration enriches inventory items with knowledge identifying their vulnerabilities.")
D3_CI = Defense("D3_CI")
D3_CI.hasID.append("D3-CI")
D3_CI.hasName.append("Configuration Inventory")
D3_CI.hasDescription.append("Configuration inventory identifies and records the configuration of software and hardware and their components throughout the organization.")
D3_DI = Defense("D3_DI")
D3_DI.hasID.append("D3-DI")
D3_DI.hasName.append("Data Inventory")
D3_DI.hasDescription.append("Data inventorying identifies and records the schemas, formats, volumes, and locations of data stored and used on the organization's architecture.")
D3_HCI = Defense("D3_HCI")
D3_HCI.hasID.append("D3-HCI")
D3_HCI.hasName.append("Hardware Component Inventory")
D3_HCI.hasDescription.append("Hardware component inventorying identifies and records the hardware items in the organization's architecture.")
D3_LLM = Defense("D3_LLM")
D3_LLM.hasID.append("D3-LLM")
D3_LLM.hasName.append("Logical Link Mapping")
D3_LLM.hasDescription.append("Logical link mapping creates a model of existing or previous node-to-node connections using network-layer data or metadata.")
D3_NM = Defense("D3_NM")
D3_NM.hasID.append("D3-NM")
D3_NM.hasName.append("Network Mapping")
D3_NM.hasDescription.append("Network mapping encompasses the techniques to identify and model the physical layer, network layer, and data exchange layers of the organization's network and their physical location, and determine allowed pathways through that network.")
D3_NNI = Defense("D3_NNI")
D3_NNI.hasID.append("D3-NNI")
D3_NNI.hasName.append("Network Node Inventory")
D3_NNI.hasDescription.append("Network node inventorying identifies and records all the network nodes (hosts, routers, switches, firewalls, etc.) in the organization's architecture.")
D3_NTPM = Defense("D3_NTPM")
D3_NTPM.hasID.append("D3-NTPM")
D3_NTPM.hasName.append("Network Traffic Policy Mapping")
D3_NTPM.hasDescription.append("Network traffic policy mapping identifies and models the allowed pathways of data at the network, transport, and/or application levels.")
D3_OAM = Defense("D3_OAM")
D3_OAM.hasID.append("D3-OAM")
D3_OAM.hasName.append("Operational Activity Mapping")
D3_OAM.hasDescription.append("Operational activity mapping identifies activities of the organization and the organization's suborganizations, groups, roles, and individuals that carry out the activities and then establishes the dependencies of the activities on the systems and people that perform those activities.")
D3_PLLM = Defense("D3_PLLM")
D3_PLLM.hasID.append("D3-PLLM")
D3_PLLM.hasName.append("Passive Logical Link Mapping")
D3_PLLM.hasDescription.append("Passive logical link mapping only listens to network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connections.")
D3_PLM = Defense("D3_PLM")
D3_PLM.hasID.append("D3-PLM")
D3_PLM.hasName.append("Physical Link Mapping")
D3_PLM.hasDescription.append("Physical link mapping identifies and models the link connectivity of the network devices within a physical network.")
D3_SWI = Defense("D3_SWI")
D3_SWI.hasID.append("D3-SWI")
D3_SWI.hasName.append("Software Inventory")
D3_SWI.hasDescription.append("Software inventorying identifies and records the software items in the organization's architecture.")
D3_SYSM = Defense("D3_SYSM")
D3_SYSM.hasID.append("D3-SYSM")
D3_SYSM.hasName.append("System Mapping")
D3_SYSM.hasDescription.append("System mapping encompasses the techniques to identify the organization's systems, how they are configured and decomposed into subsystems and components, how they are dependent on one another, and where they are physically located.")
D3_SYSVA = Defense("D3_SYSVA")
D3_SYSVA.hasID.append("D3-SYSVA")
D3_SYSVA.hasName.append("System Vulnerability Assessment")
D3_SYSVA.hasDescription.append("System vulnerability assessment relates all the vulnerabilities of a system's components in the context of their configuration and internal dependencies and can also include assessing risk emerging from the system's design as a whole, not just the sum of individual component vulnerabilities.")
D3_RC = Defense("D3_RC")
D3_RC.hasID.append("D3-RC")
D3_RC.hasName.append("Reissue Credential")
D3_RC.hasDescription.append("Issue a new credential to a user which supersedes their old credential.")
D3_RA = Defense("D3_RA")
D3_RA.hasID.append("D3-RA")
D3_RA.hasName.append("Restore Access")
D3_RA.hasDescription.append("Restoring an entity's access to resources.")
D3_RCF = Defense("D3_RCF")
D3_RCF.hasID.append("D3-RCF")
D3_RCF.hasName.append("Restore Configuration")
D3_RCF.hasDescription.append("Restoring a software configuration.")
D3_RD = Defense("D3_RD")
D3_RD.hasID.append("D3-RD")
D3_RD.hasName.append("Restore Database")
D3_RD.hasDescription.append("Restoring the data in a database.")
D3_RE = Defense("D3_RE")
D3_RE.hasID.append("D3-RE")
D3_RE.hasName.append("Restore Email")
D3_RE.hasDescription.append("Restoring an email for an entity to access.")
D3_RF = Defense("D3_RF")
D3_RF.hasID.append("D3-RF")
D3_RF.hasName.append("Restore File")
D3_RF.hasDescription.append("Restoring a file for an entity to access.")
D3_RNA = Defense("D3_RNA")
D3_RNA.hasID.append("D3-RNA")
D3_RNA.hasName.append("Restore Network Access")
D3_RNA.hasDescription.append("Restoring an entity's access to a computer network.")
D3_RO = Defense("D3_RO")
D3_RO.hasID.append("D3-RO")
D3_RO.hasName.append("Restore Object")
D3_RO.hasDescription.append("Restoring an object for an entity to access. This is the broadest class for object restoration.")     
D3_RS = Defense("D3_RS")
D3_RS.hasID.append("D3-RS")
D3_RS.hasName.append("Restore Software")
D3_RS.hasDescription.append("Restoring software to a host.")
D3_RUAA = Defense("D3_RUAA")
D3_RUAA.hasID.append("D3-RUAA")
D3_RUAA.hasName.append("Restore User Account Access")
D3_RUAA.hasDescription.append("Restoring a user account's access to resources.")
D3_ULA = Defense("D3_ULA")
D3_ULA.hasID.append("D3-ULA")
D3_ULA.hasName.append("Unlock Account")
D3_ULA.hasDescription.append("Restoring a user account's access to resources by unlocking a locked User Account.")
D3_FA.hasType.append("Detect")
D3_DA.hasType.append("Detect")
D3_EFA.hasType.append("Detect")
D3_FCOA.hasType.append("Detect")
D3_FCR.hasType.append("Detect")
D3_FH.hasType.append("Detect")
D3_ID.hasType.append("Detect")
D3_HD.hasType.append("Detect")
D3_IAA.hasType.append("Detect")
D3_IRA.hasType.append("Detect")
D3_URA.hasType.append("Detect")
D3_UA.hasType.append("Detect")
D3_MA.hasType.append("Detect")
D3_SMRA.hasType.append("Detect")
D3_SRA.hasType.append("Detect")
D3_NTA.hasType.append("Detect")
D3_ANAA.hasType.append("Detect")
D3_CA.hasType.append("Detect")
D3_ACA.hasType.append("Detect")
D3_PCA.hasType.append("Detect")
D3_CSPP.hasType.append("Detect")
D3_CAA.hasType.append("Detect")
D3_DNSTA.hasType.append("Detect")
D3_FC.hasType.append("Detect")
D3_ISVA.hasType.append("Detect")
D3_IPCTA.hasType.append("Detect")
D3_NTCD.hasType.append("Detect")
D3_PHDURA.hasType.append("Detect")
D3_PMAD.hasType.append("Detect")
D3_RPA.hasType.append("Detect")
D3_RTSD.hasType.append("Detect")
D3_RTA.hasType.append("Detect")
D3_PM.hasType.append("Detect")
D3_FIM.hasType.append("Detect")
D3_FBA.hasType.append("Detect")
D3_FV.hasType.append("Detect")
D3_FEMC.hasType.append("Detect")
D3_SFV.hasType.append("Detect")
D3_OSM.hasType.append("Detect")
D3_EHB.hasType.append("Detect")
D3_IDA.hasType.append("Detect")
D3_MBT.hasType.append("Detect")
D3_SJA.hasType.append("Detect")
D3_SDM.hasType.append("Detect")
D3_SFA.hasType.append("Detect")
D3_SBV.hasType.append("Detect")
D3_SICA.hasType.append("Detect")
D3_USICA.hasType.append("Detect")
D3_PA.hasType.append("Detect")
D3_DQSA.hasType.append("Detect")
D3_PCSV.hasType.append("Detect")
D3_PSMD.hasType.append("Detect")
D3_PSA.hasType.append("Detect")
D3_PLA.hasType.append("Detect")
D3_SSC.hasType.append("Detect")
D3_SCA.hasType.append("Detect")
D3_FCA.hasType.append("Detect")
D3_UBA.hasType.append("Detect")
D3_ANET.hasType.append("Detect")
D3_AZET.hasType.append("Detect")
D3_CCSA.hasType.append("Detect")
D3_DAM.hasType.append("Detect")
D3_JFAPA.hasType.append("Detect")
D3_LAM.hasType.append("Detect")
D3_RAPA.hasType.append("Detect")
D3_SDA.hasType.append("Detect")
D3_UGLPA.hasType.append("Detect")
D3_CHN.hasType.append("Deceive")
D3_DE.hasType.append("Deceive")
D3_DF.hasType.append("Deceive")
D3_DNR.hasType.append("Deceive")
D3_DO.hasType.append("Deceive")
D3_DST.hasType.append("Deceive")
D3_DUC.hasType.append("Deceive")
D3_IHN.hasType.append("Deceive")
D3_SHN.hasType.append("Deceive")
D3_AL.hasType.append("Evict")
D3_ANCI.hasType.append("Evict")
D3_CE.hasType.append("Evict")
D3_CR.hasType.append("Evict")
D3_ER.hasType.append("Evict")
D3_FEV.hasType.append("Evict")
D3_FR.hasType.append("Evict")
D3_PE.hasType.append("Evict")
D3_PS.hasType.append("Evict")
D3_PT.hasType.append("Evict")
D3_ACH.hasType.append("Harden")
D3_AH.hasType.append("Harden")
D3_BAN.hasType.append("Harden")
D3_BA.hasType.append("Harden")
D3_CH.hasType.append("Harden")
D3_CRO.hasType.append("Harden")
D3_CTS.hasType.append("Harden")
D3_DENCR.hasType.append("Harden")
D3_DTP.hasType.append("Harden")
D3_FE.hasType.append("Harden")
D3_LFP.hasType.append("Harden")
D3_MFA.hasType.append("Harden")
D3_OTP.hasType.append("Harden")
D3_PH.hasType.append("Harden")
D3_PSEP.hasType.append("Harden")
D3_SAOR.hasType.append("Harden")
D3_SU.hasType.append("Harden")
D3_SFCV.hasType.append("Harden")
D3_SPP.hasType.append("Harden")
D3_SCP.hasType.append("Harden")
D3_UAP.hasType.append("Harden")
D3_DNSAL.hasType.append("Isolate")
D3_DNSDL.hasType.append("Isolate")
D3_EF.hasType.append("Isolate")
D3_EAL.hasType.append("Isolate")
D3_EDL.hasType.append("Isolate")
D3_EI.hasType.append("Isolate")
D3_FRDDL.hasType.append("Isolate")
D3_HBPI.hasType.append("Isolate")
D3_HDDL.hasType.append("Isolate")
D3_HDL.hasType.append("Isolate")
D3_ITF.hasType.append("Isolate")
D3_IOPR.hasType.append("Isolate")
D3_KBPI.hasType.append("Isolate")
D3_MAC.hasType.append("Isolate")
D3_NI.hasType.append("Isolate")
D3_NTF.hasType.append("Isolate")
D3_OTF.hasType.append("Isolate")
D3_RRID.hasType.append("Isolate")
D3_SCF.hasType.append("Isolate")
D3_AM.hasType.append("Model")
D3_ALLM.hasType.append("Model")
D3_APLM.hasType.append("Model")
D3_AI.hasType.append("Model")
D3_AVE.hasType.append("Model")
D3_CI.hasType.append("Model")
D3_DI.hasType.append("Model")
D3_HCI.hasType.append("Model")
D3_LLM.hasType.append("Model")
D3_NM.hasType.append("Model")
D3_NNI.hasType.append("Model")
D3_NTPM.hasType.append("Model")
D3_OAM.hasType.append("Model")
D3_PLLM.hasType.append("Model")
D3_PLM.hasType.append("Model")
D3_SWI.hasType.append("Model")
D3_SYSM.hasType.append("Model")
D3_SYSVA.hasType.append("Model")
D3_RC.hasType.append("Restore")
D3_RA.hasType.append("Restore")
D3_RCF.hasType.append("Restore")
D3_RD.hasType.append("Restore")
D3_RE.hasType.append("Restore")
D3_RF.hasType.append("Restore")
D3_RNA.hasType.append("Restore")
D3_RO.hasType.append("Restore")
D3_RS.hasType.append("Restore")
D3_RUAA.hasType.append("Restore")
D3_ULA.hasType.append("Restore")



# Asserted_properties for Technique - Mitigation
T1564_009.preventedBy.append(M1013)
T1574_002.preventedBy.append(M1013)
T1559_003.preventedBy.append(M1013)
T1593_003.preventedBy.append(M1013)
T1212.preventedBy.append(M1013)
T1574.preventedBy.append(M1013)
T1559.preventedBy.append(M1013)
T1647.preventedBy.append(M1013)
T1593.preventedBy.append(M1013)
T1078.preventedBy.append(M1013)
T1134_005.preventedBy.append(M1015)
T1606_002.preventedBy.append(M1015)
T1003_005.preventedBy.append(M1015)
T1003_006.preventedBy.append(M1015)
T1558_001.preventedBy.append(M1015)
T1552_006.preventedBy.append(M1015)
T1550_003.preventedBy.append(M1015)
T1078_004.preventedBy.append(M1015)
T1003.preventedBy.append(M1015)
T1072.preventedBy.append(M1015)
T1649.preventedBy.append(M1015)
T1558.preventedBy.append(M1015)
T1552.preventedBy.append(M1015)
T1078.preventedBy.append(M1015)
T1195_001.preventedBy.append(M1016)
T1195_002.preventedBy.append(M1016)
T1190.preventedBy.append(M1016)
T1210.preventedBy.append(M1016)
T1195.preventedBy.append(M1016)
T1557_002.preventedBy.append(M1017)
T1547_007.preventedBy.append(M1017)
T1213_001.preventedBy.append(M1017)
T1213_002.preventedBy.append(M1017)
T1213_003.preventedBy.append(M1017)
T1056_002.preventedBy.append(M1017)
T1036_007.preventedBy.append(M1017)
T1003_001.preventedBy.append(M1017)
T1003_002.preventedBy.append(M1017)
T1003_003.preventedBy.append(M1017)
T1003_004.preventedBy.append(M1017)
T1003_005.preventedBy.append(M1017)
T1566_001.preventedBy.append(M1017)
T1566_002.preventedBy.append(M1017)
T1566_003.preventedBy.append(M1017)
T1598_001.preventedBy.append(M1017)
T1598_002.preventedBy.append(M1017)
T1598_003.preventedBy.append(M1017)
T1552_001.preventedBy.append(M1017)
T1552_008.preventedBy.append(M1017)
T1204_001.preventedBy.append(M1017)
T1204_002.preventedBy.append(M1017)
T1204_003.preventedBy.append(M1017)
T1078_002.preventedBy.append(M1017)
T1078_004.preventedBy.append(M1017)
T1557.preventedBy.append(M1017)
T1176.preventedBy.append(M1017)
T1185.preventedBy.append(M1017)
T1213.preventedBy.append(M1017)
T1036.preventedBy.append(M1017)
T1111.preventedBy.append(M1017)
T1621.preventedBy.append(M1017)
T1027.preventedBy.append(M1017)
T1003.preventedBy.append(M1017)
T1566.preventedBy.append(M1017)
T1598.preventedBy.append(M1017)
T1072.preventedBy.append(M1017)
T1528.preventedBy.append(M1017)
T1539.preventedBy.append(M1017)
T1221.preventedBy.append(M1017)
T1552.preventedBy.append(M1017)
T1204.preventedBy.append(M1017)
T1078.preventedBy.append(M1017)
T1134_001.preventedBy.append(M1018)
T1134_002.preventedBy.append(M1018)
T1134_003.preventedBy.append(M1018)
T1087_004.preventedBy.append(M1018)
T1098_001.preventedBy.append(M1018)
T1098_003.preventedBy.append(M1018)
T1098_004.preventedBy.append(M1018)
T1020_001.preventedBy.append(M1018)
T1547_004.preventedBy.append(M1018)
T1547_006.preventedBy.append(M1018)
T1547_009.preventedBy.append(M1018)
T1547_012.preventedBy.append(M1018)
T1547_013.preventedBy.append(M1018)
T1110_004.preventedBy.append(M1018)
T1059_008.preventedBy.append(M1018)
T1543_002.preventedBy.append(M1018)
T1543_003.preventedBy.append(M1018)
T1543_004.preventedBy.append(M1018)
T1213_001.preventedBy.append(M1018)
T1213_002.preventedBy.append(M1018)
T1213_003.preventedBy.append(M1018)
T1484_001.preventedBy.append(M1018)
T1546_003.preventedBy.append(M1018)
T1606_002.preventedBy.append(M1018)
T1574_005.preventedBy.append(M1018)
T1574_010.preventedBy.append(M1018)
T1574_012.preventedBy.append(M1018)
T1562_001.preventedBy.append(M1018)
T1562_002.preventedBy.append(M1018)
T1562_004.preventedBy.append(M1018)
T1562_006.preventedBy.append(M1018)
T1562_007.preventedBy.append(M1018)
T1562_008.preventedBy.append(M1018)
T1556_006.preventedBy.append(M1018)
T1578_001.preventedBy.append(M1018)
T1578_002.preventedBy.append(M1018)
T1578_003.preventedBy.append(M1018)
T1566_002.preventedBy.append(M1018)
T1563_002.preventedBy.append(M1018)
T1021_001.preventedBy.append(M1018)
T1021_004.preventedBy.append(M1018)
T1053_002.preventedBy.append(M1018)
T1053_003.preventedBy.append(M1018)
T1053_005.preventedBy.append(M1018)
T1053_006.preventedBy.append(M1018)
T1053_007.preventedBy.append(M1018)
T1505_003.preventedBy.append(M1018)
T1569_001.preventedBy.append(M1018)
T1552_007.preventedBy.append(M1018)
T1550_002.preventedBy.append(M1018)
T1550_003.preventedBy.append(M1018)
T1078_004.preventedBy.append(M1018)
T1548.preventedBy.append(M1018)
T1134.preventedBy.append(M1018)
T1098.preventedBy.append(M1018)
T1197.preventedBy.append(M1018)
T1185.preventedBy.append(M1018)
T1110.preventedBy.append(M1018)
T1580.preventedBy.append(M1018)
T1538.preventedBy.append(M1018)
T1619.preventedBy.append(M1018)
T1609.preventedBy.append(M1018)
T1613.preventedBy.append(M1018)
T1543.preventedBy.append(M1018)
T1530.preventedBy.append(M1018)
T1213.preventedBy.append(M1018)
T1610.preventedBy.append(M1018)
T1006.preventedBy.append(M1018)
T1484.preventedBy.append(M1018)
T1048.preventedBy.append(M1018)
T1606.preventedBy.append(M1018)
T1574.preventedBy.append(M1018)
T1562.preventedBy.append(M1018)
T1490.preventedBy.append(M1018)
T1556.preventedBy.append(M1018)
T1578.preventedBy.append(M1018)
T1040.preventedBy.append(M1018)
T1563.preventedBy.append(M1018)
T1021.preventedBy.append(M1018)
T1053.preventedBy.append(M1018)
T1505.preventedBy.append(M1018)
T1648.preventedBy.append(M1018)
T1489.preventedBy.append(M1018)
T1072.preventedBy.append(M1018)
T1528.preventedBy.append(M1018)
T1569.preventedBy.append(M1018)
T1537.preventedBy.append(M1018)
T1199.preventedBy.append(M1018)
T1550.preventedBy.append(M1018)
T1078.preventedBy.append(M1018)
T1047.preventedBy.append(M1018)
T1212.preventedBy.append(M1019)
T1211.preventedBy.append(M1019)
T1068.preventedBy.append(M1019)
T1210.preventedBy.append(M1019)
T1573_002.preventedBy.append(M1020)
T1090_004.preventedBy.append(M1020)
T1573.preventedBy.append(M1020)
T1090.preventedBy.append(M1020)
T1059_005.preventedBy.append(M1021)
T1059_007.preventedBy.append(M1021)
T1568_002.preventedBy.append(M1021)
T1567_001.preventedBy.append(M1021)
T1567_002.preventedBy.append(M1021)
T1567_003.preventedBy.append(M1021)
T1566_001.preventedBy.append(M1021)
T1566_002.preventedBy.append(M1021)
T1566_003.preventedBy.append(M1021)
T1218_001.preventedBy.append(M1021)
T1550_001.preventedBy.append(M1021)
T1204_001.preventedBy.append(M1021)
T1102_001.preventedBy.append(M1021)
T1102_002.preventedBy.append(M1021)
T1102_003.preventedBy.append(M1021)
T1059.preventedBy.append(M1021)
T1189.preventedBy.append(M1021)
T1568.preventedBy.append(M1021)
T1567.preventedBy.append(M1021)
T1566.preventedBy.append(M1021)
T1528.preventedBy.append(M1021)
T1204.preventedBy.append(M1021)
T1102.preventedBy.append(M1021)
T1548_003.preventedBy.append(M1022)
T1098_004.preventedBy.append(M1022)
T1547_003.preventedBy.append(M1022)
T1547_013.preventedBy.append(M1022)
T1037_002.preventedBy.append(M1022)
T1037_003.preventedBy.append(M1022)
T1037_004.preventedBy.append(M1022)
T1037_005.preventedBy.append(M1022)
T1543_001.preventedBy.append(M1022)
T1543_002.preventedBy.append(M1022)
T1565_001.preventedBy.append(M1022)
T1565_003.preventedBy.append(M1022)
T1546_004.preventedBy.append(M1022)
T1546_013.preventedBy.append(M1022)
T1222_001.preventedBy.append(M1022)
T1222_002.preventedBy.append(M1022)
T1564_004.preventedBy.append(M1022)
T1574_004.preventedBy.append(M1022)
T1574_007.preventedBy.append(M1022)
T1574_008.preventedBy.append(M1022)
T1574_009.preventedBy.append(M1022)
T1562_001.preventedBy.append(M1022)
T1562_002.preventedBy.append(M1022)
T1562_004.preventedBy.append(M1022)
T1562_006.preventedBy.append(M1022)
T1070_001.preventedBy.append(M1022)
T1070_002.preventedBy.append(M1022)
T1070_003.preventedBy.append(M1022)
T1070_008.preventedBy.append(M1022)
T1070_009.preventedBy.append(M1022)
T1036_003.preventedBy.append(M1022)
T1036_005.preventedBy.append(M1022)
T1055_009.preventedBy.append(M1022)
T1563_001.preventedBy.append(M1022)
T1053_006.preventedBy.append(M1022)
T1553_003.preventedBy.append(M1022)
T1218_002.preventedBy.append(M1022)
T1569_002.preventedBy.append(M1022)
T1552_001.preventedBy.append(M1022)
T1552_004.preventedBy.append(M1022)
T1548.preventedBy.append(M1022)
T1037.preventedBy.append(M1022)
T1543.preventedBy.append(M1022)
T1530.preventedBy.append(M1022)
T1565.preventedBy.append(M1022)
T1048.preventedBy.append(M1022)
T1222.preventedBy.append(M1022)
T1574.preventedBy.append(M1022)
T1562.preventedBy.append(M1022)
T1070.preventedBy.append(M1022)
T1036.preventedBy.append(M1022)
T1556.preventedBy.append(M1022)
T1489.preventedBy.append(M1022)
T1569.preventedBy.append(M1022)
T1080.preventedBy.append(M1022)
T1552.preventedBy.append(M1022)
T1547_003.preventedBy.append(M1024)
T1037_001.preventedBy.append(M1024)
T1574_011.preventedBy.append(M1024)
T1574_012.preventedBy.append(M1024)
T1562_001.preventedBy.append(M1024)
T1562_002.preventedBy.append(M1024)
T1562_004.preventedBy.append(M1024)
T1070_007.preventedBy.append(M1024)
T1556_008.preventedBy.append(M1024)
T1505_005.preventedBy.append(M1024)
T1553_003.preventedBy.append(M1024)
T1553_006.preventedBy.append(M1024)
T1037.preventedBy.append(M1024)
T1574.preventedBy.append(M1024)
T1562.preventedBy.append(M1024)
T1556.preventedBy.append(M1024)
T1112.preventedBy.append(M1024)
T1505.preventedBy.append(M1024)
T1489.preventedBy.append(M1024)
T1553.preventedBy.append(M1024)
T1547_002.preventedBy.append(M1025)
T1547_005.preventedBy.append(M1025)
T1547_008.preventedBy.append(M1025)
T1556_001.preventedBy.append(M1025)
T1003_001.preventedBy.append(M1025)
T1556.preventedBy.append(M1025)
T1003.preventedBy.append(M1025)
T1548_002.preventedBy.append(M1026)
T1548_003.preventedBy.append(M1026)
T1134_001.preventedBy.append(M1026)
T1134_002.preventedBy.append(M1026)
T1134_003.preventedBy.append(M1026)
T1098_001.preventedBy.append(M1026)
T1098_002.preventedBy.append(M1026)
T1098_003.preventedBy.append(M1026)
T1547_006.preventedBy.append(M1026)
T1059_001.preventedBy.append(M1026)
T1059_008.preventedBy.append(M1026)
T1059_009.preventedBy.append(M1026)
T1136_001.preventedBy.append(M1026)
T1136_002.preventedBy.append(M1026)
T1136_003.preventedBy.append(M1026)
T1543_002.preventedBy.append(M1026)
T1484_002.preventedBy.append(M1026)
T1546_003.preventedBy.append(M1026)
T1222_001.preventedBy.append(M1026)
T1222_002.preventedBy.append(M1026)
T1606_002.preventedBy.append(M1026)
T1562_009.preventedBy.append(M1026)
T1056_003.preventedBy.append(M1026)
T1559_001.preventedBy.append(M1026)
T1556_001.preventedBy.append(M1026)
T1556_003.preventedBy.append(M1026)
T1556_004.preventedBy.append(M1026)
T1556_005.preventedBy.append(M1026)
T1556_007.preventedBy.append(M1026)
T1601_001.preventedBy.append(M1026)
T1601_002.preventedBy.append(M1026)
T1599_001.preventedBy.append(M1026)
T1003_001.preventedBy.append(M1026)
T1003_002.preventedBy.append(M1026)
T1003_003.preventedBy.append(M1026)
T1003_004.preventedBy.append(M1026)
T1003_005.preventedBy.append(M1026)
T1003_006.preventedBy.append(M1026)
T1003_007.preventedBy.append(M1026)
T1003_008.preventedBy.append(M1026)
T1542_001.preventedBy.append(M1026)
T1542_003.preventedBy.append(M1026)
T1542_005.preventedBy.append(M1026)
T1055_008.preventedBy.append(M1026)
T1563_001.preventedBy.append(M1026)
T1563_002.preventedBy.append(M1026)
T1021_001.preventedBy.append(M1026)
T1021_002.preventedBy.append(M1026)
T1021_003.preventedBy.append(M1026)
T1021_006.preventedBy.append(M1026)
T1021_007.preventedBy.append(M1026)
T1053_002.preventedBy.append(M1026)
T1053_005.preventedBy.append(M1026)
T1053_006.preventedBy.append(M1026)
T1053_007.preventedBy.append(M1026)
T1505_001.preventedBy.append(M1026)
T1505_002.preventedBy.append(M1026)
T1505_004.preventedBy.append(M1026)
T1558_001.preventedBy.append(M1026)
T1558_002.preventedBy.append(M1026)
T1558_003.preventedBy.append(M1026)
T1553_006.preventedBy.append(M1026)
T1218_007.preventedBy.append(M1026)
T1569_002.preventedBy.append(M1026)
T1552_002.preventedBy.append(M1026)
T1552_007.preventedBy.append(M1026)
T1550_002.preventedBy.append(M1026)
T1550_003.preventedBy.append(M1026)
T1078_002.preventedBy.append(M1026)
T1078_003.preventedBy.append(M1026)
T1078_004.preventedBy.append(M1026)
T1548.preventedBy.append(M1026)
T1134.preventedBy.append(M1026)
T1098.preventedBy.append(M1026)
T1612.preventedBy.append(M1026)
T1651.preventedBy.append(M1026)
T1059.preventedBy.append(M1026)
T1609.preventedBy.append(M1026)
T1136.preventedBy.append(M1026)
T1555.preventedBy.append(M1026)
T1484.preventedBy.append(M1026)
T1611.preventedBy.append(M1026)
T1190.preventedBy.append(M1026)
T1210.preventedBy.append(M1026)
T1222.preventedBy.append(M1026)
T1495.preventedBy.append(M1026)
T1606.preventedBy.append(M1026)
T1525.preventedBy.append(M1026)
T1559.preventedBy.append(M1026)
T1556.preventedBy.append(M1026)
T1601.preventedBy.append(M1026)
T1599.preventedBy.append(M1026)
T1003.preventedBy.append(M1026)
T1542.preventedBy.append(M1026)
T1055.preventedBy.append(M1026)
T1563.preventedBy.append(M1026)
T1053.preventedBy.append(M1026)
T1505.preventedBy.append(M1026)
T1072.preventedBy.append(M1026)
T1558.preventedBy.append(M1026)
T1218.preventedBy.append(M1026)
T1569.preventedBy.append(M1026)
T1552.preventedBy.append(M1026)
T1550.preventedBy.append(M1026)
T1078.preventedBy.append(M1026)
T1047.preventedBy.append(M1026)
T1110_001.preventedBy.append(M1027)
T1110_002.preventedBy.append(M1027)
T1110_003.preventedBy.append(M1027)
T1110_004.preventedBy.append(M1027)
T1555_001.preventedBy.append(M1027)
T1555_003.preventedBy.append(M1027)
T1555_005.preventedBy.append(M1027)
T1556_005.preventedBy.append(M1027)
T1601_001.preventedBy.append(M1027)
T1601_002.preventedBy.append(M1027)
T1599_001.preventedBy.append(M1027)
T1003_001.preventedBy.append(M1027)
T1003_002.preventedBy.append(M1027)
T1003_003.preventedBy.append(M1027)
T1003_004.preventedBy.append(M1027)
T1003_005.preventedBy.append(M1027)
T1003_006.preventedBy.append(M1027)
T1003_007.preventedBy.append(M1027)
T1003_008.preventedBy.append(M1027)
T1563_001.preventedBy.append(M1027)
T1021_002.preventedBy.append(M1027)
T1558_002.preventedBy.append(M1027)
T1558_003.preventedBy.append(M1027)
T1558_004.preventedBy.append(M1027)
T1552_001.preventedBy.append(M1027)
T1552_002.preventedBy.append(M1027)
T1552_004.preventedBy.append(M1027)
T1550_003.preventedBy.append(M1027)
T1078_001.preventedBy.append(M1027)
T1078_003.preventedBy.append(M1027)
T1078_004.preventedBy.append(M1027)
T1110.preventedBy.append(M1027)
T1555.preventedBy.append(M1027)
T1187.preventedBy.append(M1027)
T1556.preventedBy.append(M1027)
T1601.preventedBy.append(M1027)
T1599.preventedBy.append(M1027)
T1003.preventedBy.append(M1027)
T1201.preventedBy.append(M1027)
T1072.preventedBy.append(M1027)
T1558.preventedBy.append(M1027)
T1537.preventedBy.append(M1027)
T1552.preventedBy.append(M1027)
T1078.preventedBy.append(M1027)
T1548_001.preventedBy.append(M1028)
T1548_003.preventedBy.append(M1028)
T1087_001.preventedBy.append(M1028)
T1087_002.preventedBy.append(M1028)
T1136_002.preventedBy.append(M1028)
T1543_003.preventedBy.append(M1028)
T1546_008.preventedBy.append(M1028)
T1011_001.preventedBy.append(M1028)
T1564_002.preventedBy.append(M1028)
T1574_006.preventedBy.append(M1028)
T1562_003.preventedBy.append(M1028)
T1036_007.preventedBy.append(M1028)
T1556_002.preventedBy.append(M1028)
T1556_008.preventedBy.append(M1028)
T1003_001.preventedBy.append(M1028)
T1003_002.preventedBy.append(M1028)
T1003_005.preventedBy.append(M1028)
T1542_005.preventedBy.append(M1028)
T1563_002.preventedBy.append(M1028)
T1021_001.preventedBy.append(M1028)
T1053_002.preventedBy.append(M1028)
T1053_005.preventedBy.append(M1028)
T1553_004.preventedBy.append(M1028)
T1552_003.preventedBy.append(M1028)
T1548.preventedBy.append(M1028)
T1087.preventedBy.append(M1028)
T1098.preventedBy.append(M1028)
T1197.preventedBy.append(M1028)
T1092.preventedBy.append(M1028)
T1136.preventedBy.append(M1028)
T1543.preventedBy.append(M1028)
T1011.preventedBy.append(M1028)
T1490.preventedBy.append(M1028)
T1556.preventedBy.append(M1028)
T1135.preventedBy.append(M1028)
T1003.preventedBy.append(M1028)
T1053.preventedBy.append(M1028)
T1553.preventedBy.append(M1028)
T1552.preventedBy.append(M1028)
T1565_001.preventedBy.append(M1029)
T1070_001.preventedBy.append(M1029)
T1070_002.preventedBy.append(M1029)
T1070_003.preventedBy.append(M1029)
T1070_007.preventedBy.append(M1029)
T1070_008.preventedBy.append(M1029)
T1070_009.preventedBy.append(M1029)
T1119.preventedBy.append(M1029)
T1565.preventedBy.append(M1029)
T1070.preventedBy.append(M1029)
T1072.preventedBy.append(M1029)
T1098_001.preventedBy.append(M1030)
T1557_001.preventedBy.append(M1030)
T1136_002.preventedBy.append(M1030)
T1136_003.preventedBy.append(M1030)
T1602_001.preventedBy.append(M1030)
T1602_002.preventedBy.append(M1030)
T1565_003.preventedBy.append(M1030)
T1048_001.preventedBy.append(M1030)
T1048_002.preventedBy.append(M1030)
T1048_003.preventedBy.append(M1030)
T1563_002.preventedBy.append(M1030)
T1021_001.preventedBy.append(M1030)
T1021_003.preventedBy.append(M1030)
T1021_006.preventedBy.append(M1030)
T1552_007.preventedBy.append(M1030)
T1098.preventedBy.append(M1030)
T1557.preventedBy.append(M1030)
T1612.preventedBy.append(M1030)
T1613.preventedBy.append(M1030)
T1136.preventedBy.append(M1030)
T1602.preventedBy.append(M1030)
T1565.preventedBy.append(M1030)
T1610.preventedBy.append(M1030)
T1482.preventedBy.append(M1030)
T1048.preventedBy.append(M1030)
T1190.preventedBy.append(M1030)
T1210.preventedBy.append(M1030)
T1133.preventedBy.append(M1030)
T1046.preventedBy.append(M1030)
T1040.preventedBy.append(M1030)
T1095.preventedBy.append(M1030)
T1571.preventedBy.append(M1030)
T1563.preventedBy.append(M1030)
T1489.preventedBy.append(M1030)
T1072.preventedBy.append(M1030)
T1199.preventedBy.append(M1030)
T1557_001.preventedBy.append(M1031)
T1557_002.preventedBy.append(M1031)
T1557_003.preventedBy.append(M1031)
T1071_001.preventedBy.append(M1031)
T1071_002.preventedBy.append(M1031)
T1071_003.preventedBy.append(M1031)
T1071_004.preventedBy.append(M1031)
T1132_001.preventedBy.append(M1031)
T1132_002.preventedBy.append(M1031)
T1602_001.preventedBy.append(M1031)
T1602_002.preventedBy.append(M1031)
T1001_001.preventedBy.append(M1031)
T1001_002.preventedBy.append(M1031)
T1001_003.preventedBy.append(M1031)
T1568_002.preventedBy.append(M1031)
T1573_001.preventedBy.append(M1031)
T1573_002.preventedBy.append(M1031)
T1048_001.preventedBy.append(M1031)
T1048_002.preventedBy.append(M1031)
T1048_003.preventedBy.append(M1031)
T1566_001.preventedBy.append(M1031)
T1542_004.preventedBy.append(M1031)
T1542_005.preventedBy.append(M1031)
T1090_001.preventedBy.append(M1031)
T1090_002.preventedBy.append(M1031)
T1204_001.preventedBy.append(M1031)
T1204_003.preventedBy.append(M1031)
T1102_001.preventedBy.append(M1031)
T1102_002.preventedBy.append(M1031)
T1102_003.preventedBy.append(M1031)
T1557.preventedBy.append(M1031)
T1071.preventedBy.append(M1031)
T1132.preventedBy.append(M1031)
T1602.preventedBy.append(M1031)
T1001.preventedBy.append(M1031)
T1030.preventedBy.append(M1031)
T1568.preventedBy.append(M1031)
T1573.preventedBy.append(M1031)
T1048.preventedBy.append(M1031)
T1041.preventedBy.append(M1031)
T1008.preventedBy.append(M1031)
T1105.preventedBy.append(M1031)
T1570.preventedBy.append(M1031)
T1104.preventedBy.append(M1031)
T1046.preventedBy.append(M1031)
T1095.preventedBy.append(M1031)
T1571.preventedBy.append(M1031)
T1566.preventedBy.append(M1031)
T1572.preventedBy.append(M1031)
T1090.preventedBy.append(M1031)
T1219.preventedBy.append(M1031)
T1029.preventedBy.append(M1031)
T1221.preventedBy.append(M1031)
T1204.preventedBy.append(M1031)
T1102.preventedBy.append(M1031)
T1098_001.preventedBy.append(M1032)
T1098_002.preventedBy.append(M1032)
T1098_003.preventedBy.append(M1032)
T1098_005.preventedBy.append(M1032)
T1110_001.preventedBy.append(M1032)
T1110_002.preventedBy.append(M1032)
T1110_003.preventedBy.append(M1032)
T1110_004.preventedBy.append(M1032)
T1136_001.preventedBy.append(M1032)
T1136_002.preventedBy.append(M1032)
T1136_003.preventedBy.append(M1032)
T1213_003.preventedBy.append(M1032)
T1114_002.preventedBy.append(M1032)
T1556_001.preventedBy.append(M1032)
T1556_003.preventedBy.append(M1032)
T1556_004.preventedBy.append(M1032)
T1556_006.preventedBy.append(M1032)
T1556_007.preventedBy.append(M1032)
T1601_001.preventedBy.append(M1032)
T1601_002.preventedBy.append(M1032)
T1599_001.preventedBy.append(M1032)
T1021_001.preventedBy.append(M1032)
T1021_004.preventedBy.append(M1032)
T1021_007.preventedBy.append(M1032)
T1078_002.preventedBy.append(M1032)
T1078_004.preventedBy.append(M1032)
T1098.preventedBy.append(M1032)
T1110.preventedBy.append(M1032)
T1136.preventedBy.append(M1032)
T1530.preventedBy.append(M1032)
T1114.preventedBy.append(M1032)
T1133.preventedBy.append(M1032)
T1556.preventedBy.append(M1032)
T1601.preventedBy.append(M1032)
T1621.preventedBy.append(M1032)
T1599.preventedBy.append(M1032)
T1040.preventedBy.append(M1032)
T1021.preventedBy.append(M1032)
T1072.preventedBy.append(M1032)
T1539.preventedBy.append(M1032)
T1199.preventedBy.append(M1032)
T1547_013.preventedBy.append(M1033)
T1059_006.preventedBy.append(M1033)
T1543_002.preventedBy.append(M1033)
T1021_005.preventedBy.append(M1033)
T1176.preventedBy.append(M1033)
T1543.preventedBy.append(M1033)
T1072.preventedBy.append(M1033)
T1052_001.preventedBy.append(M1034)
T1052.preventedBy.append(M1034)
T1200.preventedBy.append(M1034)
T1091.preventedBy.append(M1034)
T1557_002.preventedBy.append(M1035)
T1546_008.preventedBy.append(M1035)
T1542_005.preventedBy.append(M1035)
T1563_002.preventedBy.append(M1035)
T1021_001.preventedBy.append(M1035)
T1021_002.preventedBy.append(M1035)
T1552_005.preventedBy.append(M1035)
T1552_007.preventedBy.append(M1035)
T1557.preventedBy.append(M1035)
T1612.preventedBy.append(M1035)
T1609.preventedBy.append(M1035)
T1613.preventedBy.append(M1035)
T1610.preventedBy.append(M1035)
T1133.preventedBy.append(M1035)
T1200.preventedBy.append(M1035)
T1552.preventedBy.append(M1035)
T1110.preventedBy.append(M1036)
T1621.preventedBy.append(M1036)
T1078.preventedBy.append(M1036)
T1110_001.preventedBy.append(M1036)
T1110_003.preventedBy.append(M1036)
T1110_004.preventedBy.append(M1036)
T1078_004.preventedBy.append(M1036)
T1557_001.preventedBy.append(M1037)
T1557_002.preventedBy.append(M1037)
T1557_003.preventedBy.append(M1037)
T1071_004.preventedBy.append(M1037)
T1602_001.preventedBy.append(M1037)
T1602_002.preventedBy.append(M1037)
T1499_001.preventedBy.append(M1037)
T1499_002.preventedBy.append(M1037)
T1499_003.preventedBy.append(M1037)
T1499_004.preventedBy.append(M1037)
T1048_001.preventedBy.append(M1037)
T1048_002.preventedBy.append(M1037)
T1048_003.preventedBy.append(M1037)
T1599_001.preventedBy.append(M1037)
T1498_001.preventedBy.append(M1037)
T1498_002.preventedBy.append(M1037)
T1090_003.preventedBy.append(M1037)
T1021_002.preventedBy.append(M1037)
T1021_005.preventedBy.append(M1037)
T1218_012.preventedBy.append(M1037)
T1205_001.preventedBy.append(M1037)
T1205_002.preventedBy.append(M1037)
T1552_005.preventedBy.append(M1037)
T1557.preventedBy.append(M1037)
T1197.preventedBy.append(M1037)
T1530.preventedBy.append(M1037)
T1602.preventedBy.append(M1037)
T1499.preventedBy.append(M1037)
T1048.preventedBy.append(M1037)
T1187.preventedBy.append(M1037)
T1570.preventedBy.append(M1037)
T1599.preventedBy.append(M1037)
T1498.preventedBy.append(M1037)
T1095.preventedBy.append(M1037)
T1572.preventedBy.append(M1037)
T1090.preventedBy.append(M1037)
T1219.preventedBy.append(M1037)
T1205.preventedBy.append(M1037)
T1537.preventedBy.append(M1037)
T1552.preventedBy.append(M1037)
T1548_004.preventedBy.append(M1038)
T1547_004.preventedBy.append(M1038)
T1547_006.preventedBy.append(M1038)
T1059_001.preventedBy.append(M1038)
T1059_002.preventedBy.append(M1038)
T1059_003.preventedBy.append(M1038)
T1059_004.preventedBy.append(M1038)
T1059_005.preventedBy.append(M1038)
T1059_006.preventedBy.append(M1038)
T1059_007.preventedBy.append(M1038)
T1059_008.preventedBy.append(M1038)
T1059_009.preventedBy.append(M1038)
T1546_002.preventedBy.append(M1038)
T1546_006.preventedBy.append(M1038)
T1546_008.preventedBy.append(M1038)
T1546_009.preventedBy.append(M1038)
T1546_010.preventedBy.append(M1038)
T1564_003.preventedBy.append(M1038)
T1564_006.preventedBy.append(M1038)
T1574_001.preventedBy.append(M1038)
T1574_006.preventedBy.append(M1038)
T1574_007.preventedBy.append(M1038)
T1574_008.preventedBy.append(M1038)
T1574_009.preventedBy.append(M1038)
T1574_012.preventedBy.append(M1038)
T1562_001.preventedBy.append(M1038)
T1562_011.preventedBy.append(M1038)
T1036_005.preventedBy.append(M1038)
T1036_008.preventedBy.append(M1038)
T1505_004.preventedBy.append(M1038)
T1553_001.preventedBy.append(M1038)
T1553_003.preventedBy.append(M1038)
T1553_005.preventedBy.append(M1038)
T1218_001.preventedBy.append(M1038)
T1218_002.preventedBy.append(M1038)
T1218_003.preventedBy.append(M1038)
T1218_004.preventedBy.append(M1038)
T1218_005.preventedBy.append(M1038)
T1218_008.preventedBy.append(M1038)
T1218_009.preventedBy.append(M1038)
T1218_012.preventedBy.append(M1038)
T1218_013.preventedBy.append(M1038)
T1218_014.preventedBy.append(M1038)
T1216_001.preventedBy.append(M1038)
T1127_001.preventedBy.append(M1038)
T1204_002.preventedBy.append(M1038)
T1548.preventedBy.append(M1038)
T1176.preventedBy.append(M1038)
T1059.preventedBy.append(M1038)
T1609.preventedBy.append(M1038)
T1611.preventedBy.append(M1038)
T1068.preventedBy.append(M1038)
T1574.preventedBy.append(M1038)
T1562.preventedBy.append(M1038)
T1036.preventedBy.append(M1038)
T1106.preventedBy.append(M1038)
T1219.preventedBy.append(M1038)
T1129.preventedBy.append(M1038)
T1553.preventedBy.append(M1038)
T1218.preventedBy.append(M1038)
T1216.preventedBy.append(M1038)
T1080.preventedBy.append(M1038)
T1127.preventedBy.append(M1038)
T1204.preventedBy.append(M1038)
T1047.preventedBy.append(M1038)
T1220.preventedBy.append(M1038)
T1562_003.preventedBy.append(M1039)
T1070_003.preventedBy.append(M1039)
T1059_005.preventedBy.append(M1040)
T1059_007.preventedBy.append(M1040)
T1543_003.preventedBy.append(M1040)
T1546_003.preventedBy.append(M1040)
T1574_013.preventedBy.append(M1040)
T1559_002.preventedBy.append(M1040)
T1036_008.preventedBy.append(M1040)
T1027_009.preventedBy.append(M1040)
T1027_010.preventedBy.append(M1040)
T1137_001.preventedBy.append(M1040)
T1137_002.preventedBy.append(M1040)
T1137_003.preventedBy.append(M1040)
T1137_004.preventedBy.append(M1040)
T1137_005.preventedBy.append(M1040)
T1137_006.preventedBy.append(M1040)
T1003_001.preventedBy.append(M1040)
T1055_001.preventedBy.append(M1040)
T1055_002.preventedBy.append(M1040)
T1055_003.preventedBy.append(M1040)
T1055_004.preventedBy.append(M1040)
T1055_005.preventedBy.append(M1040)
T1055_008.preventedBy.append(M1040)
T1055_009.preventedBy.append(M1040)
T1055_011.preventedBy.append(M1040)
T1055_012.preventedBy.append(M1040)
T1055_013.preventedBy.append(M1040)
T1055_014.preventedBy.append(M1040)
T1055_015.preventedBy.append(M1040)
T1216_001.preventedBy.append(M1040)
T1569_002.preventedBy.append(M1040)
T1204_002.preventedBy.append(M1040)
T1059.preventedBy.append(M1040)
T1543.preventedBy.append(M1040)
T1486.preventedBy.append(M1040)
T1006.preventedBy.append(M1040)
T1574.preventedBy.append(M1040)
T1559.preventedBy.append(M1040)
T1036.preventedBy.append(M1040)
T1106.preventedBy.append(M1040)
T1027.preventedBy.append(M1040)
T1137.preventedBy.append(M1040)
T1003.preventedBy.append(M1040)
T1055.preventedBy.append(M1040)
T1091.preventedBy.append(M1040)
T1569.preventedBy.append(M1040)
T1204.preventedBy.append(M1040)
T1047.preventedBy.append(M1040)
T1557_002.preventedBy.append(M1041)
T1020_001.preventedBy.append(M1041)
T1602_001.preventedBy.append(M1041)
T1602_002.preventedBy.append(M1041)
T1565_001.preventedBy.append(M1041)
T1565_002.preventedBy.append(M1041)
T1114_001.preventedBy.append(M1041)
T1114_002.preventedBy.append(M1041)
T1114_003.preventedBy.append(M1041)
T1070_001.preventedBy.append(M1041)
T1070_002.preventedBy.append(M1041)
T1003_003.preventedBy.append(M1041)
T1558_002.preventedBy.append(M1041)
T1558_003.preventedBy.append(M1041)
T1558_004.preventedBy.append(M1041)
T1552_004.preventedBy.append(M1041)
T1550_001.preventedBy.append(M1041)
T1557.preventedBy.append(M1041)
T1119.preventedBy.append(M1041)
T1530.preventedBy.append(M1041)
T1602.preventedBy.append(M1041)
T1565.preventedBy.append(M1041)
T1114.preventedBy.append(M1041)
T1070.preventedBy.append(M1041)
T1040.preventedBy.append(M1041)
T1003.preventedBy.append(M1041)
T1649.preventedBy.append(M1041)
T1558.preventedBy.append(M1041)
T1552.preventedBy.append(M1041)
T1098_002.preventedBy.append(M1042)
T1098_004.preventedBy.append(M1042)
T1595_003.preventedBy.append(M1042)
T1557_001.preventedBy.append(M1042)
T1557_002.preventedBy.append(M1042)
T1547_007.preventedBy.append(M1042)
T1059_001.preventedBy.append(M1042)
T1059_005.preventedBy.append(M1042)
T1059_007.preventedBy.append(M1042)
T1555_004.preventedBy.append(M1042)
T1114_003.preventedBy.append(M1042)
T1546_002.preventedBy.append(M1042)
T1546_014.preventedBy.append(M1042)
T1011_001.preventedBy.append(M1042)
T1052_001.preventedBy.append(M1042)
T1564_006.preventedBy.append(M1042)
T1564_007.preventedBy.append(M1042)
T1562_010.preventedBy.append(M1042)
T1559_002.preventedBy.append(M1042)
T1137_001.preventedBy.append(M1042)
T1563_001.preventedBy.append(M1042)
T1563_002.preventedBy.append(M1042)
T1021_001.preventedBy.append(M1042)
T1021_003.preventedBy.append(M1042)
T1021_004.preventedBy.append(M1042)
T1021_005.preventedBy.append(M1042)
T1021_006.preventedBy.append(M1042)
T1505_003.preventedBy.append(M1042)
T1553_005.preventedBy.append(M1042)
T1218_003.preventedBy.append(M1042)
T1218_004.preventedBy.append(M1042)
T1218_005.preventedBy.append(M1042)
T1218_007.preventedBy.append(M1042)
T1218_008.preventedBy.append(M1042)
T1218_009.preventedBy.append(M1042)
T1218_012.preventedBy.append(M1042)
T1218_013.preventedBy.append(M1042)
T1218_014.preventedBy.append(M1042)
T1127_001.preventedBy.append(M1042)
T1552_005.preventedBy.append(M1042)
T1557.preventedBy.append(M1042)
T1059.preventedBy.append(M1042)
T1092.preventedBy.append(M1042)
T1609.preventedBy.append(M1042)
T1611.preventedBy.append(M1042)
T1011.preventedBy.append(M1042)
T1052.preventedBy.append(M1042)
T1210.preventedBy.append(M1042)
T1133.preventedBy.append(M1042)
T1559.preventedBy.append(M1042)
T1046.preventedBy.append(M1042)
T1137.preventedBy.append(M1042)
T1563.preventedBy.append(M1042)
T1021.preventedBy.append(M1042)
T1091.preventedBy.append(M1042)
T1505.preventedBy.append(M1042)
T1649.preventedBy.append(M1042)
T1218.preventedBy.append(M1042)
T1221.preventedBy.append(M1042)
T1205.preventedBy.append(M1042)
T1127.preventedBy.append(M1042)
T1547_008.preventedBy.append(M1043)
T1601_001.preventedBy.append(M1043)
T1601_002.preventedBy.append(M1043)
T1599_001.preventedBy.append(M1043)
T1003_001.preventedBy.append(M1043)
T1601.preventedBy.append(M1043)
T1599.preventedBy.append(M1043)
T1003.preventedBy.append(M1043)
T1547_008.preventedBy.append(M1044)
T1574_001.preventedBy.append(M1044)
T1574.preventedBy.append(M1044)
T1059_001.preventedBy.append(M1045)
T1059_002.preventedBy.append(M1045)
T1543_003.preventedBy.append(M1045)
T1546_006.preventedBy.append(M1045)
T1546_013.preventedBy.append(M1045)
T1036_001.preventedBy.append(M1045)
T1036_005.preventedBy.append(M1045)
T1601_001.preventedBy.append(M1045)
T1601_002.preventedBy.append(M1045)
T1505_001.preventedBy.append(M1045)
T1505_002.preventedBy.append(M1045)
T1505_004.preventedBy.append(M1045)
T1204_003.preventedBy.append(M1045)
T1059.preventedBy.append(M1045)
T1554.preventedBy.append(M1045)
T1543.preventedBy.append(M1045)
T1525.preventedBy.append(M1045)
T1036.preventedBy.append(M1045)
T1601.preventedBy.append(M1045)
T1505.preventedBy.append(M1045)
T1601_001.preventedBy.append(M1046)
T1601_002.preventedBy.append(M1046)
T1542_001.preventedBy.append(M1046)
T1542_003.preventedBy.append(M1046)
T1542_004.preventedBy.append(M1046)
T1542_005.preventedBy.append(M1046)
T1553_006.preventedBy.append(M1046)
T1195_003.preventedBy.append(M1046)
T1495.preventedBy.append(M1046)
T1601.preventedBy.append(M1046)
T1542.preventedBy.append(M1046)
T1548_002.preventedBy.append(M1047)
T1087_004.preventedBy.append(M1047)
T1560_001.preventedBy.append(M1047)
T1059_006.preventedBy.append(M1047)
T1543_003.preventedBy.append(M1047)
T1543_004.preventedBy.append(M1047)
T1213_001.preventedBy.append(M1047)
T1213_002.preventedBy.append(M1047)
T1213_003.preventedBy.append(M1047)
T1484_001.preventedBy.append(M1047)
T1114_003.preventedBy.append(M1047)
T1546_006.preventedBy.append(M1047)
T1606_001.preventedBy.append(M1047)
T1606_002.preventedBy.append(M1047)
T1564_008.preventedBy.append(M1047)
T1574_001.preventedBy.append(M1047)
T1574_005.preventedBy.append(M1047)
T1574_007.preventedBy.append(M1047)
T1574_008.preventedBy.append(M1047)
T1574_009.preventedBy.append(M1047)
T1574_010.preventedBy.append(M1047)
T1562_002.preventedBy.append(M1047)
T1562_004.preventedBy.append(M1047)
T1562_007.preventedBy.append(M1047)
T1070_008.preventedBy.append(M1047)
T1556_006.preventedBy.append(M1047)
T1556_007.preventedBy.append(M1047)
T1556_008.preventedBy.append(M1047)
T1578_001.preventedBy.append(M1047)
T1578_002.preventedBy.append(M1047)
T1578_003.preventedBy.append(M1047)
T1027_011.preventedBy.append(M1047)
T1566_002.preventedBy.append(M1047)
T1542_004.preventedBy.append(M1047)
T1542_005.preventedBy.append(M1047)
T1563_002.preventedBy.append(M1047)
T1021_001.preventedBy.append(M1047)
T1021_005.preventedBy.append(M1047)
T1053_002.preventedBy.append(M1047)
T1053_003.preventedBy.append(M1047)
T1053_005.preventedBy.append(M1047)
T1593_003.preventedBy.append(M1047)
T1505_001.preventedBy.append(M1047)
T1505_002.preventedBy.append(M1047)
T1505_004.preventedBy.append(M1047)
T1505_005.preventedBy.append(M1047)
T1558_004.preventedBy.append(M1047)
T1552_001.preventedBy.append(M1047)
T1552_002.preventedBy.append(M1047)
T1552_004.preventedBy.append(M1047)
T1552_006.preventedBy.append(M1047)
T1552_008.preventedBy.append(M1047)
T1550_001.preventedBy.append(M1047)
T1204_003.preventedBy.append(M1047)
T1548.preventedBy.append(M1047)
T1560.preventedBy.append(M1047)
T1176.preventedBy.append(M1047)
T1612.preventedBy.append(M1047)
T1543.preventedBy.append(M1047)
T1530.preventedBy.append(M1047)
T1213.preventedBy.append(M1047)
T1610.preventedBy.append(M1047)
T1484.preventedBy.append(M1047)
T1482.preventedBy.append(M1047)
T1114.preventedBy.append(M1047)
T1606.preventedBy.append(M1047)
T1574.preventedBy.append(M1047)
T1562.preventedBy.append(M1047)
T1525.preventedBy.append(M1047)
T1556.preventedBy.append(M1047)
T1578.preventedBy.append(M1047)
T1027.preventedBy.append(M1047)
T1053.preventedBy.append(M1047)
T1593.preventedBy.append(M1047)
T1505.preventedBy.append(M1047)
T1528.preventedBy.append(M1047)
T1649.preventedBy.append(M1047)
T1552.preventedBy.append(M1047)
T1559_001.preventedBy.append(M1048)
T1559_002.preventedBy.append(M1048)
T1027_006.preventedBy.append(M1048)
T1021_003.preventedBy.append(M1048)
T1189.preventedBy.append(M1048)
T1611.preventedBy.append(M1048)
T1190.preventedBy.append(M1048)
T1203.preventedBy.append(M1048)
T1212.preventedBy.append(M1048)
T1211.preventedBy.append(M1048)
T1068.preventedBy.append(M1048)
T1210.preventedBy.append(M1048)
T1559.preventedBy.append(M1048)
T1547_006.preventedBy.append(M1049)
T1059_001.preventedBy.append(M1049)
T1059_005.preventedBy.append(M1049)
T1059_006.preventedBy.append(M1049)
T1036_008.preventedBy.append(M1049)
T1027_002.preventedBy.append(M1049)
T1027_009.preventedBy.append(M1049)
T1027_010.preventedBy.append(M1049)
T1566_001.preventedBy.append(M1049)
T1566_003.preventedBy.append(M1049)
T1059.preventedBy.append(M1049)
T1036.preventedBy.append(M1049)
T1027.preventedBy.append(M1049)
T1566.preventedBy.append(M1049)
T1080.preventedBy.append(M1049)
T1221.preventedBy.append(M1049)
T1218_010.preventedBy.append(M1050)
T1218_011.preventedBy.append(M1050)
T1189.preventedBy.append(M1050)
T1190.preventedBy.append(M1050)
T1203.preventedBy.append(M1050)
T1212.preventedBy.append(M1050)
T1211.preventedBy.append(M1050)
T1068.preventedBy.append(M1050)
T1210.preventedBy.append(M1050)
T1218.preventedBy.append(M1050)
T1080.preventedBy.append(M1050)
T1548_002.preventedBy.append(M1051)
T1110_001.preventedBy.append(M1051)
T1555_005.preventedBy.append(M1051)
T1602_001.preventedBy.append(M1051)
T1602_002.preventedBy.append(M1051)
T1546_010.preventedBy.append(M1051)
T1546_011.preventedBy.append(M1051)
T1574_002.preventedBy.append(M1051)
T1137_003.preventedBy.append(M1051)
T1137_004.preventedBy.append(M1051)
T1137_005.preventedBy.append(M1051)
T1542_001.preventedBy.append(M1051)
T1542_002.preventedBy.append(M1051)
T1195_001.preventedBy.append(M1051)
T1195_002.preventedBy.append(M1051)
T1552_006.preventedBy.append(M1051)
T1550_002.preventedBy.append(M1051)
T1176.preventedBy.append(M1051)
T1602.preventedBy.append(M1051)
T1189.preventedBy.append(M1051)
T1190.preventedBy.append(M1051)
T1212.preventedBy.append(M1051)
T1211.preventedBy.append(M1051)
T1068.preventedBy.append(M1051)
T1210.preventedBy.append(M1051)
T1495.preventedBy.append(M1051)
T1574.preventedBy.append(M1051)
T1137.preventedBy.append(M1051)
T1542.preventedBy.append(M1051)
T1072.preventedBy.append(M1051)
T1195.preventedBy.append(M1051)
T1552.preventedBy.append(M1051)
T1548_002.preventedBy.append(M1052)
T1546_011.preventedBy.append(M1052)
T1574_005.preventedBy.append(M1052)
T1548_005.preventedBy.append(M1018)
T1098_006.preventedBy.append(M1032)
T1098_006.preventedBy.append(M1018)
T1659.preventedBy.append(M1041)
T1659.preventedBy.append(M1021)
T1555_006.preventedBy.append(M1026)
T1567_004.preventedBy.append(M1057)
T1657.preventedBy.append(M1018)
T1657.preventedBy.append(M1017)
T1562_012.preventedBy.append(M1047)
T1562_012.preventedBy.append(M1018)
T1656.preventedBy.append(M1019)
T1656.preventedBy.append(M1017)
T1654.preventedBy.append(M1018)
T1578_005.preventedBy.append(M1047)
T1578_005.preventedBy.append(M1018)
T1027_012.preventedBy.append(M1049)
T1027_012.preventedBy.append(M1040)
T1566_004.preventedBy.append(M1017)
T1598_004.preventedBy.append(M1017)
T1653.preventedBy.append(M1047)
T1021_008.preventedBy.append(M1042)
T1021_008.preventedBy.append(M1018)
T1574_010.preventedBy.append(M1052)
T1550_002.preventedBy.append(M1052)
T1548.preventedBy.append(M1052)
T1574.preventedBy.append(M1052)
T1491_001.preventedBy.append(M1053)
T1491_002.preventedBy.append(M1053)
T1561_001.preventedBy.append(M1053)
T1561_002.preventedBy.append(M1053)
T1485.preventedBy.append(M1053)
T1486.preventedBy.append(M1053)
T1491.preventedBy.append(M1053)
T1561.preventedBy.append(M1053)
T1490.preventedBy.append(M1053)
T1555_005.preventedBy.append(M1054)
T1602_001.preventedBy.append(M1054)
T1602_002.preventedBy.append(M1054)
T1546_013.preventedBy.append(M1054)
T1606_001.preventedBy.append(M1054)
T1562_006.preventedBy.append(M1054)
T1562_009.preventedBy.append(M1054)
T1562_010.preventedBy.append(M1054)
T1559_002.preventedBy.append(M1054)
T1137_002.preventedBy.append(M1054)
T1566_001.preventedBy.append(M1054)
T1566_002.preventedBy.append(M1054)
T1598_002.preventedBy.append(M1054)
T1598_003.preventedBy.append(M1054)
T1553_004.preventedBy.append(M1054)
T1550_004.preventedBy.append(M1054)
T1602.preventedBy.append(M1054)
T1606.preventedBy.append(M1054)
T1562.preventedBy.append(M1054)
T1559.preventedBy.append(M1054)
T1137.preventedBy.append(M1054)
T1566.preventedBy.append(M1054)
T1598.preventedBy.append(M1054)
T1539.preventedBy.append(M1054)
T1553.preventedBy.append(M1054)
T1535.preventedBy.append(M1054)
T1480_001.preventedBy.append(M1055)
T1480.preventedBy.append(M1055)
T1583_001.preventedBy.append(M1056)
T1583_002.preventedBy.append(M1056)
T1583_003.preventedBy.append(M1056)
T1583_004.preventedBy.append(M1056)
T1583_005.preventedBy.append(M1056)
T1583_006.preventedBy.append(M1056)
T1583_007.preventedBy.append(M1056)
T1583_008.preventedBy.append(M1056)
T1595_001.preventedBy.append(M1056)
T1595_002.preventedBy.append(M1056)
T1595_003.preventedBy.append(M1056)
T1586_001.preventedBy.append(M1056)
T1586_002.preventedBy.append(M1056)
T1586_003.preventedBy.append(M1056)
T1584_001.preventedBy.append(M1056)
T1584_002.preventedBy.append(M1056)
T1584_003.preventedBy.append(M1056)
T1584_004.preventedBy.append(M1056)
T1584_005.preventedBy.append(M1056)
T1584_006.preventedBy.append(M1056)
T1584_007.preventedBy.append(M1056)
T1587_001.preventedBy.append(M1056)
T1587_002.preventedBy.append(M1056)
T1587_003.preventedBy.append(M1056)
T1587_004.preventedBy.append(M1056)
T1585_001.preventedBy.append(M1056)
T1585_002.preventedBy.append(M1056)
T1585_003.preventedBy.append(M1056)
T1592_001.preventedBy.append(M1056)
T1592_002.preventedBy.append(M1056)
T1592_003.preventedBy.append(M1056)
T1592_004.preventedBy.append(M1056)
T1589_001.preventedBy.append(M1056)
T1589_002.preventedBy.append(M1056)
T1589_003.preventedBy.append(M1056)
T1590_001.preventedBy.append(M1056)
T1590_002.preventedBy.append(M1056)
T1590_003.preventedBy.append(M1056)
T1590_004.preventedBy.append(M1056)
T1590_005.preventedBy.append(M1056)
T1590_006.preventedBy.append(M1056)
T1591_001.preventedBy.append(M1056)
T1591_002.preventedBy.append(M1056)
T1591_003.preventedBy.append(M1056)
T1591_004.preventedBy.append(M1056)
T1588_001.preventedBy.append(M1056)
T1588_002.preventedBy.append(M1056)
T1588_003.preventedBy.append(M1056)
T1588_004.preventedBy.append(M1056)
T1588_005.preventedBy.append(M1056)
T1588_006.preventedBy.append(M1056)
T1597_001.preventedBy.append(M1056)
T1597_002.preventedBy.append(M1056)
T1596_001.preventedBy.append(M1056)
T1596_002.preventedBy.append(M1056)
T1596_003.preventedBy.append(M1056)
T1596_004.preventedBy.append(M1056)
T1596_005.preventedBy.append(M1056)
T1593_001.preventedBy.append(M1056)
T1593_002.preventedBy.append(M1056)
T1608_001.preventedBy.append(M1056)
T1608_002.preventedBy.append(M1056)
T1608_003.preventedBy.append(M1056)
T1608_004.preventedBy.append(M1056)
T1608_005.preventedBy.append(M1056)
T1608_006.preventedBy.append(M1056)
T1650.preventedBy.append(M1056)
T1583.preventedBy.append(M1056)
T1595.preventedBy.append(M1056)
T1586.preventedBy.append(M1056)
T1584.preventedBy.append(M1056)
T1587.preventedBy.append(M1056)
T1585.preventedBy.append(M1056)
T1592.preventedBy.append(M1056)
T1589.preventedBy.append(M1056)
T1590.preventedBy.append(M1056)
T1591.preventedBy.append(M1056)
T1588.preventedBy.append(M1056)
T1597.preventedBy.append(M1056)
T1596.preventedBy.append(M1056)
T1594.preventedBy.append(M1056)
T1608.preventedBy.append(M1056)
T1048_002.preventedBy.append(M1057)
T1048_003.preventedBy.append(M1057)
T1052_001.preventedBy.append(M1057)
T1005.preventedBy.append(M1057)
T1025.preventedBy.append(M1057)
T1048.preventedBy.append(M1057)
T1041.preventedBy.append(M1057)
T1052.preventedBy.append(M1057)
T1567.preventedBy.append(M1057)


# Asserted_properties for  Technique - Detection
T1649.identifiedBy.append(DS0026_001)
T1558.identifiedBy.append(DS0026_001)
T1558_001.identifiedBy.append(DS0026_001)
T1558_003.identifiedBy.append(DS0026_001)
T1558_004.identifiedBy.append(DS0026_001)
T1550.identifiedBy.append(DS0026_001)
T1550_002.identifiedBy.append(DS0026_001)
T1550_003.identifiedBy.append(DS0026_001)
T1615.identifiedBy.append(DS0026_002)
T1003.identifiedBy.append(DS0026_002)
T1003_006.identifiedBy.append(DS0026_002)
T1033.identifiedBy.append(DS0026_002)
T1098.identifiedBy.append(DS0026_003)
T1484.identifiedBy.append(DS0026_003)
T1484_001.identifiedBy.append(DS0026_003)
T1484_002.identifiedBy.append(DS0026_003)
T1207.identifiedBy.append(DS0026_003)
T1484.identifiedBy.append(DS0026_004)
T1484_001.identifiedBy.append(DS0026_004)
T1134.identifiedBy.append(DS0026_005)
T1134_005.identifiedBy.append(DS0026_005)
T1531.identifiedBy.append(DS0026_005)
T1098.identifiedBy.append(DS0026_005)
T1037.identifiedBy.append(DS0026_005)
T1037_003.identifiedBy.append(DS0026_005)
T1484.identifiedBy.append(DS0026_005)
T1484_001.identifiedBy.append(DS0026_005)
T1484_002.identifiedBy.append(DS0026_005)
T1222.identifiedBy.append(DS0026_005)
T1222_001.identifiedBy.append(DS0026_005)
T1556.identifiedBy.append(DS0026_005)
T1556_005.identifiedBy.append(DS0026_005)
T1556_006.identifiedBy.append(DS0026_005)
T1207.identifiedBy.append(DS0026_005)
T1649.identifiedBy.append(DS0026_005)
T1098_002.identifiedBy.append(DS0015_001)
T1098_005.identifiedBy.append(DS0015_001)
T1557.identifiedBy.append(DS0015_001)
T1557_003.identifiedBy.append(DS0015_001)
T1110.identifiedBy.append(DS0015_001)
T1110_001.identifiedBy.append(DS0015_001)
T1110_002.identifiedBy.append(DS0015_001)
T1110_003.identifiedBy.append(DS0015_001)
T1110_004.identifiedBy.append(DS0015_001)
T1213.identifiedBy.append(DS0015_001)
T1213_001.identifiedBy.append(DS0015_001)
T1213_002.identifiedBy.append(DS0015_001)
T1213_003.identifiedBy.append(DS0015_001)
T1622.identifiedBy.append(DS0015_001)
T1491.identifiedBy.append(DS0015_001)
T1491_001.identifiedBy.append(DS0015_001)
T1491_002.identifiedBy.append(DS0015_001)
T1610.identifiedBy.append(DS0015_001)
T1189.identifiedBy.append(DS0015_001)
T1114.identifiedBy.append(DS0015_001)
T1114_002.identifiedBy.append(DS0015_001)
T1114_003.identifiedBy.append(DS0015_001)
T1499.identifiedBy.append(DS0015_001)
T1499_002.identifiedBy.append(DS0015_001)
T1499_003.identifiedBy.append(DS0015_001)
T1499_004.identifiedBy.append(DS0015_001)
T1048.identifiedBy.append(DS0015_001)
T1567.identifiedBy.append(DS0015_001)
T1190.identifiedBy.append(DS0015_001)
T1203.identifiedBy.append(DS0015_001)
T1212.identifiedBy.append(DS0015_001)
T1211.identifiedBy.append(DS0015_001)
T1210.identifiedBy.append(DS0015_001)
T1133.identifiedBy.append(DS0015_001)
T1200.identifiedBy.append(DS0015_001)
T1564.identifiedBy.append(DS0015_001)
T1564_008.identifiedBy.append(DS0015_001)
T1562_002.identifiedBy.append(DS0015_001)
T1070.identifiedBy.append(DS0015_001)
T1070_008.identifiedBy.append(DS0015_001)
T1534.identifiedBy.append(DS0015_001)
T1556.identifiedBy.append(DS0015_001)
T1556_007.identifiedBy.append(DS0015_001)
T1621.identifiedBy.append(DS0015_001)
T1027_005.identifiedBy.append(DS0015_001)
T1137.identifiedBy.append(DS0015_001)
T1137_003.identifiedBy.append(DS0015_001)
T1137_004.identifiedBy.append(DS0015_001)
T1137_005.identifiedBy.append(DS0015_001)
T1069.identifiedBy.append(DS0015_001)
T1069_003.identifiedBy.append(DS0015_001)
T1566.identifiedBy.append(DS0015_001)
T1566_001.identifiedBy.append(DS0015_001)
T1566_002.identifiedBy.append(DS0015_001)
T1566_003.identifiedBy.append(DS0015_001)
T1598.identifiedBy.append(DS0015_001)
T1598_001.identifiedBy.append(DS0015_001)
T1598_002.identifiedBy.append(DS0015_001)
T1598_003.identifiedBy.append(DS0015_001)
T1594.identifiedBy.append(DS0015_001)
T1505.identifiedBy.append(DS0015_001)
T1505_001.identifiedBy.append(DS0015_001)
T1505_002.identifiedBy.append(DS0015_001)
T1505_003.identifiedBy.append(DS0015_001)
T1648.identifiedBy.append(DS0015_001)
T1072.identifiedBy.append(DS0015_001)
T1649.identifiedBy.append(DS0015_001)
T1199.identifiedBy.append(DS0015_001)
T1552.identifiedBy.append(DS0015_001)
T1552_008.identifiedBy.append(DS0015_001)
T1550.identifiedBy.append(DS0015_001)
T1550_004.identifiedBy.append(DS0015_001)
T1204.identifiedBy.append(DS0015_001)
T1204_003.identifiedBy.append(DS0015_001)
T1588.identifiedBy.append(DS0037_001)
T1588_004.identifiedBy.append(DS0037_001)
T1562.identifiedBy.append(DS0025_001)
T1562_008.identifiedBy.append(DS0025_001)
T1526.identifiedBy.append(DS0025_002)
T1555.identifiedBy.append(DS0025_002)
T1046.identifiedBy.append(DS0025_002)
T1578.identifiedBy.append(DS0025_003)
T1546.identifiedBy.append(DS0025_004)
T1562.identifiedBy.append(DS0025_004)
T1562_008.identifiedBy.append(DS0025_004)
T1648.identifiedBy.append(DS0025_004)
T1619.identifiedBy.append(DS0010_001)
T1530.identifiedBy.append(DS0010_001)
T1048.identifiedBy.append(DS0010_001)
T1537.identifiedBy.append(DS0010_002)
T1485.identifiedBy.append(DS0010_003)
T1490.identifiedBy.append(DS0010_003)
T1580.identifiedBy.append(DS0010_004)
T1619.identifiedBy.append(DS0010_004)
T1537.identifiedBy.append(DS0010_005)
T1486.identifiedBy.append(DS0010_006)
T1537.identifiedBy.append(DS0010_006)
T1548.identifiedBy.append(DS0017_001)
T1548_001.identifiedBy.append(DS0017_001)
T1548_002.identifiedBy.append(DS0017_001)
T1548_003.identifiedBy.append(DS0017_001)
T1134.identifiedBy.append(DS0017_001)
T1134_001.identifiedBy.append(DS0017_001)
T1134_002.identifiedBy.append(DS0017_001)
T1134_003.identifiedBy.append(DS0017_001)
T1087.identifiedBy.append(DS0017_001)
T1087_001.identifiedBy.append(DS0017_001)
T1087_002.identifiedBy.append(DS0017_001)
T1087_003.identifiedBy.append(DS0017_001)
T1087_004.identifiedBy.append(DS0017_001)
T1098.identifiedBy.append(DS0017_001)
T1098_004.identifiedBy.append(DS0017_001)
T1010.identifiedBy.append(DS0017_001)
T1560.identifiedBy.append(DS0017_001)
T1560_001.identifiedBy.append(DS0017_001)
T1123.identifiedBy.append(DS0017_001)
T1119.identifiedBy.append(DS0017_001)
T1020.identifiedBy.append(DS0017_001)
T1197.identifiedBy.append(DS0017_001)
T1547.identifiedBy.append(DS0017_001)
T1547_001.identifiedBy.append(DS0017_001)
T1547_002.identifiedBy.append(DS0017_001)
T1547_003.identifiedBy.append(DS0017_001)
T1547_004.identifiedBy.append(DS0017_001)
T1547_005.identifiedBy.append(DS0017_001)
T1547_006.identifiedBy.append(DS0017_001)
T1547_007.identifiedBy.append(DS0017_001)
T1547_013.identifiedBy.append(DS0017_001)
T1547_014.identifiedBy.append(DS0017_001)
T1037.identifiedBy.append(DS0017_001)
T1037_001.identifiedBy.append(DS0017_001)
T1037_002.identifiedBy.append(DS0017_001)
T1037_003.identifiedBy.append(DS0017_001)
T1037_004.identifiedBy.append(DS0017_001)
T1037_005.identifiedBy.append(DS0017_001)
T1176.identifiedBy.append(DS0017_001)
T1217.identifiedBy.append(DS0017_001)
T1110.identifiedBy.append(DS0017_001)
T1115.identifiedBy.append(DS0017_001)
T1651.identifiedBy.append(DS0017_001)
T1059.identifiedBy.append(DS0017_001)
T1059_001.identifiedBy.append(DS0017_001)
T1059_002.identifiedBy.append(DS0017_001)
T1059_003.identifiedBy.append(DS0017_001)
T1059_004.identifiedBy.append(DS0017_001)
T1059_005.identifiedBy.append(DS0017_001)
T1059_006.identifiedBy.append(DS0017_001)
T1059_007.identifiedBy.append(DS0017_001)
T1059_008.identifiedBy.append(DS0017_001)
T1059_009.identifiedBy.append(DS0017_001)
T1609.identifiedBy.append(DS0017_001)
T1136.identifiedBy.append(DS0017_001)
T1136_001.identifiedBy.append(DS0017_001)
T1136_002.identifiedBy.append(DS0017_001)
T1543.identifiedBy.append(DS0017_001)
T1543_001.identifiedBy.append(DS0017_001)
T1543_002.identifiedBy.append(DS0017_001)
T1543_003.identifiedBy.append(DS0017_001)
T1543_004.identifiedBy.append(DS0017_001)
T1555.identifiedBy.append(DS0017_001)
T1555_001.identifiedBy.append(DS0017_001)
T1555_002.identifiedBy.append(DS0017_001)
T1555_003.identifiedBy.append(DS0017_001)
T1555_004.identifiedBy.append(DS0017_001)
T1555_005.identifiedBy.append(DS0017_001)
T1485.identifiedBy.append(DS0017_001)
T1486.identifiedBy.append(DS0017_001)
T1005.identifiedBy.append(DS0017_001)
T1039.identifiedBy.append(DS0017_001)
T1025.identifiedBy.append(DS0017_001)
T1074.identifiedBy.append(DS0017_001)
T1074_001.identifiedBy.append(DS0017_001)
T1074_002.identifiedBy.append(DS0017_001)
T1622.identifiedBy.append(DS0017_001)
T1652.identifiedBy.append(DS0017_001)
T1006.identifiedBy.append(DS0017_001)
T1561.identifiedBy.append(DS0017_001)
T1561_001.identifiedBy.append(DS0017_001)
T1561_002.identifiedBy.append(DS0017_001)
T1484.identifiedBy.append(DS0017_001)
T1484_001.identifiedBy.append(DS0017_001)
T1484_002.identifiedBy.append(DS0017_001)
T1482.identifiedBy.append(DS0017_001)
T1114.identifiedBy.append(DS0017_001)
T1114_001.identifiedBy.append(DS0017_001)
T1114_002.identifiedBy.append(DS0017_001)
T1114_003.identifiedBy.append(DS0017_001)
T1546.identifiedBy.append(DS0017_001)
T1546_001.identifiedBy.append(DS0017_001)
T1546_002.identifiedBy.append(DS0017_001)
T1546_003.identifiedBy.append(DS0017_001)
T1546_004.identifiedBy.append(DS0017_001)
T1546_005.identifiedBy.append(DS0017_001)
T1546_006.identifiedBy.append(DS0017_001)
T1546_007.identifiedBy.append(DS0017_001)
T1546_008.identifiedBy.append(DS0017_001)
T1546_009.identifiedBy.append(DS0017_001)
T1546_010.identifiedBy.append(DS0017_001)
T1546_011.identifiedBy.append(DS0017_001)
T1546_012.identifiedBy.append(DS0017_001)
T1546_013.identifiedBy.append(DS0017_001)
T1546_014.identifiedBy.append(DS0017_001)
T1546_015.identifiedBy.append(DS0017_001)
T1546_016.identifiedBy.append(DS0017_001)
T1480.identifiedBy.append(DS0017_001)
T1480_001.identifiedBy.append(DS0017_001)
T1048.identifiedBy.append(DS0017_001)
T1048_001.identifiedBy.append(DS0017_001)
T1048_002.identifiedBy.append(DS0017_001)
T1048_003.identifiedBy.append(DS0017_001)
T1041.identifiedBy.append(DS0017_001)
T1011.identifiedBy.append(DS0017_001)
T1011_001.identifiedBy.append(DS0017_001)
T1052.identifiedBy.append(DS0017_001)
T1052_001.identifiedBy.append(DS0017_001)
T1567.identifiedBy.append(DS0017_001)
T1567_001.identifiedBy.append(DS0017_001)
T1567_002.identifiedBy.append(DS0017_001)
T1083.identifiedBy.append(DS0017_001)
T1222.identifiedBy.append(DS0017_001)
T1222_001.identifiedBy.append(DS0017_001)
T1222_002.identifiedBy.append(DS0017_001)
T1615.identifiedBy.append(DS0017_001)
T1564.identifiedBy.append(DS0017_001)
T1564_001.identifiedBy.append(DS0017_001)
T1564_002.identifiedBy.append(DS0017_001)
T1564_003.identifiedBy.append(DS0017_001)
T1564_004.identifiedBy.append(DS0017_001)
T1564_006.identifiedBy.append(DS0017_001)
T1564_008.identifiedBy.append(DS0017_001)
T1564_009.identifiedBy.append(DS0017_001)
T1574.identifiedBy.append(DS0017_001)
T1574_006.identifiedBy.append(DS0017_001)
T1574_011.identifiedBy.append(DS0017_001)
T1574_012.identifiedBy.append(DS0017_001)
T1562.identifiedBy.append(DS0017_001)
T1562_001.identifiedBy.append(DS0017_001)
T1562_002.identifiedBy.append(DS0017_001)
T1562_003.identifiedBy.append(DS0017_001)
T1562_004.identifiedBy.append(DS0017_001)
T1562_006.identifiedBy.append(DS0017_001)
T1562_009.identifiedBy.append(DS0017_001)
T1562_010.identifiedBy.append(DS0017_001)
T1070.identifiedBy.append(DS0017_001)
T1070_001.identifiedBy.append(DS0017_001)
T1070_002.identifiedBy.append(DS0017_001)
T1070_003.identifiedBy.append(DS0017_001)
T1070_004.identifiedBy.append(DS0017_001)
T1070_005.identifiedBy.append(DS0017_001)
T1070_007.identifiedBy.append(DS0017_001)
T1070_008.identifiedBy.append(DS0017_001)
T1070_009.identifiedBy.append(DS0017_001)
T1202.identifiedBy.append(DS0017_001)
T1105.identifiedBy.append(DS0017_001)
T1490.identifiedBy.append(DS0017_001)
T1056_002.identifiedBy.append(DS0017_001)
T1570.identifiedBy.append(DS0017_001)
T1036.identifiedBy.append(DS0017_001)
T1036_003.identifiedBy.append(DS0017_001)
T1036_004.identifiedBy.append(DS0017_001)
T1036_008.identifiedBy.append(DS0017_001)
T1556_005.identifiedBy.append(DS0017_001)
T1112.identifiedBy.append(DS0017_001)
T1046.identifiedBy.append(DS0017_001)
T1135.identifiedBy.append(DS0017_001)
T1040.identifiedBy.append(DS0017_001)
T1027.identifiedBy.append(DS0017_001)
T1027_004.identifiedBy.append(DS0017_001)
T1027_010.identifiedBy.append(DS0017_001)
T1137.identifiedBy.append(DS0017_001)
T1137_001.identifiedBy.append(DS0017_001)
T1137_002.identifiedBy.append(DS0017_001)
T1137_003.identifiedBy.append(DS0017_001)
T1137_004.identifiedBy.append(DS0017_001)
T1137_005.identifiedBy.append(DS0017_001)
T1137_006.identifiedBy.append(DS0017_001)
T1003.identifiedBy.append(DS0017_001)
T1003_001.identifiedBy.append(DS0017_001)
T1003_002.identifiedBy.append(DS0017_001)
T1003_003.identifiedBy.append(DS0017_001)
T1003_004.identifiedBy.append(DS0017_001)
T1003_005.identifiedBy.append(DS0017_001)
T1003_007.identifiedBy.append(DS0017_001)
T1003_008.identifiedBy.append(DS0017_001)
T1201.identifiedBy.append(DS0017_001)
T1120.identifiedBy.append(DS0017_001)
T1069.identifiedBy.append(DS0017_001)
T1069_001.identifiedBy.append(DS0017_001)
T1069_002.identifiedBy.append(DS0017_001)
T1069_003.identifiedBy.append(DS0017_001)
T1647.identifiedBy.append(DS0017_001)
T1542.identifiedBy.append(DS0017_001)
T1542_005.identifiedBy.append(DS0017_001)
T1057.identifiedBy.append(DS0017_001)
T1012.identifiedBy.append(DS0017_001)
T1563.identifiedBy.append(DS0017_001)
T1563_001.identifiedBy.append(DS0017_001)
T1563_002.identifiedBy.append(DS0017_001)
T1021.identifiedBy.append(DS0017_001)
T1021_002.identifiedBy.append(DS0017_001)
T1021_006.identifiedBy.append(DS0017_001)
T1018.identifiedBy.append(DS0017_001)
T1496.identifiedBy.append(DS0017_001)
T1053.identifiedBy.append(DS0017_001)
T1053_002.identifiedBy.append(DS0017_001)
T1053_003.identifiedBy.append(DS0017_001)
T1053_005.identifiedBy.append(DS0017_001)
T1053_006.identifiedBy.append(DS0017_001)
T1113.identifiedBy.append(DS0017_001)
T1505_004.identifiedBy.append(DS0017_001)
T1505_005.identifiedBy.append(DS0017_001)
T1489.identifiedBy.append(DS0017_001)
T1518.identifiedBy.append(DS0017_001)
T1518_001.identifiedBy.append(DS0017_001)
T1649.identifiedBy.append(DS0017_001)
T1558.identifiedBy.append(DS0017_001)
T1553.identifiedBy.append(DS0017_001)
T1553_001.identifiedBy.append(DS0017_001)
T1553_004.identifiedBy.append(DS0017_001)
T1553_006.identifiedBy.append(DS0017_001)
T1218.identifiedBy.append(DS0017_001)
T1218_001.identifiedBy.append(DS0017_001)
T1218_002.identifiedBy.append(DS0017_001)
T1218_003.identifiedBy.append(DS0017_001)
T1218_004.identifiedBy.append(DS0017_001)
T1218_005.identifiedBy.append(DS0017_001)
T1218_007.identifiedBy.append(DS0017_001)
T1218_008.identifiedBy.append(DS0017_001)
T1218_009.identifiedBy.append(DS0017_001)
T1218_010.identifiedBy.append(DS0017_001)
T1218_011.identifiedBy.append(DS0017_001)
T1218_012.identifiedBy.append(DS0017_001)
T1218_013.identifiedBy.append(DS0017_001)
T1218_014.identifiedBy.append(DS0017_001)
T1082.identifiedBy.append(DS0017_001)
T1614.identifiedBy.append(DS0017_001)
T1614_001.identifiedBy.append(DS0017_001)
T1016.identifiedBy.append(DS0017_001)
T1016_001.identifiedBy.append(DS0017_001)
T1049.identifiedBy.append(DS0017_001)
T1033.identifiedBy.append(DS0017_001)
T1216.identifiedBy.append(DS0017_001)
T1216_001.identifiedBy.append(DS0017_001)
T1007.identifiedBy.append(DS0017_001)
T1569.identifiedBy.append(DS0017_001)
T1569_001.identifiedBy.append(DS0017_001)
T1569_002.identifiedBy.append(DS0017_001)
T1529.identifiedBy.append(DS0017_001)
T1124.identifiedBy.append(DS0017_001)
T1127.identifiedBy.append(DS0017_001)
T1127_001.identifiedBy.append(DS0017_001)
T1552.identifiedBy.append(DS0017_001)
T1552_001.identifiedBy.append(DS0017_001)
T1552_002.identifiedBy.append(DS0017_001)
T1552_003.identifiedBy.append(DS0017_001)
T1552_004.identifiedBy.append(DS0017_001)
T1552_006.identifiedBy.append(DS0017_001)
T1552_007.identifiedBy.append(DS0017_001)
T1204.identifiedBy.append(DS0017_001)
T1204_003.identifiedBy.append(DS0017_001)
T1125.identifiedBy.append(DS0017_001)
T1497.identifiedBy.append(DS0017_001)
T1497_001.identifiedBy.append(DS0017_001)
T1497_002.identifiedBy.append(DS0017_001)
T1497_003.identifiedBy.append(DS0017_001)
T1047.identifiedBy.append(DS0017_001)
T1610.identifiedBy.append(DS0032_001)
T1611.identifiedBy.append(DS0032_001)
T1053.identifiedBy.append(DS0032_001)
T1053_007.identifiedBy.append(DS0032_001)
T1204.identifiedBy.append(DS0032_001)
T1204_003.identifiedBy.append(DS0032_001)
T1613.identifiedBy.append(DS0032_002)
T1610.identifiedBy.append(DS0032_003)
T1204.identifiedBy.append(DS0032_003)
T1204_003.identifiedBy.append(DS0032_003)
T1583.identifiedBy.append(DS0038_001)
T1583_001.identifiedBy.append(DS0038_001)
T1584.identifiedBy.append(DS0038_001)
T1584_001.identifiedBy.append(DS0038_001)
T1584_002.identifiedBy.append(DS0038_001)
T1583.identifiedBy.append(DS0038_002)
T1583_001.identifiedBy.append(DS0038_002)
T1584.identifiedBy.append(DS0038_002)
T1584_001.identifiedBy.append(DS0038_002)
T1583.identifiedBy.append(DS0038_003)
T1583_001.identifiedBy.append(DS0038_003)
T1584.identifiedBy.append(DS0038_003)
T1584_001.identifiedBy.append(DS0038_003)
T1584_002.identifiedBy.append(DS0038_003)
T1092.identifiedBy.append(DS0016_001)
T1006.identifiedBy.append(DS0016_001)
T1561.identifiedBy.append(DS0016_001)
T1561_001.identifiedBy.append(DS0016_001)
T1561_002.identifiedBy.append(DS0016_001)
T1092.identifiedBy.append(DS0016_002)
T1052.identifiedBy.append(DS0016_002)
T1052_001.identifiedBy.append(DS0016_002)
T1200.identifiedBy.append(DS0016_002)
T1091.identifiedBy.append(DS0016_002)
T1561.identifiedBy.append(DS0016_003)
T1561_001.identifiedBy.append(DS0016_003)
T1561_002.identifiedBy.append(DS0016_003)
T1542.identifiedBy.append(DS0016_003)
T1542_003.identifiedBy.append(DS0016_003)
T1014.identifiedBy.append(DS0016_003)
T1547.identifiedBy.append(DS0027_001)
T1547_008.identifiedBy.append(DS0027_001)
T1547_012.identifiedBy.append(DS0027_001)
T1543.identifiedBy.append(DS0027_001)
T1543_003.identifiedBy.append(DS0027_001)
T1561.identifiedBy.append(DS0027_001)
T1561_001.identifiedBy.append(DS0027_001)
T1561_002.identifiedBy.append(DS0027_001)
T1068.identifiedBy.append(DS0027_001)
T1562.identifiedBy.append(DS0027_001)
T1562_001.identifiedBy.append(DS0027_001)
T1056.identifiedBy.append(DS0027_001)
T1056_001.identifiedBy.append(DS0027_001)
T1111.identifiedBy.append(DS0027_001)
T1542.identifiedBy.append(DS0027_002)
T1542_002.identifiedBy.append(DS0027_002)
T1087.identifiedBy.append(DS0022_001)
T1087_001.identifiedBy.append(DS0022_001)
T1119.identifiedBy.append(DS0022_001)
T1020.identifiedBy.append(DS0022_001)
T1217.identifiedBy.append(DS0022_001)
T1555.identifiedBy.append(DS0022_001)
T1555_001.identifiedBy.append(DS0022_001)
T1555_003.identifiedBy.append(DS0022_001)
T1555_004.identifiedBy.append(DS0022_001)
T1555_005.identifiedBy.append(DS0022_001)
T1005.identifiedBy.append(DS0022_001)
T1039.identifiedBy.append(DS0022_001)
T1025.identifiedBy.append(DS0022_001)
T1074.identifiedBy.append(DS0022_001)
T1074_001.identifiedBy.append(DS0022_001)
T1074_002.identifiedBy.append(DS0022_001)
T1114.identifiedBy.append(DS0022_001)
T1114_001.identifiedBy.append(DS0022_001)
T1048.identifiedBy.append(DS0022_001)
T1048_001.identifiedBy.append(DS0022_001)
T1048_002.identifiedBy.append(DS0022_001)
T1048_003.identifiedBy.append(DS0022_001)
T1041.identifiedBy.append(DS0022_001)
T1011.identifiedBy.append(DS0022_001)
T1011_001.identifiedBy.append(DS0022_001)
T1052.identifiedBy.append(DS0022_001)
T1052_001.identifiedBy.append(DS0022_001)
T1567.identifiedBy.append(DS0022_001)
T1567_001.identifiedBy.append(DS0022_001)
T1567_002.identifiedBy.append(DS0022_001)
T1187.identifiedBy.append(DS0022_001)
T1003.identifiedBy.append(DS0022_001)
T1003_002.identifiedBy.append(DS0022_001)
T1003_003.identifiedBy.append(DS0022_001)
T1003_007.identifiedBy.append(DS0022_001)
T1003_008.identifiedBy.append(DS0022_001)
T1018.identifiedBy.append(DS0022_001)
T1091.identifiedBy.append(DS0022_001)
T1649.identifiedBy.append(DS0022_001)
T1558.identifiedBy.append(DS0022_001)
T1539.identifiedBy.append(DS0022_001)
T1033.identifiedBy.append(DS0022_001)
T1552.identifiedBy.append(DS0022_001)
T1552_001.identifiedBy.append(DS0022_001)
T1552_003.identifiedBy.append(DS0022_001)
T1552_004.identifiedBy.append(DS0022_001)
T1552_006.identifiedBy.append(DS0022_001)
T1560.identifiedBy.append(DS0022_002)
T1560_001.identifiedBy.append(DS0022_002)
T1560_002.identifiedBy.append(DS0022_002)
T1560_003.identifiedBy.append(DS0022_002)
T1547.identifiedBy.append(DS0022_002)
T1547_006.identifiedBy.append(DS0022_002)
T1547_008.identifiedBy.append(DS0022_002)
T1547_009.identifiedBy.append(DS0022_002)
T1547_001.identifiedBy.append(DS0022_002)
T1547_012.identifiedBy.append(DS0022_002)
T1547_013.identifiedBy.append(DS0022_002)
T1547_015.identifiedBy.append(DS0022_002)
T1037.identifiedBy.append(DS0022_002)
T1037_002.identifiedBy.append(DS0022_002)
T1037_003.identifiedBy.append(DS0022_002)
T1037_004.identifiedBy.append(DS0022_002)
T1037_005.identifiedBy.append(DS0022_002)
T1176.identifiedBy.append(DS0022_002)
T1554.identifiedBy.append(DS0022_002)
T1543.identifiedBy.append(DS0022_002)
T1543_001.identifiedBy.append(DS0022_002)
T1543_002.identifiedBy.append(DS0022_002)
T1543_004.identifiedBy.append(DS0022_002)
T1486.identifiedBy.append(DS0022_002)
T1565.identifiedBy.append(DS0022_002)
T1565_001.identifiedBy.append(DS0022_002)
T1565_003.identifiedBy.append(DS0022_002)
T1074.identifiedBy.append(DS0022_002)
T1074_001.identifiedBy.append(DS0022_002)
T1074_002.identifiedBy.append(DS0022_002)
T1491.identifiedBy.append(DS0022_002)
T1491_001.identifiedBy.append(DS0022_002)
T1491_002.identifiedBy.append(DS0022_002)
T1006.identifiedBy.append(DS0022_002)
T1189.identifiedBy.append(DS0022_002)
T1546.identifiedBy.append(DS0022_002)
T1546_002.identifiedBy.append(DS0022_002)
T1546_004.identifiedBy.append(DS0022_002)
T1546_005.identifiedBy.append(DS0022_002)
T1546_008.identifiedBy.append(DS0022_002)
T1546_013.identifiedBy.append(DS0022_002)
T1546_014.identifiedBy.append(DS0022_002)
T1546_016.identifiedBy.append(DS0022_002)
T1187.identifiedBy.append(DS0022_002)
T1564.identifiedBy.append(DS0022_002)
T1564_001.identifiedBy.append(DS0022_002)
T1564_006.identifiedBy.append(DS0022_002)
T1564_009.identifiedBy.append(DS0022_002)
T1574.identifiedBy.append(DS0022_002)
T1574_001.identifiedBy.append(DS0022_002)
T1574_002.identifiedBy.append(DS0022_002)
T1574_004.identifiedBy.append(DS0022_002)
T1574_005.identifiedBy.append(DS0022_002)
T1574_006.identifiedBy.append(DS0022_002)
T1574_007.identifiedBy.append(DS0022_002)
T1574_008.identifiedBy.append(DS0022_002)
T1574_009.identifiedBy.append(DS0022_002)
T1574_001.identifiedBy.append(DS0022_002)
T1105.identifiedBy.append(DS0022_002)
T1570.identifiedBy.append(DS0022_002)
T1036_007.identifiedBy.append(DS0022_002)
T1556.identifiedBy.append(DS0022_002)
T1556_002.identifiedBy.append(DS0022_002)
T1556_008.identifiedBy.append(DS0022_002)
T1027.identifiedBy.append(DS0022_002)
T1027_004.identifiedBy.append(DS0022_002)
T1027_006.identifiedBy.append(DS0022_002)
T1027_009.identifiedBy.append(DS0022_002)
T1137.identifiedBy.append(DS0022_002)
T1137_001.identifiedBy.append(DS0022_002)
T1137_002.identifiedBy.append(DS0022_002)
T1137_006.identifiedBy.append(DS0022_002)
T1003_002.identifiedBy.append(DS0022_002)
T1566.identifiedBy.append(DS0022_002)
T1566_001.identifiedBy.append(DS0022_002)
T1091.identifiedBy.append(DS0022_002)
T1496.identifiedBy.append(DS0022_002)
T1053.identifiedBy.append(DS0022_002)
T1053_005.identifiedBy.append(DS0022_002)
T1053_007.identifiedBy.append(DS0022_002)
T1505.identifiedBy.append(DS0022_002)
T1505_002.identifiedBy.append(DS0022_002)
T1505_003.identifiedBy.append(DS0022_002)
T1505_004.identifiedBy.append(DS0022_002)
T1553_005.identifiedBy.append(DS0022_002)
T1218.identifiedBy.append(DS0022_002)
T1218_001.identifiedBy.append(DS0022_002)
T1218_002.identifiedBy.append(DS0022_002)
T1218_005.identifiedBy.append(DS0022_002)
T1218_014.identifiedBy.append(DS0022_002)
T1080.identifiedBy.append(DS0022_002)
T1204.identifiedBy.append(DS0022_002)
T1204_001.identifiedBy.append(DS0022_002)
T1204_002.identifiedBy.append(DS0022_002)
T1554.identifiedBy.append(DS0022_003)
T1485.identifiedBy.append(DS0022_003)
T1565.identifiedBy.append(DS0022_003)
T1565_001.identifiedBy.append(DS0022_003)
T1565_003.identifiedBy.append(DS0022_003)
T1562.identifiedBy.append(DS0022_003)
T1070.identifiedBy.append(DS0022_003)
T1070_001.identifiedBy.append(DS0022_003)
T1070_002.identifiedBy.append(DS0022_003)
T1070_003.identifiedBy.append(DS0022_003)
T1070_004.identifiedBy.append(DS0022_003)
T1070_008.identifiedBy.append(DS0022_003)
T1070_009.identifiedBy.append(DS0022_003)
T1490.identifiedBy.append(DS0022_003)
T1548.identifiedBy.append(DS0022_004)
T1548_001.identifiedBy.append(DS0022_004)
T1554.identifiedBy.append(DS0022_004)
T1543_003.identifiedBy.append(DS0022_004)
T1565.identifiedBy.append(DS0022_004)
T1565_003.identifiedBy.append(DS0022_004)
T1546.identifiedBy.append(DS0022_004)
T1546_006.identifiedBy.append(DS0022_004)
T1222.identifiedBy.append(DS0022_004)
T1222_001.identifiedBy.append(DS0022_004)
T1222_002.identifiedBy.append(DS0022_004)
T1564.identifiedBy.append(DS0022_004)
T1564_001.identifiedBy.append(DS0022_004)
T1564_004.identifiedBy.append(DS0022_004)
T1564_007.identifiedBy.append(DS0022_004)
T1564_009.identifiedBy.append(DS0022_004)
T1070.identifiedBy.append(DS0022_004)
T1070_006.identifiedBy.append(DS0022_004)
T1570.identifiedBy.append(DS0022_004)
T1036.identifiedBy.append(DS0022_004)
T1036_001.identifiedBy.append(DS0022_004)
T1036_002.identifiedBy.append(DS0022_004)
T1036_003.identifiedBy.append(DS0022_004)
T1036_005.identifiedBy.append(DS0022_004)
T1036_006.identifiedBy.append(DS0022_004)
T1036_007.identifiedBy.append(DS0022_004)
T1027.identifiedBy.append(DS0022_004)
T1027_001.identifiedBy.append(DS0022_004)
T1027_002.identifiedBy.append(DS0022_004)
T1027_003.identifiedBy.append(DS0022_004)
T1027_004.identifiedBy.append(DS0022_004)
T1027_007.identifiedBy.append(DS0022_004)
T1027_008.identifiedBy.append(DS0022_004)
T1027_009.identifiedBy.append(DS0022_004)
T1055.identifiedBy.append(DS0022_004)
T1055_013.identifiedBy.append(DS0022_004)
T1553.identifiedBy.append(DS0022_004)
T1553_001.identifiedBy.append(DS0022_004)
T1553_002.identifiedBy.append(DS0022_004)
T1553_005.identifiedBy.append(DS0022_004)
T1195.identifiedBy.append(DS0022_004)
T1195_001.identifiedBy.append(DS0022_004)
T1195_002.identifiedBy.append(DS0022_004)
T1218_011.identifiedBy.append(DS0022_004)
T1548.identifiedBy.append(DS0022_005)
T1548_001.identifiedBy.append(DS0022_005)
T1548_003.identifiedBy.append(DS0022_005)
T1098.identifiedBy.append(DS0022_005)
T1098_004.identifiedBy.append(DS0022_005)
T1547.identifiedBy.append(DS0022_005)
T1547_001.identifiedBy.append(DS0022_005)
T1547_006.identifiedBy.append(DS0022_005)
T1547_007.identifiedBy.append(DS0022_005)
T1547_008.identifiedBy.append(DS0022_005)
T1547_009.identifiedBy.append(DS0022_005)
T1547_013.identifiedBy.append(DS0022_005)
T1547_015.identifiedBy.append(DS0022_005)
T1037.identifiedBy.append(DS0022_005)
T1037_002.identifiedBy.append(DS0022_005)
T1037_003.identifiedBy.append(DS0022_005)
T1037_004.identifiedBy.append(DS0022_005)
T1037_005.identifiedBy.append(DS0022_005)
T1554.identifiedBy.append(DS0022_005)
T1543.identifiedBy.append(DS0022_005)
T1543_001.identifiedBy.append(DS0022_005)
T1543_002.identifiedBy.append(DS0022_005)
T1543_004.identifiedBy.append(DS0022_005)
T1485.identifiedBy.append(DS0022_005)
T1486.identifiedBy.append(DS0022_005)
T1565.identifiedBy.append(DS0022_005)
T1565_001.identifiedBy.append(DS0022_005)
T1565_003.identifiedBy.append(DS0022_005)
T1491.identifiedBy.append(DS0022_005)
T1491_001.identifiedBy.append(DS0022_005)
T1491_002.identifiedBy.append(DS0022_005)
T1140.identifiedBy.append(DS0022_005)
T1546.identifiedBy.append(DS0022_005)
T1546_002.identifiedBy.append(DS0022_005)
T1546_004.identifiedBy.append(DS0022_005)
T1546_005.identifiedBy.append(DS0022_005)
T1546_006.identifiedBy.append(DS0022_005)
T1546_008.identifiedBy.append(DS0022_005)
T1546_013.identifiedBy.append(DS0022_005)
T1546_014.identifiedBy.append(DS0022_005)
T1187.identifiedBy.append(DS0022_005)
T1564.identifiedBy.append(DS0022_005)
T1564_002.identifiedBy.append(DS0022_005)
T1564_003.identifiedBy.append(DS0022_005)
T1564_004.identifiedBy.append(DS0022_005)
T1564_005.identifiedBy.append(DS0022_005)
T1564_008.identifiedBy.append(DS0022_005)
T1574.identifiedBy.append(DS0022_005)
T1574_001.identifiedBy.append(DS0022_005)
T1574_002.identifiedBy.append(DS0022_005)
T1574_004.identifiedBy.append(DS0022_005)
T1574_005.identifiedBy.append(DS0022_005)
T1574_006.identifiedBy.append(DS0022_005)
T1574_008.identifiedBy.append(DS0022_005)
T1574_009.identifiedBy.append(DS0022_005)
T1574_001.identifiedBy.append(DS0022_005)
T1562.identifiedBy.append(DS0022_005)
T1070.identifiedBy.append(DS0022_005)
T1070_002.identifiedBy.append(DS0022_005)
T1070_003.identifiedBy.append(DS0022_005)
T1070_006.identifiedBy.append(DS0022_005)
T1070_007.identifiedBy.append(DS0022_005)
T1070_008.identifiedBy.append(DS0022_005)
T1070_009.identifiedBy.append(DS0022_005)
T1056.identifiedBy.append(DS0022_005)
T1056_003.identifiedBy.append(DS0022_005)
T1036.identifiedBy.append(DS0022_005)
T1036_003.identifiedBy.append(DS0022_005)
T1036_008.identifiedBy.append(DS0022_005)
T1556.identifiedBy.append(DS0022_005)
T1556_001.identifiedBy.append(DS0022_005)
T1556_003.identifiedBy.append(DS0022_005)
T1556_004.identifiedBy.append(DS0022_005)
T1556_007.identifiedBy.append(DS0022_005)
T1601.identifiedBy.append(DS0022_005)
T1601_001.identifiedBy.append(DS0022_005)
T1601_002.identifiedBy.append(DS0022_005)
T1137.identifiedBy.append(DS0022_005)
T1137_001.identifiedBy.append(DS0022_005)
T1137_002.identifiedBy.append(DS0022_005)
T1137_006.identifiedBy.append(DS0022_005)
T1647.identifiedBy.append(DS0022_005)
T1055.identifiedBy.append(DS0022_005)
T1055_009.identifiedBy.append(DS0022_005)
T1014.identifiedBy.append(DS0022_005)
T1053.identifiedBy.append(DS0022_005)
T1053_002.identifiedBy.append(DS0022_005)
T1053_003.identifiedBy.append(DS0022_005)
T1053_005.identifiedBy.append(DS0022_005)
T1053_006.identifiedBy.append(DS0022_005)
T1505.identifiedBy.append(DS0022_005)
T1505_003.identifiedBy.append(DS0022_005)
T1505_004.identifiedBy.append(DS0022_005)
T1505_005.identifiedBy.append(DS0022_005)
T1489.identifiedBy.append(DS0022_005)
T1553.identifiedBy.append(DS0022_005)
T1553_001.identifiedBy.append(DS0022_005)
T1553_003.identifiedBy.append(DS0022_005)
T1569.identifiedBy.append(DS0022_005)
T1569_001.identifiedBy.append(DS0022_005)
T1080.identifiedBy.append(DS0022_005)
T1600.identifiedBy.append(DS0022_005)
T1600_001.identifiedBy.append(DS0022_005)
T1600_002.identifiedBy.append(DS0022_005)
T1562.identifiedBy.append(DS0018_001)
T1562_004.identifiedBy.append(DS0018_001)
T1562_007.identifiedBy.append(DS0018_001)
T1518.identifiedBy.append(DS0018_002)
T1518_001.identifiedBy.append(DS0018_002)
T1518.identifiedBy.append(DS0018_003)
T1518_001.identifiedBy.append(DS0018_003)
T1562.identifiedBy.append(DS0018_004)
T1562_004.identifiedBy.append(DS0018_004)
T1562_007.identifiedBy.append(DS0018_004)
T1070.identifiedBy.append(DS0018_004)
T1070_007.identifiedBy.append(DS0018_004)
T1495.identifiedBy.append(DS0001_001)
T1564.identifiedBy.append(DS0001_001)
T1564_005.identifiedBy.append(DS0001_001)
T1542.identifiedBy.append(DS0001_001)
T1542_001.identifiedBy.append(DS0001_001)
T1542_002.identifiedBy.append(DS0001_001)
T1542_004.identifiedBy.append(DS0001_001)
T1542_005.identifiedBy.append(DS0001_001)
T1014.identifiedBy.append(DS0001_001)
T1087_001.identifiedBy.append(DS0036_001)
T1087_002.identifiedBy.append(DS0036_001)
T1069.identifiedBy.append(DS0036_001)
T1069_001.identifiedBy.append(DS0036_001)
T1069_002.identifiedBy.append(DS0036_001)
T1069_003.identifiedBy.append(DS0036_001)
T1069.identifiedBy.append(DS0036_002)
T1069_003.identifiedBy.append(DS0036_002)
T1098.identifiedBy.append(DS0036_003)
T1098_002.identifiedBy.append(DS0036_003)
T1612.identifiedBy.append(DS0007_001)
T1525.identifiedBy.append(DS0007_001)
T1204.identifiedBy.append(DS0007_001)
T1204_003.identifiedBy.append(DS0007_001)
T1485.identifiedBy.append(DS0007_002)
T1564_006.identifiedBy.append(DS0007_003)
T1525.identifiedBy.append(DS0007_003)
T1036.identifiedBy.append(DS0007_003)
T1036_005.identifiedBy.append(DS0007_003)
T1525.identifiedBy.append(DS0007_004)
T1578.identifiedBy.append(DS0030_001)
T1578_002.identifiedBy.append(DS0030_001)
T1535.identifiedBy.append(DS0030_001)
T1204.identifiedBy.append(DS0030_001)
T1204_003.identifiedBy.append(DS0030_001)
T1485.identifiedBy.append(DS0030_002)
T1578.identifiedBy.append(DS0030_002)
T1578_003.identifiedBy.append(DS0030_002)
T1580.identifiedBy.append(DS0030_003)
T1578.identifiedBy.append(DS0030_004)
T1578_002.identifiedBy.append(DS0030_004)
T1578_003.identifiedBy.append(DS0030_004)
T1578_004.identifiedBy.append(DS0030_004)
T1535.identifiedBy.append(DS0030_004)
T1578.identifiedBy.append(DS0030_005)
T1578_004.identifiedBy.append(DS0030_005)
T1578.identifiedBy.append(DS0030_006)
T1578_004.identifiedBy.append(DS0030_006)
T1204.identifiedBy.append(DS0030_006)
T1204_003.identifiedBy.append(DS0030_006)
T1578.identifiedBy.append(DS0030_007)
T1578_004.identifiedBy.append(DS0030_007)
T1583.identifiedBy.append(DS0035_001)
T1583_003.identifiedBy.append(DS0035_001)
T1583_004.identifiedBy.append(DS0035_001)
T1583_006.identifiedBy.append(DS0035_001)
T1583_007.identifiedBy.append(DS0035_001)
T1583_008.identifiedBy.append(DS0035_001)
T1584.identifiedBy.append(DS0035_001)
T1584_003.identifiedBy.append(DS0035_001)
T1584_004.identifiedBy.append(DS0035_001)
T1584_006.identifiedBy.append(DS0035_001)
T1584_007.identifiedBy.append(DS0035_001)
T1587.identifiedBy.append(DS0035_001)
T1587_003.identifiedBy.append(DS0035_001)
T1592.identifiedBy.append(DS0035_001)
T1592_001.identifiedBy.append(DS0035_001)
T1592_002.identifiedBy.append(DS0035_001)
T1592_004.identifiedBy.append(DS0035_001)
T1588.identifiedBy.append(DS0035_001)
T1588_004.identifiedBy.append(DS0035_001)
T1608.identifiedBy.append(DS0035_001)
T1608_001.identifiedBy.append(DS0035_001)
T1608_002.identifiedBy.append(DS0035_001)
T1608_003.identifiedBy.append(DS0035_001)
T1608_004.identifiedBy.append(DS0035_001)
T1608_005.identifiedBy.append(DS0035_001)
T1608_006.identifiedBy.append(DS0035_001)
T1583.identifiedBy.append(DS0035_002)
T1583_003.identifiedBy.append(DS0035_002)
T1583_004.identifiedBy.append(DS0035_002)
T1584.identifiedBy.append(DS0035_002)
T1584_003.identifiedBy.append(DS0035_002)
T1584_004.identifiedBy.append(DS0035_002)
T1547.identifiedBy.append(DS0008_001)
T1547_006.identifiedBy.append(DS0008_001)
T1611.identifiedBy.append(DS0008_001)
T1185.identifiedBy.append(DS0028_001)
T1538.identifiedBy.append(DS0028_001)
T1213.identifiedBy.append(DS0028_001)
T1213_001.identifiedBy.append(DS0028_001)
T1213_002.identifiedBy.append(DS0028_001)
T1213_003.identifiedBy.append(DS0028_001)
T1114.identifiedBy.append(DS0028_001)
T1114_002.identifiedBy.append(DS0028_001)
T1606.identifiedBy.append(DS0028_001)
T1606_001.identifiedBy.append(DS0028_001)
T1606_002.identifiedBy.append(DS0028_001)
T1556.identifiedBy.append(DS0028_001)
T1556_001.identifiedBy.append(DS0028_001)
T1556_003.identifiedBy.append(DS0028_001)
T1556_006.identifiedBy.append(DS0028_001)
T1556_007.identifiedBy.append(DS0028_001)
T1621.identifiedBy.append(DS0028_001)
T1003_001.identifiedBy.append(DS0028_001)
T1563.identifiedBy.append(DS0028_001)
T1563_001.identifiedBy.append(DS0028_001)
T1563_002.identifiedBy.append(DS0028_001)
T1021.identifiedBy.append(DS0028_001)
T1021_001.identifiedBy.append(DS0028_001)
T1021_002.identifiedBy.append(DS0028_001)
T1021_004.identifiedBy.append(DS0028_001)
T1021_005.identifiedBy.append(DS0028_001)
T1021_006.identifiedBy.append(DS0028_001)
T1021_007.identifiedBy.append(DS0028_001)
T1649.identifiedBy.append(DS0028_001)
T1199.identifiedBy.append(DS0028_001)
T1550.identifiedBy.append(DS0028_001)
T1550_002.identifiedBy.append(DS0028_001)
T1550_003.identifiedBy.append(DS0028_001)
T1078.identifiedBy.append(DS0028_001)
T1078_001.identifiedBy.append(DS0028_001)
T1078_002.identifiedBy.append(DS0028_001)
T1078_003.identifiedBy.append(DS0028_001)
T1078_004.identifiedBy.append(DS0028_001)
T1133.identifiedBy.append(DS0028_002)
T1606_002.identifiedBy.append(DS0028_002)
T1621.identifiedBy.append(DS0028_002)
T1021_001.identifiedBy.append(DS0028_002)
T1558.identifiedBy.append(DS0028_002)
T1558_001.identifiedBy.append(DS0028_002)
T1558_002.identifiedBy.append(DS0028_002)
T1199.identifiedBy.append(DS0028_002)
T1078.identifiedBy.append(DS0028_002)
T1078_002.identifiedBy.append(DS0028_002)
T1078_003.identifiedBy.append(DS0028_002)
T1078_004.identifiedBy.append(DS0028_002)
T1570.identifiedBy.append(DS0023_001)
T1587.identifiedBy.append(DS0004_001)
T1587_001.identifiedBy.append(DS0004_001)
T1588.identifiedBy.append(DS0004_001)
T1588_001.identifiedBy.append(DS0004_001)
T1587.identifiedBy.append(DS0004_002)
T1587_001.identifiedBy.append(DS0004_002)
T1587_002.identifiedBy.append(DS0004_002)
T1588.identifiedBy.append(DS0004_002)
T1588_001.identifiedBy.append(DS0004_002)
T1588_002.identifiedBy.append(DS0004_002)
T1588_003.identifiedBy.append(DS0004_002)
T1547.identifiedBy.append(DS0011_001)
T1547_002.identifiedBy.append(DS0011_001)
T1547_003.identifiedBy.append(DS0011_001)
T1547_004.identifiedBy.append(DS0011_001)
T1547_005.identifiedBy.append(DS0011_001)
T1547_008.identifiedBy.append(DS0011_001)
T1547_010.identifiedBy.append(DS0011_001)
T1547_012.identifiedBy.append(DS0011_001)
T1059.identifiedBy.append(DS0011_001)
T1059_001.identifiedBy.append(DS0011_001)
T1059_005.identifiedBy.append(DS0011_001)
T1059_007.identifiedBy.append(DS0011_001)
T1546.identifiedBy.append(DS0011_001)
T1546_006.identifiedBy.append(DS0011_001)
T1546_007.identifiedBy.append(DS0011_001)
T1546_009.identifiedBy.append(DS0011_001)
T1546_010.identifiedBy.append(DS0011_001)
T1546_011.identifiedBy.append(DS0011_001)
T1546_015.identifiedBy.append(DS0011_001)
T1574.identifiedBy.append(DS0011_001)
T1574_001.identifiedBy.append(DS0011_001)
T1574_002.identifiedBy.append(DS0011_001)
T1574_004.identifiedBy.append(DS0011_001)
T1574_005.identifiedBy.append(DS0011_001)
T1574_006.identifiedBy.append(DS0011_001)
T1574_012.identifiedBy.append(DS0011_001)
T1559.identifiedBy.append(DS0011_001)
T1559_001.identifiedBy.append(DS0011_001)
T1559_002.identifiedBy.append(DS0011_001)
T1556.identifiedBy.append(DS0011_001)
T1556_002.identifiedBy.append(DS0011_001)
T1556_007.identifiedBy.append(DS0011_001)
T1106.identifiedBy.append(DS0011_001)
T1027.identifiedBy.append(DS0011_001)
T1027_007.identifiedBy.append(DS0011_001)
T1137.identifiedBy.append(DS0011_001)
T1137_002.identifiedBy.append(DS0011_001)
T1055.identifiedBy.append(DS0011_001)
T1055_001.identifiedBy.append(DS0011_001)
T1055_014.identifiedBy.append(DS0011_001)
T1620.identifiedBy.append(DS0011_001)
T1021.identifiedBy.append(DS0011_001)
T1021_003.identifiedBy.append(DS0011_001)
T1505_005.identifiedBy.append(DS0011_001)
T1129.identifiedBy.append(DS0011_001)
T1553.identifiedBy.append(DS0011_001)
T1553_003.identifiedBy.append(DS0011_001)
T1218.identifiedBy.append(DS0011_001)
T1218_002.identifiedBy.append(DS0011_001)
T1218_007.identifiedBy.append(DS0011_001)
T1218_008.identifiedBy.append(DS0011_001)
T1218_010.identifiedBy.append(DS0011_001)
T1218_011.identifiedBy.append(DS0011_001)
T1220.identifiedBy.append(DS0011_001)
T1486.identifiedBy.append(DS0033_001)
T1039.identifiedBy.append(DS0033_001)
T1570.identifiedBy.append(DS0033_001)
T1021.identifiedBy.append(DS0033_001)
T1021_002.identifiedBy.append(DS0033_001)
T1080.identifiedBy.append(DS0033_001)
T1020.identifiedBy.append(DS0029_001)
T1020_001.identifiedBy.append(DS0029_001)
T1197.identifiedBy.append(DS0029_001)
T1176.identifiedBy.append(DS0029_001)
T1612.identifiedBy.append(DS0029_001)
T1602.identifiedBy.append(DS0029_001)
T1602_001.identifiedBy.append(DS0029_001)
T1602_002.identifiedBy.append(DS0029_001)
T1039.identifiedBy.append(DS0029_001)
T1030.identifiedBy.append(DS0029_001)
T1189.identifiedBy.append(DS0029_001)
T1568.identifiedBy.append(DS0029_001)
T1568_001.identifiedBy.append(DS0029_001)
T1114.identifiedBy.append(DS0029_001)
T1114_002.identifiedBy.append(DS0029_001)
T1048.identifiedBy.append(DS0029_001)
T1048_001.identifiedBy.append(DS0029_001)
T1048_002.identifiedBy.append(DS0029_001)
T1048_003.identifiedBy.append(DS0029_001)
T1041.identifiedBy.append(DS0029_001)
T1011.identifiedBy.append(DS0029_001)
T1011_001.identifiedBy.append(DS0029_001)
T1567.identifiedBy.append(DS0029_001)
T1567_002.identifiedBy.append(DS0029_001)
T1133.identifiedBy.append(DS0029_001)
T1008.identifiedBy.append(DS0029_001)
T1105.identifiedBy.append(DS0029_001)
T1104.identifiedBy.append(DS0029_001)
T1542.identifiedBy.append(DS0029_001)
T1542_005.identifiedBy.append(DS0029_001)
T1572.identifiedBy.append(DS0029_001)
T1090.identifiedBy.append(DS0029_001)
T1090_001.identifiedBy.append(DS0029_001)
T1090_002.identifiedBy.append(DS0029_001)
T1090_003.identifiedBy.append(DS0029_001)
T1219.identifiedBy.append(DS0029_001)
T1021.identifiedBy.append(DS0029_001)
T1021_001.identifiedBy.append(DS0029_001)
T1021_002.identifiedBy.append(DS0029_001)
T1021_003.identifiedBy.append(DS0029_001)
T1021_004.identifiedBy.append(DS0029_001)
T1021_005.identifiedBy.append(DS0029_001)
T1021_006.identifiedBy.append(DS0029_001)
T1018.identifiedBy.append(DS0029_001)
T1496.identifiedBy.append(DS0029_001)
T1029.identifiedBy.append(DS0029_001)
T1218.identifiedBy.append(DS0029_001)
T1218_003.identifiedBy.append(DS0029_001)
T1218_005.identifiedBy.append(DS0029_001)
T1218_007.identifiedBy.append(DS0029_001)
T1218_010.identifiedBy.append(DS0029_001)
T1221.identifiedBy.append(DS0029_001)
T1205.identifiedBy.append(DS0029_001)
T1205_001.identifiedBy.append(DS0029_001)
T1205_002.identifiedBy.append(DS0029_001)
T1204.identifiedBy.append(DS0029_001)
T1204_001.identifiedBy.append(DS0029_001)
T1102.identifiedBy.append(DS0029_001)
T1102_002.identifiedBy.append(DS0029_001)
T1102_003.identifiedBy.append(DS0029_001)
T1047.identifiedBy.append(DS0029_001)
T1087_002.identifiedBy.append(DS0029_002)
T1595.identifiedBy.append(DS0029_002)
T1595_002.identifiedBy.append(DS0029_002)
T1595_003.identifiedBy.append(DS0029_002)
T1557.identifiedBy.append(DS0029_002)
T1557_001.identifiedBy.append(DS0029_002)
T1557_002.identifiedBy.append(DS0029_002)
T1557_003.identifiedBy.append(DS0029_002)
T1071.identifiedBy.append(DS0029_002)
T1071_001.identifiedBy.append(DS0029_002)
T1071_002.identifiedBy.append(DS0029_002)
T1071_003.identifiedBy.append(DS0029_002)
T1071_004.identifiedBy.append(DS0029_002)
T1020.identifiedBy.append(DS0029_002)
T1612.identifiedBy.append(DS0029_002)
T1586.identifiedBy.append(DS0029_002)
T1586_001.identifiedBy.append(DS0029_002)
T1132.identifiedBy.append(DS0029_002)
T1132_001.identifiedBy.append(DS0029_002)
T1132_002.identifiedBy.append(DS0029_002)
T1602.identifiedBy.append(DS0029_002)
T1602_001.identifiedBy.append(DS0029_002)
T1602_002.identifiedBy.append(DS0029_002)
T1039.identifiedBy.append(DS0029_002)
T1565.identifiedBy.append(DS0029_002)
T1565_002.identifiedBy.append(DS0029_002)
T1001.identifiedBy.append(DS0029_002)
T1001_001.identifiedBy.append(DS0029_002)
T1001_002.identifiedBy.append(DS0029_002)
T1001_003.identifiedBy.append(DS0029_002)
T1491.identifiedBy.append(DS0029_002)
T1491_001.identifiedBy.append(DS0029_002)
T1491_002.identifiedBy.append(DS0029_002)
T1482.identifiedBy.append(DS0029_002)
T1189.identifiedBy.append(DS0029_002)
T1568.identifiedBy.append(DS0029_002)
T1568_003.identifiedBy.append(DS0029_002)
T1573.identifiedBy.append(DS0029_002)
T1573_001.identifiedBy.append(DS0029_002)
T1573_002.identifiedBy.append(DS0029_002)
T1499.identifiedBy.append(DS0029_002)
T1499_001.identifiedBy.append(DS0029_002)
T1499_002.identifiedBy.append(DS0029_002)
T1499_003.identifiedBy.append(DS0029_002)
T1499_004.identifiedBy.append(DS0029_002)
T1585.identifiedBy.append(DS0029_002)
T1585_001.identifiedBy.append(DS0029_002)
T1048.identifiedBy.append(DS0029_002)
T1048_001.identifiedBy.append(DS0029_002)
T1048_002.identifiedBy.append(DS0029_002)
T1048_003.identifiedBy.append(DS0029_002)
T1041.identifiedBy.append(DS0029_002)
T1011.identifiedBy.append(DS0029_002)
T1011_001.identifiedBy.append(DS0029_002)
T1567.identifiedBy.append(DS0029_002)
T1567_001.identifiedBy.append(DS0029_002)
T1567_002.identifiedBy.append(DS0029_002)
T1567_003.identifiedBy.append(DS0029_002)
T1190.identifiedBy.append(DS0029_002)
T1210.identifiedBy.append(DS0029_002)
T1133.identifiedBy.append(DS0029_002)
T1187.identifiedBy.append(DS0029_002)
T1589.identifiedBy.append(DS0029_002)
T1589_002.identifiedBy.append(DS0029_002)
T1615.identifiedBy.append(DS0029_002)
T1070.identifiedBy.append(DS0029_002)
T1070_005.identifiedBy.append(DS0029_002)
T1105.identifiedBy.append(DS0029_002)
T1534.identifiedBy.append(DS0029_002)
T1570.identifiedBy.append(DS0029_002)
T1599.identifiedBy.append(DS0029_002)
T1599_001.identifiedBy.append(DS0029_002)
T1095.identifiedBy.append(DS0029_002)
T1571.identifiedBy.append(DS0029_002)
T1003.identifiedBy.append(DS0029_002)
T1003_006.identifiedBy.append(DS0029_002)
T1566.identifiedBy.append(DS0029_002)
T1566_001.identifiedBy.append(DS0029_002)
T1566_002.identifiedBy.append(DS0029_002)
T1566_003.identifiedBy.append(DS0029_002)
T1598.identifiedBy.append(DS0029_002)
T1598_001.identifiedBy.append(DS0029_002)
T1598_002.identifiedBy.append(DS0029_002)
T1598_003.identifiedBy.append(DS0029_002)
T1572.identifiedBy.append(DS0029_002)
T1090.identifiedBy.append(DS0029_002)
T1090_001.identifiedBy.append(DS0029_002)
T1090_002.identifiedBy.append(DS0029_002)
T1090_003.identifiedBy.append(DS0029_002)
T1090_004.identifiedBy.append(DS0029_002)
T1219.identifiedBy.append(DS0029_002)
T1563.identifiedBy.append(DS0029_002)
T1563_001.identifiedBy.append(DS0029_002)
T1563_002.identifiedBy.append(DS0029_002)
T1207.identifiedBy.append(DS0029_002)
T1505.identifiedBy.append(DS0029_002)
T1505_003.identifiedBy.append(DS0029_002)
T1033.identifiedBy.append(DS0029_002)
T1221.identifiedBy.append(DS0029_002)
T1205.identifiedBy.append(DS0029_002)
T1537.identifiedBy.append(DS0029_002)
T1199.identifiedBy.append(DS0029_002)
T1204.identifiedBy.append(DS0029_002)
T1204_001.identifiedBy.append(DS0029_002)
T1102.identifiedBy.append(DS0029_002)
T1102_001.identifiedBy.append(DS0029_002)
T1102_002.identifiedBy.append(DS0029_002)
T1102_003.identifiedBy.append(DS0029_002)
T1595.identifiedBy.append(DS0029_003)
T1595_001.identifiedBy.append(DS0029_003)
T1595_002.identifiedBy.append(DS0029_003)
T1557.identifiedBy.append(DS0029_003)
T1557_001.identifiedBy.append(DS0029_003)
T1557_002.identifiedBy.append(DS0029_003)
T1557_003.identifiedBy.append(DS0029_003)
T1071.identifiedBy.append(DS0029_003)
T1071_001.identifiedBy.append(DS0029_003)
T1071_002.identifiedBy.append(DS0029_003)
T1071_003.identifiedBy.append(DS0029_003)
T1071_004.identifiedBy.append(DS0029_003)
T1020.identifiedBy.append(DS0029_003)
T1020_001.identifiedBy.append(DS0029_003)
T1612.identifiedBy.append(DS0029_003)
T1543_003.identifiedBy.append(DS0029_003)
T1039.identifiedBy.append(DS0029_003)
T1565.identifiedBy.append(DS0029_003)
T1565_002.identifiedBy.append(DS0029_003)
T1030.identifiedBy.append(DS0029_003)
T1568.identifiedBy.append(DS0029_003)
T1568_001.identifiedBy.append(DS0029_003)
T1568_002.identifiedBy.append(DS0029_003)
T1499.identifiedBy.append(DS0029_003)
T1499_001.identifiedBy.append(DS0029_003)
T1499_002.identifiedBy.append(DS0029_003)
T1499_003.identifiedBy.append(DS0029_003)
T1499_004.identifiedBy.append(DS0029_003)
T1048.identifiedBy.append(DS0029_003)
T1048_001.identifiedBy.append(DS0029_003)
T1048_002.identifiedBy.append(DS0029_003)
T1048_003.identifiedBy.append(DS0029_003)
T1041.identifiedBy.append(DS0029_003)
T1011.identifiedBy.append(DS0029_003)
T1011_001.identifiedBy.append(DS0029_003)
T1567.identifiedBy.append(DS0029_003)
T1567_001.identifiedBy.append(DS0029_003)
T1567_002.identifiedBy.append(DS0029_003)
T1567_003.identifiedBy.append(DS0029_003)
T1133.identifiedBy.append(DS0029_003)
T1008.identifiedBy.append(DS0029_003)
T1187.identifiedBy.append(DS0029_003)
T1200.identifiedBy.append(DS0029_003)
T1105.identifiedBy.append(DS0029_003)
T1534.identifiedBy.append(DS0029_003)
T1570.identifiedBy.append(DS0029_003)
T1112.identifiedBy.append(DS0029_003)
T1104.identifiedBy.append(DS0029_003)
T1599.identifiedBy.append(DS0029_003)
T1599_001.identifiedBy.append(DS0029_003)
T1498.identifiedBy.append(DS0029_003)
T1498_001.identifiedBy.append(DS0029_003)
T1498_002.identifiedBy.append(DS0029_003)
T1046.identifiedBy.append(DS0029_003)
T1095.identifiedBy.append(DS0029_003)
T1571.identifiedBy.append(DS0029_003)
T1003.identifiedBy.append(DS0029_003)
T1003_006.identifiedBy.append(DS0029_003)
T1566.identifiedBy.append(DS0029_003)
T1566_001.identifiedBy.append(DS0029_003)
T1566_002.identifiedBy.append(DS0029_003)
T1566_003.identifiedBy.append(DS0029_003)
T1598.identifiedBy.append(DS0029_003)
T1598_001.identifiedBy.append(DS0029_003)
T1598_002.identifiedBy.append(DS0029_003)
T1598_003.identifiedBy.append(DS0029_003)
T1572.identifiedBy.append(DS0029_003)
T1090.identifiedBy.append(DS0029_003)
T1090_001.identifiedBy.append(DS0029_003)
T1090_002.identifiedBy.append(DS0029_003)
T1090_003.identifiedBy.append(DS0029_003)
T1219.identifiedBy.append(DS0029_003)
T1563.identifiedBy.append(DS0029_003)
T1563_001.identifiedBy.append(DS0029_003)
T1563_002.identifiedBy.append(DS0029_003)
T1021.identifiedBy.append(DS0029_003)
T1021_001.identifiedBy.append(DS0029_003)
T1021_002.identifiedBy.append(DS0029_003)
T1021_006.identifiedBy.append(DS0029_003)
T1496.identifiedBy.append(DS0029_003)
T1053_002.identifiedBy.append(DS0029_003)
T1053_005.identifiedBy.append(DS0029_003)
T1029.identifiedBy.append(DS0029_003)
T1505.identifiedBy.append(DS0029_003)
T1505_003.identifiedBy.append(DS0029_003)
T1033.identifiedBy.append(DS0029_003)
T1569.identifiedBy.append(DS0029_003)
T1205.identifiedBy.append(DS0029_003)
T1205_001.identifiedBy.append(DS0029_003)
T1102.identifiedBy.append(DS0029_003)
T1102_001.identifiedBy.append(DS0029_003)
T1102_002.identifiedBy.append(DS0029_003)
T1102_003.identifiedBy.append(DS0029_003)
T1586.identifiedBy.append(DS0021_001)
T1586_001.identifiedBy.append(DS0021_001)
T1585.identifiedBy.append(DS0021_001)
T1585_001.identifiedBy.append(DS0021_001)
T1610.identifiedBy.append(DS0014_001)
T1613.identifiedBy.append(DS0014_002)
T1610.identifiedBy.append(DS0014_003)
T1548.identifiedBy.append(DS0009_001)
T1548_004.identifiedBy.append(DS0009_001)
T1134.identifiedBy.append(DS0009_001)
T1134_001.identifiedBy.append(DS0009_001)
T1134_002.identifiedBy.append(DS0009_001)
T1134_003.identifiedBy.append(DS0009_001)
T1134_004.identifiedBy.append(DS0009_001)
T1134_005.identifiedBy.append(DS0009_001)
T1087_001.identifiedBy.append(DS0009_001)
T1087_002.identifiedBy.append(DS0009_001)
T1010.identifiedBy.append(DS0009_001)
T1123.identifiedBy.append(DS0009_001)
T1547.identifiedBy.append(DS0009_001)
T1547_010.identifiedBy.append(DS0009_001)
T1547_012.identifiedBy.append(DS0009_001)
T1115.identifiedBy.append(DS0009_001)
T1059_002.identifiedBy.append(DS0009_001)
T1543.identifiedBy.append(DS0009_001)
T1543_003.identifiedBy.append(DS0009_001)
T1555.identifiedBy.append(DS0009_001)
T1555_001.identifiedBy.append(DS0009_001)
T1555_003.identifiedBy.append(DS0009_001)
T1555_004.identifiedBy.append(DS0009_001)
T1555_005.identifiedBy.append(DS0009_001)
T1005.identifiedBy.append(DS0009_001)
T1565.identifiedBy.append(DS0009_001)
T1565_002.identifiedBy.append(DS0009_001)
T1565_003.identifiedBy.append(DS0009_001)
T1622.identifiedBy.append(DS0009_001)
T1652.identifiedBy.append(DS0009_001)
T1482.identifiedBy.append(DS0009_001)
T1611.identifiedBy.append(DS0009_001)
T1546_009.identifiedBy.append(DS0009_001)
T1546_010.identifiedBy.append(DS0009_001)
T1083.identifiedBy.append(DS0009_001)
T1564.identifiedBy.append(DS0009_001)
T1564_004.identifiedBy.append(DS0009_001)
T1574_013.identifiedBy.append(DS0009_001)
T1562.identifiedBy.append(DS0009_001)
T1070.identifiedBy.append(DS0009_001)
T1070_001.identifiedBy.append(DS0009_001)
T1056.identifiedBy.append(DS0009_001)
T1056_001.identifiedBy.append(DS0009_001)
T1056_004.identifiedBy.append(DS0009_001)
T1036.identifiedBy.append(DS0009_001)
T1556.identifiedBy.append(DS0009_001)
T1556_001.identifiedBy.append(DS0009_001)
T1556_008.identifiedBy.append(DS0009_001)
T1112.identifiedBy.append(DS0009_001)
T1111.identifiedBy.append(DS0009_001)
T1106.identifiedBy.append(DS0009_001)
T1135.identifiedBy.append(DS0009_001)
T1027.identifiedBy.append(DS0009_001)
T1027_007.identifiedBy.append(DS0009_001)
T1003.identifiedBy.append(DS0009_001)
T1003_001.identifiedBy.append(DS0009_001)
T1120.identifiedBy.append(DS0009_001)
T1069_001.identifiedBy.append(DS0009_001)
T1069_002.identifiedBy.append(DS0009_001)
T1542.identifiedBy.append(DS0009_001)
T1542_002.identifiedBy.append(DS0009_001)
T1057.identifiedBy.append(DS0009_001)
T1055.identifiedBy.append(DS0009_001)
T1055_001.identifiedBy.append(DS0009_001)
T1055_002.identifiedBy.append(DS0009_001)
T1055_003.identifiedBy.append(DS0009_001)
T1055_004.identifiedBy.append(DS0009_001)
T1055_005.identifiedBy.append(DS0009_001)
T1055_008.identifiedBy.append(DS0009_001)
T1055_011.identifiedBy.append(DS0009_001)
T1055_012.identifiedBy.append(DS0009_001)
T1055_013.identifiedBy.append(DS0009_001)
T1055_014.identifiedBy.append(DS0009_001)
T1055_015.identifiedBy.append(DS0009_001)
T1012.identifiedBy.append(DS0009_001)
T1620.identifiedBy.append(DS0009_001)
T1113.identifiedBy.append(DS0009_001)
T1489.identifiedBy.append(DS0009_001)
T1129.identifiedBy.append(DS0009_001)
T1518.identifiedBy.append(DS0009_001)
T1518_001.identifiedBy.append(DS0009_001)
T1218.identifiedBy.append(DS0009_001)
T1218_002.identifiedBy.append(DS0009_001)
T1082.identifiedBy.append(DS0009_001)
T1614.identifiedBy.append(DS0009_001)
T1614_001.identifiedBy.append(DS0009_001)
T1016.identifiedBy.append(DS0009_001)
T1049.identifiedBy.append(DS0009_001)
T1033.identifiedBy.append(DS0009_001)
T1007.identifiedBy.append(DS0009_001)
T1124.identifiedBy.append(DS0009_001)
T1125.identifiedBy.append(DS0009_001)
T1497.identifiedBy.append(DS0009_001)
T1497_001.identifiedBy.append(DS0009_001)
T1497_002.identifiedBy.append(DS0009_001)
T1497_003.identifiedBy.append(DS0009_001)
T1185.identifiedBy.append(DS0009_002)
T1555.identifiedBy.append(DS0009_002)
T1555_002.identifiedBy.append(DS0009_002)
T1555_003.identifiedBy.append(DS0009_002)
T1555_005.identifiedBy.append(DS0009_002)
T1559.identifiedBy.append(DS0009_002)
T1559_003.identifiedBy.append(DS0009_002)
T1556.identifiedBy.append(DS0009_002)
T1556_001.identifiedBy.append(DS0009_002)
T1003.identifiedBy.append(DS0009_002)
T1003_001.identifiedBy.append(DS0009_002)
T1055.identifiedBy.append(DS0009_002)
T1055_001.identifiedBy.append(DS0009_002)
T1055_002.identifiedBy.append(DS0009_002)
T1055_003.identifiedBy.append(DS0009_002)
T1055_004.identifiedBy.append(DS0009_002)
T1055_005.identifiedBy.append(DS0009_002)
T1055_008.identifiedBy.append(DS0009_002)
T1055_012.identifiedBy.append(DS0009_002)
T1539.identifiedBy.append(DS0009_002)
T1033.identifiedBy.append(DS0009_002)
T1548.identifiedBy.append(DS0009_003)
T1548_002.identifiedBy.append(DS0009_003)
T1548_003.identifiedBy.append(DS0009_003)
T1548_004.identifiedBy.append(DS0009_003)
T1134.identifiedBy.append(DS0009_003)
T1134_004.identifiedBy.append(DS0009_003)
T1087.identifiedBy.append(DS0009_003)
T1087_001.identifiedBy.append(DS0009_003)
T1087_002.identifiedBy.append(DS0009_003)
T1087_003.identifiedBy.append(DS0009_003)
T1098.identifiedBy.append(DS0009_003)
T1098_004.identifiedBy.append(DS0009_003)
T1010.identifiedBy.append(DS0009_003)
T1560.identifiedBy.append(DS0009_003)
T1560_001.identifiedBy.append(DS0009_003)
T1197.identifiedBy.append(DS0009_003)
T1547.identifiedBy.append(DS0009_003)
T1547_001.identifiedBy.append(DS0009_003)
T1547_003.identifiedBy.append(DS0009_003)
T1547_006.identifiedBy.append(DS0009_003)
T1547_009.identifiedBy.append(DS0009_003)
T1547_013.identifiedBy.append(DS0009_003)
T1547_014.identifiedBy.append(DS0009_003)
T1547_015.identifiedBy.append(DS0009_003)
T1037.identifiedBy.append(DS0009_003)
T1037_001.identifiedBy.append(DS0009_003)
T1037_002.identifiedBy.append(DS0009_003)
T1037_003.identifiedBy.append(DS0009_003)
T1037_004.identifiedBy.append(DS0009_003)
T1037_005.identifiedBy.append(DS0009_003)
T1176.identifiedBy.append(DS0009_003)
T1217.identifiedBy.append(DS0009_003)
T1651.identifiedBy.append(DS0009_003)
T1059.identifiedBy.append(DS0009_003)
T1059_001.identifiedBy.append(DS0009_003)
T1059_002.identifiedBy.append(DS0009_003)
T1059_003.identifiedBy.append(DS0009_003)
T1059_004.identifiedBy.append(DS0009_003)
T1059_005.identifiedBy.append(DS0009_003)
T1059_006.identifiedBy.append(DS0009_003)
T1059_007.identifiedBy.append(DS0009_003)
T1609.identifiedBy.append(DS0009_003)
T1136.identifiedBy.append(DS0009_003)
T1136_001.identifiedBy.append(DS0009_003)
T1136_002.identifiedBy.append(DS0009_003)
T1543.identifiedBy.append(DS0009_003)
T1543_002.identifiedBy.append(DS0009_003)
T1543_003.identifiedBy.append(DS0009_003)
T1543_004.identifiedBy.append(DS0009_003)
T1555.identifiedBy.append(DS0009_003)
T1555_001.identifiedBy.append(DS0009_003)
T1555_004.identifiedBy.append(DS0009_003)
T1485.identifiedBy.append(DS0009_003)
T1486.identifiedBy.append(DS0009_003)
T1005.identifiedBy.append(DS0009_003)
T1622.identifiedBy.append(DS0009_003)
T1140.identifiedBy.append(DS0009_003)
T1652.identifiedBy.append(DS0009_003)
T1561.identifiedBy.append(DS0009_003)
T1561_001.identifiedBy.append(DS0009_003)
T1561_002.identifiedBy.append(DS0009_003)
T1482.identifiedBy.append(DS0009_003)
T1189.identifiedBy.append(DS0009_003)
T1611.identifiedBy.append(DS0009_003)
T1546.identifiedBy.append(DS0009_003)
T1546_001.identifiedBy.append(DS0009_003)
T1548_005.identifiedBy.append(DS0002)
T1098_006.identifiedBy.append(DS0002)
T1659.identifiedBy.append(DS0022)
T1659.identifiedBy.append(DS0029)
T1659.identifiedBy.append(DS0009)
T1555_006.identifiedBy.append(DS0025)
T1567_004.identifiedBy.append(DS0015)
T1567_004.identifiedBy.append(DS0017)
T1567_004.identifiedBy.append(DS0022)
T1567_004.identifiedBy.append(DS0029)
T1657.identifiedBy.append(DS0015)
T1564_011.identifiedBy.append(DS0017)
T1564_011.identifiedBy.append(DS0009)
T1562_012.identifiedBy.append(DS0017)
T1562_012.identifiedBy.append(DS0022)
T1562_012.identifiedBy.append(DS0009)
T1656.identifiedBy.append(DS0015)
T1654.identifiedBy.append(DS0017)
T1654.identifiedBy.append(DS0022)
T1654.identifiedBy.append(DS0009)
T1036_009.identifiedBy.append(DS0009)
T1578_005.identifiedBy.append(DS0025)
T1027_012.identifiedBy.append(DS0022)
T1566_004.identifiedBy.append(DS0015)
T1598_004.identifiedBy.append(DS0015)
T1653.identifiedBy.append(DS0017)
T1653.identifiedBy.append(DS0022)
T1021_008.identifiedBy.append(DS0028)
T1016_002.identifiedBy.append(DS0017)
T1016_002.identifiedBy.append(DS0009)
T1546_002.identifiedBy.append(DS0009_003)
T1546_003.identifiedBy.append(DS0009_003)
T1546_004.identifiedBy.append(DS0009_003)
T1546_005.identifiedBy.append(DS0009_003)
T1546_006.identifiedBy.append(DS0009_003)
T1546_007.identifiedBy.append(DS0009_003)
T1546_008.identifiedBy.append(DS0009_003)
T1546_009.identifiedBy.append(DS0009_003)
T1546_010.identifiedBy.append(DS0009_003)
T1546_011.identifiedBy.append(DS0009_003)
T1546_012.identifiedBy.append(DS0009_003)
T1546_013.identifiedBy.append(DS0009_003)
T1546_014.identifiedBy.append(DS0009_003)
T1546_015.identifiedBy.append(DS0009_003)
T1546_016.identifiedBy.append(DS0009_003)
T1480.identifiedBy.append(DS0009_003)
T1480_001.identifiedBy.append(DS0009_003)
T1052.identifiedBy.append(DS0009_003)
T1052_001.identifiedBy.append(DS0009_003)
T1203.identifiedBy.append(DS0009_003)
T1212.identifiedBy.append(DS0009_003)
T1211.identifiedBy.append(DS0009_003)
T1068.identifiedBy.append(DS0009_003)
T1083.identifiedBy.append(DS0009_003)
T1222.identifiedBy.append(DS0009_003)
T1222_001.identifiedBy.append(DS0009_003)
T1222_002.identifiedBy.append(DS0009_003)
T1615.identifiedBy.append(DS0009_003)
T1564.identifiedBy.append(DS0009_003)
T1564_001.identifiedBy.append(DS0009_003)
T1564_002.identifiedBy.append(DS0009_003)
T1564_003.identifiedBy.append(DS0009_003)
T1564_006.identifiedBy.append(DS0009_003)
T1564_009.identifiedBy.append(DS0009_003)
T1564_010.identifiedBy.append(DS0009_003)
T1574.identifiedBy.append(DS0009_003)
T1574_002.identifiedBy.append(DS0009_003)
T1574_005.identifiedBy.append(DS0009_003)
T1574_006.identifiedBy.append(DS0009_003)
T1574_007.identifiedBy.append(DS0009_003)
T1574_008.identifiedBy.append(DS0009_003)
T1574_009.identifiedBy.append(DS0009_003)
T1574_010.identifiedBy.append(DS0009_003)
T1574_011.identifiedBy.append(DS0009_003)
T1574_012.identifiedBy.append(DS0009_003)
T1562.identifiedBy.append(DS0009_003)
T1562_001.identifiedBy.append(DS0009_003)
T1562_002.identifiedBy.append(DS0009_003)
T1562_009.identifiedBy.append(DS0009_003)
T1562_010.identifiedBy.append(DS0009_003)
T1562_011.identifiedBy.append(DS0009_003)
T1070.identifiedBy.append(DS0009_003)
T1070_001.identifiedBy.append(DS0009_003)
T1070_005.identifiedBy.append(DS0009_003)
T1070_007.identifiedBy.append(DS0009_003)
T1070_008.identifiedBy.append(DS0009_003)
T1070_009.identifiedBy.append(DS0009_003)
T1202.identifiedBy.append(DS0009_003)
T1490.identifiedBy.append(DS0009_003)
T1056.identifiedBy.append(DS0009_003)
T1056_002.identifiedBy.append(DS0009_003)
T1559.identifiedBy.append(DS0009_003)
T1559_001.identifiedBy.append(DS0009_003)
T1559_002.identifiedBy.append(DS0009_003)
T1570.identifiedBy.append(DS0009_003)
T1036.identifiedBy.append(DS0009_003)
T1036_005.identifiedBy.append(DS0009_003)
T1112.identifiedBy.append(DS0009_003)
T1135.identifiedBy.append(DS0009_003)
T1040.identifiedBy.append(DS0009_003)
T1027.identifiedBy.append(DS0009_003)
T1027_004.identifiedBy.append(DS0009_003)
T1137.identifiedBy.append(DS0009_003)
T1137_001.identifiedBy.append(DS0009_003)
T1137_002.identifiedBy.append(DS0009_003)
T1137_003.identifiedBy.append(DS0009_003)
T1137_004.identifiedBy.append(DS0009_003)
T1137_005.identifiedBy.append(DS0009_003)
T1137_006.identifiedBy.append(DS0009_003)
T1003.identifiedBy.append(DS0009_003)
T1003_001.identifiedBy.append(DS0009_003)
T1201.identifiedBy.append(DS0009_003)
T1120.identifiedBy.append(DS0009_003)
T1069.identifiedBy.append(DS0009_003)
T1069_001.identifiedBy.append(DS0009_003)
T1069_002.identifiedBy.append(DS0009_003)
T1069_003.identifiedBy.append(DS0009_003)
T1647.identifiedBy.append(DS0009_003)
T1057.identifiedBy.append(DS0009_003)
T1055_012.identifiedBy.append(DS0009_003)
T1012.identifiedBy.append(DS0009_003)
T1219.identifiedBy.append(DS0009_003)
T1563.identifiedBy.append(DS0009_003)
T1563_001.identifiedBy.append(DS0009_003)
T1563_002.identifiedBy.append(DS0009_003)
T1021.identifiedBy.append(DS0009_003)
T1021_001.identifiedBy.append(DS0009_003)
T1021_002.identifiedBy.append(DS0009_003)
T1021_003.identifiedBy.append(DS0009_003)
T1021_004.identifiedBy.append(DS0009_003)
T1021_005.identifiedBy.append(DS0009_003)
T1021_006.identifiedBy.append(DS0009_003)
T1018.identifiedBy.append(DS0009_003)
T1091.identifiedBy.append(DS0009_003)
T1496.identifiedBy.append(DS0009_003)
T1053.identifiedBy.append(DS0009_003)
T1053_002.identifiedBy.append(DS0009_003)
T1053_003.identifiedBy.append(DS0009_003)
T1053_005.identifiedBy.append(DS0009_003)
T1053_006.identifiedBy.append(DS0009_003)
T1505.identifiedBy.append(DS0009_003)
T1505_003.identifiedBy.append(DS0009_003)
T1505_005.identifiedBy.append(DS0009_003)
T1489.identifiedBy.append(DS0009_003)
T1072.identifiedBy.append(DS0009_003)
T1518.identifiedBy.append(DS0009_003)
T1518_001.identifiedBy.append(DS0009_003)
T1553.identifiedBy.append(DS0009_003)
T1553_001.identifiedBy.append(DS0009_003)
T1553_004.identifiedBy.append(DS0009_003)
T1553_006.identifiedBy.append(DS0009_003)
T1218.identifiedBy.append(DS0009_003)
T1218_001.identifiedBy.append(DS0009_003)
T1218_002.identifiedBy.append(DS0009_003)
T1218_003.identifiedBy.append(DS0009_003)
T1218_004.identifiedBy.append(DS0009_003)
T1218_005.identifiedBy.append(DS0009_003)
T1218_007.identifiedBy.append(DS0009_003)
T1218_008.identifiedBy.append(DS0009_003)
T1218_009.identifiedBy.append(DS0009_003)
T1218_010.identifiedBy.append(DS0009_003)
T1218_011.identifiedBy.append(DS0009_003)
T1218_012.identifiedBy.append(DS0009_003)
T1218_013.identifiedBy.append(DS0009_003)
T1218_014.identifiedBy.append(DS0009_003)
T1082.identifiedBy.append(DS0009_003)
T1614.identifiedBy.append(DS0009_003)
T1614_001.identifiedBy.append(DS0009_003)
T1016.identifiedBy.append(DS0009_003)
T1016_001.identifiedBy.append(DS0009_003)
T1049.identifiedBy.append(DS0009_003)
T1033.identifiedBy.append(DS0009_003)
T1216.identifiedBy.append(DS0009_003)
T1216_001.identifiedBy.append(DS0009_003)
T1007.identifiedBy.append(DS0009_003)
T1569.identifiedBy.append(DS0009_003)
T1569_001.identifiedBy.append(DS0009_003)
T1569_002.identifiedBy.append(DS0009_003)
T1529.identifiedBy.append(DS0009_003)
T1124.identifiedBy.append(DS0009_003)
T1080.identifiedBy.append(DS0009_003)
T1221.identifiedBy.append(DS0009_003)
T1205.identifiedBy.append(DS0009_003)
T1205_002.identifiedBy.append(DS0009_003)
T1127.identifiedBy.append(DS0009_003)
T1127_001.identifiedBy.append(DS0009_003)
T1552.identifiedBy.append(DS0009_003)
T1552_001.identifiedBy.append(DS0009_003)
T1552_002.identifiedBy.append(DS0009_003)
T1204.identifiedBy.append(DS0009_003)
T1204_002.identifiedBy.append(DS0009_003)
T1497.identifiedBy.append(DS0009_003)
T1497_001.identifiedBy.append(DS0009_003)
T1497_002.identifiedBy.append(DS0009_003)
T1497_003.identifiedBy.append(DS0009_003)
T1047.identifiedBy.append(DS0009_003)
T1220.identifiedBy.append(DS0009_003)
T1548.identifiedBy.append(DS0009_004)
T1548_002.identifiedBy.append(DS0009_004)
T1548_003.identifiedBy.append(DS0009_004)
T1134.identifiedBy.append(DS0009_004)
T1134_004.identifiedBy.append(DS0009_004)
T1059.identifiedBy.append(DS0009_004)
T1059_001.identifiedBy.append(DS0009_004)
T1562_010.identifiedBy.append(DS0009_004)
T1056.identifiedBy.append(DS0009_004)
T1056_004.identifiedBy.append(DS0009_004)
T1036.identifiedBy.append(DS0009_004)
T1036_003.identifiedBy.append(DS0009_004)
T1036_005.identifiedBy.append(DS0009_004)
T1055.identifiedBy.append(DS0009_004)
T1055_001.identifiedBy.append(DS0009_004)
T1185.identifiedBy.append(DS0009_005)
T1562.identifiedBy.append(DS0009_005)
T1055.identifiedBy.append(DS0009_005)
T1055_001.identifiedBy.append(DS0009_005)
T1055_002.identifiedBy.append(DS0009_005)
T1055_003.identifiedBy.append(DS0009_005)
T1055_004.identifiedBy.append(DS0009_005)
T1055_005.identifiedBy.append(DS0009_005)
T1055_008.identifiedBy.append(DS0009_005)
T1055_012.identifiedBy.append(DS0009_005)
T1055_015.identifiedBy.append(DS0009_005)
T1562.identifiedBy.append(DS0009_006)
T1562_001.identifiedBy.append(DS0009_006)
T1489.identifiedBy.append(DS0009_006)
T1053.identifiedBy.append(DS0003_001)
T1053_002.identifiedBy.append(DS0003_001)
T1053_003.identifiedBy.append(DS0003_001)
T1053_005.identifiedBy.append(DS0003_001)
T1053_006.identifiedBy.append(DS0003_001)
T1053_007.identifiedBy.append(DS0003_001)
T1036.identifiedBy.append(DS0003_002)
T1036_004.identifiedBy.append(DS0003_002)
T1070.identifiedBy.append(DS0003_003)
T1070_009.identifiedBy.append(DS0003_003)
T1036.identifiedBy.append(DS0003_003)
T1036_004.identifiedBy.append(DS0003_003)
T1560.identifiedBy.append(DS0012_001)
T1560_002.identifiedBy.append(DS0012_001)
T1560_003.identifiedBy.append(DS0012_001)
T1119.identifiedBy.append(DS0012_001)
T1020.identifiedBy.append(DS0012_001)
T1651.identifiedBy.append(DS0012_001)
T1059.identifiedBy.append(DS0012_001)
T1059_001.identifiedBy.append(DS0012_001)
T1059_005.identifiedBy.append(DS0012_001)
T1059_007.identifiedBy.append(DS0012_001)
T1005.identifiedBy.append(DS0012_001)
T1140.identifiedBy.append(DS0012_001)
T1482.identifiedBy.append(DS0012_001)
T1615.identifiedBy.append(DS0012_001)
T1564.identifiedBy.append(DS0012_001)
T1564_003.identifiedBy.append(DS0012_001)
T1564_007.identifiedBy.append(DS0012_001)
T1562.identifiedBy.append(DS0012_001)
T1562_002.identifiedBy.append(DS0012_001)
T1056_002.identifiedBy.append(DS0012_001)
T1559.identifiedBy.append(DS0012_001)
T1559_001.identifiedBy.append(DS0012_001)
T1559_002.identifiedBy.append(DS0012_001)
T1556_005.identifiedBy.append(DS0012_001)
T1027.identifiedBy.append(DS0012_001)
T1027_010.identifiedBy.append(DS0012_001)
T1620.identifiedBy.append(DS0012_001)
T1016.identifiedBy.append(DS0012_001)
T1216.identifiedBy.append(DS0012_001)
T1216_001.identifiedBy.append(DS0012_001)
T1499.identifiedBy.append(DS0013_001)
T1499_001.identifiedBy.append(DS0013_001)
T1499_002.identifiedBy.append(DS0013_001)
T1499_003.identifiedBy.append(DS0013_001)
T1499_004.identifiedBy.append(DS0013_001)
T1562.identifiedBy.append(DS0013_001)
T1562_001.identifiedBy.append(DS0013_001)
T1562_002.identifiedBy.append(DS0013_001)
T1562_003.identifiedBy.append(DS0013_001)
T1562_006.identifiedBy.append(DS0013_001)
T1562_011.identifiedBy.append(DS0013_001)
T1498.identifiedBy.append(DS0013_001)
T1498_001.identifiedBy.append(DS0013_001)
T1498_002.identifiedBy.append(DS0013_001)
T1496.identifiedBy.append(DS0013_001)
T1195.identifiedBy.append(DS0013_001)
T1195_003.identifiedBy.append(DS0013_001)
T1529.identifiedBy.append(DS0013_001)
T1557.identifiedBy.append(DS0019_001)
T1557_001.identifiedBy.append(DS0019_001)
T1543.identifiedBy.append(DS0019_001)
T1543_001.identifiedBy.append(DS0019_001)
T1543_002.identifiedBy.append(DS0019_001)
T1543_003.identifiedBy.append(DS0019_001)
T1543_004.identifiedBy.append(DS0019_001)
T1564.identifiedBy.append(DS0019_001)
T1564_006.identifiedBy.append(DS0019_001)
T1036.identifiedBy.append(DS0019_001)
T1036_004.identifiedBy.append(DS0019_001)
T1569.identifiedBy.append(DS0019_001)
T1569_001.identifiedBy.append(DS0019_001)
T1569_002.identifiedBy.append(DS0019_001)
T1197.identifiedBy.append(DS0019_002)
T1574.identifiedBy.append(DS0019_002)
T1574_005.identifiedBy.append(DS0019_002)
T1574_010.identifiedBy.append(DS0019_002)
T1562.identifiedBy.append(DS0019_002)
T1562_001.identifiedBy.append(DS0019_002)
T1490.identifiedBy.append(DS0019_002)
T1036.identifiedBy.append(DS0019_002)
T1036_004.identifiedBy.append(DS0019_002)
T1021_006.identifiedBy.append(DS0019_002)
T1489.identifiedBy.append(DS0019_002)
T1543.identifiedBy.append(DS0019_003)
T1543_001.identifiedBy.append(DS0019_003)
T1543_002.identifiedBy.append(DS0019_003)
T1543_003.identifiedBy.append(DS0019_003)
T1543_004.identifiedBy.append(DS0019_003)
T1574_011.identifiedBy.append(DS0019_003)
T1578.identifiedBy.append(DS0020_001)
T1578_001.identifiedBy.append(DS0020_001)
T1537.identifiedBy.append(DS0020_001)
T1485.identifiedBy.append(DS0020_002)
T1490.identifiedBy.append(DS0020_002)
T1578.identifiedBy.append(DS0020_002)
T1580.identifiedBy.append(DS0020_003)
T1578.identifiedBy.append(DS0020_004)
T1578_001.identifiedBy.append(DS0020_004)
T1537.identifiedBy.append(DS0020_004)
T1578.identifiedBy.append(DS0020_005)
T1537.identifiedBy.append(DS0020_005)
T1110.identifiedBy.append(DS0002_001)
T1110_001.identifiedBy.append(DS0002_001)
T1110_002.identifiedBy.append(DS0002_001)
T1110_003.identifiedBy.append(DS0002_001)
T1110_004.identifiedBy.append(DS0002_001)
T1538.identifiedBy.append(DS0002_001)
T1212.identifiedBy.append(DS0002_001)
T1606_002.identifiedBy.append(DS0002_001)
T1070.identifiedBy.append(DS0002_001)
T1070_003.identifiedBy.append(DS0002_001)
T1070_005.identifiedBy.append(DS0002_001)
T1556.identifiedBy.append(DS0002_001)
T1556_006.identifiedBy.append(DS0002_001)
T1621.identifiedBy.append(DS0002_001)
T1207.identifiedBy.append(DS0002_001)
T1552.identifiedBy.append(DS0002_001)
T1552_005.identifiedBy.append(DS0002_001)
T1552_007.identifiedBy.append(DS0002_001)
T1550.identifiedBy.append(DS0002_001)
T1550_002.identifiedBy.append(DS0002_001)
T1550_003.identifiedBy.append(DS0002_001)
T1078.identifiedBy.append(DS0002_001)
T1078_001.identifiedBy.append(DS0002_001)
T1078_002.identifiedBy.append(DS0002_001)
T1078_003.identifiedBy.append(DS0002_001)
T1078_004.identifiedBy.append(DS0002_001)
T1136.identifiedBy.append(DS0002_002)
T1136_001.identifiedBy.append(DS0002_002)
T1136_002.identifiedBy.append(DS0002_002)
T1136_003.identifiedBy.append(DS0002_002)
T1564.identifiedBy.append(DS0002_002)
T1564_002.identifiedBy.append(DS0002_002)
T1531.identifiedBy.append(DS0002_003)
T1070.identifiedBy.append(DS0002_003)
T1070_009.identifiedBy.append(DS0002_003)
T1134.identifiedBy.append(DS0002_004)
T1134_005.identifiedBy.append(DS0002_004)
T1564.identifiedBy.append(DS0002_004)
T1564_002.identifiedBy.append(DS0002_004)
T1556_005.identifiedBy.append(DS0002_004)
T1201.identifiedBy.append(DS0002_004)
T1548.identifiedBy.append(DS0002_005)
T1531.identifiedBy.append(DS0002_005)
T1098.identifiedBy.append(DS0002_005)
T1098_001.identifiedBy.append(DS0002_005)
T1098_002.identifiedBy.append(DS0002_005)
T1098_003.identifiedBy.append(DS0002_005)
T1098_005.identifiedBy.append(DS0002_005)
T1562.identifiedBy.append(DS0002_005)
T1562_008.identifiedBy.append(DS0002_005)
T1556.identifiedBy.append(DS0002_005)
T1556_006.identifiedBy.append(DS0002_005)
T1528.identifiedBy.append(DS0002_005)
T1578.identifiedBy.append(DS0034_001)
T1485.identifiedBy.append(DS0034_002)
T1578.identifiedBy.append(DS0034_002)
T1580.identifiedBy.append(DS0034_003)
T1578.identifiedBy.append(DS0034_004)
T1611.identifiedBy.append(DS0034_005)
T1578.identifiedBy.append(DS0034_005)
T1606.identifiedBy.append(DS0006_001)
T1606_002.identifiedBy.append(DS0006_001)
T1606.identifiedBy.append(DS0006_002)
T1606_001.identifiedBy.append(DS0006_002)
T1606_002.identifiedBy.append(DS0006_002)
T1550.identifiedBy.append(DS0006_002)
T1550_001.identifiedBy.append(DS0006_002)
T1550_004.identifiedBy.append(DS0006_002)
T1652.identifiedBy.append(DS0024_001)
T1003.identifiedBy.append(DS0024_001)
T1003_002.identifiedBy.append(DS0024_001)
T1003_004.identifiedBy.append(DS0024_001)
T1012.identifiedBy.append(DS0024_001)
T1649.identifiedBy.append(DS0024_001)
T1614_001.identifiedBy.append(DS0024_001)
T1033.identifiedBy.append(DS0024_001)
T1552.identifiedBy.append(DS0024_001)
T1552_002.identifiedBy.append(DS0024_001)
T1547.identifiedBy.append(DS0024_002)
T1547_001.identifiedBy.append(DS0024_002)
T1547_014.identifiedBy.append(DS0024_002)
T1037.identifiedBy.append(DS0024_002)
T1037_001.identifiedBy.append(DS0024_002)
T1176.identifiedBy.append(DS0024_002)
T1543.identifiedBy.append(DS0024_002)
T1543_003.identifiedBy.append(DS0024_002)
T1562_002.identifiedBy.append(DS0024_002)
T1562_009.identifiedBy.append(DS0024_002)
T1556.identifiedBy.append(DS0024_002)
T1556_008.identifiedBy.append(DS0024_002)
T1112.identifiedBy.append(DS0024_002)
T1027.identifiedBy.append(DS0024_002)
T1027_011.identifiedBy.append(DS0024_002)
T1137.identifiedBy.append(DS0024_002)
T1137_001.identifiedBy.append(DS0024_002)
T1137_002.identifiedBy.append(DS0024_002)
T1137_006.identifiedBy.append(DS0024_002)
T1053_005.identifiedBy.append(DS0024_002)
T1553.identifiedBy.append(DS0024_002)
T1553_004.identifiedBy.append(DS0024_002)
T1562.identifiedBy.append(DS0024_003)
T1562_001.identifiedBy.append(DS0024_003)
T1070.identifiedBy.append(DS0024_003)
T1070_009.identifiedBy.append(DS0024_003)
T1112.identifiedBy.append(DS0024_003)
T1548.identifiedBy.append(DS0024_004)
T1548_002.identifiedBy.append(DS0024_004)
T1557.identifiedBy.append(DS0024_004)
T1557_001.identifiedBy.append(DS0024_004)
T1547.identifiedBy.append(DS0024_004)
T1547_001.identifiedBy.append(DS0024_004)
T1547_002.identifiedBy.append(DS0024_004)
T1547_003.identifiedBy.append(DS0024_004)
T1547_004.identifiedBy.append(DS0024_004)
T1547_005.identifiedBy.append(DS0024_004)
T1547_010.identifiedBy.append(DS0024_004)
T1547_012.identifiedBy.append(DS0024_004)
T1547_014.identifiedBy.append(DS0024_004)
T1543.identifiedBy.append(DS0024_004)
T1543_003.identifiedBy.append(DS0024_004)
T1074.identifiedBy.append(DS0024_004)
T1074_001.identifiedBy.append(DS0024_004)
T1546.identifiedBy.append(DS0024_004)
T1546_001.identifiedBy.append(DS0024_004)
T1546_002.identifiedBy.append(DS0024_004)
T1546_007.identifiedBy.append(DS0024_004)
T1546_008.identifiedBy.append(DS0024_004)
T1546_009.identifiedBy.append(DS0024_004)
T1546_001.identifiedBy.append(DS0024_004)
T1546_011.identifiedBy.append(DS0024_004)
T1546_012.identifiedBy.append(DS0024_004)
T1546_015.identifiedBy.append(DS0024_004)
T1564.identifiedBy.append(DS0024_004)
T1564_002.identifiedBy.append(DS0024_004)
T1564_005.identifiedBy.append(DS0024_004)
T1564_006.identifiedBy.append(DS0024_004)
T1574.identifiedBy.append(DS0024_004)
T1574_007.identifiedBy.append(DS0024_004)
T1574_011.identifiedBy.append(DS0024_004)
T1574_012.identifiedBy.append(DS0024_004)
T1562.identifiedBy.append(DS0024_004)
T1562_001.identifiedBy.append(DS0024_004)
T1562_002.identifiedBy.append(DS0024_004)
T1562_004.identifiedBy.append(DS0024_004)
T1562_006.identifiedBy.append(DS0024_004)
T1562_009.identifiedBy.append(DS0024_004)
T1070.identifiedBy.append(DS0024_004)
T1070_007.identifiedBy.append(DS0024_004)
T1070_009.identifiedBy.append(DS0024_004)
T1490.identifiedBy.append(DS0024_004)
T1056.identifiedBy.append(DS0024_004)
T1056_001.identifiedBy.append(DS0024_004)
T1556.identifiedBy.append(DS0024_004)
T1556_002.identifiedBy.append(DS0024_004)
T1556_008.identifiedBy.append(DS0024_004)
T1112.identifiedBy.append(DS0024_004)
T1111.identifiedBy.append(DS0024_004)
T1137.identifiedBy.append(DS0024_004)
T1137_001.identifiedBy.append(DS0024_004)
T1137_002.identifiedBy.append(DS0024_004)
T1137_006.identifiedBy.append(DS0024_004)
T1003_001.identifiedBy.append(DS0024_004)
T1505_005.identifiedBy.append(DS0024_004)
T1489.identifiedBy.append(DS0024_004)
T1553.identifiedBy.append(DS0024_004)
T1553_003.identifiedBy.append(DS0024_004)
T1553_004.identifiedBy.append(DS0024_004)
T1553_006.identifiedBy.append(DS0024_004)
T1218.identifiedBy.append(DS0024_004)
T1218_002.identifiedBy.append(DS0024_004)
T1569.identifiedBy.append(DS0024_004)
T1569_002.identifiedBy.append(DS0024_004)
T1546.identifiedBy.append(DS0005_001)
T1546_003.identifiedBy.append(DS0005_001)
T1027.identifiedBy.append(DS0005_001)
T1027_011.identifiedBy.append(DS0005_001)
T1021.identifiedBy.append(DS0005_001)
T1047.identifiedBy.append(DS0005_001)

# Asserted_properties Defense_Detec - Technique
T1001.defenseBy.append(D3_CSPP)
T1001.defenseBy.append(D3_NTCD)
T1001.defenseBy.append(D3_PMAD)
T1001.defenseBy.append(D3_PHDURA)
T1001.defenseBy.append(D3_RTSD)
T1001.defenseBy.append(D3_UGLPA)
T1001.defenseBy.append(D3_RPA)
T1001_001.defenseBy.append(D3_CSPP)
T1001_001.defenseBy.append(D3_NTCD)
T1001_001.defenseBy.append(D3_PMAD)
T1001_001.defenseBy.append(D3_PHDURA)
T1001_001.defenseBy.append(D3_RTSD)
T1001_001.defenseBy.append(D3_UGLPA)
T1001_001.defenseBy.append(D3_RPA)
T1001_002.defenseBy.append(D3_CSPP)
T1001_002.defenseBy.append(D3_NTCD)
T1001_002.defenseBy.append(D3_PMAD)
T1001_002.defenseBy.append(D3_PHDURA)
T1001_002.defenseBy.append(D3_RTSD)
T1001_002.defenseBy.append(D3_UGLPA)
T1001_002.defenseBy.append(D3_RPA)
T1001_003.defenseBy.append(D3_CSPP)
T1001_003.defenseBy.append(D3_NTCD)
T1001_003.defenseBy.append(D3_PMAD)
T1001_003.defenseBy.append(D3_PHDURA)
T1001_003.defenseBy.append(D3_RTSD)
T1001_003.defenseBy.append(D3_UGLPA)
T1001_003.defenseBy.append(D3_RPA)
T1003.defenseBy.append(D3_PSMD)
T1003.defenseBy.append(D3_NTCD)
T1003.defenseBy.append(D3_ANAA)
T1003.defenseBy.append(D3_CSPP)
T1003.defenseBy.append(D3_RTSD)
T1003.defenseBy.append(D3_FA)
T1003.defenseBy.append(D3_PMAD)
T1003.defenseBy.append(D3_PHDURA)
T1003.defenseBy.append(D3_UGLPA)
T1003.defenseBy.append(D3_FIM)
T1003.defenseBy.append(D3_PSA)
T1003.defenseBy.append(D3_CAA)
T1003.defenseBy.append(D3_SFA)
T1003.defenseBy.append(D3_CCSA)
T1003.defenseBy.append(D3_PLA)
T1003_001.defenseBy.append(D3_PSA)
T1003_001.defenseBy.append(D3_PSMD)
T1003_001.defenseBy.append(D3_PLA)
T1003_002.defenseBy.append(D3_PSA)
T1003_002.defenseBy.append(D3_PSMD)
T1003_002.defenseBy.append(D3_PLA)
T1003_003.defenseBy.append(D3_CCSA)
T1003_004.defenseBy.append(D3_PSA)
T1003_004.defenseBy.append(D3_PSMD)
T1003_004.defenseBy.append(D3_PLA)
T1003_005.defenseBy.append(D3_CCSA)
T1003_006.defenseBy.append(D3_CSPP)
T1003_006.defenseBy.append(D3_NTCD)
T1003_006.defenseBy.append(D3_PMAD)
T1003_006.defenseBy.append(D3_PHDURA)
T1003_006.defenseBy.append(D3_CAA)
T1003_006.defenseBy.append(D3_RTSD)
T1003_006.defenseBy.append(D3_UGLPA)
T1003_006.defenseBy.append(D3_ANAA)
T1003_007.defenseBy.append(D3_SFA)
T1003_007.defenseBy.append(D3_FA)
T1003_007.defenseBy.append(D3_FIM)
T1003_008.defenseBy.append(D3_FA)
T1003_008.defenseBy.append(D3_FIM)
T1003_008.defenseBy.append(D3_CCSA)
T1005.defenseBy.append(D3_FA)
T1005.defenseBy.append(D3_FIM)
T1007.defenseBy.append(D3_PSA)
T1007.defenseBy.append(D3_SCA)
T1008.defenseBy.append(D3_CSPP)
T1008.defenseBy.append(D3_NTCD)
T1008.defenseBy.append(D3_PMAD)
T1008.defenseBy.append(D3_PHDURA)
T1008.defenseBy.append(D3_RTSD)
T1008.defenseBy.append(D3_UGLPA)
T1008.defenseBy.append(D3_RPA)
T1010.defenseBy.append(D3_PSA)
T1010.defenseBy.append(D3_SCA)
T1011.defenseBy.append(D3_CSPP)
T1011.defenseBy.append(D3_NTCD)
T1011.defenseBy.append(D3_PMAD)
T1011.defenseBy.append(D3_PHDURA)
T1011.defenseBy.append(D3_RTSD)
T1011.defenseBy.append(D3_UGLPA)
T1011_001.defenseBy.append(D3_CSPP)
T1011_001.defenseBy.append(D3_NTCD)
T1011_001.defenseBy.append(D3_PMAD)
T1011_001.defenseBy.append(D3_PHDURA)
T1011_001.defenseBy.append(D3_RTSD)
T1011_001.defenseBy.append(D3_UGLPA)
T1012.defenseBy.append(D3_SCA)
T1014.defenseBy.append(D3_FBA)
T1014.defenseBy.append(D3_FEMC)
T1014.defenseBy.append(D3_FA)
T1014.defenseBy.append(D3_FIM)
T1014.defenseBy.append(D3_FV)
T1016.defenseBy.append(D3_PSA)
T1016.defenseBy.append(D3_SCA)
T1016.defenseBy.append(D3_DA)
T1016.defenseBy.append(D3_FA)
T1016.defenseBy.append(D3_FIM)
T1016.defenseBy.append(D3_EFA)
T1016_001.defenseBy.append(D3_PSA)
T1016_001.defenseBy.append(D3_SCA)
T1016_001.defenseBy.append(D3_DA)
T1016_001.defenseBy.append(D3_FA)
T1016_001.defenseBy.append(D3_FIM)
T1016_001.defenseBy.append(D3_EFA)
T1018.defenseBy.append(D3_NTCD)
T1018.defenseBy.append(D3_CSPP)
T1018.defenseBy.append(D3_RTSD)
T1018.defenseBy.append(D3_FA)
T1018.defenseBy.append(D3_PMAD)
T1018.defenseBy.append(D3_PHDURA)
T1018.defenseBy.append(D3_UGLPA)
T1018.defenseBy.append(D3_FIM)
T1018.defenseBy.append(D3_PSA)
T1018.defenseBy.append(D3_SCA)
T1018.defenseBy.append(D3_SFA)
T1020.defenseBy.append(D3_CSPP)
T1020.defenseBy.append(D3_NTCD)
T1020.defenseBy.append(D3_PMAD)
T1020.defenseBy.append(D3_PHDURA)
T1020.defenseBy.append(D3_RTSD)
T1020.defenseBy.append(D3_UGLPA)
T1020_001.defenseBy.append(D3_CSPP)
T1020_001.defenseBy.append(D3_NTCD)
T1020_001.defenseBy.append(D3_PMAD)
T1020_001.defenseBy.append(D3_PHDURA)
T1020_001.defenseBy.append(D3_RTSD)
T1020_001.defenseBy.append(D3_UGLPA)
T1021.defenseBy.append(D3_CSPP)
T1021.defenseBy.append(D3_NTCD)
T1021.defenseBy.append(D3_PMAD)
T1021.defenseBy.append(D3_PHDURA)
T1021.defenseBy.append(D3_CAA)
T1021.defenseBy.append(D3_RTSD)
T1021.defenseBy.append(D3_UGLPA)
T1021_001.defenseBy.append(D3_CSPP)
T1021_001.defenseBy.append(D3_NTCD)
T1021_001.defenseBy.append(D3_PMAD)
T1021_001.defenseBy.append(D3_PHDURA)
T1021_001.defenseBy.append(D3_CAA)
T1021_001.defenseBy.append(D3_RTSD)
T1021_001.defenseBy.append(D3_UGLPA)
T1021_002.defenseBy.append(D3_CSPP)
T1021_002.defenseBy.append(D3_NTCD)
T1021_002.defenseBy.append(D3_PMAD)
T1021_002.defenseBy.append(D3_PHDURA)
T1021_002.defenseBy.append(D3_CAA)
T1021_002.defenseBy.append(D3_RTSD)
T1021_002.defenseBy.append(D3_UGLPA)
T1021_003.defenseBy.append(D3_CSPP)
T1021_003.defenseBy.append(D3_NTCD)
T1021_003.defenseBy.append(D3_PMAD)
T1021_003.defenseBy.append(D3_PHDURA)
T1021_003.defenseBy.append(D3_CAA)
T1021_003.defenseBy.append(D3_RTSD)
T1021_003.defenseBy.append(D3_UGLPA)
T1021_004.defenseBy.append(D3_CSPP)
T1021_004.defenseBy.append(D3_NTCD)
T1021_004.defenseBy.append(D3_PMAD)
T1021_004.defenseBy.append(D3_PHDURA)
T1021_004.defenseBy.append(D3_CAA)
T1021_004.defenseBy.append(D3_RTSD)
T1021_004.defenseBy.append(D3_UGLPA)
T1021_005.defenseBy.append(D3_CSPP)
T1021_005.defenseBy.append(D3_NTCD)
T1021_005.defenseBy.append(D3_PMAD)
T1021_005.defenseBy.append(D3_PHDURA)
T1021_005.defenseBy.append(D3_CAA)
T1021_005.defenseBy.append(D3_RTSD)
T1021_005.defenseBy.append(D3_UGLPA)
T1021_006.defenseBy.append(D3_CSPP)
T1021_006.defenseBy.append(D3_NTCD)
T1021_006.defenseBy.append(D3_PMAD)
T1021_006.defenseBy.append(D3_PHDURA)
T1021_006.defenseBy.append(D3_CAA)
T1021_006.defenseBy.append(D3_RTSD)
T1021_006.defenseBy.append(D3_UGLPA)
T1027.defenseBy.append(D3_DA)
T1027.defenseBy.append(D3_FA)
T1027.defenseBy.append(D3_FIM)
T1027.defenseBy.append(D3_EFA)
T1027_001.defenseBy.append(D3_DA)
T1027_001.defenseBy.append(D3_FA)
T1027_001.defenseBy.append(D3_FIM)
T1027_001.defenseBy.append(D3_EFA)
T1027_002.defenseBy.append(D3_DA)
T1027_002.defenseBy.append(D3_FA)
T1027_002.defenseBy.append(D3_FIM)
T1027_002.defenseBy.append(D3_EFA)
T1027_004.defenseBy.append(D3_DA)
T1027_004.defenseBy.append(D3_FA)
T1027_004.defenseBy.append(D3_FIM)
T1027_004.defenseBy.append(D3_EFA)
T1029.defenseBy.append(D3_CSPP)
T1029.defenseBy.append(D3_NTCD)
T1029.defenseBy.append(D3_PMAD)
T1029.defenseBy.append(D3_PHDURA)
T1029.defenseBy.append(D3_RTSD)
T1029.defenseBy.append(D3_UGLPA)
T1030.defenseBy.append(D3_CSPP)
T1030.defenseBy.append(D3_NTCD)
T1030.defenseBy.append(D3_PMAD)
T1030.defenseBy.append(D3_PHDURA)
T1030.defenseBy.append(D3_RTSD)
T1030.defenseBy.append(D3_UGLPA)
T1033.defenseBy.append(D3_PSMD)
T1033.defenseBy.append(D3_FA)
T1033.defenseBy.append(D3_FIM)
T1033.defenseBy.append(D3_PSA)
T1033.defenseBy.append(D3_SCA)
T1033.defenseBy.append(D3_PLA)
T1036.defenseBy.append(D3_SCA)
T1036.defenseBy.append(D3_DA)
T1036.defenseBy.append(D3_FA)
T1036.defenseBy.append(D3_SJA)
T1036.defenseBy.append(D3_SFA)
T1036.defenseBy.append(D3_FIM)
T1036.defenseBy.append(D3_EFA)
T1036_001.defenseBy.append(D3_DA)
T1036_001.defenseBy.append(D3_FA)
T1036_001.defenseBy.append(D3_FIM)
T1036_001.defenseBy.append(D3_EFA)
T1036_003.defenseBy.append(D3_DA)
T1036_003.defenseBy.append(D3_FA)
T1036_003.defenseBy.append(D3_SFA)
T1036_003.defenseBy.append(D3_FIM)
T1036_003.defenseBy.append(D3_EFA)
T1036_004.defenseBy.append(D3_SJA)
T1036_005.defenseBy.append(D3_SCA)
T1036_005.defenseBy.append(D3_FA)
T1036_005.defenseBy.append(D3_FIM)
T1036_006.defenseBy.append(D3_FA)
T1036_006.defenseBy.append(D3_FIM)
T1037.defenseBy.append(D3_DA)
T1037.defenseBy.append(D3_FA)
T1037.defenseBy.append(D3_FIM)
T1037.defenseBy.append(D3_SICA)
T1037.defenseBy.append(D3_EFA)
T1037_001.defenseBy.append(D3_DA)
T1037_001.defenseBy.append(D3_FA)
T1037_001.defenseBy.append(D3_FIM)
T1037_001.defenseBy.append(D3_EFA)
T1037_002.defenseBy.append(D3_DA)
T1037_002.defenseBy.append(D3_FA)
T1037_002.defenseBy.append(D3_FIM)
T1037_002.defenseBy.append(D3_EFA)
T1037_003.defenseBy.append(D3_DA)
T1037_003.defenseBy.append(D3_FA)
T1037_003.defenseBy.append(D3_FIM)
T1037_003.defenseBy.append(D3_EFA)
T1037_004.defenseBy.append(D3_DA)
T1037_004.defenseBy.append(D3_FA)
T1037_004.defenseBy.append(D3_FIM)
T1037_004.defenseBy.append(D3_SICA)
T1037_004.defenseBy.append(D3_EFA)
T1037_005.defenseBy.append(D3_SICA)
T1040.defenseBy.append(D3_DNSTA)
T1041.defenseBy.append(D3_CSPP)
T1041.defenseBy.append(D3_NTCD)
T1041.defenseBy.append(D3_CA)
T1041.defenseBy.append(D3_PMAD)
T1041.defenseBy.append(D3_PHDURA)
T1041.defenseBy.append(D3_RTSD)
T1041.defenseBy.append(D3_UGLPA)
T1041.defenseBy.append(D3_FA)
T1041.defenseBy.append(D3_FIM)
T1047.defenseBy.append(D3_PSA)
T1047.defenseBy.append(D3_CSPP)
T1047.defenseBy.append(D3_NTCD)
T1047.defenseBy.append(D3_PMAD)
T1047.defenseBy.append(D3_PHDURA)
T1047.defenseBy.append(D3_CAA)
T1047.defenseBy.append(D3_RTSD)
T1047.defenseBy.append(D3_UGLPA)
T1047.defenseBy.append(D3_SCA)
T1047.defenseBy.append(D3_ANAA)
T1048.defenseBy.append(D3_CSPP)
T1048.defenseBy.append(D3_NTCD)
T1048.defenseBy.append(D3_CA)
T1048.defenseBy.append(D3_PMAD)
T1048.defenseBy.append(D3_PHDURA)
T1048.defenseBy.append(D3_RTSD)
T1048.defenseBy.append(D3_UGLPA)
T1048.defenseBy.append(D3_RPA)
T1048.defenseBy.append(D3_FA)
T1048.defenseBy.append(D3_FIM)
T1048_001.defenseBy.append(D3_CSPP)
T1048_001.defenseBy.append(D3_NTCD)
T1048_001.defenseBy.append(D3_PMAD)
T1048_001.defenseBy.append(D3_PHDURA)
T1048_001.defenseBy.append(D3_RTSD)
T1048_001.defenseBy.append(D3_UGLPA)
T1048_001.defenseBy.append(D3_RPA)
T1048_002.defenseBy.append(D3_CSPP)
T1048_002.defenseBy.append(D3_NTCD)
T1048_002.defenseBy.append(D3_CA)
T1048_002.defenseBy.append(D3_PMAD)
T1048_002.defenseBy.append(D3_PHDURA)
T1048_002.defenseBy.append(D3_RTSD)
T1048_002.defenseBy.append(D3_UGLPA)
T1048_002.defenseBy.append(D3_RPA)
T1048_002.defenseBy.append(D3_FA)
T1048_002.defenseBy.append(D3_FIM)
T1048_003.defenseBy.append(D3_CSPP)
T1048_003.defenseBy.append(D3_NTCD)
T1048_003.defenseBy.append(D3_PMAD)
T1048_003.defenseBy.append(D3_PHDURA)
T1048_003.defenseBy.append(D3_RTSD)
T1048_003.defenseBy.append(D3_UGLPA)
T1048_003.defenseBy.append(D3_RPA)
T1049.defenseBy.append(D3_SCA)
T1053.defenseBy.append(D3_PSMD)
T1053.defenseBy.append(D3_FA)
T1053.defenseBy.append(D3_SJA)
T1053.defenseBy.append(D3_FIM)
T1053.defenseBy.append(D3_PSA)
T1053.defenseBy.append(D3_SCA)
T1053.defenseBy.append(D3_SDM)
T1053.defenseBy.append(D3_PLA)
T1053_002.defenseBy.append(D3_PSA)
T1053_002.defenseBy.append(D3_PSMD)
T1053_002.defenseBy.append(D3_SCA)
T1053_002.defenseBy.append(D3_PLA)
T1053_002.defenseBy.append(D3_SJA)
T1053_002.defenseBy.append(D3_SDM)
T1053_002.defenseBy.append(D3_PSA)
T1053_002.defenseBy.append(D3_PSMD)
T1053_002.defenseBy.append(D3_SCA)
T1053_002.defenseBy.append(D3_PLA)
T1053_002.defenseBy.append(D3_SJA)
T1053_002.defenseBy.append(D3_SDM)
T1053_003.defenseBy.append(D3_PSA)
T1053_003.defenseBy.append(D3_PSMD)
T1053_003.defenseBy.append(D3_SCA)
T1053_003.defenseBy.append(D3_SJA)
T1053_003.defenseBy.append(D3_SDM)
T1053_003.defenseBy.append(D3_PLA)
T1053_005.defenseBy.append(D3_PSA)
T1053_005.defenseBy.append(D3_PSMD)
T1053_005.defenseBy.append(D3_SCA)
T1053_005.defenseBy.append(D3_PLA)
T1053_005.defenseBy.append(D3_SJA)
T1053_005.defenseBy.append(D3_SDM)
T1053_006.defenseBy.append(D3_PSA)
T1053_006.defenseBy.append(D3_PSMD)
T1053_006.defenseBy.append(D3_SCA)
T1053_006.defenseBy.append(D3_SJA)
T1053_006.defenseBy.append(D3_SDM)
T1053_006.defenseBy.append(D3_PLA)
T1053_007.defenseBy.append(D3_PSA)
T1053_007.defenseBy.append(D3_PSMD)
T1053_007.defenseBy.append(D3_SCA)
T1053_007.defenseBy.append(D3_SJA)
T1053_007.defenseBy.append(D3_SDM)
T1053_007.defenseBy.append(D3_PLA)
T1055.defenseBy.append(D3_PCSV)
T1055.defenseBy.append(D3_FA)
T1055.defenseBy.append(D3_DA)
T1055.defenseBy.append(D3_FIM)
T1055.defenseBy.append(D3_PSA)
T1055.defenseBy.append(D3_SCA)
T1055.defenseBy.append(D3_SFA)
T1055.defenseBy.append(D3_MBT)
T1055.defenseBy.append(D3_EFA)
T1055_001.defenseBy.append(D3_SCA)
T1055_001.defenseBy.append(D3_FA)
T1055_001.defenseBy.append(D3_FIM)
T1055_002.defenseBy.append(D3_FA)
T1055_002.defenseBy.append(D3_FIM)
T1055_003.defenseBy.append(D3_SCA)
T1055_003.defenseBy.append(D3_DA)
T1055_003.defenseBy.append(D3_FA)
T1055_003.defenseBy.append(D3_FIM)
T1055_003.defenseBy.append(D3_EFA)
T1055_004.defenseBy.append(D3_PSA)
T1055_004.defenseBy.append(D3_SCA)
T1055_005.defenseBy.append(D3_SCA)
T1055_008.defenseBy.append(D3_SCA)
T1055_009.defenseBy.append(D3_SFA)
T1055_009.defenseBy.append(D3_FA)
T1055_009.defenseBy.append(D3_FIM)
T1055_012.defenseBy.append(D3_PCSV)
T1055_012.defenseBy.append(D3_MBT)
T1055_013.defenseBy.append(D3_PSA)
T1055_013.defenseBy.append(D3_SCA)
T1055_014.defenseBy.append(D3_SCA)
T1055_014.defenseBy.append(D3_FA)
T1055_014.defenseBy.append(D3_FIM)
T1056.defenseBy.append(D3_IDA)
T1056.defenseBy.append(D3_SBV)
T1056.defenseBy.append(D3_PCSV)
T1056.defenseBy.append(D3_MBT)
T1056_001.defenseBy.append(D3_IDA)
T1056_003.defenseBy.append(D3_SBV)
T1056_004.defenseBy.append(D3_PCSV)
T1056_004.defenseBy.append(D3_MBT)
T1057.defenseBy.append(D3_PSA)
T1057.defenseBy.append(D3_SCA)
T1059.defenseBy.append(D3_DA)
T1059.defenseBy.append(D3_FA)
T1059.defenseBy.append(D3_FIM)
T1059.defenseBy.append(D3_EFA)
T1059_001.defenseBy.append(D3_DA)
T1059_001.defenseBy.append(D3_FA)
T1059_001.defenseBy.append(D3_FIM)
T1059_001.defenseBy.append(D3_EFA)
T1059_002.defenseBy.append(D3_DA)
T1059_002.defenseBy.append(D3_FA)
T1059_002.defenseBy.append(D3_FIM)
T1059_002.defenseBy.append(D3_EFA)
T1059_003.defenseBy.append(D3_DA)
T1059_003.defenseBy.append(D3_FA)
T1059_003.defenseBy.append(D3_FIM)
T1059_003.defenseBy.append(D3_EFA)
T1059_004.defenseBy.append(D3_DA)
T1059_004.defenseBy.append(D3_FA)
T1059_004.defenseBy.append(D3_FIM)
T1059_004.defenseBy.append(D3_EFA)
T1059_005.defenseBy.append(D3_DA)
T1059_005.defenseBy.append(D3_FA)
T1059_005.defenseBy.append(D3_FIM)
T1059_005.defenseBy.append(D3_EFA)
T1059_006.defenseBy.append(D3_DA)
T1059_006.defenseBy.append(D3_FA)
T1059_006.defenseBy.append(D3_FIM)
T1059_006.defenseBy.append(D3_EFA)
T1059_007.defenseBy.append(D3_DA)
T1059_007.defenseBy.append(D3_FA)
T1059_007.defenseBy.append(D3_FIM)
T1059_007.defenseBy.append(D3_EFA)
T1059_008.defenseBy.append(D3_DA)
T1059_008.defenseBy.append(D3_FA)
T1059_008.defenseBy.append(D3_FIM)
T1059_008.defenseBy.append(D3_EFA)
T1068.defenseBy.append(D3_SSC)
T1068.defenseBy.append(D3_PCSV)
T1068.defenseBy.append(D3_MBT)
T1070.defenseBy.append(D3_SFA)
T1070.defenseBy.append(D3_FA)
T1070.defenseBy.append(D3_FIM)
T1070_002.defenseBy.append(D3_SFA)
T1070_002.defenseBy.append(D3_FA)
T1070_002.defenseBy.append(D3_FIM)
T1070_004.defenseBy.append(D3_FA)
T1070_004.defenseBy.append(D3_FIM)
T1071.defenseBy.append(D3_NTCD)
T1071.defenseBy.append(D3_CSPP)
T1071.defenseBy.append(D3_RTSD)
T1071.defenseBy.append(D3_FA)
T1071.defenseBy.append(D3_DNSTA)
T1071.defenseBy.append(D3_FC)
T1071.defenseBy.append(D3_PMAD)
T1071.defenseBy.append(D3_PHDURA)
T1071.defenseBy.append(D3_UGLPA)
T1071.defenseBy.append(D3_RPA)
T1071.defenseBy.append(D3_FIM)
T1071.defenseBy.append(D3_CA)
T1071_001.defenseBy.append(D3_CSPP)
T1071_001.defenseBy.append(D3_NTCD)
T1071_001.defenseBy.append(D3_CA)
T1071_001.defenseBy.append(D3_PMAD)
T1071_001.defenseBy.append(D3_PHDURA)
T1071_001.defenseBy.append(D3_RTSD)
T1071_001.defenseBy.append(D3_UGLPA)
T1071_001.defenseBy.append(D3_RPA)
T1071_001.defenseBy.append(D3_FA)
T1071_001.defenseBy.append(D3_FIM)
T1071_002.defenseBy.append(D3_CSPP)
T1071_002.defenseBy.append(D3_NTCD)
T1071_002.defenseBy.append(D3_CA)
T1071_002.defenseBy.append(D3_FC)
T1071_002.defenseBy.append(D3_PMAD)
T1071_002.defenseBy.append(D3_PHDURA)
T1071_002.defenseBy.append(D3_RTSD)
T1071_002.defenseBy.append(D3_UGLPA)
T1071_002.defenseBy.append(D3_RPA)
T1071_002.defenseBy.append(D3_FA)
T1071_002.defenseBy.append(D3_FIM)
T1071_003.defenseBy.append(D3_CSPP)
T1071_003.defenseBy.append(D3_NTCD)
T1071_003.defenseBy.append(D3_CA)
T1071_003.defenseBy.append(D3_PMAD)
T1071_003.defenseBy.append(D3_PHDURA)
T1071_003.defenseBy.append(D3_RTSD)
T1071_003.defenseBy.append(D3_UGLPA)
T1071_003.defenseBy.append(D3_RPA)
T1071_003.defenseBy.append(D3_FA)
T1071_003.defenseBy.append(D3_FIM)
T1071_004.defenseBy.append(D3_NTCD)
T1071_004.defenseBy.append(D3_CSPP)
T1071_004.defenseBy.append(D3_RTSD)
T1071_004.defenseBy.append(D3_FA)
T1071_004.defenseBy.append(D3_DNSTA)
T1071_004.defenseBy.append(D3_PMAD)
T1071_004.defenseBy.append(D3_PHDURA)
T1071_004.defenseBy.append(D3_UGLPA)
T1071_004.defenseBy.append(D3_RPA)
T1071_004.defenseBy.append(D3_FIM)
T1071_004.defenseBy.append(D3_CA)
T1072.defenseBy.append(D3_SBV)
T1072.defenseBy.append(D3_FA)
T1072.defenseBy.append(D3_FIM)
T1074.defenseBy.append(D3_SCA)
T1074.defenseBy.append(D3_FA)
T1074.defenseBy.append(D3_FCA)
T1074.defenseBy.append(D3_FIM)
T1074_001.defenseBy.append(D3_SCA)
T1074_001.defenseBy.append(D3_FA)
T1074_001.defenseBy.append(D3_FCA)
T1074_001.defenseBy.append(D3_FIM)
T1078.defenseBy.append(D3_DAM)
T1078.defenseBy.append(D3_ANET)
T1078.defenseBy.append(D3_RAPA)
T1078.defenseBy.append(D3_JFAPA)
T1078.defenseBy.append(D3_LAM)
T1078.defenseBy.append(D3_AZET)
T1078.defenseBy.append(D3_SDA)
T1078_001.defenseBy.append(D3_AZET)
T1078_001.defenseBy.append(D3_ANET)
T1078_001.defenseBy.append(D3_RAPA)
T1078_001.defenseBy.append(D3_JFAPA)
T1078_001.defenseBy.append(D3_SDA)
T1078_002.defenseBy.append(D3_DAM)
T1078_002.defenseBy.append(D3_ANET)
T1078_002.defenseBy.append(D3_RAPA)
T1078_002.defenseBy.append(D3_JFAPA)
T1078_002.defenseBy.append(D3_AZET)
T1078_002.defenseBy.append(D3_SDA)
T1078_003.defenseBy.append(D3_ANET)
T1078_003.defenseBy.append(D3_RAPA)
T1078_003.defenseBy.append(D3_JFAPA)
T1078_003.defenseBy.append(D3_LAM)
T1078_003.defenseBy.append(D3_AZET)
T1078_003.defenseBy.append(D3_SDA)
T1078_004.defenseBy.append(D3_ANET)
T1078_004.defenseBy.append(D3_RAPA)
T1078_004.defenseBy.append(D3_JFAPA)
T1078_004.defenseBy.append(D3_AZET)
T1078_004.defenseBy.append(D3_SDA)
T1082.defenseBy.append(D3_PSA)
T1082.defenseBy.append(D3_SCA)
T1083.defenseBy.append(D3_FA)
T1083.defenseBy.append(D3_FIM)
T1087_001.defenseBy.append(D3_LAM)
T1087_002.defenseBy.append(D3_DAM)
T1090.defenseBy.append(D3_CSPP)
T1090.defenseBy.append(D3_NTCD)
T1090.defenseBy.append(D3_PMAD)
T1090.defenseBy.append(D3_PHDURA)
T1090.defenseBy.append(D3_CAA)
T1090.defenseBy.append(D3_RTSD)
T1090.defenseBy.append(D3_UGLPA)
T1090.defenseBy.append(D3_RPA)
T1090_001.defenseBy.append(D3_CSPP)
T1090_001.defenseBy.append(D3_NTCD)
T1090_001.defenseBy.append(D3_PMAD)
T1090_001.defenseBy.append(D3_PHDURA)
T1090_001.defenseBy.append(D3_CAA)
T1090_001.defenseBy.append(D3_RTSD)
T1090_001.defenseBy.append(D3_UGLPA)
T1090_002.defenseBy.append(D3_CSPP)
T1090_002.defenseBy.append(D3_NTCD)
T1090_002.defenseBy.append(D3_PMAD)
T1090_002.defenseBy.append(D3_PHDURA)
T1090_002.defenseBy.append(D3_RTSD)
T1090_002.defenseBy.append(D3_UGLPA)
T1090_002.defenseBy.append(D3_RPA)
T1090_003.defenseBy.append(D3_CSPP)
T1090_003.defenseBy.append(D3_NTCD)
T1090_003.defenseBy.append(D3_PMAD)
T1090_003.defenseBy.append(D3_PHDURA)
T1090_003.defenseBy.append(D3_RTSD)
T1090_003.defenseBy.append(D3_UGLPA)
T1090_003.defenseBy.append(D3_RPA)
T1090_004.defenseBy.append(D3_CSPP)
T1090_004.defenseBy.append(D3_NTCD)
T1090_004.defenseBy.append(D3_PMAD)
T1090_004.defenseBy.append(D3_PHDURA)
T1090_004.defenseBy.append(D3_RTSD)
T1090_004.defenseBy.append(D3_UGLPA)
T1090_004.defenseBy.append(D3_RPA)
T1095.defenseBy.append(D3_CSPP)
T1095.defenseBy.append(D3_NTCD)
T1095.defenseBy.append(D3_PMAD)
T1095.defenseBy.append(D3_PHDURA)
T1095.defenseBy.append(D3_RTSD)
T1095.defenseBy.append(D3_UGLPA)
T1095.defenseBy.append(D3_RPA)
T1098.defenseBy.append(D3_NTCD)
T1098.defenseBy.append(D3_ANAA)
T1098.defenseBy.append(D3_DAM)
T1098.defenseBy.append(D3_CSPP)
T1098.defenseBy.append(D3_RTSD)
T1098.defenseBy.append(D3_PMAD)
T1098.defenseBy.append(D3_PHDURA)
T1098.defenseBy.append(D3_UGLPA)
T1098.defenseBy.append(D3_CAA)
T1098.defenseBy.append(D3_CCSA)
T1098_001.defenseBy.append(D3_NTCD)
T1098_001.defenseBy.append(D3_ANAA)
T1098_001.defenseBy.append(D3_CSPP)
T1098_001.defenseBy.append(D3_RTSD)
T1098_001.defenseBy.append(D3_PMAD)
T1098_001.defenseBy.append(D3_PHDURA)
T1098_001.defenseBy.append(D3_UGLPA)
T1098_001.defenseBy.append(D3_CAA)
T1098_001.defenseBy.append(D3_CCSA)
T1098_002.defenseBy.append(D3_DAM)
T1098_003.defenseBy.append(D3_DAM)
T1102.defenseBy.append(D3_CSPP)
T1102.defenseBy.append(D3_NTCD)
T1102.defenseBy.append(D3_PMAD)
T1102.defenseBy.append(D3_PHDURA)
T1102.defenseBy.append(D3_RTSD)
T1102.defenseBy.append(D3_UGLPA)
T1102.defenseBy.append(D3_RPA)
T1102_001.defenseBy.append(D3_CSPP)
T1102_001.defenseBy.append(D3_NTCD)
T1102_001.defenseBy.append(D3_PMAD)
T1102_001.defenseBy.append(D3_PHDURA)
T1102_001.defenseBy.append(D3_RTSD)
T1102_001.defenseBy.append(D3_UGLPA)
T1102_001.defenseBy.append(D3_RPA)
T1102_002.defenseBy.append(D3_CSPP)
T1102_002.defenseBy.append(D3_NTCD)
T1102_002.defenseBy.append(D3_PMAD)
T1102_002.defenseBy.append(D3_PHDURA)
T1102_002.defenseBy.append(D3_RTSD)
T1102_002.defenseBy.append(D3_UGLPA)
T1102_002.defenseBy.append(D3_RPA)
T1102_003.defenseBy.append(D3_CSPP)
T1102_003.defenseBy.append(D3_NTCD)
T1102_003.defenseBy.append(D3_PMAD)
T1102_003.defenseBy.append(D3_PHDURA)
T1102_003.defenseBy.append(D3_RTSD)
T1102_003.defenseBy.append(D3_UGLPA)
T1102_003.defenseBy.append(D3_RPA)
T1104.defenseBy.append(D3_CSPP)
T1104.defenseBy.append(D3_NTCD)
T1104.defenseBy.append(D3_PMAD)
T1104.defenseBy.append(D3_PHDURA)
T1104.defenseBy.append(D3_RTSD)
T1104.defenseBy.append(D3_UGLPA)
T1104.defenseBy.append(D3_RPA)
T1105.defenseBy.append(D3_CSPP)
T1105.defenseBy.append(D3_NTCD)
T1105.defenseBy.append(D3_PMAD)
T1105.defenseBy.append(D3_PHDURA)
T1105.defenseBy.append(D3_RTSD)
T1105.defenseBy.append(D3_UGLPA)
T1105.defenseBy.append(D3_RPA)
T1106.defenseBy.append(D3_SCA)
T1110.defenseBy.append(D3_NTCD)
T1110.defenseBy.append(D3_ANAA)
T1110.defenseBy.append(D3_SDA)
T1110.defenseBy.append(D3_CSPP)
T1110.defenseBy.append(D3_RTSD)
T1110.defenseBy.append(D3_PMAD)
T1110.defenseBy.append(D3_PHDURA)
T1110.defenseBy.append(D3_UGLPA)
T1110.defenseBy.append(D3_RAPA)
T1110.defenseBy.append(D3_ANET)
T1110.defenseBy.append(D3_CAA)
T1110.defenseBy.append(D3_CCSA)
T1110_001.defenseBy.append(D3_ANET)
T1110_001.defenseBy.append(D3_RAPA)
T1110_001.defenseBy.append(D3_CCSA)
T1110_001.defenseBy.append(D3_SDA)
T1110_002.defenseBy.append(D3_CCSA)
T1110_003.defenseBy.append(D3_NTCD)
T1110_003.defenseBy.append(D3_ANAA)
T1110_003.defenseBy.append(D3_SDA)
T1110_003.defenseBy.append(D3_CSPP)
T1110_003.defenseBy.append(D3_RTSD)
T1110_003.defenseBy.append(D3_PMAD)
T1110_003.defenseBy.append(D3_PHDURA)
T1110_003.defenseBy.append(D3_UGLPA)
T1110_003.defenseBy.append(D3_RAPA)
T1110_003.defenseBy.append(D3_ANET)
T1110_003.defenseBy.append(D3_CAA)
T1110_003.defenseBy.append(D3_CCSA)
T1110_004.defenseBy.append(D3_CSPP)
T1110_004.defenseBy.append(D3_NTCD)
T1110_004.defenseBy.append(D3_ANET)
T1110_004.defenseBy.append(D3_PMAD)
T1110_004.defenseBy.append(D3_PHDURA)
T1110_004.defenseBy.append(D3_CAA)
T1110_004.defenseBy.append(D3_RTSD)
T1110_004.defenseBy.append(D3_UGLPA)
T1110_004.defenseBy.append(D3_RAPA)
T1110_004.defenseBy.append(D3_ANAA)
T1110_004.defenseBy.append(D3_SDA)
T1113.defenseBy.append(D3_SCA)
T1114.defenseBy.append(D3_SMRA)
T1114.defenseBy.append(D3_FA)
T1114.defenseBy.append(D3_EHB)
T1114.defenseBy.append(D3_DA)
T1114.defenseBy.append(D3_FIM)
T1114.defenseBy.append(D3_HD)
T1114.defenseBy.append(D3_SRA)
T1114.defenseBy.append(D3_EFA)
T1114_001.defenseBy.append(D3_HD)
T1114_001.defenseBy.append(D3_DA)
T1114_001.defenseBy.append(D3_FA)
T1114_001.defenseBy.append(D3_FIM)
T1114_001.defenseBy.append(D3_SRA)
T1114_001.defenseBy.append(D3_SMRA)
T1114_001.defenseBy.append(D3_EFA)
T1114_002.defenseBy.append(D3_EHB)
T1119.defenseBy.append(D3_FA)
T1119.defenseBy.append(D3_FIM)
T1123.defenseBy.append(D3_IDA)
T1124.defenseBy.append(D3_PSA)
T1124.defenseBy.append(D3_SCA)
T1125.defenseBy.append(D3_IDA)
T1127.defenseBy.append(D3_FA)
T1127.defenseBy.append(D3_FIM)
T1127_001.defenseBy.append(D3_FA)
T1127_001.defenseBy.append(D3_FIM)
T1132.defenseBy.append(D3_CSPP)
T1132.defenseBy.append(D3_NTCD)
T1132.defenseBy.append(D3_PMAD)
T1132.defenseBy.append(D3_PHDURA)
T1132.defenseBy.append(D3_RTSD)
T1132.defenseBy.append(D3_UGLPA)
T1132.defenseBy.append(D3_RPA)
T1132_001.defenseBy.append(D3_CSPP)
T1132_001.defenseBy.append(D3_NTCD)
T1132_001.defenseBy.append(D3_PMAD)
T1132_001.defenseBy.append(D3_PHDURA)
T1132_001.defenseBy.append(D3_RTSD)
T1132_001.defenseBy.append(D3_UGLPA)
T1132_001.defenseBy.append(D3_RPA)
T1132_002.defenseBy.append(D3_CSPP)
T1132_002.defenseBy.append(D3_NTCD)
T1132_002.defenseBy.append(D3_PMAD)
T1132_002.defenseBy.append(D3_PHDURA)
T1132_002.defenseBy.append(D3_RTSD)
T1132_002.defenseBy.append(D3_UGLPA)
T1132_002.defenseBy.append(D3_RPA)
T1133.defenseBy.append(D3_CSPP)
T1133.defenseBy.append(D3_NTCD)
T1133.defenseBy.append(D3_ANET)
T1133.defenseBy.append(D3_PMAD)
T1133.defenseBy.append(D3_PHDURA)
T1133.defenseBy.append(D3_RTSD)
T1133.defenseBy.append(D3_UGLPA)
T1133.defenseBy.append(D3_RAPA)
T1133.defenseBy.append(D3_JFAPA)
T1133.defenseBy.append(D3_AZET)
T1133.defenseBy.append(D3_SDA)
T1134.defenseBy.append(D3_PSA)
T1134.defenseBy.append(D3_SCA)
T1134.defenseBy.append(D3_CCSA)
T1134_001.defenseBy.append(D3_CCSA)
T1134_002.defenseBy.append(D3_CCSA)
T1134_003.defenseBy.append(D3_CCSA)
T1134_004.defenseBy.append(D3_PSA)
T1134_004.defenseBy.append(D3_SCA)
T1136.defenseBy.append(D3_DAM)
T1136.defenseBy.append(D3_LAM)
T1137.defenseBy.append(D3_FA)
T1137.defenseBy.append(D3_DA)
T1137.defenseBy.append(D3_FIM)
T1137.defenseBy.append(D3_EFA)
T1137_001.defenseBy.append(D3_DA)
T1137_001.defenseBy.append(D3_FA)
T1137_001.defenseBy.append(D3_FIM)
T1137_001.defenseBy.append(D3_EFA)
T1137_003.defenseBy.append(D3_DA)
T1137_003.defenseBy.append(D3_FA)
T1137_003.defenseBy.append(D3_FIM)
T1137_003.defenseBy.append(D3_EFA)
T1140.defenseBy.append(D3_PSA)
T1140.defenseBy.append(D3_SCA)
T1140.defenseBy.append(D3_DA)
T1140.defenseBy.append(D3_FA)
T1140.defenseBy.append(D3_FIM)
T1140.defenseBy.append(D3_EFA)
T1555_001.defenseBy.append(D3_CCSA)
T1185.defenseBy.append(D3_CSPP)
T1185.defenseBy.append(D3_NTCD)
T1185.defenseBy.append(D3_PMAD)
T1185.defenseBy.append(D3_PHDURA)
T1185.defenseBy.append(D3_RTSD)
T1185.defenseBy.append(D3_UGLPA)
T1187.defenseBy.append(D3_ANET)
T1187.defenseBy.append(D3_FA)
T1187.defenseBy.append(D3_RAPA)
T1187.defenseBy.append(D3_FIM)
T1187.defenseBy.append(D3_SDA)
T1189.defenseBy.append(D3_CSPP)
T1189.defenseBy.append(D3_NTCD)
T1189.defenseBy.append(D3_HD)
T1189.defenseBy.append(D3_PMAD)
T1189.defenseBy.append(D3_PHDURA)
T1189.defenseBy.append(D3_RTSD)
T1189.defenseBy.append(D3_RPA)
T1189.defenseBy.append(D3_ID)
T1189.defenseBy.append(D3_UGLPA)
T1189.defenseBy.append(D3_URA)
T1189.defenseBy.append(D3_UA)
T1190.defenseBy.append(D3_CSPP)
T1190.defenseBy.append(D3_NTCD)
T1190.defenseBy.append(D3_PMAD)
T1190.defenseBy.append(D3_PHDURA)
T1190.defenseBy.append(D3_ISVA)
T1190.defenseBy.append(D3_RTSD)
T1190.defenseBy.append(D3_UGLPA)
T1190.defenseBy.append(D3_DQSA)
T1197.defenseBy.append(D3_CSPP)
T1197.defenseBy.append(D3_NTCD)
T1197.defenseBy.append(D3_PMAD)
T1197.defenseBy.append(D3_PHDURA)
T1197.defenseBy.append(D3_CAA)
T1197.defenseBy.append(D3_RTSD)
T1197.defenseBy.append(D3_UGLPA)
T1197.defenseBy.append(D3_RPA)
T1197.defenseBy.append(D3_IPCTA)
T1199.defenseBy.append(D3_CSPP)
T1199.defenseBy.append(D3_NTCD)
T1199.defenseBy.append(D3_PMAD)
T1199.defenseBy.append(D3_PHDURA)
T1199.defenseBy.append(D3_CAA)
T1199.defenseBy.append(D3_RTSD)
T1199.defenseBy.append(D3_UGLPA)
T1203.defenseBy.append(D3_SSC)
T1203.defenseBy.append(D3_PCSV)
T1203.defenseBy.append(D3_MBT)
T1204.defenseBy.append(D3_NTCD)
T1204.defenseBy.append(D3_ID)
T1204.defenseBy.append(D3_CSPP)
T1204.defenseBy.append(D3_RTSD)
T1204.defenseBy.append(D3_FA)
T1204.defenseBy.append(D3_PMAD)
T1204.defenseBy.append(D3_PHDURA)
T1204.defenseBy.append(D3_DA)
T1204.defenseBy.append(D3_UGLPA)
T1204.defenseBy.append(D3_RPA)
T1204.defenseBy.append(D3_FIM)
T1204.defenseBy.append(D3_UA)
T1204.defenseBy.append(D3_HD)
T1204.defenseBy.append(D3_URA)
T1204.defenseBy.append(D3_EFA)
T1204_001.defenseBy.append(D3_CSPP)
T1204_001.defenseBy.append(D3_NTCD)
T1204_001.defenseBy.append(D3_HD)
T1204_001.defenseBy.append(D3_PMAD)
T1204_001.defenseBy.append(D3_PHDURA)
T1204_001.defenseBy.append(D3_RTSD)
T1204_001.defenseBy.append(D3_ID)
T1204_001.defenseBy.append(D3_RPA)
T1204_001.defenseBy.append(D3_UGLPA)
T1204_001.defenseBy.append(D3_URA)
T1204_001.defenseBy.append(D3_UA)
T1204_002.defenseBy.append(D3_DA)
T1204_002.defenseBy.append(D3_FA)
T1204_002.defenseBy.append(D3_FIM)
T1204_002.defenseBy.append(D3_EFA)
T1205.defenseBy.append(D3_CSPP)
T1205.defenseBy.append(D3_NTCD)
T1205.defenseBy.append(D3_PMAD)
T1205.defenseBy.append(D3_PHDURA)
T1205.defenseBy.append(D3_RTSD)
T1205.defenseBy.append(D3_UGLPA)
T1205_001.defenseBy.append(D3_CSPP)
T1205_001.defenseBy.append(D3_NTCD)
T1205_001.defenseBy.append(D3_PMAD)
T1205_001.defenseBy.append(D3_PHDURA)
T1205_001.defenseBy.append(D3_RTSD)
T1205_001.defenseBy.append(D3_UGLPA)
T1207.defenseBy.append(D3_CSPP)
T1207.defenseBy.append(D3_NTCD)
T1207.defenseBy.append(D3_PMAD)
T1207.defenseBy.append(D3_PHDURA)
T1207.defenseBy.append(D3_CAA)
T1207.defenseBy.append(D3_RTSD)
T1207.defenseBy.append(D3_UGLPA)
T1207.defenseBy.append(D3_ANAA)
T1210.defenseBy.append(D3_CSPP)
T1210.defenseBy.append(D3_NTCD)
T1210.defenseBy.append(D3_PMAD)
T1210.defenseBy.append(D3_PHDURA)
T1210.defenseBy.append(D3_CAA)
T1210.defenseBy.append(D3_RTSD)
T1210.defenseBy.append(D3_UGLPA)
T1210.defenseBy.append(D3_SSC)
T1210.defenseBy.append(D3_PCSV)
T1210.defenseBy.append(D3_MBT)
T1211.defenseBy.append(D3_SSC)
T1211.defenseBy.append(D3_PCSV)
T1211.defenseBy.append(D3_MBT)
T1212.defenseBy.append(D3_PSA)
T1212.defenseBy.append(D3_PSMD)
T1212.defenseBy.append(D3_SBV)
T1212.defenseBy.append(D3_PLA)
T1212.defenseBy.append(D3_SSC)
T1212.defenseBy.append(D3_PCSV)
T1212.defenseBy.append(D3_MBT)
T1218.defenseBy.append(D3_NTCD)
T1218.defenseBy.append(D3_CSPP)
T1218.defenseBy.append(D3_RTSD)
T1218.defenseBy.append(D3_FA)
T1218.defenseBy.append(D3_PMAD)
T1218.defenseBy.append(D3_PHDURA)
T1218.defenseBy.append(D3_DA)
T1218.defenseBy.append(D3_UGLPA)
T1218.defenseBy.append(D3_FIM)
T1218.defenseBy.append(D3_PSA)
T1218.defenseBy.append(D3_SCA)
T1218.defenseBy.append(D3_FCA)
T1218.defenseBy.append(D3_EFA)
T1218_001.defenseBy.append(D3_PSA)
T1218_001.defenseBy.append(D3_SCA)
T1218_001.defenseBy.append(D3_FCA)
T1218_002.defenseBy.append(D3_PSA)
T1218_002.defenseBy.append(D3_SCA)
T1218_003.defenseBy.append(D3_PSA)
T1218_003.defenseBy.append(D3_CSPP)
T1218_003.defenseBy.append(D3_NTCD)
T1218_003.defenseBy.append(D3_PMAD)
T1218_003.defenseBy.append(D3_PHDURA)
T1218_003.defenseBy.append(D3_SCA)
T1218_003.defenseBy.append(D3_RTSD)
T1218_003.defenseBy.append(D3_UGLPA)
T1218_005.defenseBy.append(D3_PSA)
T1218_005.defenseBy.append(D3_SCA)
T1218_005.defenseBy.append(D3_DA)
T1218_005.defenseBy.append(D3_FA)
T1218_005.defenseBy.append(D3_FIM)
T1218_005.defenseBy.append(D3_EFA)
T1218_011.defenseBy.append(D3_PSA)
T1218_011.defenseBy.append(D3_SCA)
T1218_011.defenseBy.append(D3_FA)
T1218_011.defenseBy.append(D3_FIM)
T1218_013.defenseBy.append(D3_SCA)
T1219.defenseBy.append(D3_CSPP)
T1219.defenseBy.append(D3_NTCD)
T1219.defenseBy.append(D3_PMAD)
T1219.defenseBy.append(D3_PHDURA)
T1219.defenseBy.append(D3_RTSD)
T1219.defenseBy.append(D3_UGLPA)
T1219.defenseBy.append(D3_RPA)
T1220.defenseBy.append(D3_PSA)
T1220.defenseBy.append(D3_SCA)
T1220.defenseBy.append(D3_DA)
T1220.defenseBy.append(D3_FA)
T1220.defenseBy.append(D3_FIM)
T1220.defenseBy.append(D3_EFA)
T1497.defenseBy.append(D3_SCA)
T1497_003.defenseBy.append(D3_SCA)
T1498.defenseBy.append(D3_CSPP)
T1498.defenseBy.append(D3_NTCD)
T1498.defenseBy.append(D3_PMAD)
T1498.defenseBy.append(D3_PHDURA)
T1498.defenseBy.append(D3_ISVA)
T1498.defenseBy.append(D3_RTSD)
T1498.defenseBy.append(D3_UGLPA)
T1498_001.defenseBy.append(D3_CSPP)
T1498_001.defenseBy.append(D3_NTCD)
T1498_001.defenseBy.append(D3_PMAD)
T1498_001.defenseBy.append(D3_ISVA)
T1498_001.defenseBy.append(D3_PHDURA)
T1498_001.defenseBy.append(D3_RTSD)
T1498_001.defenseBy.append(D3_UGLPA)
T1498_002.defenseBy.append(D3_CSPP)
T1498_002.defenseBy.append(D3_NTCD)
T1498_002.defenseBy.append(D3_PMAD)
T1498_002.defenseBy.append(D3_PHDURA)
T1498_002.defenseBy.append(D3_ISVA)
T1498_002.defenseBy.append(D3_RTSD)
T1498_002.defenseBy.append(D3_UGLPA)
T1499_002.defenseBy.append(D3_CSPP)
T1499_002.defenseBy.append(D3_NTCD)
T1499_002.defenseBy.append(D3_PMAD)
T1499_002.defenseBy.append(D3_PHDURA)
T1499_002.defenseBy.append(D3_ISVA)
T1499_002.defenseBy.append(D3_RTSD)
T1499_002.defenseBy.append(D3_UGLPA)
T1505.defenseBy.append(D3_PSMD)
T1505.defenseBy.append(D3_FA)
T1505.defenseBy.append(D3_EHB)
T1505.defenseBy.append(D3_DA)
T1505.defenseBy.append(D3_FIM)
T1505.defenseBy.append(D3_PSA)
T1505.defenseBy.append(D3_SCA)
T1505.defenseBy.append(D3_PLA)
T1505.defenseBy.append(D3_EFA)
T1505_001.defenseBy.append(D3_PSA)
T1505_001.defenseBy.append(D3_SCA)
T1505_002.defenseBy.append(D3_PSA)
T1505_002.defenseBy.append(D3_PSMD)
T1505_002.defenseBy.append(D3_PLA)
T1505_002.defenseBy.append(D3_EHB)
T1505_003.defenseBy.append(D3_PSMD)
T1505_003.defenseBy.append(D3_FA)
T1505_003.defenseBy.append(D3_EHB)
T1505_003.defenseBy.append(D3_DA)
T1505_003.defenseBy.append(D3_FIM)
T1505_003.defenseBy.append(D3_PSA)
T1505_003.defenseBy.append(D3_PLA)
T1505_003.defenseBy.append(D3_EFA)
T1518.defenseBy.append(D3_SCA)
T1518_001.defenseBy.append(D3_SCA)
T1525.defenseBy.append(D3_FA)
T1525.defenseBy.append(D3_FIM)
T1528.defenseBy.append(D3_CCSA)
T1534.defenseBy.append(D3_HD)
T1534.defenseBy.append(D3_DA)
T1534.defenseBy.append(D3_FA)
T1534.defenseBy.append(D3_FIM)
T1534.defenseBy.append(D3_SRA)
T1534.defenseBy.append(D3_SMRA)
T1534.defenseBy.append(D3_EFA)
T1539.defenseBy.append(D3_CCSA)
T1542.defenseBy.append(D3_CSPP)
T1542.defenseBy.append(D3_NTCD)
T1542.defenseBy.append(D3_FBA)
T1542.defenseBy.append(D3_PMAD)
T1542.defenseBy.append(D3_FEMC)
T1542.defenseBy.append(D3_PHDURA)
T1542.defenseBy.append(D3_RTSD)
T1542.defenseBy.append(D3_UGLPA)
T1542.defenseBy.append(D3_SFV)
T1542.defenseBy.append(D3_FV)
T1542_001.defenseBy.append(D3_FBA)
T1542_001.defenseBy.append(D3_FEMC)
T1542_001.defenseBy.append(D3_FV)
T1542_001.defenseBy.append(D3_SFV)
T1542_002.defenseBy.append(D3_FBA)
T1542_002.defenseBy.append(D3_FEMC)
T1542_002.defenseBy.append(D3_FV)
T1542_004.defenseBy.append(D3_FBA)
T1542_004.defenseBy.append(D3_FEMC)
T1542_004.defenseBy.append(D3_FV)
T1542_004.defenseBy.append(D3_SFV)
T1542_005.defenseBy.append(D3_CSPP)
T1542_005.defenseBy.append(D3_NTCD)
T1542_005.defenseBy.append(D3_PMAD)
T1542_005.defenseBy.append(D3_PHDURA)
T1542_005.defenseBy.append(D3_RTSD)
T1542_005.defenseBy.append(D3_UGLPA)
T1543.defenseBy.append(D3_FA)
T1543.defenseBy.append(D3_SFA)
T1543.defenseBy.append(D3_FIM)
T1543_001.defenseBy.append(D3_FA)
T1543_001.defenseBy.append(D3_FIM)
T1543_002.defenseBy.append(D3_SFA)
T1543_002.defenseBy.append(D3_FA)
T1543_002.defenseBy.append(D3_FIM)
T1543_004.defenseBy.append(D3_FA)
T1543_004.defenseBy.append(D3_FIM)
T1546.defenseBy.append(D3_PSMD)
T1546.defenseBy.append(D3_NTCD)
T1546.defenseBy.append(D3_ANAA)
T1546.defenseBy.append(D3_CSPP)
T1546.defenseBy.append(D3_RTSD)
T1546.defenseBy.append(D3_FA)
T1546.defenseBy.append(D3_PMAD)
T1546.defenseBy.append(D3_PHDURA)
T1546.defenseBy.append(D3_DA)
T1546.defenseBy.append(D3_UGLPA)
T1546.defenseBy.append(D3_FIM)
T1546.defenseBy.append(D3_PSA)
T1546.defenseBy.append(D3_CAA)
T1546.defenseBy.append(D3_SCA)
T1546.defenseBy.append(D3_USICA)
T1546.defenseBy.append(D3_PLA)
T1546.defenseBy.append(D3_EFA)
T1546_002.defenseBy.append(D3_DA)
T1546_002.defenseBy.append(D3_FA)
T1546_002.defenseBy.append(D3_FIM)
T1546_002.defenseBy.append(D3_EFA)
T1546_003.defenseBy.append(D3_CSPP)
T1546_003.defenseBy.append(D3_NTCD)
T1546_003.defenseBy.append(D3_PMAD)
T1546_003.defenseBy.append(D3_PHDURA)
T1546_003.defenseBy.append(D3_CAA)
T1546_003.defenseBy.append(D3_RTSD)
T1546_003.defenseBy.append(D3_UGLPA)
T1546_003.defenseBy.append(D3_ANAA)
T1546_004.defenseBy.append(D3_FA)
T1546_004.defenseBy.append(D3_USICA)
T1546_004.defenseBy.append(D3_FIM)
T1546_005.defenseBy.append(D3_DA)
T1546_005.defenseBy.append(D3_FA)
T1546_005.defenseBy.append(D3_FIM)
T1546_005.defenseBy.append(D3_EFA)
T1546_006.defenseBy.append(D3_DA)
T1546_006.defenseBy.append(D3_FA)
T1546_006.defenseBy.append(D3_FIM)
T1546_006.defenseBy.append(D3_EFA)
T1546_007.defenseBy.append(D3_PSA)
T1546_007.defenseBy.append(D3_PSMD)
T1546_007.defenseBy.append(D3_PLA)
T1546_008.defenseBy.append(D3_NTCD)
T1546_008.defenseBy.append(D3_ANAA)
T1546_008.defenseBy.append(D3_CSPP)
T1546_008.defenseBy.append(D3_RTSD)
T1546_008.defenseBy.append(D3_FA)
T1546_008.defenseBy.append(D3_PMAD)
T1546_008.defenseBy.append(D3_PHDURA)
T1546_008.defenseBy.append(D3_DA)
T1546_008.defenseBy.append(D3_UGLPA)
T1546_008.defenseBy.append(D3_FIM)
T1546_008.defenseBy.append(D3_CAA)
T1546_008.defenseBy.append(D3_EFA)
T1546_009.defenseBy.append(D3_PSA)
T1546_009.defenseBy.append(D3_SCA)
T1546_009.defenseBy.append(D3_FA)
T1546_009.defenseBy.append(D3_FIM)
T1546_010.defenseBy.append(D3_PSA)
T1546_010.defenseBy.append(D3_SCA)
T1546_010.defenseBy.append(D3_FA)
T1546_010.defenseBy.append(D3_FIM)
T1546_013.defenseBy.append(D3_DA)
T1546_013.defenseBy.append(D3_FA)
T1546_013.defenseBy.append(D3_FIM)
T1546_013.defenseBy.append(D3_EFA)
T1546_014.defenseBy.append(D3_FA)
T1546_014.defenseBy.append(D3_FIM)
T1546_015.defenseBy.append(D3_DA)
T1546_015.defenseBy.append(D3_FA)
T1546_015.defenseBy.append(D3_FIM)
T1546_015.defenseBy.append(D3_EFA)
T1547.defenseBy.append(D3_DA)
T1547.defenseBy.append(D3_FA)
T1547.defenseBy.append(D3_FIM)
T1547.defenseBy.append(D3_SICA)
T1547.defenseBy.append(D3_EFA)
T1547_001.defenseBy.append(D3_DA)
T1547_001.defenseBy.append(D3_FA)
T1547_001.defenseBy.append(D3_FIM)
T1547_001.defenseBy.append(D3_SICA)
T1547_001.defenseBy.append(D3_EFA)
T1547_006.defenseBy.append(D3_FA)
T1547_006.defenseBy.append(D3_FIM)
T1547_007.defenseBy.append(D3_FA)
T1547_007.defenseBy.append(D3_FIM)
T1547_008.defenseBy.append(D3_FA)
T1547_008.defenseBy.append(D3_FIM)
T1547_009.defenseBy.append(D3_DA)
T1547_009.defenseBy.append(D3_FA)
T1547_009.defenseBy.append(D3_FIM)
T1547_009.defenseBy.append(D3_EFA)
T1647.defenseBy.append(D3_FA)
T1647.defenseBy.append(D3_FIM)
T1548.defenseBy.append(D3_FA)
T1548.defenseBy.append(D3_DA)
T1548.defenseBy.append(D3_FIM)
T1548.defenseBy.append(D3_PSA)
T1548.defenseBy.append(D3_SCA)
T1548.defenseBy.append(D3_SFA)
T1548.defenseBy.append(D3_EFA)
T1548_002.defenseBy.append(D3_PSA)
T1548_002.defenseBy.append(D3_SCA)
T1548_002.defenseBy.append(D3_DA)
T1548_002.defenseBy.append(D3_FA)
T1548_002.defenseBy.append(D3_FIM)
T1548_002.defenseBy.append(D3_EFA)
T1548_003.defenseBy.append(D3_SFA)
T1548_003.defenseBy.append(D3_FA)
T1548_003.defenseBy.append(D3_FIM)
T1548_004.defenseBy.append(D3_SCA)
T1550.defenseBy.append(D3_NTCD)
T1550.defenseBy.append(D3_PSMD)
T1550.defenseBy.append(D3_SDA)
T1550.defenseBy.append(D3_CSPP)
T1550.defenseBy.append(D3_RTSD)
T1550.defenseBy.append(D3_PMAD)
T1550.defenseBy.append(D3_PHDURA)
T1550.defenseBy.append(D3_UGLPA)
T1550.defenseBy.append(D3_RAPA)
T1550.defenseBy.append(D3_PSA)
T1550.defenseBy.append(D3_ANET)
T1550.defenseBy.append(D3_CCSA)
T1550.defenseBy.append(D3_PLA)
T1550_001.defenseBy.append(D3_NTCD)
T1550_001.defenseBy.append(D3_PSMD)
T1550_001.defenseBy.append(D3_CSPP)
T1550_001.defenseBy.append(D3_RTSD)
T1550_001.defenseBy.append(D3_PMAD)
T1550_001.defenseBy.append(D3_PHDURA)
T1550_001.defenseBy.append(D3_UGLPA)
T1550_001.defenseBy.append(D3_PSA)
T1550_001.defenseBy.append(D3_CCSA)
T1550_001.defenseBy.append(D3_PLA)
T1550_002.defenseBy.append(D3_PSA)
T1550_002.defenseBy.append(D3_PSMD)
T1550_002.defenseBy.append(D3_ANET)
T1550_002.defenseBy.append(D3_RAPA)
T1550_002.defenseBy.append(D3_SDA)
T1550_002.defenseBy.append(D3_PLA)
T1550_003.defenseBy.append(D3_PSA)
T1550_003.defenseBy.append(D3_PSMD)
T1550_003.defenseBy.append(D3_ANET)
T1550_003.defenseBy.append(D3_PLA)
T1550_003.defenseBy.append(D3_RAPA)
T1550_003.defenseBy.append(D3_SDA)
T1550_004.defenseBy.append(D3_PSMD)
T1550_004.defenseBy.append(D3_NTCD)
T1550_004.defenseBy.append(D3_CSPP)
T1550_004.defenseBy.append(D3_RTSD)
T1550_004.defenseBy.append(D3_PMAD)
T1550_004.defenseBy.append(D3_PHDURA)
T1550_004.defenseBy.append(D3_UGLPA)
T1550_004.defenseBy.append(D3_PSA)
T1550_004.defenseBy.append(D3_CCSA)
T1550_004.defenseBy.append(D3_PLA)
T1552.defenseBy.append(D3_FA)
T1552.defenseBy.append(D3_FIM)
T1552.defenseBy.append(D3_CCSA)
T1552_001.defenseBy.append(D3_FA)
T1552_001.defenseBy.append(D3_FIM)
T1552_001.defenseBy.append(D3_CCSA)
T1552_002.defenseBy.append(D3_CCSA)
T1552_003.defenseBy.append(D3_FA)
T1552_003.defenseBy.append(D3_FIM)
T1552_003.defenseBy.append(D3_CCSA)
T1552_004.defenseBy.append(D3_CCSA)
T1552_005.defenseBy.append(D3_CCSA)
T1552_006.defenseBy.append(D3_CCSA)
T1552_007.defenseBy.append(D3_CCSA)
T1555.defenseBy.append(D3_SCA)
T1555.defenseBy.append(D3_FA)
T1555.defenseBy.append(D3_FIM)
T1555_001.defenseBy.append(D3_FA)
T1555_001.defenseBy.append(D3_FIM)
T1555_002.defenseBy.append(D3_FA)
T1555_002.defenseBy.append(D3_FIM)
T1555_003.defenseBy.append(D3_SCA)
T1555_003.defenseBy.append(D3_FA)
T1555_003.defenseBy.append(D3_FIM)
T1555_004.defenseBy.append(D3_FA)
T1555_004.defenseBy.append(D3_FIM)
T1555_005.defenseBy.append(D3_FA)
T1555_005.defenseBy.append(D3_FIM)
T1556.defenseBy.append(D3_PSA)
T1556.defenseBy.append(D3_PSMD)
T1556.defenseBy.append(D3_SFA)
T1556.defenseBy.append(D3_FA)
T1556.defenseBy.append(D3_PLA)
T1556.defenseBy.append(D3_FIM)
T1556_001.defenseBy.append(D3_PSA)
T1556_001.defenseBy.append(D3_PSMD)
T1556_001.defenseBy.append(D3_PLA)
T1556_002.defenseBy.append(D3_PSMD)
T1556_002.defenseBy.append(D3_PSA)
T1556_002.defenseBy.append(D3_FA)
T1556_002.defenseBy.append(D3_PLA)
T1556_002.defenseBy.append(D3_FIM)
T1556_003.defenseBy.append(D3_PSA)
T1556_003.defenseBy.append(D3_PSMD)
T1556_003.defenseBy.append(D3_SFA)
T1556_003.defenseBy.append(D3_FA)
T1556_003.defenseBy.append(D3_PLA)
T1556_003.defenseBy.append(D3_FIM)
T1556_004.defenseBy.append(D3_PSA)
T1556_004.defenseBy.append(D3_PSMD)
T1556_004.defenseBy.append(D3_PLA)
T1556_005.defenseBy.append(D3_PSA)
T1556_005.defenseBy.append(D3_PSMD)
T1556_005.defenseBy.append(D3_PLA)
T1557.defenseBy.append(D3_CSPP)
T1557.defenseBy.append(D3_NTCD)
T1557.defenseBy.append(D3_PMAD)
T1557.defenseBy.append(D3_PHDURA)
T1557.defenseBy.append(D3_CAA)
T1557.defenseBy.append(D3_RTSD)
T1557.defenseBy.append(D3_UGLPA)
T1557_001.defenseBy.append(D3_CSPP)
T1557_001.defenseBy.append(D3_NTCD)
T1557_001.defenseBy.append(D3_PMAD)
T1557_001.defenseBy.append(D3_PHDURA)
T1557_001.defenseBy.append(D3_CAA)
T1557_001.defenseBy.append(D3_RTSD)
T1557_001.defenseBy.append(D3_UGLPA)
T1557_002.defenseBy.append(D3_CSPP)
T1557_002.defenseBy.append(D3_NTCD)
T1557_002.defenseBy.append(D3_PMAD)
T1557_002.defenseBy.append(D3_PHDURA)
T1557_002.defenseBy.append(D3_RTSD)
T1557_002.defenseBy.append(D3_UGLPA)
T1557_003.defenseBy.append(D3_CSPP)
T1557_003.defenseBy.append(D3_NTCD)
T1557_003.defenseBy.append(D3_PMAD)
T1557_003.defenseBy.append(D3_PHDURA)
T1557_003.defenseBy.append(D3_RTSD)
T1557_003.defenseBy.append(D3_UGLPA)
T1558.defenseBy.append(D3_CSPP)
T1558.defenseBy.append(D3_RTA)
T1558.defenseBy.append(D3_NTCD)
T1558.defenseBy.append(D3_PMAD)
T1558.defenseBy.append(D3_PHDURA)
T1558.defenseBy.append(D3_RTSD)
T1558.defenseBy.append(D3_UGLPA)
T1558.defenseBy.append(D3_CCSA)
T1558_001.defenseBy.append(D3_CCSA)
T1558_002.defenseBy.append(D3_CCSA)
T1558_003.defenseBy.append(D3_CSPP)
T1558_003.defenseBy.append(D3_NTCD)
T1558_003.defenseBy.append(D3_RTA)
T1558_003.defenseBy.append(D3_PMAD)
T1558_003.defenseBy.append(D3_PHDURA)
T1558_003.defenseBy.append(D3_RTSD)
T1558_003.defenseBy.append(D3_UGLPA)
T1558_003.defenseBy.append(D3_CCSA)
T1558_004.defenseBy.append(D3_CCSA)
T1560.defenseBy.append(D3_FA)
T1560.defenseBy.append(D3_FIM)
T1560_001.defenseBy.append(D3_FA)
T1560_001.defenseBy.append(D3_FIM)
T1560_002.defenseBy.append(D3_FA)
T1560_002.defenseBy.append(D3_FIM)
T1560_003.defenseBy.append(D3_FA)
T1560_003.defenseBy.append(D3_FIM)
T1562.defenseBy.append(D3_PSMD)
T1562.defenseBy.append(D3_FA)
T1562.defenseBy.append(D3_DA)
T1562.defenseBy.append(D3_FIM)
T1562.defenseBy.append(D3_PSA)
T1562.defenseBy.append(D3_SDM)
T1562.defenseBy.append(D3_SICA)
T1562.defenseBy.append(D3_PLA)
T1562.defenseBy.append(D3_EFA)
T1562_001.defenseBy.append(D3_PSA)
T1562_001.defenseBy.append(D3_PSMD)
T1562_001.defenseBy.append(D3_SDM)
T1562_001.defenseBy.append(D3_PLA)
T1562_003.defenseBy.append(D3_DA)
T1562_003.defenseBy.append(D3_FA)
T1562_003.defenseBy.append(D3_FIM)
T1562_003.defenseBy.append(D3_EFA)
T1562_009.defenseBy.append(D3_SICA)
T1563.defenseBy.append(D3_CSPP)
T1563.defenseBy.append(D3_NTCD)
T1563.defenseBy.append(D3_PMAD)
T1563.defenseBy.append(D3_PHDURA)
T1563.defenseBy.append(D3_RTSD)
T1563.defenseBy.append(D3_UGLPA)
T1563_001.defenseBy.append(D3_CSPP)
T1563_001.defenseBy.append(D3_NTCD)
T1563_001.defenseBy.append(D3_PMAD)
T1563_001.defenseBy.append(D3_PHDURA)
T1563_001.defenseBy.append(D3_RTSD)
T1563_001.defenseBy.append(D3_UGLPA)
T1563_002.defenseBy.append(D3_CSPP)
T1563_002.defenseBy.append(D3_NTCD)
T1563_002.defenseBy.append(D3_PMAD)
T1563_002.defenseBy.append(D3_PHDURA)
T1563_002.defenseBy.append(D3_RTSD)
T1563_002.defenseBy.append(D3_UGLPA)
T1564.defenseBy.append(D3_FA)
T1564.defenseBy.append(D3_SBV)
T1564.defenseBy.append(D3_DA)
T1564.defenseBy.append(D3_FIM)
T1564.defenseBy.append(D3_USICA)
T1564.defenseBy.append(D3_EFA)
T1564_002.defenseBy.append(D3_FA)
T1564_002.defenseBy.append(D3_USICA)
T1564_002.defenseBy.append(D3_FIM)
T1564_003.defenseBy.append(D3_FA)
T1564_003.defenseBy.append(D3_FIM)
T1564_006.defenseBy.append(D3_SBV)
T1564_006.defenseBy.append(D3_FA)
T1564_006.defenseBy.append(D3_FIM)
T1564_007.defenseBy.append(D3_DA)
T1564_007.defenseBy.append(D3_FA)
T1564_007.defenseBy.append(D3_FIM)
T1564_007.defenseBy.append(D3_EFA)
T1565.defenseBy.append(D3_CSPP)
T1565.defenseBy.append(D3_NTCD)
T1565.defenseBy.append(D3_PMAD)
T1565.defenseBy.append(D3_PHDURA)
T1565.defenseBy.append(D3_RTSD)
T1565.defenseBy.append(D3_DA)
T1565.defenseBy.append(D3_UGLPA)
T1565.defenseBy.append(D3_FA)
T1565.defenseBy.append(D3_FIM)
T1565.defenseBy.append(D3_EFA)
T1565_001.defenseBy.append(D3_FA)
T1565_001.defenseBy.append(D3_FIM)
T1565_002.defenseBy.append(D3_CSPP)
T1565_002.defenseBy.append(D3_NTCD)
T1565_002.defenseBy.append(D3_PMAD)
T1565_002.defenseBy.append(D3_PHDURA)
T1565_002.defenseBy.append(D3_RTSD)
T1565_002.defenseBy.append(D3_UGLPA)
T1565_003.defenseBy.append(D3_DA)
T1565_003.defenseBy.append(D3_FA)
T1565_003.defenseBy.append(D3_FIM)
T1565_003.defenseBy.append(D3_EFA)
T1566.defenseBy.append(D3_NTCD)
T1566.defenseBy.append(D3_ID)
T1566.defenseBy.append(D3_SMRA)
T1566.defenseBy.append(D3_CSPP)
T1566.defenseBy.append(D3_RTSD)
T1566.defenseBy.append(D3_FA)
T1566.defenseBy.append(D3_PMAD)
T1566.defenseBy.append(D3_PHDURA)
T1566.defenseBy.append(D3_DA)
T1566.defenseBy.append(D3_UGLPA)
T1566.defenseBy.append(D3_FIM)
T1566.defenseBy.append(D3_UA)
T1566.defenseBy.append(D3_HD)
T1566.defenseBy.append(D3_ISVA)
T1566.defenseBy.append(D3_SRA)
T1566.defenseBy.append(D3_URA)
T1566.defenseBy.append(D3_EFA)
T1566_001.defenseBy.append(D3_NTCD)
T1566_001.defenseBy.append(D3_SMRA)
T1566_001.defenseBy.append(D3_CSPP)
T1566_001.defenseBy.append(D3_RTSD)
T1566_001.defenseBy.append(D3_FA)
T1566_001.defenseBy.append(D3_PMAD)
T1566_001.defenseBy.append(D3_PHDURA)
T1566_001.defenseBy.append(D3_DA)
T1566_001.defenseBy.append(D3_UGLPA)
T1566_001.defenseBy.append(D3_FIM)
T1566_001.defenseBy.append(D3_HD)
T1566_001.defenseBy.append(D3_ISVA)
T1566_001.defenseBy.append(D3_SRA)
T1566_001.defenseBy.append(D3_EFA)
T1566_002.defenseBy.append(D3_NTCD)
T1566_002.defenseBy.append(D3_ID)
T1566_002.defenseBy.append(D3_SMRA)
T1566_002.defenseBy.append(D3_CSPP)
T1566_002.defenseBy.append(D3_RTSD)
T1566_002.defenseBy.append(D3_FA)
T1566_002.defenseBy.append(D3_PMAD)
T1566_002.defenseBy.append(D3_PHDURA)
T1566_002.defenseBy.append(D3_DA)
T1566_002.defenseBy.append(D3_UGLPA)
T1566_002.defenseBy.append(D3_FIM)
T1566_002.defenseBy.append(D3_UA)
T1566_002.defenseBy.append(D3_HD)
T1566_002.defenseBy.append(D3_ISVA)
T1566_002.defenseBy.append(D3_SRA)
T1566_002.defenseBy.append(D3_URA)
T1566_002.defenseBy.append(D3_EFA)
T1566_003.defenseBy.append(D3_HD)
T1566_003.defenseBy.append(D3_FA)
T1566_003.defenseBy.append(D3_ID)
T1566_003.defenseBy.append(D3_FIM)
T1566_003.defenseBy.append(D3_URA)
T1566_003.defenseBy.append(D3_UA)
T1567.defenseBy.append(D3_CSPP)
T1567.defenseBy.append(D3_NTCD)
T1567.defenseBy.append(D3_PMAD)
T1567.defenseBy.append(D3_PHDURA)
T1567.defenseBy.append(D3_RTSD)
T1567.defenseBy.append(D3_UGLPA)
T1567.defenseBy.append(D3_RPA)
T1567_001.defenseBy.append(D3_CSPP)
T1567_001.defenseBy.append(D3_NTCD)
T1567_001.defenseBy.append(D3_PMAD)
T1567_001.defenseBy.append(D3_PHDURA)
T1567_001.defenseBy.append(D3_RTSD)
T1567_001.defenseBy.append(D3_UGLPA)
T1567_001.defenseBy.append(D3_RPA)
T1567_002.defenseBy.append(D3_CSPP)
T1567_002.defenseBy.append(D3_NTCD)
T1567_002.defenseBy.append(D3_PMAD)
T1567_002.defenseBy.append(D3_PHDURA)
T1567_002.defenseBy.append(D3_RTSD)
T1567_002.defenseBy.append(D3_UGLPA)
T1567_002.defenseBy.append(D3_RPA)
T1568.defenseBy.append(D3_CSPP)
T1568.defenseBy.append(D3_DNSTA)
T1568.defenseBy.append(D3_NTCD)
T1568.defenseBy.append(D3_PMAD)
T1568.defenseBy.append(D3_PHDURA)
T1568.defenseBy.append(D3_RTSD)
T1568.defenseBy.append(D3_UGLPA)
T1568.defenseBy.append(D3_RPA)
T1568_001.defenseBy.append(D3_CSPP)
T1568_001.defenseBy.append(D3_DNSTA)
T1568_001.defenseBy.append(D3_NTCD)
T1568_001.defenseBy.append(D3_PMAD)
T1568_001.defenseBy.append(D3_PHDURA)
T1568_001.defenseBy.append(D3_RTSD)
T1568_001.defenseBy.append(D3_UGLPA)
T1568_001.defenseBy.append(D3_RPA)
T1568_002.defenseBy.append(D3_CSPP)
T1568_002.defenseBy.append(D3_DNSTA)
T1568_002.defenseBy.append(D3_NTCD)
T1568_002.defenseBy.append(D3_PMAD)
T1568_002.defenseBy.append(D3_PHDURA)
T1568_002.defenseBy.append(D3_RTSD)
T1568_002.defenseBy.append(D3_UGLPA)
T1568_002.defenseBy.append(D3_RPA)
T1568_003.defenseBy.append(D3_CSPP)
T1568_003.defenseBy.append(D3_DNSTA)
T1568_003.defenseBy.append(D3_NTCD)
T1568_003.defenseBy.append(D3_PMAD)
T1568_003.defenseBy.append(D3_PHDURA)
T1568_003.defenseBy.append(D3_RTSD)
T1568_003.defenseBy.append(D3_UGLPA)
T1568_003.defenseBy.append(D3_RPA)
T1570.defenseBy.append(D3_CSPP)
T1570.defenseBy.append(D3_NTCD)
T1570.defenseBy.append(D3_FC)
T1570.defenseBy.append(D3_PMAD)
T1570.defenseBy.append(D3_PHDURA)
T1570.defenseBy.append(D3_CAA)
T1570.defenseBy.append(D3_RTSD)
T1570.defenseBy.append(D3_UGLPA)
T1571.defenseBy.append(D3_CSPP)
T1571.defenseBy.append(D3_NTCD)
T1571.defenseBy.append(D3_PMAD)
T1571.defenseBy.append(D3_PHDURA)
T1571.defenseBy.append(D3_RTSD)
T1571.defenseBy.append(D3_UGLPA)
T1571.defenseBy.append(D3_RPA)
T1572.defenseBy.append(D3_CSPP)
T1572.defenseBy.append(D3_NTCD)
T1572.defenseBy.append(D3_PMAD)
T1572.defenseBy.append(D3_PHDURA)
T1572.defenseBy.append(D3_RTSD)
T1572.defenseBy.append(D3_UGLPA)
T1572.defenseBy.append(D3_RPA)
T1573.defenseBy.append(D3_CSPP)
T1573.defenseBy.append(D3_NTCD)
T1573.defenseBy.append(D3_CA)
T1573.defenseBy.append(D3_PMAD)
T1573.defenseBy.append(D3_PHDURA)
T1573.defenseBy.append(D3_RTSD)
T1573.defenseBy.append(D3_UGLPA)
T1573.defenseBy.append(D3_RPA)
T1573.defenseBy.append(D3_FA)
T1573.defenseBy.append(D3_FIM)
T1573_001.defenseBy.append(D3_CSPP)
T1573_001.defenseBy.append(D3_NTCD)
T1573_001.defenseBy.append(D3_PMAD)
T1573_001.defenseBy.append(D3_PHDURA)
T1573_001.defenseBy.append(D3_RTSD)
T1573_001.defenseBy.append(D3_UGLPA)
T1573_001.defenseBy.append(D3_RPA)
T1573_002.defenseBy.append(D3_CSPP)
T1573_002.defenseBy.append(D3_NTCD)
T1573_002.defenseBy.append(D3_CA)
T1573_002.defenseBy.append(D3_PMAD)
T1573_002.defenseBy.append(D3_PHDURA)
T1573_002.defenseBy.append(D3_RTSD)
T1573_002.defenseBy.append(D3_UGLPA)
T1573_002.defenseBy.append(D3_RPA)
T1573_002.defenseBy.append(D3_FA)
T1573_002.defenseBy.append(D3_FIM)
T1574.defenseBy.append(D3_FA)
T1574.defenseBy.append(D3_SBV)
T1574.defenseBy.append(D3_DA)
T1574.defenseBy.append(D3_FIM)
T1574.defenseBy.append(D3_SFA)
T1574.defenseBy.append(D3_SICA)
T1574.defenseBy.append(D3_EFA)
T1574_001.defenseBy.append(D3_FA)
T1574_001.defenseBy.append(D3_FIM)
T1574_002.defenseBy.append(D3_FA)
T1574_002.defenseBy.append(D3_FIM)
T1574_004.defenseBy.append(D3_FA)
T1574_004.defenseBy.append(D3_FIM)
T1574_005.defenseBy.append(D3_SBV)
T1574_006.defenseBy.append(D3_SFA)
T1574_006.defenseBy.append(D3_FA)
T1574_006.defenseBy.append(D3_FIM)
T1574_007.defenseBy.append(D3_DA)
T1574_007.defenseBy.append(D3_FA)
T1574_007.defenseBy.append(D3_FIM)
T1574_007.defenseBy.append(D3_EFA)
T1574_008.defenseBy.append(D3_DA)
T1574_008.defenseBy.append(D3_FA)
T1574_008.defenseBy.append(D3_FIM)
T1574_008.defenseBy.append(D3_EFA)
T1574_009.defenseBy.append(D3_DA)
T1574_009.defenseBy.append(D3_FA)
T1574_009.defenseBy.append(D3_FIM)
T1574_009.defenseBy.append(D3_EFA)
T1574_010.defenseBy.append(D3_SBV)
T1574_011.defenseBy.append(D3_SICA)
T1574_012.defenseBy.append(D3_FA)
T1574_012.defenseBy.append(D3_FIM)

# Asserted_properties Defense_Deceive - Technique
T1003.defenseBy.append(D3_DF)
T1003.defenseBy.append(D3_DUC)
T1003_003.defenseBy.append(D3_DUC)
T1003_005.defenseBy.append(D3_DUC)
T1003_007.defenseBy.append(D3_DF)
T1003_008.defenseBy.append(D3_DF)
T1003_008.defenseBy.append(D3_DUC)
T1005.defenseBy.append(D3_DF)
T1014.defenseBy.append(D3_DF)
T1016.defenseBy.append(D3_DF)
T1016_001.defenseBy.append(D3_DF)
T1018.defenseBy.append(D3_DF)
T1027.defenseBy.append(D3_DF)
T1027_001.defenseBy.append(D3_DF)
T1027_002.defenseBy.append(D3_DF)
T1027_004.defenseBy.append(D3_DF)
T1033.defenseBy.append(D3_DF)
T1036.defenseBy.append(D3_DF)
T1036_001.defenseBy.append(D3_DF)
T1036_003.defenseBy.append(D3_DF)
T1036_005.defenseBy.append(D3_DF)
T1036_006.defenseBy.append(D3_DF)
T1037.defenseBy.append(D3_DF)
T1037.defenseBy.append(D3_DNR)
T1037_001.defenseBy.append(D3_DF)
T1037_002.defenseBy.append(D3_DF)
T1037_003.defenseBy.append(D3_DF)
T1037_003.defenseBy.append(D3_DNR)
T1037_004.defenseBy.append(D3_DF)
T1039.defenseBy.append(D3_DNR)
T1041.defenseBy.append(D3_DF)
T1048.defenseBy.append(D3_DF)
T1048_002.defenseBy.append(D3_DF)
T1053.defenseBy.append(D3_DF)
T1055.defenseBy.append(D3_DF)
T1055_001.defenseBy.append(D3_DF)
T1055_002.defenseBy.append(D3_DF)
T1055_003.defenseBy.append(D3_DF)
T1055_009.defenseBy.append(D3_DF)
T1055_014.defenseBy.append(D3_DF)
T1059.defenseBy.append(D3_DF)
T1059_001.defenseBy.append(D3_DF)
T1059_002.defenseBy.append(D3_DF)
T1059_003.defenseBy.append(D3_DF)
T1059_004.defenseBy.append(D3_DF)
T1059_005.defenseBy.append(D3_DF)
T1059_006.defenseBy.append(D3_DF)
T1059_007.defenseBy.append(D3_DF)
T1059_008.defenseBy.append(D3_DF)
T1070.defenseBy.append(D3_DF)
T1070.defenseBy.append(D3_DNR)
T1070_002.defenseBy.append(D3_DF)
T1070_004.defenseBy.append(D3_DF)
T1070_005.defenseBy.append(D3_DNR)
T1071.defenseBy.append(D3_DF)
T1071_001.defenseBy.append(D3_DF)
T1071_002.defenseBy.append(D3_DF)
T1071_003.defenseBy.append(D3_DF)
T1071_004.defenseBy.append(D3_DF)
T1072.defenseBy.append(D3_DF)
T1074.defenseBy.append(D3_DF)
T1074.defenseBy.append(D3_DNR)
T1074_001.defenseBy.append(D3_DF)
T1074_002.defenseBy.append(D3_DNR)
T1080.defenseBy.append(D3_DNR)
T1083.defenseBy.append(D3_DF)
T1098.defenseBy.append(D3_DUC)
T1098_001.defenseBy.append(D3_DUC)
T1110.defenseBy.append(D3_DUC)
T1110_001.defenseBy.append(D3_DUC)
T1110_002.defenseBy.append(D3_DUC)
T1110_003.defenseBy.append(D3_DUC)
T1114.defenseBy.append(D3_DF)
T1114.defenseBy.append(D3_DNR)
T1114_001.defenseBy.append(D3_DF)
T1114_002.defenseBy.append(D3_DNR)
T1119.defenseBy.append(D3_DF)
T1127.defenseBy.append(D3_DF)
T1127_001.defenseBy.append(D3_DF)
T1134.defenseBy.append(D3_DUC)
T1134_001.defenseBy.append(D3_DUC)
T1134_002.defenseBy.append(D3_DUC)
T1134_003.defenseBy.append(D3_DUC)
T1137.defenseBy.append(D3_DF)
T1137_001.defenseBy.append(D3_DF)
T1137_003.defenseBy.append(D3_DF)
T1140.defenseBy.append(D3_DF)
T1555_001.defenseBy.append(D3_DUC)
T1187.defenseBy.append(D3_DF)
T1204.defenseBy.append(D3_DF)
T1204_002.defenseBy.append(D3_DF)
T1213.defenseBy.append(D3_DNR)
T1213_001.defenseBy.append(D3_DNR)
T1213_002.defenseBy.append(D3_DNR)
T1218.defenseBy.append(D3_DF)
T1218_005.defenseBy.append(D3_DF)
T1218_011.defenseBy.append(D3_DF)
T1220.defenseBy.append(D3_DF)
T1491.defenseBy.append(D3_DNR)
T1491_002.defenseBy.append(D3_DNR)
T1505.defenseBy.append(D3_DF)
T1505.defenseBy.append(D3_DNR)
T1505_002.defenseBy.append(D3_DNR)
T1505_003.defenseBy.append(D3_DF)
T1505_003.defenseBy.append(D3_DNR)
T1525.defenseBy.append(D3_DF)
T1528.defenseBy.append(D3_DUC)
T1534.defenseBy.append(D3_DF)
T1539.defenseBy.append(D3_DUC)
T1543.defenseBy.append(D3_DF)
T1543_001.defenseBy.append(D3_DF)
T1543_002.defenseBy.append(D3_DF)
T1543_004.defenseBy.append(D3_DF)
T1546.defenseBy.append(D3_DF)
T1546_002.defenseBy.append(D3_DF)
T1546_004.defenseBy.append(D3_DF)
T1546_005.defenseBy.append(D3_DF)
T1546_006.defenseBy.append(D3_DF)
T1546_008.defenseBy.append(D3_DF)
T1546_009.defenseBy.append(D3_DF)
T1546_010.defenseBy.append(D3_DF)
T1546_013.defenseBy.append(D3_DF)
T1546_014.defenseBy.append(D3_DF)
T1546_015.defenseBy.append(D3_DF)
T1547.defenseBy.append(D3_DF)
T1547_001.defenseBy.append(D3_DF)
T1547_006.defenseBy.append(D3_DF)
T1547_007.defenseBy.append(D3_DF)
T1547_008.defenseBy.append(D3_DF)
T1547_009.defenseBy.append(D3_DF)
T1647.defenseBy.append(D3_DF)
T1548.defenseBy.append(D3_DF)
T1548_002.defenseBy.append(D3_DF)
T1548_003.defenseBy.append(D3_DF)
T1550.defenseBy.append(D3_DUC)
T1550_001.defenseBy.append(D3_DUC)
T1550_004.defenseBy.append(D3_DUC)
T1552.defenseBy.append(D3_DF)
T1552.defenseBy.append(D3_DUC)
T1552_001.defenseBy.append(D3_DF)
T1552_001.defenseBy.append(D3_DUC)
T1552_002.defenseBy.append(D3_DUC)
T1552_003.defenseBy.append(D3_DF)
T1552_003.defenseBy.append(D3_DUC)
T1552_004.defenseBy.append(D3_DUC)
T1552_005.defenseBy.append(D3_DUC)
T1552_006.defenseBy.append(D3_DUC)
T1552_007.defenseBy.append(D3_DUC)
T1555.defenseBy.append(D3_DF)
T1555_001.defenseBy.append(D3_DF)
T1555_002.defenseBy.append(D3_DF)
T1555_003.defenseBy.append(D3_DF)
T1555_004.defenseBy.append(D3_DF)
T1555_005.defenseBy.append(D3_DF)
T1556.defenseBy.append(D3_DF)
T1556_002.defenseBy.append(D3_DF)
T1556_003.defenseBy.append(D3_DF)
T1558.defenseBy.append(D3_DUC)
T1558_001.defenseBy.append(D3_DUC)
T1558_002.defenseBy.append(D3_DUC)
T1558_003.defenseBy.append(D3_DUC)
T1558_004.defenseBy.append(D3_DUC)
T1560.defenseBy.append(D3_DF)
T1560_001.defenseBy.append(D3_DF)
T1560_002.defenseBy.append(D3_DF)
T1560_003.defenseBy.append(D3_DF)
T1562.defenseBy.append(D3_DF)
T1562_003.defenseBy.append(D3_DF)
T1564.defenseBy.append(D3_DF)
T1564_002.defenseBy.append(D3_DF)
T1564_003.defenseBy.append(D3_DF)
T1564_006.defenseBy.append(D3_DF)
T1564_007.defenseBy.append(D3_DF)
T1565.defenseBy.append(D3_DF)
T1565_001.defenseBy.append(D3_DF)
T1565_003.defenseBy.append(D3_DF)
T1566.defenseBy.append(D3_DF)
T1566_001.defenseBy.append(D3_DF)
T1566_002.defenseBy.append(D3_DF)
T1566_003.defenseBy.append(D3_DF)
T1573.defenseBy.append(D3_DF)
T1573_002.defenseBy.append(D3_DF)
T1574.defenseBy.append(D3_DF)
T1574_001.defenseBy.append(D3_DF)
T1574_002.defenseBy.append(D3_DF)
T1574_004.defenseBy.append(D3_DF)
T1574_006.defenseBy.append(D3_DF)
T1574_007.defenseBy.append(D3_DF)
T1574_008.defenseBy.append(D3_DF)
T1574_009.defenseBy.append(D3_DF)
T1574_012.defenseBy.append(D3_DF)

# Asserted_properties Defense_Evict - Technique
T1003.defenseBy.append(D3_ANCI)
T1003.defenseBy.append(D3_FR)
T1003.defenseBy.append(D3_CR)
T1003.defenseBy.append(D3_PT)
T1003.defenseBy.append(D3_PS)
T1003_001.defenseBy.append(D3_PS)
T1003_001.defenseBy.append(D3_PT)
T1003_002.defenseBy.append(D3_PS)
T1003_002.defenseBy.append(D3_PT)
T1003_003.defenseBy.append(D3_ANCI)
T1003_003.defenseBy.append(D3_CR)
T1003_004.defenseBy.append(D3_PS)
T1003_004.defenseBy.append(D3_PT)
T1003_005.defenseBy.append(D3_ANCI)
T1003_005.defenseBy.append(D3_CR)
T1003_007.defenseBy.append(D3_FR)
T1003_008.defenseBy.append(D3_ANCI)
T1003_008.defenseBy.append(D3_CR)
T1003_008.defenseBy.append(D3_FR)
T1005.defenseBy.append(D3_FR)
T1014.defenseBy.append(D3_FR)
T1016.defenseBy.append(D3_FR)
T1016_001.defenseBy.append(D3_FR)
T1018.defenseBy.append(D3_FR)
T1027.defenseBy.append(D3_FR)
T1027_001.defenseBy.append(D3_FR)
T1027_002.defenseBy.append(D3_FR)
T1027_004.defenseBy.append(D3_FR)
T1033.defenseBy.append(D3_FR)
T1033.defenseBy.append(D3_PT)
T1033.defenseBy.append(D3_PS)
T1036.defenseBy.append(D3_FR)
T1036_001.defenseBy.append(D3_FR)
T1036_003.defenseBy.append(D3_FR)
T1036_005.defenseBy.append(D3_FR)
T1036_006.defenseBy.append(D3_FR)
T1037.defenseBy.append(D3_FR)
T1037_001.defenseBy.append(D3_FR)
T1037_002.defenseBy.append(D3_FR)
T1037_003.defenseBy.append(D3_FR)
T1037_004.defenseBy.append(D3_FR)
T1041.defenseBy.append(D3_FR)
T1048.defenseBy.append(D3_FR)
T1048_002.defenseBy.append(D3_FR)
T1053.defenseBy.append(D3_FR)
T1053.defenseBy.append(D3_PT)
T1053.defenseBy.append(D3_PS)
T1053_002.defenseBy.append(D3_PS)
T1053_002.defenseBy.append(D3_PT)
T1053_002.defenseBy.append(D3_PS)
T1053_002.defenseBy.append(D3_PT)
T1053_003.defenseBy.append(D3_PS)
T1053_003.defenseBy.append(D3_PT)
T1053_005.defenseBy.append(D3_PS)
T1053_005.defenseBy.append(D3_PT)
T1053_006.defenseBy.append(D3_PS)
T1053_006.defenseBy.append(D3_PT)
T1053_007.defenseBy.append(D3_PS)
T1053_007.defenseBy.append(D3_PT)
T1055.defenseBy.append(D3_FR)
T1055_001.defenseBy.append(D3_FR)
T1055_002.defenseBy.append(D3_FR)
T1055_003.defenseBy.append(D3_FR)
T1055_009.defenseBy.append(D3_FR)
T1055_014.defenseBy.append(D3_FR)
T1059.defenseBy.append(D3_FR)
T1059_001.defenseBy.append(D3_FR)
T1059_002.defenseBy.append(D3_FR)
T1059_003.defenseBy.append(D3_FR)
T1059_004.defenseBy.append(D3_FR)
T1059_005.defenseBy.append(D3_FR)
T1059_006.defenseBy.append(D3_FR)
T1059_007.defenseBy.append(D3_FR)
T1059_008.defenseBy.append(D3_FR)
T1070.defenseBy.append(D3_FR)
T1070_002.defenseBy.append(D3_FR)
T1070_004.defenseBy.append(D3_FR)
T1071.defenseBy.append(D3_FR)
T1071_001.defenseBy.append(D3_FR)
T1071_002.defenseBy.append(D3_FR)
T1071_003.defenseBy.append(D3_FR)
T1071_004.defenseBy.append(D3_FR)
T1072.defenseBy.append(D3_FR)
T1074.defenseBy.append(D3_FR)
T1074_001.defenseBy.append(D3_FR)
T1078.defenseBy.append(D3_AL)
T1078_001.defenseBy.append(D3_AL)
T1078_002.defenseBy.append(D3_AL)
T1078_003.defenseBy.append(D3_AL)
T1078_004.defenseBy.append(D3_AL)
T1083.defenseBy.append(D3_FR)
T1087_001.defenseBy.append(D3_AL)
T1087_002.defenseBy.append(D3_AL)
T1087_004.defenseBy.append(D3_AL)
T1098.defenseBy.append(D3_ANCI)
T1098.defenseBy.append(D3_CR)
T1098.defenseBy.append(D3_AL)
T1098_001.defenseBy.append(D3_ANCI)
T1098_001.defenseBy.append(D3_CR)
T1098_001.defenseBy.append(D3_AL)
T1098_002.defenseBy.append(D3_AL)
T1098_003.defenseBy.append(D3_AL)
T1098_004.defenseBy.append(D3_AL)
T1098_005.defenseBy.append(D3_AL)
T1110.defenseBy.append(D3_ANCI)
T1110.defenseBy.append(D3_CR)
T1110_001.defenseBy.append(D3_ANCI)
T1110_001.defenseBy.append(D3_CR)
T1110_002.defenseBy.append(D3_ANCI)
T1110_002.defenseBy.append(D3_CR)
T1110_003.defenseBy.append(D3_ANCI)
T1110_003.defenseBy.append(D3_CR)
T1114.defenseBy.append(D3_FR)
T1114.defenseBy.append(D3_ER)
T1114_001.defenseBy.append(D3_ER)
T1114_001.defenseBy.append(D3_FR)
T1114_002.defenseBy.append(D3_ER)
T1119.defenseBy.append(D3_FR)
T1127.defenseBy.append(D3_FR)
T1127_001.defenseBy.append(D3_FR)
T1134.defenseBy.append(D3_ANCI)
T1134.defenseBy.append(D3_CR)
T1134_001.defenseBy.append(D3_ANCI)
T1134_001.defenseBy.append(D3_CR)
T1134_002.defenseBy.append(D3_ANCI)
T1134_002.defenseBy.append(D3_CR)
T1134_003.defenseBy.append(D3_ANCI)
T1134_003.defenseBy.append(D3_CR)
T1136.defenseBy.append(D3_AL)
T1136_001.defenseBy.append(D3_AL)
T1136_002.defenseBy.append(D3_AL)
T1136_003.defenseBy.append(D3_AL)
T1137.defenseBy.append(D3_FR)
T1137_001.defenseBy.append(D3_FR)
T1137_003.defenseBy.append(D3_FR)
T1140.defenseBy.append(D3_FR)
T1555_001.defenseBy.append(D3_ANCI)
T1555_001.defenseBy.append(D3_CR)
T1187.defenseBy.append(D3_FR)
T1204.defenseBy.append(D3_FR)
T1204_002.defenseBy.append(D3_FR)
T1212.defenseBy.append(D3_PS)
T1212.defenseBy.append(D3_PT)
T1218.defenseBy.append(D3_FR)
T1218_005.defenseBy.append(D3_FR)
T1218_011.defenseBy.append(D3_FR)
T1220.defenseBy.append(D3_FR)
T1505.defenseBy.append(D3_FR)
T1505.defenseBy.append(D3_PT)
T1505.defenseBy.append(D3_PS)
T1505.defenseBy.append(D3_ER)
T1505_002.defenseBy.append(D3_PS)
T1505_002.defenseBy.append(D3_ER)
T1505_002.defenseBy.append(D3_PT)
T1505_003.defenseBy.append(D3_FR)
T1505_003.defenseBy.append(D3_PT)
T1505_003.defenseBy.append(D3_PS)
T1525.defenseBy.append(D3_FR)
T1528.defenseBy.append(D3_ANCI)
T1528.defenseBy.append(D3_CR)
T1531.defenseBy.append(D3_AL)
T1534.defenseBy.append(D3_ER)
T1534.defenseBy.append(D3_FR)
T1539.defenseBy.append(D3_ANCI)
T1539.defenseBy.append(D3_CR)
T1543.defenseBy.append(D3_FR)
T1543_001.defenseBy.append(D3_FR)
T1543_002.defenseBy.append(D3_FR)
T1543_004.defenseBy.append(D3_FR)
T1546.defenseBy.append(D3_FR)
T1546.defenseBy.append(D3_PT)
T1546.defenseBy.append(D3_PS)
T1546_002.defenseBy.append(D3_FR)
T1546_004.defenseBy.append(D3_FR)
T1546_005.defenseBy.append(D3_FR)
T1546_006.defenseBy.append(D3_FR)
T1546_007.defenseBy.append(D3_PS)
T1546_007.defenseBy.append(D3_PT)
T1546_008.defenseBy.append(D3_FR)
T1546_009.defenseBy.append(D3_FR)
T1546_010.defenseBy.append(D3_FR)
T1546_013.defenseBy.append(D3_FR)
T1546_014.defenseBy.append(D3_FR)
T1546_015.defenseBy.append(D3_FR)
T1547.defenseBy.append(D3_FR)
T1547_001.defenseBy.append(D3_FR)
T1547_006.defenseBy.append(D3_FR)
T1547_007.defenseBy.append(D3_FR)
T1547_008.defenseBy.append(D3_FR)
T1547_009.defenseBy.append(D3_FR)
T1647.defenseBy.append(D3_FR)
T1548.defenseBy.append(D3_FR)
T1548_002.defenseBy.append(D3_FR)
T1548_003.defenseBy.append(D3_FR)
T1550.defenseBy.append(D3_ANCI)
T1550.defenseBy.append(D3_CR)
T1550.defenseBy.append(D3_PT)
T1550.defenseBy.append(D3_PS)
T1550_001.defenseBy.append(D3_ANCI)
T1550_001.defenseBy.append(D3_CR)
T1550_001.defenseBy.append(D3_PT)
T1550_001.defenseBy.append(D3_PS)
T1550_002.defenseBy.append(D3_PS)
T1550_002.defenseBy.append(D3_PT)
T1550_003.defenseBy.append(D3_PS)
T1550_003.defenseBy.append(D3_PT)
T1550_004.defenseBy.append(D3_ANCI)
T1550_004.defenseBy.append(D3_CR)
T1550_004.defenseBy.append(D3_PT)
T1550_004.defenseBy.append(D3_PS)
T1552.defenseBy.append(D3_ANCI)
T1552.defenseBy.append(D3_FR)
T1552.defenseBy.append(D3_CR)
T1552_001.defenseBy.append(D3_ANCI)
T1552_001.defenseBy.append(D3_CR)
T1552_001.defenseBy.append(D3_FR)
T1552_002.defenseBy.append(D3_ANCI)
T1552_002.defenseBy.append(D3_CR)
T1552_003.defenseBy.append(D3_ANCI)
T1552_003.defenseBy.append(D3_CR)
T1552_003.defenseBy.append(D3_FR)
T1552_004.defenseBy.append(D3_ANCI)
T1552_004.defenseBy.append(D3_CR)
T1552_005.defenseBy.append(D3_ANCI)
T1552_005.defenseBy.append(D3_CR)
T1552_006.defenseBy.append(D3_ANCI)
T1552_006.defenseBy.append(D3_CR)
T1552_007.defenseBy.append(D3_ANCI)
T1552_007.defenseBy.append(D3_CR)
T1555.defenseBy.append(D3_FR)
T1555_001.defenseBy.append(D3_FR)
T1555_002.defenseBy.append(D3_FR)
T1555_003.defenseBy.append(D3_FR)
T1555_004.defenseBy.append(D3_FR)
T1555_005.defenseBy.append(D3_FR)
T1556.defenseBy.append(D3_PS)
T1556.defenseBy.append(D3_FR)
T1556.defenseBy.append(D3_PT)
T1556_001.defenseBy.append(D3_PS)
T1556_001.defenseBy.append(D3_PT)
T1556_002.defenseBy.append(D3_PS)
T1556_002.defenseBy.append(D3_FR)
T1556_002.defenseBy.append(D3_PT)
T1556_003.defenseBy.append(D3_PS)
T1556_003.defenseBy.append(D3_FR)
T1556_003.defenseBy.append(D3_PT)
T1556_004.defenseBy.append(D3_PS)
T1556_004.defenseBy.append(D3_PT)
T1556_005.defenseBy.append(D3_PS)
T1556_005.defenseBy.append(D3_PT)
T1558.defenseBy.append(D3_ANCI)
T1558.defenseBy.append(D3_CR)
T1558_001.defenseBy.append(D3_ANCI)
T1558_001.defenseBy.append(D3_CR)
T1558_002.defenseBy.append(D3_ANCI)
T1558_002.defenseBy.append(D3_CR)
T1558_003.defenseBy.append(D3_ANCI)
T1558_003.defenseBy.append(D3_CR)
T1558_004.defenseBy.append(D3_ANCI)
T1558_004.defenseBy.append(D3_CR)
T1560.defenseBy.append(D3_FR)
T1560_001.defenseBy.append(D3_FR)
T1560_002.defenseBy.append(D3_FR)
T1560_003.defenseBy.append(D3_FR)
T1562.defenseBy.append(D3_FR)
T1562.defenseBy.append(D3_PT)
T1562.defenseBy.append(D3_PS)
T1562_001.defenseBy.append(D3_PS)
T1562_001.defenseBy.append(D3_PT)
T1562_003.defenseBy.append(D3_FR)
T1564.defenseBy.append(D3_FR)
T1564_002.defenseBy.append(D3_FR)
T1564_003.defenseBy.append(D3_FR)
T1564_006.defenseBy.append(D3_FR)
T1564_007.defenseBy.append(D3_FR)
T1565.defenseBy.append(D3_FR)
T1565_001.defenseBy.append(D3_FR)
T1565_003.defenseBy.append(D3_FR)
T1566.defenseBy.append(D3_FR)
T1566.defenseBy.append(D3_ER)
T1566_001.defenseBy.append(D3_FR)
T1566_001.defenseBy.append(D3_ER)
T1566_002.defenseBy.append(D3_FR)
T1566_002.defenseBy.append(D3_ER)
T1566_003.defenseBy.append(D3_FR)
T1573.defenseBy.append(D3_FR)
T1573_002.defenseBy.append(D3_FR)
T1574.defenseBy.append(D3_FR)
T1574_001.defenseBy.append(D3_FR)
T1574_002.defenseBy.append(D3_FR)
T1574_004.defenseBy.append(D3_FR)
T1574_006.defenseBy.append(D3_FR)
T1574_007.defenseBy.append(D3_FR)
T1574_008.defenseBy.append(D3_FR)
T1574_009.defenseBy.append(D3_FR)
T1574_012.defenseBy.append(D3_FR)

# Asserted_properties Defense_Harden - Technique
T1003.defenseBy.append(D3_LFP)
T1003.defenseBy.append(D3_FE)
T1003.defenseBy.append(D3_CRO)
T1003.defenseBy.append(D3_CTS)
T1003_003.defenseBy.append(D3_CTS)
T1003_003.defenseBy.append(D3_CRO)
T1003_005.defenseBy.append(D3_CTS)
T1003_005.defenseBy.append(D3_CRO)
T1003_007.defenseBy.append(D3_FE)
T1003_007.defenseBy.append(D3_LFP)
T1003_008.defenseBy.append(D3_LFP)
T1003_008.defenseBy.append(D3_FE)
T1003_008.defenseBy.append(D3_CTS)
T1003_008.defenseBy.append(D3_CRO)
T1005.defenseBy.append(D3_FE)
T1005.defenseBy.append(D3_LFP)
T1012.defenseBy.append(D3_SCP)
T1014.defenseBy.append(D3_SU)
T1014.defenseBy.append(D3_FE)
T1014.defenseBy.append(D3_LFP)
T1016.defenseBy.append(D3_FE)
T1016.defenseBy.append(D3_LFP)
T1016_001.defenseBy.append(D3_LFP)
T1016_001.defenseBy.append(D3_FE)
T1018.defenseBy.append(D3_LFP)
T1018.defenseBy.append(D3_FE)
T1027.defenseBy.append(D3_FE)
T1027.defenseBy.append(D3_LFP)
T1027_001.defenseBy.append(D3_FE)
T1027_001.defenseBy.append(D3_LFP)
T1027_002.defenseBy.append(D3_FE)
T1027_002.defenseBy.append(D3_LFP)
T1027_004.defenseBy.append(D3_FE)
T1027_004.defenseBy.append(D3_LFP)
T1033.defenseBy.append(D3_SAOR)
T1033.defenseBy.append(D3_LFP)
T1033.defenseBy.append(D3_FE)
T1033.defenseBy.append(D3_PSEP)
T1033.defenseBy.append(D3_DTP)
T1036.defenseBy.append(D3_FE)
T1036.defenseBy.append(D3_LFP)
T1036_001.defenseBy.append(D3_FE)
T1036_001.defenseBy.append(D3_LFP)
T1036_003.defenseBy.append(D3_FE)
T1036_003.defenseBy.append(D3_LFP)
T1036_005.defenseBy.append(D3_FE)
T1036_005.defenseBy.append(D3_LFP)
T1036_006.defenseBy.append(D3_FE)
T1036_006.defenseBy.append(D3_LFP)
T1037.defenseBy.append(D3_FE)
T1037.defenseBy.append(D3_LFP)
T1037_001.defenseBy.append(D3_FE)
T1037_001.defenseBy.append(D3_LFP)
T1037_002.defenseBy.append(D3_FE)
T1037_002.defenseBy.append(D3_LFP)
T1037_003.defenseBy.append(D3_FE)
T1037_003.defenseBy.append(D3_LFP)
T1037_004.defenseBy.append(D3_FE)
T1037_004.defenseBy.append(D3_LFP)
T1037_005.defenseBy.append(D3_LFP)
T1041.defenseBy.append(D3_FE)
T1041.defenseBy.append(D3_LFP)
T1048.defenseBy.append(D3_FE)
T1048.defenseBy.append(D3_LFP)
T1048_002.defenseBy.append(D3_FE)
T1048_002.defenseBy.append(D3_LFP)
T1053.defenseBy.append(D3_LFP)
T1053.defenseBy.append(D3_FE)
T1055.defenseBy.append(D3_SAOR)
T1055.defenseBy.append(D3_LFP)
T1055.defenseBy.append(D3_FE)
T1055.defenseBy.append(D3_PSEP)
T1055_001.defenseBy.append(D3_FE)
T1055_001.defenseBy.append(D3_LFP)
T1055_002.defenseBy.append(D3_FE)
T1055_002.defenseBy.append(D3_LFP)
T1055_003.defenseBy.append(D3_FE)
T1055_003.defenseBy.append(D3_LFP)
T1055_009.defenseBy.append(D3_FE)
T1055_009.defenseBy.append(D3_LFP)
T1055_012.defenseBy.append(D3_SAOR)
T1055_012.defenseBy.append(D3_PSEP)
T1055_014.defenseBy.append(D3_FE)
T1055_014.defenseBy.append(D3_LFP)
T1056.defenseBy.append(D3_SU)
T1056.defenseBy.append(D3_SAOR)
T1056.defenseBy.append(D3_PSEP)
T1056_003.defenseBy.append(D3_SU)
T1056_004.defenseBy.append(D3_PSEP)
T1056_004.defenseBy.append(D3_SAOR)
T1059.defenseBy.append(D3_FE)
T1059.defenseBy.append(D3_LFP)
T1059_001.defenseBy.append(D3_FE)
T1059_001.defenseBy.append(D3_LFP)
T1059_002.defenseBy.append(D3_FE)
T1059_002.defenseBy.append(D3_LFP)
T1059_003.defenseBy.append(D3_FE)
T1059_003.defenseBy.append(D3_LFP)
T1059_004.defenseBy.append(D3_FE)
T1059_004.defenseBy.append(D3_LFP)
T1059_005.defenseBy.append(D3_FE)
T1059_005.defenseBy.append(D3_LFP)
T1059_006.defenseBy.append(D3_FE)
T1059_006.defenseBy.append(D3_LFP)
T1059_007.defenseBy.append(D3_FE)
T1059_007.defenseBy.append(D3_LFP)
T1059_008.defenseBy.append(D3_FE)
T1059_008.defenseBy.append(D3_LFP)
T1068.defenseBy.append(D3_SAOR)
T1068.defenseBy.append(D3_PSEP)
T1068.defenseBy.append(D3_SFCV)
T1070.defenseBy.append(D3_FE)
T1070.defenseBy.append(D3_LFP)
T1070_002.defenseBy.append(D3_FE)
T1070_002.defenseBy.append(D3_LFP)
T1070_004.defenseBy.append(D3_FE)
T1070_004.defenseBy.append(D3_LFP)
T1071.defenseBy.append(D3_LFP)
T1071.defenseBy.append(D3_FE)
T1071_001.defenseBy.append(D3_FE)
T1071_001.defenseBy.append(D3_LFP)
T1071_002.defenseBy.append(D3_FE)
T1071_002.defenseBy.append(D3_LFP)
T1071_003.defenseBy.append(D3_FE)
T1071_003.defenseBy.append(D3_LFP)
T1071_004.defenseBy.append(D3_LFP)
T1071_004.defenseBy.append(D3_FE)
T1072.defenseBy.append(D3_SU)
T1072.defenseBy.append(D3_FE)
T1072.defenseBy.append(D3_LFP)
T1074.defenseBy.append(D3_FE)
T1074.defenseBy.append(D3_LFP)
T1074_001.defenseBy.append(D3_FE)
T1074_001.defenseBy.append(D3_LFP)
T1078.defenseBy.append(D3_BAN)
T1078.defenseBy.append(D3_MFA)
T1078.defenseBy.append(D3_UAP)
T1078.defenseBy.append(D3_SPP)
T1078.defenseBy.append(D3_OTP)
T1078_001.defenseBy.append(D3_BAN)
T1078_001.defenseBy.append(D3_UAP)
T1078_001.defenseBy.append(D3_MFA)
T1078_001.defenseBy.append(D3_SPP)
T1078_001.defenseBy.append(D3_OTP)
T1078_002.defenseBy.append(D3_BAN)
T1078_002.defenseBy.append(D3_UAP)
T1078_002.defenseBy.append(D3_MFA)
T1078_002.defenseBy.append(D3_SPP)
T1078_002.defenseBy.append(D3_OTP)
T1078_003.defenseBy.append(D3_BAN)
T1078_003.defenseBy.append(D3_UAP)
T1078_003.defenseBy.append(D3_MFA)
T1078_003.defenseBy.append(D3_SPP)
T1078_003.defenseBy.append(D3_OTP)
T1078_004.defenseBy.append(D3_BAN)
T1078_004.defenseBy.append(D3_MFA)
T1078_004.defenseBy.append(D3_UAP)
T1078_004.defenseBy.append(D3_SPP)
T1078_004.defenseBy.append(D3_OTP)
T1083.defenseBy.append(D3_FE)
T1083.defenseBy.append(D3_LFP)
T1087_001.defenseBy.append(D3_BAN)
T1087_001.defenseBy.append(D3_MFA)
T1087_001.defenseBy.append(D3_UAP)
T1087_001.defenseBy.append(D3_SPP)
T1087_001.defenseBy.append(D3_OTP)
T1087_002.defenseBy.append(D3_BAN)
T1087_002.defenseBy.append(D3_MFA)
T1087_002.defenseBy.append(D3_UAP)
T1087_002.defenseBy.append(D3_SPP)
T1087_002.defenseBy.append(D3_OTP)
T1087_004.defenseBy.append(D3_BAN)
T1087_004.defenseBy.append(D3_MFA)
T1087_004.defenseBy.append(D3_UAP)
T1087_004.defenseBy.append(D3_SPP)
T1087_004.defenseBy.append(D3_OTP)
T1098.defenseBy.append(D3_BAN)
T1098.defenseBy.append(D3_OTP)
T1098.defenseBy.append(D3_MFA)
T1098.defenseBy.append(D3_UAP)
T1098.defenseBy.append(D3_CRO)
T1098.defenseBy.append(D3_SPP)
T1098.defenseBy.append(D3_CTS)
T1098_001.defenseBy.append(D3_BAN)
T1098_001.defenseBy.append(D3_OTP)
T1098_001.defenseBy.append(D3_MFA)
T1098_001.defenseBy.append(D3_UAP)
T1098_001.defenseBy.append(D3_CRO)
T1098_001.defenseBy.append(D3_SPP)
T1098_001.defenseBy.append(D3_CTS)
T1098_002.defenseBy.append(D3_BAN)
T1098_002.defenseBy.append(D3_UAP)
T1098_002.defenseBy.append(D3_MFA)
T1098_002.defenseBy.append(D3_SPP)
T1098_002.defenseBy.append(D3_OTP)
T1098_003.defenseBy.append(D3_BAN)
T1098_003.defenseBy.append(D3_UAP)
T1098_003.defenseBy.append(D3_MFA)
T1098_003.defenseBy.append(D3_SPP)
T1098_003.defenseBy.append(D3_OTP)
T1098_004.defenseBy.append(D3_BAN)
T1098_004.defenseBy.append(D3_MFA)
T1098_004.defenseBy.append(D3_UAP)
T1098_004.defenseBy.append(D3_SPP)
T1098_004.defenseBy.append(D3_OTP)
T1098_005.defenseBy.append(D3_BAN)
T1098_005.defenseBy.append(D3_MFA)
T1098_005.defenseBy.append(D3_UAP)
T1098_005.defenseBy.append(D3_SPP)
T1098_005.defenseBy.append(D3_OTP)
T1110.defenseBy.append(D3_OTP)
T1110.defenseBy.append(D3_CRO)
T1110.defenseBy.append(D3_SPP)
T1110.defenseBy.append(D3_CTS)
T1110_001.defenseBy.append(D3_SPP)
T1110_001.defenseBy.append(D3_OTP)
T1110_001.defenseBy.append(D3_CTS)
T1110_001.defenseBy.append(D3_CRO)
T1110_002.defenseBy.append(D3_SPP)
T1110_002.defenseBy.append(D3_OTP)
T1110_002.defenseBy.append(D3_CTS)
T1110_002.defenseBy.append(D3_CRO)
T1110_003.defenseBy.append(D3_OTP)
T1110_003.defenseBy.append(D3_CRO)
T1110_003.defenseBy.append(D3_SPP)
T1110_003.defenseBy.append(D3_CTS)
T1112.defenseBy.append(D3_SCP)
T1114.defenseBy.append(D3_LFP)
T1114.defenseBy.append(D3_FE)
T1114.defenseBy.append(D3_ACH)
T1114_001.defenseBy.append(D3_LFP)
T1114_001.defenseBy.append(D3_FE)
T1114_003.defenseBy.append(D3_ACH)
T1119.defenseBy.append(D3_FE)
T1119.defenseBy.append(D3_LFP)
T1127.defenseBy.append(D3_SU)
T1127.defenseBy.append(D3_FE)
T1127.defenseBy.append(D3_LFP)
T1127_001.defenseBy.append(D3_SU)
T1127_001.defenseBy.append(D3_FE)
T1127_001.defenseBy.append(D3_LFP)
T1134.defenseBy.append(D3_CRO)
T1134.defenseBy.append(D3_CTS)
T1134_001.defenseBy.append(D3_CTS)
T1134_001.defenseBy.append(D3_CRO)
T1134_002.defenseBy.append(D3_CTS)
T1134_002.defenseBy.append(D3_CRO)
T1134_003.defenseBy.append(D3_CTS)
T1134_003.defenseBy.append(D3_CRO)
T1136.defenseBy.append(D3_BAN)
T1136.defenseBy.append(D3_UAP)
T1136.defenseBy.append(D3_MFA)
T1136.defenseBy.append(D3_SPP)
T1136.defenseBy.append(D3_OTP)
T1136_001.defenseBy.append(D3_BAN)
T1136_001.defenseBy.append(D3_MFA)
T1136_001.defenseBy.append(D3_UAP)
T1136_001.defenseBy.append(D3_SPP)
T1136_001.defenseBy.append(D3_OTP)
T1136_002.defenseBy.append(D3_BAN)
T1136_002.defenseBy.append(D3_MFA)
T1136_002.defenseBy.append(D3_UAP)
T1136_002.defenseBy.append(D3_SPP)
T1136_002.defenseBy.append(D3_OTP)
T1136_003.defenseBy.append(D3_BAN)
T1136_003.defenseBy.append(D3_MFA)
T1136_003.defenseBy.append(D3_UAP)
T1136_003.defenseBy.append(D3_SPP)
T1136_003.defenseBy.append(D3_OTP)
T1137.defenseBy.append(D3_LFP)
T1137.defenseBy.append(D3_SCP)
T1137.defenseBy.append(D3_FE)
T1137.defenseBy.append(D3_SU)
T1137_001.defenseBy.append(D3_FE)
T1137_001.defenseBy.append(D3_LFP)
T1137_003.defenseBy.append(D3_FE)
T1137_003.defenseBy.append(D3_LFP)
T1137_006.defenseBy.append(D3_SU)
T1137_006.defenseBy.append(D3_SCP)
T1140.defenseBy.append(D3_FE)
T1140.defenseBy.append(D3_LFP)
T1555_001.defenseBy.append(D3_CTS)
T1555_001.defenseBy.append(D3_CRO)
T1176.defenseBy.append(D3_SU)
T1187.defenseBy.append(D3_FE)
T1187.defenseBy.append(D3_LFP)
T1189.defenseBy.append(D3_SAOR)
T1189.defenseBy.append(D3_PSEP)
T1190.defenseBy.append(D3_SAOR)
T1190.defenseBy.append(D3_PSEP)
T1195.defenseBy.append(D3_SU)
T1195_001.defenseBy.append(D3_SU)
T1195_002.defenseBy.append(D3_SU)
T1203.defenseBy.append(D3_SAOR)
T1203.defenseBy.append(D3_PSEP)
T1203.defenseBy.append(D3_SFCV)
T1204.defenseBy.append(D3_LFP)
T1204.defenseBy.append(D3_FE)
T1204_002.defenseBy.append(D3_FE)
T1204_002.defenseBy.append(D3_LFP)
T1207.defenseBy.append(D3_SCP)
T1210.defenseBy.append(D3_SAOR)
T1210.defenseBy.append(D3_PSEP)
T1210.defenseBy.append(D3_SFCV)
T1211.defenseBy.append(D3_SAOR)
T1211.defenseBy.append(D3_PSEP)
T1211.defenseBy.append(D3_SFCV)
T1212.defenseBy.append(D3_SU)
T1212.defenseBy.append(D3_SAOR)
T1212.defenseBy.append(D3_PSEP)
T1212.defenseBy.append(D3_SFCV)
T1218.defenseBy.append(D3_SAOR)
T1218.defenseBy.append(D3_LFP)
T1218.defenseBy.append(D3_SCP)
T1218.defenseBy.append(D3_FE)
T1218.defenseBy.append(D3_SU)
T1218.defenseBy.append(D3_PSEP)
T1218_005.defenseBy.append(D3_FE)
T1218_005.defenseBy.append(D3_LFP)
T1218_011.defenseBy.append(D3_FE)
T1218_011.defenseBy.append(D3_LFP)
T1218_013.defenseBy.append(D3_SAOR)
T1218_013.defenseBy.append(D3_PSEP)
T1218_014.defenseBy.append(D3_SU)
T1218_014.defenseBy.append(D3_SCP)
T1220.defenseBy.append(D3_FE)
T1220.defenseBy.append(D3_LFP)
T1497.defenseBy.append(D3_SU)
T1497_003.defenseBy.append(D3_SU)
T1505.defenseBy.append(D3_LFP)
T1505.defenseBy.append(D3_FE)
T1505.defenseBy.append(D3_SU)
T1505_001.defenseBy.append(D3_SU)
T1505_003.defenseBy.append(D3_LFP)
T1505_003.defenseBy.append(D3_FE)
T1505_004.defenseBy.append(D3_SU)
T1525.defenseBy.append(D3_FE)
T1525.defenseBy.append(D3_LFP)
T1528.defenseBy.append(D3_CTS)
T1528.defenseBy.append(D3_CRO)
T1531.defenseBy.append(D3_BAN)
T1531.defenseBy.append(D3_UAP)
T1531.defenseBy.append(D3_MFA)
T1531.defenseBy.append(D3_SPP)
T1531.defenseBy.append(D3_OTP)
T1534.defenseBy.append(D3_LFP)
T1534.defenseBy.append(D3_FE)
T1539.defenseBy.append(D3_CTS)
T1539.defenseBy.append(D3_CRO)
T1542.defenseBy.append(D3_SU)
T1542.defenseBy.append(D3_BA)
T1542_001.defenseBy.append(D3_SU)
T1542_002.defenseBy.append(D3_SU)
T1542_003.defenseBy.append(D3_BA)
T1542_004.defenseBy.append(D3_SU)
T1543.defenseBy.append(D3_FE)
T1543.defenseBy.append(D3_LFP)
T1543.defenseBy.append(D3_SCP)
T1543_001.defenseBy.append(D3_FE)
T1543_001.defenseBy.append(D3_LFP)
T1543_002.defenseBy.append(D3_FE)
T1543_002.defenseBy.append(D3_LFP)
T1543_003.defenseBy.append(D3_SCP)
T1543_004.defenseBy.append(D3_FE)
T1543_004.defenseBy.append(D3_LFP)
T1546.defenseBy.append(D3_LFP)
T1546.defenseBy.append(D3_SCP)
T1546.defenseBy.append(D3_FE)
T1546.defenseBy.append(D3_SU)
T1546_002.defenseBy.append(D3_FE)
T1546_002.defenseBy.append(D3_LFP)
T1546_004.defenseBy.append(D3_FE)
T1546_004.defenseBy.append(D3_LFP)
T1546_005.defenseBy.append(D3_FE)
T1546_005.defenseBy.append(D3_LFP)
T1546_006.defenseBy.append(D3_FE)
T1546_006.defenseBy.append(D3_LFP)
T1546_008.defenseBy.append(D3_LFP)
T1546_008.defenseBy.append(D3_FE)
T1546_009.defenseBy.append(D3_FE)
T1546_009.defenseBy.append(D3_LFP)
T1546_010.defenseBy.append(D3_FE)
T1546_010.defenseBy.append(D3_LFP)
T1546_011.defenseBy.append(D3_SU)
T1546_012.defenseBy.append(D3_SCP)
T1546_013.defenseBy.append(D3_FE)
T1546_013.defenseBy.append(D3_LFP)
T1546_014.defenseBy.append(D3_FE)
T1546_014.defenseBy.append(D3_LFP)
T1546_015.defenseBy.append(D3_FE)
T1546_015.defenseBy.append(D3_LFP)
T1546_015.defenseBy.append(D3_SCP)
T1547.defenseBy.append(D3_SU)
T1547.defenseBy.append(D3_FE)
T1547.defenseBy.append(D3_LFP)
T1547_001.defenseBy.append(D3_FE)
T1547_001.defenseBy.append(D3_LFP)
T1547_006.defenseBy.append(D3_FE)
T1547_006.defenseBy.append(D3_LFP)
T1547_007.defenseBy.append(D3_FE)
T1547_007.defenseBy.append(D3_LFP)
T1547_008.defenseBy.append(D3_SU)
T1547_008.defenseBy.append(D3_FE)
T1547_008.defenseBy.append(D3_LFP)
T1547_009.defenseBy.append(D3_FE)
T1547_009.defenseBy.append(D3_LFP)
T1647.defenseBy.append(D3_FE)
T1647.defenseBy.append(D3_LFP)
T1548.defenseBy.append(D3_LFP)
T1548.defenseBy.append(D3_SCP)
T1548.defenseBy.append(D3_FE)
T1548_002.defenseBy.append(D3_FE)
T1548_002.defenseBy.append(D3_LFP)
T1548_003.defenseBy.append(D3_FE)
T1548_003.defenseBy.append(D3_LFP)
T1548_004.defenseBy.append(D3_SCP)
T1550.defenseBy.append(D3_CRO)
T1550.defenseBy.append(D3_CTS)
T1550_001.defenseBy.append(D3_CRO)
T1550_001.defenseBy.append(D3_CTS)
T1550_004.defenseBy.append(D3_CRO)
T1550_004.defenseBy.append(D3_CTS)
T1552.defenseBy.append(D3_LFP)
T1552.defenseBy.append(D3_SCP)
T1552.defenseBy.append(D3_FE)
T1552.defenseBy.append(D3_CRO)
T1552.defenseBy.append(D3_CTS)
T1552_001.defenseBy.append(D3_FE)
T1552_001.defenseBy.append(D3_LFP)
T1552_001.defenseBy.append(D3_CTS)
T1552_001.defenseBy.append(D3_CRO)
T1552_002.defenseBy.append(D3_CRO)
T1552_002.defenseBy.append(D3_CTS)
T1552_002.defenseBy.append(D3_SCP)
T1552_003.defenseBy.append(D3_FE)
T1552_003.defenseBy.append(D3_CTS)
T1552_003.defenseBy.append(D3_LFP)
T1552_003.defenseBy.append(D3_CRO)
T1552_004.defenseBy.append(D3_CTS)
T1552_004.defenseBy.append(D3_CRO)
T1552_005.defenseBy.append(D3_CTS)
T1552_005.defenseBy.append(D3_CRO)
T1552_006.defenseBy.append(D3_CTS)
T1552_006.defenseBy.append(D3_CRO)
T1552_007.defenseBy.append(D3_CTS)
T1552_007.defenseBy.append(D3_CRO)
T1554.defenseBy.append(D3_SU)
T1555.defenseBy.append(D3_FE)
T1555.defenseBy.append(D3_LFP)
T1555_001.defenseBy.append(D3_FE)
T1555_001.defenseBy.append(D3_LFP)
T1555_002.defenseBy.append(D3_FE)
T1555_002.defenseBy.append(D3_LFP)
T1555_003.defenseBy.append(D3_FE)
T1555_003.defenseBy.append(D3_LFP)
T1555_004.defenseBy.append(D3_FE)
T1555_004.defenseBy.append(D3_LFP)
T1555_005.defenseBy.append(D3_FE)
T1555_005.defenseBy.append(D3_LFP)
T1556.defenseBy.append(D3_FE)
T1556.defenseBy.append(D3_LFP)
T1556_002.defenseBy.append(D3_FE)
T1556_002.defenseBy.append(D3_LFP)
T1556_003.defenseBy.append(D3_FE)
T1556_003.defenseBy.append(D3_LFP)
T1558.defenseBy.append(D3_CTS)
T1558.defenseBy.append(D3_CRO)
T1558_001.defenseBy.append(D3_CTS)
T1558_001.defenseBy.append(D3_CRO)
T1558_002.defenseBy.append(D3_CTS)
T1558_002.defenseBy.append(D3_CRO)
T1558_003.defenseBy.append(D3_CTS)
T1558_003.defenseBy.append(D3_CRO)
T1558_004.defenseBy.append(D3_CTS)
T1558_004.defenseBy.append(D3_CRO)
T1560.defenseBy.append(D3_FE)
T1560.defenseBy.append(D3_LFP)
T1560_001.defenseBy.append(D3_FE)
T1560_001.defenseBy.append(D3_LFP)
T1560_002.defenseBy.append(D3_FE)
T1560_002.defenseBy.append(D3_LFP)
T1560_003.defenseBy.append(D3_FE)
T1560_003.defenseBy.append(D3_LFP)
T1562.defenseBy.append(D3_LFP)
T1562.defenseBy.append(D3_FE)
T1562.defenseBy.append(D3_ACH)
T1562_002.defenseBy.append(D3_ACH)
T1562_003.defenseBy.append(D3_ACH)
T1562_003.defenseBy.append(D3_FE)
T1562_003.defenseBy.append(D3_LFP)
T1564.defenseBy.append(D3_DENCR)
T1564.defenseBy.append(D3_LFP)
T1564.defenseBy.append(D3_SCP)
T1564.defenseBy.append(D3_FE)
T1564.defenseBy.append(D3_SU)
T1564.defenseBy.append(D3_ACH)
T1564_002.defenseBy.append(D3_FE)
T1564_002.defenseBy.append(D3_LFP)
T1564_003.defenseBy.append(D3_FE)
T1564_003.defenseBy.append(D3_LFP)
T1564_003.defenseBy.append(D3_SCP)
T1564_005.defenseBy.append(D3_DENCR)
T1564_005.defenseBy.append(D3_SCP)
T1564_006.defenseBy.append(D3_SU)
T1564_006.defenseBy.append(D3_FE)
T1564_006.defenseBy.append(D3_LFP)
T1564_007.defenseBy.append(D3_FE)
T1564_007.defenseBy.append(D3_LFP)
T1564_008.defenseBy.append(D3_ACH)
T1565.defenseBy.append(D3_FE)
T1565.defenseBy.append(D3_LFP)
T1565_001.defenseBy.append(D3_FE)
T1565_001.defenseBy.append(D3_LFP)
T1565_003.defenseBy.append(D3_FE)
T1565_003.defenseBy.append(D3_LFP)
T1566.defenseBy.append(D3_LFP)
T1566.defenseBy.append(D3_FE)
T1566_001.defenseBy.append(D3_LFP)
T1566_001.defenseBy.append(D3_FE)
T1566_002.defenseBy.append(D3_LFP)
T1566_002.defenseBy.append(D3_FE)
T1566_003.defenseBy.append(D3_FE)
T1566_003.defenseBy.append(D3_LFP)
T1573.defenseBy.append(D3_FE)
T1573.defenseBy.append(D3_LFP)
T1573_002.defenseBy.append(D3_FE)
T1573_002.defenseBy.append(D3_LFP)
T1574.defenseBy.append(D3_LFP)
T1574.defenseBy.append(D3_FE)
T1574.defenseBy.append(D3_SU)
T1574_001.defenseBy.append(D3_FE)
T1574_001.defenseBy.append(D3_LFP)
T1574_002.defenseBy.append(D3_FE)
T1574_002.defenseBy.append(D3_LFP)
T1574_004.defenseBy.append(D3_FE)
T1574_004.defenseBy.append(D3_LFP)
T1574_005.defenseBy.append(D3_SU)
T1574_006.defenseBy.append(D3_FE)
T1574_006.defenseBy.append(D3_LFP)
T1574_007.defenseBy.append(D3_FE)
T1574_007.defenseBy.append(D3_LFP)
T1574_008.defenseBy.append(D3_FE)
T1574_008.defenseBy.append(D3_LFP)
T1574_009.defenseBy.append(D3_FE)
T1574_009.defenseBy.append(D3_LFP)
T1574_010.defenseBy.append(D3_SU)
T1574_012.defenseBy.append(D3_FE)
T1574_012.defenseBy.append(D3_LFP)
T1614.defenseBy.append(D3_SCP)
T1614_001.defenseBy.append(D3_SCP)
T1619.defenseBy.append(D3_DENCR)
T1620.defenseBy.append(D3_SAOR)
T1620.defenseBy.append(D3_PSEP)

# Asserted_properties Defense_Isolate - Technique
T1001.defenseBy.append(D3_OTF)
T1001.defenseBy.append(D3_NTF)
T1001_001.defenseBy.append(D3_OTF)
T1001_001.defenseBy.append(D3_NTF)
T1001_002.defenseBy.append(D3_OTF)
T1001_002.defenseBy.append(D3_NTF)
T1001_003.defenseBy.append(D3_OTF)
T1001_003.defenseBy.append(D3_NTF)
T1003.defenseBy.append(D3_MAC)
T1003.defenseBy.append(D3_NTF)
T1003.defenseBy.append(D3_HBPI)
T1003_001.defenseBy.append(D3_MAC)
T1003_001.defenseBy.append(D3_HBPI)
T1003_002.defenseBy.append(D3_MAC)
T1003_002.defenseBy.append(D3_HBPI)
T1003_004.defenseBy.append(D3_MAC)
T1003_004.defenseBy.append(D3_HBPI)
T1003_006.defenseBy.append(D3_NTF)
T1007.defenseBy.append(D3_MAC)
T1007.defenseBy.append(D3_EDL)
T1007.defenseBy.append(D3_EAL)
T1007.defenseBy.append(D3_HBPI)
T1007.defenseBy.append(D3_SCF)
T1008.defenseBy.append(D3_OTF)
T1008.defenseBy.append(D3_NTF)
T1010.defenseBy.append(D3_MAC)
T1010.defenseBy.append(D3_EDL)
T1010.defenseBy.append(D3_EAL)
T1010.defenseBy.append(D3_HBPI)
T1010.defenseBy.append(D3_SCF)
T1011.defenseBy.append(D3_NTF)
T1011_001.defenseBy.append(D3_NTF)
T1012.defenseBy.append(D3_SCF)
T1016.defenseBy.append(D3_SCF)
T1016.defenseBy.append(D3_MAC)
T1016.defenseBy.append(D3_EDL)
T1016.defenseBy.append(D3_EAL)
T1016.defenseBy.append(D3_HBPI)
T1016_001.defenseBy.append(D3_MAC)
T1016_001.defenseBy.append(D3_HBPI)
T1016_001.defenseBy.append(D3_EDL)
T1016_001.defenseBy.append(D3_EAL)
T1016_001.defenseBy.append(D3_SCF)
T1018.defenseBy.append(D3_MAC)
T1018.defenseBy.append(D3_NTF)
T1018.defenseBy.append(D3_SCF)
T1018.defenseBy.append(D3_EDL)
T1018.defenseBy.append(D3_EAL)
T1018.defenseBy.append(D3_HBPI)
T1020.defenseBy.append(D3_NTF)
T1020_001.defenseBy.append(D3_NTF)
T1021.defenseBy.append(D3_NTF)
T1021_001.defenseBy.append(D3_NTF)
T1021_002.defenseBy.append(D3_NTF)
T1021_003.defenseBy.append(D3_NTF)
T1021_004.defenseBy.append(D3_NTF)
T1021_005.defenseBy.append(D3_NTF)
T1021_006.defenseBy.append(D3_NTF)
T1025.defenseBy.append(D3_IOPR)
T1027.defenseBy.append(D3_EDL)
T1027.defenseBy.append(D3_EAL)
T1027_001.defenseBy.append(D3_EDL)
T1027_001.defenseBy.append(D3_EAL)
T1027_002.defenseBy.append(D3_EDL)
T1027_002.defenseBy.append(D3_EAL)
T1027_004.defenseBy.append(D3_EDL)
T1027_004.defenseBy.append(D3_EAL)
T1029.defenseBy.append(D3_NTF)
T1030.defenseBy.append(D3_NTF)
T1033.defenseBy.append(D3_MAC)
T1033.defenseBy.append(D3_SCF)
T1033.defenseBy.append(D3_EDL)
T1033.defenseBy.append(D3_EAL)
T1033.defenseBy.append(D3_HBPI)
T1036.defenseBy.append(D3_SCF)
T1036.defenseBy.append(D3_EDL)
T1036.defenseBy.append(D3_EAL)
T1036_001.defenseBy.append(D3_EDL)
T1036_001.defenseBy.append(D3_EAL)
T1036_003.defenseBy.append(D3_EDL)
T1036_003.defenseBy.append(D3_EAL)
T1036_005.defenseBy.append(D3_SCF)
T1037.defenseBy.append(D3_EDL)
T1037.defenseBy.append(D3_EAL)
T1037_001.defenseBy.append(D3_EDL)
T1037_001.defenseBy.append(D3_EAL)
T1037_002.defenseBy.append(D3_EDL)
T1037_002.defenseBy.append(D3_EAL)
T1037_003.defenseBy.append(D3_EDL)
T1037_003.defenseBy.append(D3_EAL)
T1037_004.defenseBy.append(D3_EDL)
T1037_004.defenseBy.append(D3_EAL)
T1041.defenseBy.append(D3_NTF)
T1047.defenseBy.append(D3_MAC)
T1047.defenseBy.append(D3_NTF)
T1047.defenseBy.append(D3_EDL)
T1047.defenseBy.append(D3_EAL)
T1047.defenseBy.append(D3_HBPI)
T1047.defenseBy.append(D3_SCF)
T1048.defenseBy.append(D3_OTF)
T1048.defenseBy.append(D3_NTF)
T1048_001.defenseBy.append(D3_OTF)
T1048_001.defenseBy.append(D3_NTF)
T1048_002.defenseBy.append(D3_OTF)
T1048_002.defenseBy.append(D3_NTF)
T1048_003.defenseBy.append(D3_OTF)
T1048_003.defenseBy.append(D3_NTF)
T1049.defenseBy.append(D3_SCF)
T1052.defenseBy.append(D3_IOPR)
T1052_001.defenseBy.append(D3_IOPR)
T1053.defenseBy.append(D3_MAC)
T1053.defenseBy.append(D3_SCF)
T1053.defenseBy.append(D3_EDL)
T1053.defenseBy.append(D3_EAL)
T1053.defenseBy.append(D3_HBPI)
T1053_002.defenseBy.append(D3_MAC)
T1053_002.defenseBy.append(D3_EDL)
T1053_002.defenseBy.append(D3_EAL)
T1053_002.defenseBy.append(D3_HBPI)
T1053_002.defenseBy.append(D3_SCF)
T1053_002.defenseBy.append(D3_MAC)
T1053_002.defenseBy.append(D3_EDL)
T1053_002.defenseBy.append(D3_EAL)
T1053_002.defenseBy.append(D3_HBPI)
T1053_002.defenseBy.append(D3_SCF)
T1053_003.defenseBy.append(D3_MAC)
T1053_003.defenseBy.append(D3_EDL)
T1053_003.defenseBy.append(D3_EAL)
T1053_003.defenseBy.append(D3_HBPI)
T1053_003.defenseBy.append(D3_SCF)
T1053_005.defenseBy.append(D3_MAC)
T1053_005.defenseBy.append(D3_EDL)
T1053_005.defenseBy.append(D3_EAL)
T1053_005.defenseBy.append(D3_HBPI)
T1053_005.defenseBy.append(D3_SCF)
T1053_006.defenseBy.append(D3_MAC)
T1053_006.defenseBy.append(D3_EDL)
T1053_006.defenseBy.append(D3_EAL)
T1053_006.defenseBy.append(D3_HBPI)
T1053_006.defenseBy.append(D3_SCF)
T1053_007.defenseBy.append(D3_MAC)
T1053_007.defenseBy.append(D3_EDL)
T1053_007.defenseBy.append(D3_EAL)
T1053_007.defenseBy.append(D3_HBPI)
T1053_007.defenseBy.append(D3_SCF)
T1055.defenseBy.append(D3_MAC)
T1055.defenseBy.append(D3_SCF)
T1055.defenseBy.append(D3_EDL)
T1055.defenseBy.append(D3_EAL)
T1055.defenseBy.append(D3_HBPI)
T1055_001.defenseBy.append(D3_SCF)
T1055_003.defenseBy.append(D3_SCF)
T1055_003.defenseBy.append(D3_EDL)
T1055_003.defenseBy.append(D3_EAL)
T1055_004.defenseBy.append(D3_MAC)
T1055_004.defenseBy.append(D3_EDL)
T1055_004.defenseBy.append(D3_EAL)
T1055_004.defenseBy.append(D3_HBPI)
T1055_004.defenseBy.append(D3_SCF)
T1055_005.defenseBy.append(D3_SCF)
T1055_008.defenseBy.append(D3_SCF)
T1055_013.defenseBy.append(D3_MAC)
T1055_013.defenseBy.append(D3_EDL)
T1055_013.defenseBy.append(D3_EAL)
T1055_013.defenseBy.append(D3_HBPI)
T1055_013.defenseBy.append(D3_SCF)
T1055_014.defenseBy.append(D3_SCF)
T1056.defenseBy.append(D3_IOPR)
T1056_001.defenseBy.append(D3_IOPR)
T1057.defenseBy.append(D3_MAC)
T1057.defenseBy.append(D3_EDL)
T1057.defenseBy.append(D3_EAL)
T1057.defenseBy.append(D3_HBPI)
T1057.defenseBy.append(D3_SCF)
T1059.defenseBy.append(D3_EDL)
T1059.defenseBy.append(D3_EAL)
T1059_001.defenseBy.append(D3_EDL)
T1059_001.defenseBy.append(D3_EAL)
T1059_002.defenseBy.append(D3_EDL)
T1059_002.defenseBy.append(D3_EAL)
T1059_003.defenseBy.append(D3_EDL)
T1059_003.defenseBy.append(D3_EAL)
T1059_004.defenseBy.append(D3_EDL)
T1059_004.defenseBy.append(D3_EAL)
T1059_005.defenseBy.append(D3_EDL)
T1059_005.defenseBy.append(D3_EAL)
T1059_006.defenseBy.append(D3_EDL)
T1059_006.defenseBy.append(D3_EAL)
T1059_007.defenseBy.append(D3_EDL)
T1059_007.defenseBy.append(D3_EAL)
T1059_008.defenseBy.append(D3_EDL)
T1059_008.defenseBy.append(D3_EAL)
T1071.defenseBy.append(D3_DNSAL)
T1071.defenseBy.append(D3_NTF)
T1071.defenseBy.append(D3_OTF)
T1071.defenseBy.append(D3_DNSDL)
T1071.defenseBy.append(D3_FRDDL)
T1071.defenseBy.append(D3_RRID)
T1071_001.defenseBy.append(D3_OTF)
T1071_001.defenseBy.append(D3_NTF)
T1071_002.defenseBy.append(D3_OTF)
T1071_002.defenseBy.append(D3_NTF)
T1071_003.defenseBy.append(D3_OTF)
T1071_003.defenseBy.append(D3_NTF)
T1071_004.defenseBy.append(D3_DNSAL)
T1071_004.defenseBy.append(D3_NTF)
T1071_004.defenseBy.append(D3_OTF)
T1071_004.defenseBy.append(D3_DNSDL)
T1071_004.defenseBy.append(D3_FRDDL)
T1071_004.defenseBy.append(D3_RRID)
T1074.defenseBy.append(D3_SCF)
T1074_001.defenseBy.append(D3_SCF)
T1082.defenseBy.append(D3_MAC)
T1082.defenseBy.append(D3_EDL)
T1082.defenseBy.append(D3_EAL)
T1082.defenseBy.append(D3_HBPI)
T1082.defenseBy.append(D3_SCF)
T1090.defenseBy.append(D3_OTF)
T1090.defenseBy.append(D3_NTF)
T1090_001.defenseBy.append(D3_NTF)
T1090_002.defenseBy.append(D3_OTF)
T1090_002.defenseBy.append(D3_NTF)
T1090_003.defenseBy.append(D3_OTF)
T1090_003.defenseBy.append(D3_NTF)
T1090_004.defenseBy.append(D3_OTF)
T1090_004.defenseBy.append(D3_NTF)
T1091.defenseBy.append(D3_IOPR)
T1092.defenseBy.append(D3_IOPR)
T1095.defenseBy.append(D3_OTF)
T1095.defenseBy.append(D3_NTF)
T1098.defenseBy.append(D3_NTF)
T1098_001.defenseBy.append(D3_NTF)
T1102.defenseBy.append(D3_OTF)
T1102.defenseBy.append(D3_NTF)
T1102_001.defenseBy.append(D3_OTF)
T1102_001.defenseBy.append(D3_NTF)
T1102_002.defenseBy.append(D3_OTF)
T1102_002.defenseBy.append(D3_NTF)
T1102_003.defenseBy.append(D3_OTF)
T1102_003.defenseBy.append(D3_NTF)
T1104.defenseBy.append(D3_OTF)
T1104.defenseBy.append(D3_NTF)
T1105.defenseBy.append(D3_OTF)
T1105.defenseBy.append(D3_NTF)
T1106.defenseBy.append(D3_SCF)
T1110.defenseBy.append(D3_NTF)
T1110_003.defenseBy.append(D3_NTF)
T1110_004.defenseBy.append(D3_NTF)
T1113.defenseBy.append(D3_SCF)
T1114.defenseBy.append(D3_EF)
T1114_001.defenseBy.append(D3_EF)
T1123.defenseBy.append(D3_IOPR)
T1124.defenseBy.append(D3_MAC)
T1124.defenseBy.append(D3_EDL)
T1124.defenseBy.append(D3_EAL)
T1124.defenseBy.append(D3_HBPI)
T1124.defenseBy.append(D3_SCF)
T1125.defenseBy.append(D3_IOPR)
T1132.defenseBy.append(D3_OTF)
T1132.defenseBy.append(D3_NTF)
T1132_001.defenseBy.append(D3_OTF)
T1132_001.defenseBy.append(D3_NTF)
T1132_002.defenseBy.append(D3_OTF)
T1132_002.defenseBy.append(D3_NTF)
T1133.defenseBy.append(D3_NTF)
T1134.defenseBy.append(D3_MAC)
T1134.defenseBy.append(D3_SCF)
T1134.defenseBy.append(D3_EDL)
T1134.defenseBy.append(D3_EAL)
T1134.defenseBy.append(D3_HBPI)
T1134_004.defenseBy.append(D3_MAC)
T1134_004.defenseBy.append(D3_EDL)
T1134_004.defenseBy.append(D3_EAL)
T1134_004.defenseBy.append(D3_HBPI)
T1134_004.defenseBy.append(D3_SCF)
T1137.defenseBy.append(D3_EDL)
T1137.defenseBy.append(D3_EAL)
T1137_001.defenseBy.append(D3_EDL)
T1137_001.defenseBy.append(D3_EAL)
T1140.defenseBy.append(D3_SCF)
T1140.defenseBy.append(D3_MAC)
T1140.defenseBy.append(D3_HBPI)
T1140.defenseBy.append(D3_EDL)
T1140.defenseBy.append(D3_EAL)
T1185.defenseBy.append(D3_NTF)
T1189.defenseBy.append(D3_OTF)
T1189.defenseBy.append(D3_NTF)
T1190.defenseBy.append(D3_ITF)
T1190.defenseBy.append(D3_NTF)
T1197.defenseBy.append(D3_OTF)
T1197.defenseBy.append(D3_NTF)
T1199.defenseBy.append(D3_NTF)
T1204.defenseBy.append(D3_NTF)
T1204.defenseBy.append(D3_OTF)
T1204.defenseBy.append(D3_EDL)
T1204.defenseBy.append(D3_EAL)
T1204_001.defenseBy.append(D3_OTF)
T1204_001.defenseBy.append(D3_NTF)
T1204_002.defenseBy.append(D3_EDL)
T1204_002.defenseBy.append(D3_EAL)
T1205.defenseBy.append(D3_NTF)
T1205_001.defenseBy.append(D3_NTF)
T1207.defenseBy.append(D3_NTF)
T1210.defenseBy.append(D3_NTF)
T1212.defenseBy.append(D3_MAC)
T1212.defenseBy.append(D3_HBPI)
T1218.defenseBy.append(D3_MAC)
T1218.defenseBy.append(D3_NTF)
T1218.defenseBy.append(D3_SCF)
T1218.defenseBy.append(D3_EDL)
T1218.defenseBy.append(D3_EAL)
T1218.defenseBy.append(D3_HBPI)
T1218_001.defenseBy.append(D3_MAC)
T1218_001.defenseBy.append(D3_EDL)
T1218_001.defenseBy.append(D3_EAL)
T1218_001.defenseBy.append(D3_HBPI)
T1218_001.defenseBy.append(D3_SCF)
T1218_002.defenseBy.append(D3_MAC)
T1218_002.defenseBy.append(D3_EDL)
T1218_002.defenseBy.append(D3_EAL)
T1218_002.defenseBy.append(D3_HBPI)
T1218_002.defenseBy.append(D3_SCF)
T1218_003.defenseBy.append(D3_MAC)
T1218_003.defenseBy.append(D3_NTF)
T1218_003.defenseBy.append(D3_EDL)
T1218_003.defenseBy.append(D3_EAL)
T1218_003.defenseBy.append(D3_HBPI)
T1218_003.defenseBy.append(D3_SCF)
T1218_005.defenseBy.append(D3_MAC)
T1218_005.defenseBy.append(D3_SCF)
T1218_005.defenseBy.append(D3_EDL)
T1218_005.defenseBy.append(D3_EAL)
T1218_005.defenseBy.append(D3_HBPI)
T1218_011.defenseBy.append(D3_MAC)
T1218_011.defenseBy.append(D3_EDL)
T1218_011.defenseBy.append(D3_EAL)
T1218_011.defenseBy.append(D3_HBPI)
T1218_011.defenseBy.append(D3_SCF)
T1218_013.defenseBy.append(D3_SCF)
T1219.defenseBy.append(D3_OTF)
T1219.defenseBy.append(D3_NTF)
T1220.defenseBy.append(D3_MAC)
T1220.defenseBy.append(D3_SCF)
T1220.defenseBy.append(D3_HBPI)
T1220.defenseBy.append(D3_EDL)
T1220.defenseBy.append(D3_EAL)
T1497.defenseBy.append(D3_SCF)
T1497_003.defenseBy.append(D3_SCF)
T1498.defenseBy.append(D3_ITF)
T1498.defenseBy.append(D3_NTF)
T1498_001.defenseBy.append(D3_ITF)
T1498_001.defenseBy.append(D3_NTF)
T1498_002.defenseBy.append(D3_ITF)
T1498_002.defenseBy.append(D3_NTF)
T1499_002.defenseBy.append(D3_ITF)
T1499_002.defenseBy.append(D3_NTF)
T1505.defenseBy.append(D3_MAC)
T1505.defenseBy.append(D3_SCF)
T1505.defenseBy.append(D3_EDL)
T1505.defenseBy.append(D3_EAL)
T1505.defenseBy.append(D3_HBPI)
T1505_001.defenseBy.append(D3_SCF)
T1505_001.defenseBy.append(D3_MAC)
T1505_001.defenseBy.append(D3_EDL)
T1505_001.defenseBy.append(D3_EAL)
T1505_001.defenseBy.append(D3_HBPI)
T1505_002.defenseBy.append(D3_MAC)
T1505_002.defenseBy.append(D3_HBPI)
T1505_003.defenseBy.append(D3_MAC)
T1505_003.defenseBy.append(D3_EDL)
T1505_003.defenseBy.append(D3_EAL)
T1505_003.defenseBy.append(D3_HBPI)
T1518.defenseBy.append(D3_SCF)
T1518_001.defenseBy.append(D3_SCF)
T1534.defenseBy.append(D3_EF)
T1542.defenseBy.append(D3_NTF)
T1542_005.defenseBy.append(D3_NTF)
T1546.defenseBy.append(D3_MAC)
T1546.defenseBy.append(D3_NTF)
T1546.defenseBy.append(D3_SCF)
T1546.defenseBy.append(D3_EDL)
T1546.defenseBy.append(D3_EAL)
T1546.defenseBy.append(D3_HBPI)
T1546_002.defenseBy.append(D3_EDL)
T1546_002.defenseBy.append(D3_EAL)
T1546_003.defenseBy.append(D3_NTF)
T1546_005.defenseBy.append(D3_EDL)
T1546_005.defenseBy.append(D3_EAL)
T1546_006.defenseBy.append(D3_EDL)
T1546_006.defenseBy.append(D3_EAL)
T1546_007.defenseBy.append(D3_MAC)
T1546_007.defenseBy.append(D3_HBPI)
T1546_008.defenseBy.append(D3_NTF)
T1546_008.defenseBy.append(D3_EDL)
T1546_008.defenseBy.append(D3_EAL)
T1546_009.defenseBy.append(D3_MAC)
T1546_009.defenseBy.append(D3_EDL)
T1546_009.defenseBy.append(D3_EAL)
T1546_009.defenseBy.append(D3_HBPI)
T1546_009.defenseBy.append(D3_SCF)
T1546_010.defenseBy.append(D3_MAC)
T1546_010.defenseBy.append(D3_HBPI)
T1546_010.defenseBy.append(D3_EDL)
T1546_010.defenseBy.append(D3_EAL)
T1546_010.defenseBy.append(D3_SCF)
T1546_013.defenseBy.append(D3_EDL)
T1546_013.defenseBy.append(D3_EAL)
T1546_015.defenseBy.append(D3_EDL)
T1546_015.defenseBy.append(D3_EAL)
T1547.defenseBy.append(D3_EDL)
T1547.defenseBy.append(D3_EAL)
T1547_001.defenseBy.append(D3_EDL)
T1547_001.defenseBy.append(D3_EAL)
T1547_009.defenseBy.append(D3_EDL)
T1547_009.defenseBy.append(D3_EAL)
T1548.defenseBy.append(D3_MAC)
T1548.defenseBy.append(D3_SCF)
T1548.defenseBy.append(D3_EDL)
T1548.defenseBy.append(D3_EAL)
T1548.defenseBy.append(D3_HBPI)
T1548_002.defenseBy.append(D3_MAC)
T1548_002.defenseBy.append(D3_SCF)
T1548_002.defenseBy.append(D3_HBPI)
T1548_002.defenseBy.append(D3_EDL)
T1548_002.defenseBy.append(D3_EAL)
T1548_004.defenseBy.append(D3_SCF)
T1550.defenseBy.append(D3_MAC)
T1550.defenseBy.append(D3_NTF)
T1550.defenseBy.append(D3_HBPI)
T1550_001.defenseBy.append(D3_MAC)
T1550_001.defenseBy.append(D3_NTF)
T1550_001.defenseBy.append(D3_HBPI)
T1550_002.defenseBy.append(D3_MAC)
T1550_002.defenseBy.append(D3_HBPI)
T1550_003.defenseBy.append(D3_MAC)
T1550_003.defenseBy.append(D3_HBPI)
T1550_004.defenseBy.append(D3_MAC)
T1550_004.defenseBy.append(D3_NTF)
T1550_004.defenseBy.append(D3_HBPI)
T1555.defenseBy.append(D3_SCF)
T1555_003.defenseBy.append(D3_SCF)
T1556.defenseBy.append(D3_MAC)
T1556.defenseBy.append(D3_HBPI)
T1556_001.defenseBy.append(D3_MAC)
T1556_001.defenseBy.append(D3_HBPI)
T1556_002.defenseBy.append(D3_MAC)
T1556_002.defenseBy.append(D3_HBPI)
T1556_003.defenseBy.append(D3_MAC)
T1556_003.defenseBy.append(D3_HBPI)
T1556_004.defenseBy.append(D3_MAC)
T1556_004.defenseBy.append(D3_HBPI)
T1556_005.defenseBy.append(D3_MAC)
T1556_005.defenseBy.append(D3_HBPI)
T1557.defenseBy.append(D3_NTF)
T1557_001.defenseBy.append(D3_NTF)
T1557_002.defenseBy.append(D3_NTF)
T1557_003.defenseBy.append(D3_NTF)
T1558.defenseBy.append(D3_NTF)
T1558_003.defenseBy.append(D3_NTF)
T1562.defenseBy.append(D3_MAC)
T1562.defenseBy.append(D3_EDL)
T1562.defenseBy.append(D3_EAL)
T1562.defenseBy.append(D3_HBPI)
T1562_001.defenseBy.append(D3_MAC)
T1562_001.defenseBy.append(D3_HBPI)
T1562_003.defenseBy.append(D3_EDL)
T1562_003.defenseBy.append(D3_EAL)
T1563.defenseBy.append(D3_NTF)
T1563_001.defenseBy.append(D3_NTF)
T1563_002.defenseBy.append(D3_NTF)
T1565.defenseBy.append(D3_EDL)
T1565.defenseBy.append(D3_NTF)
T1565.defenseBy.append(D3_EAL)
T1565_002.defenseBy.append(D3_NTF)
T1565_003.defenseBy.append(D3_EDL)
T1565_003.defenseBy.append(D3_EAL)
T1566.defenseBy.append(D3_EF)
T1566.defenseBy.append(D3_NTF)
T1566.defenseBy.append(D3_ITF)
T1566_001.defenseBy.append(D3_EF)
T1566_001.defenseBy.append(D3_NTF)
T1566_001.defenseBy.append(D3_ITF)
T1566_002.defenseBy.append(D3_EF)
T1566_002.defenseBy.append(D3_NTF)
T1566_002.defenseBy.append(D3_ITF)
T1567.defenseBy.append(D3_OTF)
T1567.defenseBy.append(D3_NTF)
T1567_001.defenseBy.append(D3_OTF)
T1567_001.defenseBy.append(D3_NTF)
T1567_002.defenseBy.append(D3_OTF)
T1567_002.defenseBy.append(D3_NTF)
T1568.defenseBy.append(D3_FRDDL)
T1568.defenseBy.append(D3_OTF)
T1568.defenseBy.append(D3_DNSAL)
T1568.defenseBy.append(D3_RRID)
T1568.defenseBy.append(D3_NTF)
T1568.defenseBy.append(D3_DNSDL)
T1568_001.defenseBy.append(D3_FRDDL)
T1568_001.defenseBy.append(D3_OTF)
T1568_001.defenseBy.append(D3_DNSAL)
T1568_001.defenseBy.append(D3_RRID)
T1568_001.defenseBy.append(D3_NTF)
T1568_001.defenseBy.append(D3_DNSDL)
T1568_002.defenseBy.append(D3_FRDDL)
T1568_002.defenseBy.append(D3_OTF)
T1568_002.defenseBy.append(D3_DNSAL)
T1568_002.defenseBy.append(D3_RRID)
T1568_002.defenseBy.append(D3_NTF)
T1568_002.defenseBy.append(D3_DNSDL)
T1568_003.defenseBy.append(D3_FRDDL)
T1568_003.defenseBy.append(D3_OTF)
T1568_003.defenseBy.append(D3_DNSAL)
T1568_003.defenseBy.append(D3_RRID)
T1568_003.defenseBy.append(D3_NTF)
T1568_003.defenseBy.append(D3_DNSDL)
T1570.defenseBy.append(D3_NTF)
T1571.defenseBy.append(D3_OTF)
T1571.defenseBy.append(D3_NTF)
T1572.defenseBy.append(D3_OTF)
T1572.defenseBy.append(D3_NTF)
T1573.defenseBy.append(D3_OTF)
T1573.defenseBy.append(D3_NTF)
T1573_001.defenseBy.append(D3_OTF)
T1573_001.defenseBy.append(D3_NTF)
T1573_002.defenseBy.append(D3_OTF)
T1573_002.defenseBy.append(D3_NTF)
T1574.defenseBy.append(D3_EDL)
T1574.defenseBy.append(D3_EAL)
T1574_007.defenseBy.append(D3_EDL)
T1574_007.defenseBy.append(D3_EAL)
T1574_008.defenseBy.append(D3_EDL)
T1574_008.defenseBy.append(D3_EAL)
T1574_009.defenseBy.append(D3_EDL)
T1574_009.defenseBy.append(D3_EAL)

# Asserted_properties Defense_Model - Technique
T1003.defenseBy.append(D3_DI)
T1003_002.defenseBy.append(D3_DI)
T1003_004.defenseBy.append(D3_DI)
T1003_008.defenseBy.append(D3_DI)
T1012.defenseBy.append(D3_DI)
T1014.defenseBy.append(D3_AVE)
T1014.defenseBy.append(D3_SWI)
T1025.defenseBy.append(D3_HCI)
T1033.defenseBy.append(D3_DI)
T1037.defenseBy.append(D3_CI)
T1037_004.defenseBy.append(D3_CI)
T1037_005.defenseBy.append(D3_CI)
T1052.defenseBy.append(D3_HCI)
T1052_001.defenseBy.append(D3_HCI)
T1056.defenseBy.append(D3_AVE)
T1056.defenseBy.append(D3_HCI)
T1056.defenseBy.append(D3_SWI)
T1056_001.defenseBy.append(D3_HCI)
T1056_003.defenseBy.append(D3_AVE)
T1056_003.defenseBy.append(D3_SWI)
T1072.defenseBy.append(D3_AVE)
T1072.defenseBy.append(D3_SWI)
T1078.defenseBy.append(D3_AM)
T1078_001.defenseBy.append(D3_AM)
T1078_002.defenseBy.append(D3_AM)
T1078_003.defenseBy.append(D3_AM)
T1078_004.defenseBy.append(D3_AM)
T1087_001.defenseBy.append(D3_AM)
T1087_002.defenseBy.append(D3_AM)
T1087_004.defenseBy.append(D3_AM)
T1091.defenseBy.append(D3_HCI)
T1092.defenseBy.append(D3_HCI)
T1098.defenseBy.append(D3_AM)
T1098_001.defenseBy.append(D3_AM)
T1098_002.defenseBy.append(D3_AM)
T1098_003.defenseBy.append(D3_AM)
T1098_004.defenseBy.append(D3_AM)
T1098_005.defenseBy.append(D3_AM)
T1111.defenseBy.append(D3_HCI)
T1112.defenseBy.append(D3_DI)
T1114.defenseBy.append(D3_DI)
T1114.defenseBy.append(D3_LLM)
T1114.defenseBy.append(D3_CI)
T1114.defenseBy.append(D3_PLM)
T1114.defenseBy.append(D3_NNI)
T1114_001.defenseBy.append(D3_DI)
T1114_002.defenseBy.append(D3_LLM)
T1114_002.defenseBy.append(D3_NNI)
T1114_002.defenseBy.append(D3_PLM)
T1114_003.defenseBy.append(D3_CI)
T1123.defenseBy.append(D3_HCI)
T1125.defenseBy.append(D3_HCI)
T1127.defenseBy.append(D3_AVE)
T1127.defenseBy.append(D3_SWI)
T1127_001.defenseBy.append(D3_AVE)
T1127_001.defenseBy.append(D3_SWI)
T1134.defenseBy.append(D3_CI)
T1134.defenseBy.append(D3_NTPM)
T1134.defenseBy.append(D3_AM)
T1134_005.defenseBy.append(D3_AM)
T1134_005.defenseBy.append(D3_NTPM)
T1134_005.defenseBy.append(D3_CI)
T1136.defenseBy.append(D3_AM)
T1136_001.defenseBy.append(D3_AM)
T1136_002.defenseBy.append(D3_AM)
T1136_003.defenseBy.append(D3_AM)
T1137.defenseBy.append(D3_DI)
T1137.defenseBy.append(D3_CI)
T1137.defenseBy.append(D3_SWI)
T1137.defenseBy.append(D3_AVE)
T1137_001.defenseBy.append(D3_CI)
T1137_002.defenseBy.append(D3_CI)
T1137_003.defenseBy.append(D3_DI)
T1137_004.defenseBy.append(D3_CI)
T1137_005.defenseBy.append(D3_CI)
T1137_006.defenseBy.append(D3_DI)
T1137_006.defenseBy.append(D3_AVE)
T1137_006.defenseBy.append(D3_SWI)
T1176.defenseBy.append(D3_SWI)
T1176.defenseBy.append(D3_AVE)
T1195.defenseBy.append(D3_AVE)
T1195.defenseBy.append(D3_HCI)
T1195.defenseBy.append(D3_SWI)
T1195_001.defenseBy.append(D3_SWI)
T1195_001.defenseBy.append(D3_AVE)
T1195_002.defenseBy.append(D3_SWI)
T1195_002.defenseBy.append(D3_AVE)
T1195_003.defenseBy.append(D3_HCI)
T1200.defenseBy.append(D3_HCI)
T1207.defenseBy.append(D3_DI)
T1212.defenseBy.append(D3_AVE)
T1212.defenseBy.append(D3_SWI)
T1213.defenseBy.append(D3_DI)
T1213_003.defenseBy.append(D3_DI)
T1218.defenseBy.append(D3_DI)
T1218.defenseBy.append(D3_CI)
T1218.defenseBy.append(D3_SWI)
T1218.defenseBy.append(D3_AVE)
T1218_002.defenseBy.append(D3_CI)
T1218_005.defenseBy.append(D3_DI)
T1218_014.defenseBy.append(D3_DI)
T1218_014.defenseBy.append(D3_AVE)
T1218_014.defenseBy.append(D3_SWI)
T1222.defenseBy.append(D3_AM)
T1222.defenseBy.append(D3_NTPM)
T1222.defenseBy.append(D3_CI)
T1222_001.defenseBy.append(D3_AM)
T1222_001.defenseBy.append(D3_CI)
T1222_001.defenseBy.append(D3_NTPM)
T1222_002.defenseBy.append(D3_AM)
T1222_002.defenseBy.append(D3_CI)
T1222_002.defenseBy.append(D3_NTPM)
T1484.defenseBy.append(D3_AM)
T1484.defenseBy.append(D3_NTPM)
T1484.defenseBy.append(D3_CI)
T1484_001.defenseBy.append(D3_AM)
T1484_001.defenseBy.append(D3_CI)
T1484_001.defenseBy.append(D3_NTPM)
T1484_002.defenseBy.append(D3_AM)
T1484_002.defenseBy.append(D3_CI)
T1484_002.defenseBy.append(D3_NTPM)
T1497.defenseBy.append(D3_AVE)
T1497.defenseBy.append(D3_SWI)
T1497_003.defenseBy.append(D3_AVE)
T1497_003.defenseBy.append(D3_SWI)
T1505.defenseBy.append(D3_LLM)
T1505.defenseBy.append(D3_PLM)
T1505.defenseBy.append(D3_SWI)
T1505.defenseBy.append(D3_AVE)
T1505.defenseBy.append(D3_NNI)
T1505_001.defenseBy.append(D3_AVE)
T1505_001.defenseBy.append(D3_SWI)
T1505_002.defenseBy.append(D3_LLM)
T1505_002.defenseBy.append(D3_NNI)
T1505_002.defenseBy.append(D3_PLM)
T1505_003.defenseBy.append(D3_LLM)
T1505_003.defenseBy.append(D3_PLM)
T1505_003.defenseBy.append(D3_NNI)
T1505_004.defenseBy.append(D3_SWI)
T1505_004.defenseBy.append(D3_AVE)
T1518.defenseBy.append(D3_CI)
T1518_001.defenseBy.append(D3_CI)
T1526.defenseBy.append(D3_CI)
T1531.defenseBy.append(D3_AM)
T1534.defenseBy.append(D3_DI)
T1538.defenseBy.append(D3_CI)
T1542.defenseBy.append(D3_AVE)
T1542.defenseBy.append(D3_SWI)
T1542_001.defenseBy.append(D3_AVE)
T1542_001.defenseBy.append(D3_SWI)
T1542_002.defenseBy.append(D3_AVE)
T1542_002.defenseBy.append(D3_SWI)
T1542_004.defenseBy.append(D3_AVE)
T1542_004.defenseBy.append(D3_SWI)
T1543.defenseBy.append(D3_DI)
T1543_003.defenseBy.append(D3_DI)
T1546.defenseBy.append(D3_DI)
T1546.defenseBy.append(D3_CI)
T1546.defenseBy.append(D3_SWI)
T1546.defenseBy.append(D3_AVE)
T1546_001.defenseBy.append(D3_CI)
T1546_002.defenseBy.append(D3_CI)
T1546_007.defenseBy.append(D3_CI)
T1546_008.defenseBy.append(D3_CI)
T1546_009.defenseBy.append(D3_CI)
T1546_010.defenseBy.append(D3_CI)
T1546_011.defenseBy.append(D3_AVE)
T1546_011.defenseBy.append(D3_CI)
T1546_011.defenseBy.append(D3_SWI)
T1546_012.defenseBy.append(D3_DI)
T1546_014.defenseBy.append(D3_CI)
T1546_015.defenseBy.append(D3_DI)
T1547.defenseBy.append(D3_AVE)
T1547.defenseBy.append(D3_CI)
T1547.defenseBy.append(D3_SWI)
T1547_001.defenseBy.append(D3_CI)
T1547_002.defenseBy.append(D3_CI)
T1547_003.defenseBy.append(D3_CI)
T1547_004.defenseBy.append(D3_CI)
T1547_005.defenseBy.append(D3_CI)
T1547_008.defenseBy.append(D3_AVE)
T1547_008.defenseBy.append(D3_SWI)
T1547_010.defenseBy.append(D3_CI)
T1548.defenseBy.append(D3_DI)
T1548.defenseBy.append(D3_CI)
T1548.defenseBy.append(D3_NTPM)
T1548.defenseBy.append(D3_AM)
T1548_001.defenseBy.append(D3_AM)
T1548_001.defenseBy.append(D3_NTPM)
T1548_001.defenseBy.append(D3_CI)
T1548_002.defenseBy.append(D3_CI)
T1548_004.defenseBy.append(D3_DI)
T1552.defenseBy.append(D3_DI)
T1552.defenseBy.append(D3_CI)
T1552.defenseBy.append(D3_NTPM)
T1552.defenseBy.append(D3_AM)
T1552_002.defenseBy.append(D3_DI)
T1552_005.defenseBy.append(D3_CI)
T1552_006.defenseBy.append(D3_CI)
T1552_006.defenseBy.append(D3_NTPM)
T1552_006.defenseBy.append(D3_AM)
T1553.defenseBy.append(D3_CI)
T1553_003.defenseBy.append(D3_CI)
T1554.defenseBy.append(D3_SWI)
T1554.defenseBy.append(D3_AVE)
T1555.defenseBy.append(D3_DI)
T1555_001.defenseBy.append(D3_DI)
T1555_002.defenseBy.append(D3_DI)
T1555_003.defenseBy.append(D3_DI)
T1555_004.defenseBy.append(D3_DI)
T1555_005.defenseBy.append(D3_DI)
T1556.defenseBy.append(D3_CI)
T1556_002.defenseBy.append(D3_CI)
T1562.defenseBy.append(D3_CI)
T1562.defenseBy.append(D3_SYSVA)
T1562_002.defenseBy.append(D3_CI)
T1562_003.defenseBy.append(D3_CI)
T1562_004.defenseBy.append(D3_CI)
T1562_009.defenseBy.append(D3_CI)
T1562_010.defenseBy.append(D3_SYSVA)
T1564.defenseBy.append(D3_DI)
T1564.defenseBy.append(D3_CI)
T1564.defenseBy.append(D3_SWI)
T1564.defenseBy.append(D3_AVE)
T1564_003.defenseBy.append(D3_DI)
T1564_005.defenseBy.append(D3_DI)
T1564_006.defenseBy.append(D3_AVE)
T1564_006.defenseBy.append(D3_SWI)
T1564_007.defenseBy.append(D3_DI)
T1564_008.defenseBy.append(D3_CI)
T1566.defenseBy.append(D3_DI)
T1566_001.defenseBy.append(D3_DI)
T1566_002.defenseBy.append(D3_DI)
T1574.defenseBy.append(D3_CI)
T1574.defenseBy.append(D3_SWI)
T1574.defenseBy.append(D3_AVE)
T1574_005.defenseBy.append(D3_AVE)
T1574_005.defenseBy.append(D3_SWI)
T1574_010.defenseBy.append(D3_AVE)
T1574_010.defenseBy.append(D3_SWI)
T1574_011.defenseBy.append(D3_CI)
T1574_012.defenseBy.append(D3_CI)
T1614.defenseBy.append(D3_DI)
T1614.defenseBy.append(D3_CI)
T1614_001.defenseBy.append(D3_DI)
T1614_001.defenseBy.append(D3_CI)
T1615.defenseBy.append(D3_AM)
T1615.defenseBy.append(D3_NTPM)
T1615.defenseBy.append(D3_CI)
T1619.defenseBy.append(D3_HCI)

# Asserted_properties Defense_Restore - Technique
T1003.defenseBy.append(D3_RD)
T1003.defenseBy.append(D3_RF)
T1003.defenseBy.append(D3_RC)
T1003_002.defenseBy.append(D3_RD)
T1003_003.defenseBy.append(D3_RC)
T1003_004.defenseBy.append(D3_RD)
T1003_005.defenseBy.append(D3_RC)
T1003_007.defenseBy.append(D3_RF)
T1003_008.defenseBy.append(D3_RC)
T1003_008.defenseBy.append(D3_RD)
T1003_008.defenseBy.append(D3_RF)
T1005.defenseBy.append(D3_RF)
T1012.defenseBy.append(D3_RD)
T1014.defenseBy.append(D3_RF)
T1014.defenseBy.append(D3_RS)
T1016.defenseBy.append(D3_RF)
T1016_001.defenseBy.append(D3_RF)
T1018.defenseBy.append(D3_RF)
T1027.defenseBy.append(D3_RF)
T1027_001.defenseBy.append(D3_RF)
T1027_002.defenseBy.append(D3_RF)
T1027_004.defenseBy.append(D3_RF)
T1033.defenseBy.append(D3_RD)
T1033.defenseBy.append(D3_RF)
T1036.defenseBy.append(D3_RF)
T1036_001.defenseBy.append(D3_RF)
T1036_003.defenseBy.append(D3_RF)
T1036_005.defenseBy.append(D3_RF)
T1036_006.defenseBy.append(D3_RF)
T1037.defenseBy.append(D3_RCF)
T1037.defenseBy.append(D3_RF)
T1037_001.defenseBy.append(D3_RF)
T1037_002.defenseBy.append(D3_RF)
T1037_003.defenseBy.append(D3_RF)
T1037_004.defenseBy.append(D3_RCF)
T1037_004.defenseBy.append(D3_RF)
T1037_005.defenseBy.append(D3_RCF)
T1041.defenseBy.append(D3_RF)
T1048.defenseBy.append(D3_RF)
T1048_002.defenseBy.append(D3_RF)
T1053.defenseBy.append(D3_RF)
T1055.defenseBy.append(D3_RF)
T1055_001.defenseBy.append(D3_RF)
T1055_002.defenseBy.append(D3_RF)
T1055_003.defenseBy.append(D3_RF)
T1055_009.defenseBy.append(D3_RF)
T1055_014.defenseBy.append(D3_RF)
T1056.defenseBy.append(D3_RS)
T1056_003.defenseBy.append(D3_RS)
T1059.defenseBy.append(D3_RF)
T1059_001.defenseBy.append(D3_RF)
T1059_002.defenseBy.append(D3_RF)
T1059_003.defenseBy.append(D3_RF)
T1059_004.defenseBy.append(D3_RF)
T1059_005.defenseBy.append(D3_RF)
T1059_006.defenseBy.append(D3_RF)
T1059_007.defenseBy.append(D3_RF)
T1059_008.defenseBy.append(D3_RF)
T1070.defenseBy.append(D3_RF)
T1070_002.defenseBy.append(D3_RF)
T1070_004.defenseBy.append(D3_RF)
T1071.defenseBy.append(D3_RF)
T1071_001.defenseBy.append(D3_RF)
T1071_002.defenseBy.append(D3_RF)
T1071_003.defenseBy.append(D3_RF)
T1071_004.defenseBy.append(D3_RF)
T1072.defenseBy.append(D3_RF)
T1072.defenseBy.append(D3_RS)
T1074.defenseBy.append(D3_RF)
T1074_001.defenseBy.append(D3_RF)
T1078.defenseBy.append(D3_RUAA)
T1078.defenseBy.append(D3_ULA)
T1078_001.defenseBy.append(D3_RUAA)
T1078_001.defenseBy.append(D3_ULA)
T1078_002.defenseBy.append(D3_RUAA)
T1078_002.defenseBy.append(D3_ULA)
T1078_003.defenseBy.append(D3_RUAA)
T1078_003.defenseBy.append(D3_ULA)
T1078_004.defenseBy.append(D3_RUAA)
T1078_004.defenseBy.append(D3_ULA)
T1083.defenseBy.append(D3_RF)
T1087_001.defenseBy.append(D3_RUAA)
T1087_001.defenseBy.append(D3_ULA)
T1087_002.defenseBy.append(D3_RUAA)
T1087_002.defenseBy.append(D3_ULA)
T1087_004.defenseBy.append(D3_RUAA)
T1087_004.defenseBy.append(D3_ULA)
T1098.defenseBy.append(D3_ULA)
T1098.defenseBy.append(D3_RUAA)
T1098.defenseBy.append(D3_RC)
T1098_001.defenseBy.append(D3_ULA)
T1098_001.defenseBy.append(D3_RUAA)
T1098_001.defenseBy.append(D3_RC)
T1098_002.defenseBy.append(D3_RUAA)
T1098_002.defenseBy.append(D3_ULA)
T1098_003.defenseBy.append(D3_RUAA)
T1098_003.defenseBy.append(D3_ULA)
T1098_004.defenseBy.append(D3_RUAA)
T1098_004.defenseBy.append(D3_ULA)
T1098_005.defenseBy.append(D3_RUAA)
T1098_005.defenseBy.append(D3_ULA)
T1110.defenseBy.append(D3_RC)
T1110_001.defenseBy.append(D3_RC)
T1110_002.defenseBy.append(D3_RC)
T1110_003.defenseBy.append(D3_RC)
T1112.defenseBy.append(D3_RD)
T1114.defenseBy.append(D3_RCF)
T1114.defenseBy.append(D3_RE)
T1114.defenseBy.append(D3_RF)
T1114.defenseBy.append(D3_RNA)
T1114_001.defenseBy.append(D3_RE)
T1114_001.defenseBy.append(D3_RF)
T1114_002.defenseBy.append(D3_RNA)
T1114_003.defenseBy.append(D3_RCF)
T1119.defenseBy.append(D3_RF)
T1127.defenseBy.append(D3_RF)
T1127.defenseBy.append(D3_RS)
T1127_001.defenseBy.append(D3_RF)
T1127_001.defenseBy.append(D3_RS)
T1134.defenseBy.append(D3_RCF)
T1134.defenseBy.append(D3_RC)
T1134_001.defenseBy.append(D3_RC)
T1134_002.defenseBy.append(D3_RC)
T1134_003.defenseBy.append(D3_RC)
T1134_005.defenseBy.append(D3_RCF)
T1136.defenseBy.append(D3_RUAA)
T1136.defenseBy.append(D3_ULA)
T1136_001.defenseBy.append(D3_RUAA)
T1136_001.defenseBy.append(D3_ULA)
T1136_002.defenseBy.append(D3_RUAA)
T1136_002.defenseBy.append(D3_ULA)
T1136_003.defenseBy.append(D3_RUAA)
T1136_003.defenseBy.append(D3_ULA)
T1137.defenseBy.append(D3_RCF)
T1137.defenseBy.append(D3_RS)
T1137.defenseBy.append(D3_RD)
T1137.defenseBy.append(D3_RF)
T1137_001.defenseBy.append(D3_RCF)
T1137_001.defenseBy.append(D3_RF)
T1137_002.defenseBy.append(D3_RCF)
T1137_003.defenseBy.append(D3_RF)
T1137_004.defenseBy.append(D3_RCF)
T1137_005.defenseBy.append(D3_RCF)
T1137_006.defenseBy.append(D3_RD)
T1137_006.defenseBy.append(D3_RS)
T1140.defenseBy.append(D3_RF)
T1555_001.defenseBy.append(D3_RC)
T1176.defenseBy.append(D3_RS)
T1187.defenseBy.append(D3_RF)
T1195.defenseBy.append(D3_RS)
T1195_001.defenseBy.append(D3_RS)
T1195_002.defenseBy.append(D3_RS)
T1204.defenseBy.append(D3_RF)
T1204_002.defenseBy.append(D3_RF)
T1207.defenseBy.append(D3_RD)
T1212.defenseBy.append(D3_RS)
T1213.defenseBy.append(D3_RD)
T1213_003.defenseBy.append(D3_RD)
T1218.defenseBy.append(D3_RCF)
T1218.defenseBy.append(D3_RS)
T1218.defenseBy.append(D3_RD)
T1218.defenseBy.append(D3_RF)
T1218_002.defenseBy.append(D3_RCF)
T1218_005.defenseBy.append(D3_RF)
T1218_011.defenseBy.append(D3_RF)
T1218_014.defenseBy.append(D3_RD)
T1218_014.defenseBy.append(D3_RS)
T1220.defenseBy.append(D3_RF)
T1222.defenseBy.append(D3_RCF)
T1222_001.defenseBy.append(D3_RCF)
T1222_002.defenseBy.append(D3_RCF)
T1484.defenseBy.append(D3_RCF)
T1484_001.defenseBy.append(D3_RCF)
T1484_002.defenseBy.append(D3_RCF)
T1497.defenseBy.append(D3_RS)
T1497_003.defenseBy.append(D3_RS)
T1505.defenseBy.append(D3_RS)
T1505.defenseBy.append(D3_RF)
T1505.defenseBy.append(D3_RNA)
T1505_001.defenseBy.append(D3_RS)
T1505_002.defenseBy.append(D3_RNA)
T1505_003.defenseBy.append(D3_RF)
T1505_003.defenseBy.append(D3_RNA)
T1505_004.defenseBy.append(D3_RS)
T1518.defenseBy.append(D3_RCF)
T1518_001.defenseBy.append(D3_RCF)
T1525.defenseBy.append(D3_RF)
T1526.defenseBy.append(D3_RCF)
T1528.defenseBy.append(D3_RC)
T1531.defenseBy.append(D3_RUAA)
T1531.defenseBy.append(D3_ULA)
T1534.defenseBy.append(D3_RE)
T1534.defenseBy.append(D3_RF)
T1538.defenseBy.append(D3_RCF)
T1539.defenseBy.append(D3_RC)
T1542.defenseBy.append(D3_RS)
T1542_001.defenseBy.append(D3_RS)
T1542_002.defenseBy.append(D3_RS)
T1542_004.defenseBy.append(D3_RS)
T1543.defenseBy.append(D3_RD)
T1543.defenseBy.append(D3_RF)
T1543_001.defenseBy.append(D3_RF)
T1543_002.defenseBy.append(D3_RF)
T1543_003.defenseBy.append(D3_RD)
T1543_004.defenseBy.append(D3_RF)
T1546.defenseBy.append(D3_RCF)
T1546.defenseBy.append(D3_RS)
T1546.defenseBy.append(D3_RD)
T1546.defenseBy.append(D3_RF)
T1546_001.defenseBy.append(D3_RCF)
T1546_002.defenseBy.append(D3_RCF)
T1546_002.defenseBy.append(D3_RF)
T1546_004.defenseBy.append(D3_RF)
T1546_005.defenseBy.append(D3_RF)
T1546_006.defenseBy.append(D3_RF)
T1546_007.defenseBy.append(D3_RCF)
T1546_008.defenseBy.append(D3_RCF)
T1546_008.defenseBy.append(D3_RF)
T1546_009.defenseBy.append(D3_RCF)
T1546_009.defenseBy.append(D3_RF)
T1546_010.defenseBy.append(D3_RCF)
T1546_010.defenseBy.append(D3_RF)
T1546_011.defenseBy.append(D3_RCF)
T1546_011.defenseBy.append(D3_RS)
T1546_012.defenseBy.append(D3_RD)
T1546_013.defenseBy.append(D3_RF)
T1546_014.defenseBy.append(D3_RCF)
T1546_014.defenseBy.append(D3_RF)
T1546_015.defenseBy.append(D3_RD)
T1546_015.defenseBy.append(D3_RF)
T1547.defenseBy.append(D3_RCF)
T1547.defenseBy.append(D3_RF)
T1547.defenseBy.append(D3_RS)
T1547_001.defenseBy.append(D3_RCF)
T1547_001.defenseBy.append(D3_RF)
T1547_002.defenseBy.append(D3_RCF)
T1547_003.defenseBy.append(D3_RCF)
T1547_004.defenseBy.append(D3_RCF)
T1547_005.defenseBy.append(D3_RCF)
T1547_006.defenseBy.append(D3_RF)
T1547_007.defenseBy.append(D3_RF)
T1547_008.defenseBy.append(D3_RF)
T1547_008.defenseBy.append(D3_RS)
T1547_009.defenseBy.append(D3_RF)
T1547_010.defenseBy.append(D3_RCF)
T1647.defenseBy.append(D3_RF)
T1548.defenseBy.append(D3_RCF)
T1548.defenseBy.append(D3_RD)
T1548.defenseBy.append(D3_RF)
T1548_001.defenseBy.append(D3_RCF)
T1548_002.defenseBy.append(D3_RCF)
T1548_002.defenseBy.append(D3_RF)
T1548_003.defenseBy.append(D3_RF)
T1548_004.defenseBy.append(D3_RD)
T1550.defenseBy.append(D3_RC)
T1550_001.defenseBy.append(D3_RC)
T1550_004.defenseBy.append(D3_RC)
T1552.defenseBy.append(D3_RCF)
T1552.defenseBy.append(D3_RD)
T1552.defenseBy.append(D3_RF)
T1552.defenseBy.append(D3_RC)
T1552_001.defenseBy.append(D3_RC)
T1552_001.defenseBy.append(D3_RF)
T1552_002.defenseBy.append(D3_RC)
T1552_002.defenseBy.append(D3_RD)
T1552_003.defenseBy.append(D3_RC)
T1552_003.defenseBy.append(D3_RF)
T1552_004.defenseBy.append(D3_RC)
T1552_005.defenseBy.append(D3_RCF)
T1552_005.defenseBy.append(D3_RC)
T1552_006.defenseBy.append(D3_RCF)
T1552_006.defenseBy.append(D3_RC)
T1552_007.defenseBy.append(D3_RC)
T1553.defenseBy.append(D3_RCF)
T1553_003.defenseBy.append(D3_RCF)
T1554.defenseBy.append(D3_RS)
T1555.defenseBy.append(D3_RD)
T1555.defenseBy.append(D3_RF)
T1555_001.defenseBy.append(D3_RD)
T1555_001.defenseBy.append(D3_RF)
T1555_002.defenseBy.append(D3_RD)
T1555_002.defenseBy.append(D3_RF)
T1555_003.defenseBy.append(D3_RD)
T1555_003.defenseBy.append(D3_RF)
T1555_004.defenseBy.append(D3_RD)
T1555_004.defenseBy.append(D3_RF)
T1555_005.defenseBy.append(D3_RD)
T1555_005.defenseBy.append(D3_RF)
T1556.defenseBy.append(D3_RCF)
T1556.defenseBy.append(D3_RF)
T1556_002.defenseBy.append(D3_RCF)
T1556_002.defenseBy.append(D3_RF)
T1556_003.defenseBy.append(D3_RF)
T1558.defenseBy.append(D3_RC)
T1558_001.defenseBy.append(D3_RC)
T1558_002.defenseBy.append(D3_RC)
T1558_003.defenseBy.append(D3_RC)
T1558_004.defenseBy.append(D3_RC)
T1560.defenseBy.append(D3_RF)
T1560_001.defenseBy.append(D3_RF)
T1560_002.defenseBy.append(D3_RF)
T1560_003.defenseBy.append(D3_RF)
T1562.defenseBy.append(D3_RCF)
T1562.defenseBy.append(D3_RF)
T1562_002.defenseBy.append(D3_RCF)
T1562_003.defenseBy.append(D3_RCF)
T1562_003.defenseBy.append(D3_RF)
T1562_004.defenseBy.append(D3_RCF)
T1562_009.defenseBy.append(D3_RCF)
T1564.defenseBy.append(D3_RCF)
T1564.defenseBy.append(D3_RS)
T1564.defenseBy.append(D3_RD)
T1564.defenseBy.append(D3_RF)
T1564_002.defenseBy.append(D3_RF)
T1564_003.defenseBy.append(D3_RD)
T1564_003.defenseBy.append(D3_RF)
T1564_005.defenseBy.append(D3_RD)
T1564_006.defenseBy.append(D3_RF)
T1564_006.defenseBy.append(D3_RS)
T1564_007.defenseBy.append(D3_RF)
T1564_008.defenseBy.append(D3_RCF)
T1565.defenseBy.append(D3_RF)
T1565_001.defenseBy.append(D3_RF)
T1565_003.defenseBy.append(D3_RF)
T1566.defenseBy.append(D3_RE)
T1566.defenseBy.append(D3_RF)
T1566_001.defenseBy.append(D3_RE)
T1566_001.defenseBy.append(D3_RF)
T1566_002.defenseBy.append(D3_RE)
T1566_002.defenseBy.append(D3_RF)
T1566_003.defenseBy.append(D3_RF)
T1573.defenseBy.append(D3_RF)
T1573_002.defenseBy.append(D3_RF)
T1574.defenseBy.append(D3_RCF)
T1574.defenseBy.append(D3_RS)
T1574.defenseBy.append(D3_RF)
T1574_001.defenseBy.append(D3_RF)
T1574_002.defenseBy.append(D3_RF)
T1574_004.defenseBy.append(D3_RF)
T1574_005.defenseBy.append(D3_RS)
T1574_006.defenseBy.append(D3_RF)
T1574_007.defenseBy.append(D3_RF)
T1574_008.defenseBy.append(D3_RF)
T1574_009.defenseBy.append(D3_RF)
T1574_010.defenseBy.append(D3_RS)
T1574_011.defenseBy.append(D3_RCF)
T1574_012.defenseBy.append(D3_RCF)
T1574_012.defenseBy.append(D3_RF)
T1614.defenseBy.append(D3_RCF)
T1614.defenseBy.append(D3_RD)
T1614_001.defenseBy.append(D3_RCF)
T1614_001.defenseBy.append(D3_RD)
T1615.defenseBy.append(D3_RCF)






# Lưu ontology
onto.save()
