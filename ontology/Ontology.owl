<?xml version="1.0"?>
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
         xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
         xmlns:owl="http://www.w3.org/2002/07/owl#"
         xml:base="http://test.org/Ontology.owl"
         xmlns="http://test.org/Ontology.owl#">

<owl:Ontology rdf:about="http://test.org/Ontology.owl"/>

<owl:ObjectProperty rdf:about="#isSubTechniqueOf">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Technique"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubDeceiveOf">
  <rdfs:domain rdf:resource="#Deceive"/>
  <rdfs:range rdf:resource="#Deceive"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubModelOf">
  <rdfs:domain rdf:resource="#Model"/>
  <rdfs:range rdf:resource="#Model"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubHardenOf">
  <rdfs:domain rdf:resource="#Harden"/>
  <rdfs:range rdf:resource="#Harden"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubDetectOf">
  <rdfs:domain rdf:resource="#Detect"/>
  <rdfs:range rdf:resource="#Detect"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubIsolateOf">
  <rdfs:domain rdf:resource="#Isolate"/>
  <rdfs:range rdf:resource="#Isolate"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubEvictOf">
  <rdfs:domain rdf:resource="#Evict"/>
  <rdfs:range rdf:resource="#Evict"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubRestoreOf">
  <rdfs:domain rdf:resource="#Restore"/>
  <rdfs:range rdf:resource="#Restore"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isSubDetectionOf">
  <rdfs:domain rdf:resource="#Detection"/>
  <rdfs:range rdf:resource="#Detection"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#accomplishedTactic">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Tactic"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#preventedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Mitigation"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#identifiedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Detection"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasDefense">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Defense"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeDetectedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Detect"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeIsolatedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Isolate"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeDeceivedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Deceive"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeModeledBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Model"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeEvictedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Evict"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeHardenedBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Harden"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mayBeRestoredBy">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="#Restore"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#mapToCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#Technique"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasCAPEC">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#hasCWE">
  <rdfs:domain rdf:resource="#CVE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isParentOfCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isCanPrecedeCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isCanFollowCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isChildOfCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isPeerOfCAPEC">
  <rdfs:domain rdf:resource="#CAPEC"/>
  <rdfs:range rdf:resource="#CAPEC"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isParentOfCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isCanPrecedeCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isCanFollowCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isChildOfCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isPeerOfCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isMemberOfCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:ObjectProperty rdf:about="#isCanAlsoBeCWE">
  <rdfs:domain rdf:resource="#CWE"/>
  <rdfs:range rdf:resource="#CWE"/>
</owl:ObjectProperty>

<owl:DatatypeProperty rdf:about="#hasID">
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasName">
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasDescription">
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasMitigation">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasDetection">
  <rdfs:domain rdf:resource="#Technique"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:DatatypeProperty rdf:about="#hasType">
  <rdfs:domain rdf:resource="#Isolate"/>
  <rdfs:domain rdf:resource="#Restore"/>
  <rdfs:domain rdf:resource="#Deceive"/>
  <rdfs:domain rdf:resource="#Model"/>
  <rdfs:domain rdf:resource="#Evict"/>
  <rdfs:domain rdf:resource="#Detect"/>
  <rdfs:domain rdf:resource="#Harden"/>
  <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
</owl:DatatypeProperty>

<owl:Class rdf:about="#Tactic">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#Technique">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#Defense">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#Deceive">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Model">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Harden">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Detect">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Isolate">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Evict">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Restore">
  <rdfs:subClassOf rdf:resource="#Defense"/>
</owl:Class>

<owl:Class rdf:about="#Mitigation">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#Detection">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#CAPEC">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#CWE">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:Class rdf:about="#CVE">
  <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
</owl:Class>

<owl:NamedIndividual rdf:about="#TA0043">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0043</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reconnaissance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to gather information they can use to plan future operations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0042">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0042</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Resource Development</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to establish resources they can use to support operations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0001">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to get into your network.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0002">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to run malicious code.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0003">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Persistence</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to maintain their foothold.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0004">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Escalation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to gain higher-level permissions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0005">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Defense Evasion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to avoid being detected.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0006">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to steal account names and passwords.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0007">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to figure out your environment.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0008">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lateral Movement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to move through your environment.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0009">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to gather data of interest to their goal.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0011">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to communicate with compromised systems to control them.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0010">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to steal data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#TA0040">
  <rdf:type rdf:resource="#Tactic"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TA0040</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impact</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary is trying to manipulate, interrupt, or destroy your systems and data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System settings can prevent applications from running that haven't been downloaded from legitimate repositories which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised. Additionally, the number of programs with setuid or setgid bits set should be minimized across a system. Ensuring that the sudo tty_tickets setting is enabled will prevent this leakage across tty sessions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove users from the local administrator group on systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile. Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Also look for any process API calls for behavior that may be indicative ofProcess Injection. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. Tools such as Meterpreter, Cobalt Strike, and Empire carry out automated steps to Get System, which is the same as switching over to the System user account. Most of these tools utilize multiple techniques to try and attain SYSTEM: in the first technique, they create a named pipe and connects an instance of cmd.exe to it, which allows them to impersonate the security context of cmd.exe, which is SYSTEM. In the second technique, a malicious DLL is injected into a process that is running as SYSTEM; the injected DLL steals the SYSTEM token and applies it where necessary to escalate privileges. This analytic looks for both of these techniques.Analytic 1 : Get System Elevationsuspicious_processes = filter processes where ( (parent_image_path == C:WindowsSystem32services.exe AND image_path == C:WindowsSystem32cmd.exe AND command_line == echo AND command_line == pipe*) OR (image_path == C:WindowsSystem32rundll32.exe AND command_line == ,a /p:*))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Log cloud API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command runas.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of therunascommand. Detailed command-line logging is not enabled by default in Windows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g.,LogonUser,DuplicateTokenEx, andImpersonateLoggedOnUser). Please see the referenced Windows API pages for more information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1531">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0002_003"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1531</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Access Removal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and or perform aÂ System Shutdown RebootÂ to set malicious changes into place.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary`s attempt to remove an account (ex: Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary`s attempt to remove access to an account:Event ID 4723 - An attempt was made to change an account`s passwordEvent ID 4724 - An attempt was made to reset an account`s passwordEvent ID 4725 - A user account was disabledAlerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1087">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1087</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g.,Â Valid Accounts).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; Windows Components &gt; Credential User Interface: E numerate administrator accounts on elevation. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0026_003"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0036_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may manipulate accounts to maintain access to victim systems. Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect domain controllers by ensuring proper security configuration for critical servers to limit access by potentially unnecessary protocols and services, such as SMB file sharing.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that low-privileged user accounts do not have permissions to modify accounts or account-related policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as theauthorized_keysor/etc/ssh/sshd_config).Monitor executed commands and arguments of suspicious commands (such asAdd-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files related to account settings, such as/etc/ssh/sshd_configand the authorized_keys file for each user on a system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes indicative of modifying account settings, such as those that modifyauthorized_keysor/etc/ssh/sshd_configfiles.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1650">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1650</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems. In some cases, adversary groups may form partnerships to share compromised systems with each other.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0038_001"/>
  <identifiedBy rdf:resource="#DS0038_002"/>
  <identifiedBy rdf:resource="#DS0038_003"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services. Additionally, botnets are available for rent or purchase.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for queried domain name system (DNS) registry data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged domain name system (DNS) data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1595">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1595</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Scanning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1557">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1557</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary-in-the-Middle</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such asÂ Network SniffingÂ orÂ Transmitted Data Manipulation. By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable legacy network protocols that may be used to intercept network traffic if applicable, especially those that are not needed within an environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use network appliances and host-based security software to block network traffic that is not necessary within the environment, such as legacy protocols that may be leveraged for AiTM conditions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Additionally, block DHCPv6 traffic and incoming router advertisements, especially if IPv6 is not commonly used in the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to network infrastructure and resources that can be used to reshape traffic or otherwise produce AiTM conditions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the applicationâ€™s certificate does not match the one expected by the host.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for anomalies associated with known AiTM behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as remote logins or process creation events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor HKLMSoftwarePoliciesMicrosoftWindows NTDNSClient for changes to the EnableMulticast DWORD value. A value of 0 indicates LLMNR is disabled.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1071">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_FC"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1071</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Layer Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using OSI application layer protocols to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1010">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Window Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.Note: Commands can also be obtained from Payload event field for PowerShell event id 4103. For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management.Analytic 1 - Suspicious Commandssuspicious_commands = filter commands where event_id == 4103 AND ((command_line LIKE '%Get-Process%' AND command_line_parameter LIKE '%mainWindowTitle%'))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asGetForegroundWindow()) that may attempt to get a listing of open application windows.GetForegroundWindowapi returns a handle to the foreground window (the window with which the user is currently working). Other API calls relevant to Local Group discovery includeGetProcessesandGetForegroundWindow.GetProcessesapi returns an array of type Process that represents all the process resources running on the local computer.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.Analytic 1 - Suspicious API Callssuspicious_apis = filter processes where ApiName LIKE '%GetProcesses%' OR ApiName LIKE '%GetForegroundWindow%'</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Suspicious Processessuspicious_processes = filter process where (event_id == 1 OR event_id == 4688) AND (command_line LIKE '%Get-Process%' AND command_line LIKE '%mainWindowTitle%')</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1560">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1560</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Archive Collected Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may compress and or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System scans can be performed to identify unauthorized archival utilities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1123">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_IDA"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1123</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audio Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that can leverage a computerâ€™s peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with leveraging a computer peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1119">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1119</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automated Collection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of aÂ Command and Scripting InterpreterÂ to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through Brute Force techniques.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to collect internal data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files (e.g., .pdf, .docx, .jpg, etc.) viewed for collecting internal data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1020">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1020</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automated Exfiltration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1197">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_IPCTA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1197</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BITS Jobs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed throughÂ Component Object ModelÂ (COM). BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider reducing the default BITS job lifetime in Group Policy or by editing the JobInactivityTimeout and MaxDownloadTime Registry values in HKEY_LOCAL_MACHINE Software Policies Microsoft Windows BITS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider limiting access to the BITS interface to specific users or groups.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments from the BITSAdmin tool (especially the â€˜Transferâ€™, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)Admin logs, PowerShell logs, and the Windows Event log for BITS activity.Also consider investigating more detailed information about jobs by parsing the BITS job database.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose).Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 is oriented around looking for the creation of Microsoft Background Intelligent Transfer Service utility (bitsadmin.exe) processes that schedule a BITS job to persist on an endpoint. The analytic identifies the command-line parameters used to create, resume or add a file to a BITS job; these are typically seen combined in a single command-line or executed in sequence.Analytic 2 identifies Microsoft Background Intelligent Transfer Service utilitybitsadmin.exeusing thetransferparameter to download a remote object. In addition, look fordownloadoruploadon the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Network connection or file modification events related will not spawn or create frombitsadmin.exe, but the artifacts will appear in a parallel process ofsvchost.exewith a command-line similar tosvchost.exe -k netsvcs -s BITS. Itâ€™s important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can usebitsadmin /list /verboseto list out the jobs during investigation.Analytic 1 - BITS Job Persistenceprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe =C:WindowsSystem32bitsadmin.exe AND (command_line == create OR command_line == addfile OR command_line == setnotifyflags OR command_line == setnotifycmdline OR command_line == setminretrydelay OR command_line == setcustomheaders OR command_line == resume))Analytic 2 : BITSAdmin Download Filebitsadmin_commands = filter processes where ( exe =C:WindowsSystem32bitsadmin.exe AND command_line =transfer)output bitsadmin_commands</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BITS runs as a service and its status can be checked with the Sc query utility (sc query bits).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0008_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon. These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict write access to logon scripts to specific administrators.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys for logon scripts that may lead to persistence.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry keyHKEY_CURRENT_USEREnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path.Analytic 1 - Boot or Logon Initialization Scriptslogon_script_key_processes = filter processes where ( command_line = regaddEnvironmentUserInitMprLogonScript)registry = search (Registry:Add OR Registry:Edit)registry_logon_key_events = filter registry where ( key = EnvironmentUserInitMprLogonScript)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1176">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1033"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1176</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser Extensions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set a browser extension allow or deny list as appropriate for your security policy. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Only install browser extensions from trusted sources that can be verified. Browser extensions for some browsers can be controlled through Group Policy. Change settings to prevent the browser from installing extensions without sufficient permissions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure operating systems and browsers are using the most current version.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1217">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1217</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser Information Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships interests, social media, etc.) as well as details about internal network resources such as servers, tools dashboards, or other related infrastructure.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual access to stored browser data, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes with arguments that may be associated with gathering browser information, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1185">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1185</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser Session Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and Bypass User Account Control opportunities can limit the exposure to this technique.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Close all browser sessions regularly and when they are no longer needed.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor forProcess Injectionagainst browser applications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1110">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1110</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1612">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0007_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1612</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Build Image on Host</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remoteÂ buildÂ request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit images deployed within the environment to ensure they do not contain any malicious components.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit communications with the container service to local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API on port 2375. Instead, communicate with the Docker API over TLS on port 2376.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1115">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1115</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Clipboard Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may collect data stored in the clipboard from users copying information within or between applications.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1651">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1651</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Administration Command</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse cloud management services to execute commands within virtual machines or hybrid-joined devices. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. Similarly, in Azure AD environments, Microsoft Endpoint Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to the Azure AD.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of cloud accounts with permissions to remotely execute commands on virtual machines, and ensure that these are not used for day-to-day operations. In Azure, limit the number of accounts with the roles Azure Virtual Machine Contributer and above, and consider using temporary Just-in-Time (JIT) roles to avoid permanently assigning privileged access to virtual machines. In Azure AD, limit the number of Global and Intune administrators to only those required. In AWS, limit users with permission to execute the ssm:SendCommand action, and use tags to restrict the number of machines those users can execute commands on.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor commands and scripts executed on virtual machines. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of executed jobs are available in theC:PackagesPluginsMicrosoft.CPlat.Core.RunCommandWindowsdirectory on Windows virtual machines.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor virtual machines for the creation of processes associated with cloud virtual machine agents. In Windows-based Azure machines, monitor for the WindowsAzureGuestAgent.exe process.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1580">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0010_004"/>
  <identifiedBy rdf:resource="#DS0030_003"/>
  <identifiedBy rdf:resource="#DS0020_003"/>
  <identifiedBy rdf:resource="#DS0034_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1580</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Infrastructure Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for API calls and other potentially unusual activity related to cloud data object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for API calls and other potentially unusual activity related to cloud instance enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for API calls and other potentially unusual activity related to snapshot enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for API calls and other potentially unusual activity related to block object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1538">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1538</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Dashboard</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across cloud service management consoles.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlate other security systems with login information, such as user accounts, IP addresses, and login names.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1526">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0025_002"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1526</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1619">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0010_001"/>
  <identifiedBy rdf:resource="#DS0010_004"/>
  <mayBeHardenedBy rdf:resource="#D3_DENCR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1619</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Object Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage. Similar toÂ File and Directory DiscoveryÂ on a local host, after identifying available storage services (i.e.Â Cloud Infrastructure Discovery) adversaries may access the contents objects stored in cloud infrastructure.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for API calls used for file or object enumeration for unusual activity. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor ofÂ Unix ShellÂ while Windows installations include theÂ Windows Command ShellÂ andÂ PowerShell.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Visual Basic and JavaScript scripts from executing potentially malicious downloaded content .</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Where possible, only permit execution of signed scripts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable or remove any unnecessary or unused shells or interpreters.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate. For example, PowerShell Constrained Language mode can be used to restrict access to sensitive or otherwise dangerous language elements such as those used to execute arbitrary Windows APIs or files (e.g., Add-Type).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When PowerShell is necessary, consider restricting PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">PowerShell JEA (Just Enough Administration) may also be used to sandbox administration and limit what commands admins/users can execute through remote PowerShell sessions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (ex: JScript.dll or vbscript.dll).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows Event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1092">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0016_001"/>
  <identifiedBy rdf:resource="#DS0016_002"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1092</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Communication Through Removable Media</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement byÂ Replication Through Removable Media. Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Autoruns if it is unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disallow or restrict removable media at an organizational policy level if they are not required for business operations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected file access on removable media</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes when removable media is mounted.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1586">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0021_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1586</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e.Â Establish Accounts), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1554">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1045"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1554</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Client Software Binary</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all application component binaries are signed by the correct application developers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of client software binaries to establish persistent access to systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes to client software that do not correlate with known software or patch cycles.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0038_001"/>
  <identifiedBy rdf:resource="#DS0038_002"/>
  <identifiedBy rdf:resource="#DS0038_003"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle. Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for queried domain name system (DNS) registry data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged domain name system (DNS) data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1609">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1609</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container Administration Command</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove unnecessary tools and software from containers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use read-only containers, read-only file systems, and minimal images when possible to prevent the execution of commands. Where possible, also consider using application control and software restriction tools (such as those provided by SELinux) to restrict access to files, processes, and system calls in containers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers and using the NodeRestriction admission controller to deny the kublet access to nodes and pods outside of the node it belongs to. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce authentication and role-based access control on the container service to restrict users to the least privileges required. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1613">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1035"/>
  <identifiedBy rdf:resource="#DS0032_002"/>
  <identifiedBy rdf:resource="#DS0014_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1613</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container and Resource Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least privilege by limiting dashboard visibility to only the required users. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for actions that could be taken to gather information about pods, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1136">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeDetectedBy rdf:resource="#D3_LAM"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1136</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect domain controllers by ensuring proper security configuration for critical servers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of accounts with permissions to create other accounts. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes associated with account creation, such as net.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1543">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1033"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1543</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create or Modify System Process</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services. On macOS, launchd processes known asÂ Launch DaemonÂ andÂ Launch AgentÂ are run to finish system initialization and load user specific parameters.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system. On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed drivers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce registration and execution of only legitimately signed service drivers where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict software installation to trusted repositories only and be cautious of orphaned software packages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that Driver Signature Enforcement is enabled to restrict unsigned drivers from being installed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict read/write access to system-level process files to only select privileged users who have a legitimate need to manage system services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to files associated with system-level processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">New, benign system processes may be created during installation of new software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0025_002"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of accounts and services with permission to query information from password stores to only those required. Ensure that accounts and services with permissions to query password stores only have access to the secrets they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from cloud secrets managers, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed that may search for common password storage locations to obtain user credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may search for common password storage locations to obtain user credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may search for common password storage locations to obtain user credentials.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1485">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0010_003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0007_002"/>
  <identifiedBy rdf:resource="#DS0030_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0020_002"/>
  <identifiedBy rdf:resource="#DS0034_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1485</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Destruction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives. Common operating system file deletion commands such asÂ delÂ andÂ rmÂ often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct fromÂ Disk Content WipeÂ andÂ Disk Structure WipeÂ because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a cloud storage infrastructure, such as theDeleteDBClusterandDeleteGlobalClusterevents in AWS, or a high quantity of data deletion events, such asDeleteBucket. Many of these events within a short period of time may indicate malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion to a file (ex: Sysmon EID 23)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:WindowsSystem32.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a virtual machine image (ex: Azure Compute Service Images DELETE)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of an instance (ex: instance.delete within GCP Audit Logs)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a snapshot (ex: AWS delete-snapshot)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a cloud volume (ex: AWS delete-volume)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1132">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1132</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems. Some data encoding systems may also result in data compression, such as gzip.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols and packet contents.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1486">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0010_006"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1486</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Encrypted for Impact</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable cloud-delivered protection and Attack Surface Reduction (ASR) rules to block the execution of files that resemble ransomware. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for regularly taking and testing data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery. Consider enabling versioning in cloud environments to maintain backup copies of storage objects.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made in cloud environments for events that indicate storage objects have been anomalously modified.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files in user directories.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files in user directories.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected network shares being accessed on target systems or on large numbers of systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1530">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0010_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1530</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Cloud Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may access data from improperly secured cloud storage.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypt data stored at rest in cloud storage. Managed encryption keys can be rotated by most providers. At a minimum, ensure an incident response plan to storage breach includes rotating the keys and test for impact on client applications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP allowlisting along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use access control lists on storage systems and objects.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure user permissions groups and roles for access to cloud storage. Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access. Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1602">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1602</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Configuration Repository</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure SNMPv3 to use the highest level of security (authPriv) available.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply extended ACLs to block unauthorized protocols outside the trusted network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segregate SNMP traffic on a separate management network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allowlist MIB objects and implement SNMP views.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Keep system images and software updated and migrate to SNMPv3.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1213">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1213</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Information Repositories</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of accounts and privileges for critical and sensitive repositories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop and publish policies that define acceptable information to be stored in repositories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents.Sharepoint audit logging can also be configured to report when a user shares a resource.The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter.Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1005">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Local System</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can restrict access to sensitive data and detect sensitive data that is unencrypted.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Data may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1039">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1039</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Network Shared Drive</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality withinÂ cmdÂ may be used to gather information.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) interacting with network shares.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected and abnormal accesses to network shares.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may search network shares on computers they have compromised to find files of interest. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares. Although there may be more native ways to detect detailed SMB events on the host, they can be extracted out of network traffic. With the right protocol decoders, port 445 traffic can be filtered and even the file path (relative to the share) can be retrieved.Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity. Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise.Analytic 1 - SMB Events Monitoringsmb_events = filter flow where (dest_port == 445 and protocol == smb)smb_events.file_name = smb_events.proto_info.file_name</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1025">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1025</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Removable Media</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality withinÂ cmdÂ may be used to gather information.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can restrict access to sensitive data and detect sensitive data that is unencrypted.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1565">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1565</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider encrypting important information to reduce an adversaryâ€™s ability to perform tailored data modifications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and manipulate backups.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure least privilege principles are applied to important information resources to reduce exposure to data manipulation risk.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for networks that solicits and obtains the configuration information of the queried device.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1001">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Obfuscation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1074">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1074</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Staged</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asÂ Archive Collected Data. Interactive command shells may be used, and common functionality withinÂ cmdÂ and bash may be used to copy data into a staging location.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1030">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1030</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Transfer Size Limits</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1622">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1622</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Debugger Evasion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and or analyze the execution of potential malware payloads.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor debugger logs for signs of abnormal and potentially malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asIsDebuggerPresent()) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1491">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1491</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Defacement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons forÂ DefacementÂ include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part ofÂ DefacementÂ in order to cause user discomfort, or to pressure compliance with accompanying messages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed visual content for internal or external enterprise networks.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for indication of unplanned service interruptions or unauthorized content changes.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1140">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1140</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deobfuscate/Decode Files or Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Obfuscated Files or InformationÂ to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications that attempt to hide artifacts. On Windows, Event ID 4663 (Security Log - An attempt was made to access an object) can be used to alert on suspicious file accesses (e.g., attempting to write to a file which shouldnâ€™t be further modified) that may coincide with attempts to hide artifacts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding an encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The analytic is oriented around the creation of CertUtil.exe processes, which may be used to encode and decode files, including PE and script code. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process.Analytic 1 - CertUtil with Decode Argumentprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe =C:WindowsSystem32certutil.exe AND command_line =decode)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1610">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0032_003"/>
  <identifiedBy rdf:resource="#DS0014_001"/>
  <identifiedBy rdf:resource="#DS0014_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1610</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deploy Container</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API, Kubernetes API Server, and container orchestration web applications. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least privilege by limiting container dashboard access to only the necessary users. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed containers that may deploy a container into an environment to facilitate execution or evade defenses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for activation or invocation of a container that may deploy a container into an environment to facilitate execution or evade defenses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed pods that may deploy a container into an environment to facilitate execution or evade defenses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to pods for unexpected modifications to settings and/or control data that may deploy a container into an environment to facilitate execution or evade defenses.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1587">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0004_001"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1587</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop Capabilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in the tracking of capabilities, such as certificates, in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of information to uncover other adversary infrastructure.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1652">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1652</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Device Driver Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function purpose of the host, present security tools (i.e.Â Security Software Discovery) or other defenses (e.g.,Â Virtualization Sandbox Evasion), as well as potential exploitable vulnerabilities (e.g.,Â Exploitation for Privilege Escalation).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands (lsmod,driverquery, etc.) with arguments highlighting potentially malicious attempts to enumerate device drivers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asEnumDeviceDrivers()) that may attempt to gather information about local device drivers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes (lsmod,driverquery.exe, etc.) for events that may highlight potentially malicious attempts to enumerate device drivers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for attempts to access information stored in the Registry about devices and their associated drivers, such as values underHKLMSYSTEMCurrentControlSetServicesandHKLMSYSTEMCurrentControlSetHardwareProfiles.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1006">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Direct Volume Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of behaviors related to efforts by an adversary to create backups, such as command execution or preventing API calls to backup related services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only accounts required to configure and manage backups have the privileges to do so. Monitor these accounts for unauthorized backup activity.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used throughPowerShell, additional logging of PowerShell scripts is recommended.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor handle opens on volumes that are made by processes to determine when they may be directly collecting data from logical drives.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of volume shadow copy and backup files, especially unexpected and irregular activity (relative to time, user, etc.).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1561">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_001"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1561</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disk Wipe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for direct access read/write attempts using the.notation.Monitor for unusual kernel driver installation activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1484">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_003"/>
  <identifiedBy rdf:resource="#DS0026_004"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1484</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Policy Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify the configuration settings of a domain to evade defenses and or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as BloodHound (version 1.5.1 and later).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed active directory objects, such as Windows EID 5137.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1482">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1482</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Trust Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain. Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conductÂ SID-History Injection,Â Pass the Ticket, andÂ Kerberoasting. Domain trusts can be enumerated using theÂ DSEnumerateDomainTrusts()Â Win32 API call, .NET methods, and LDAP. The Windows utilityÂ NltestÂ is known to be used by adversaries to enumerate domain trusts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Map the trusts within existing domains/forests and keep trust relationships to a minimum.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Employ network segmentation for sensitive domains..</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1189">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1189</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drive-by Compromise</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiringÂ Application Access Token.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. The risks of additional exploits and weaknesses in implementation may still exist for these types of systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all browsers and plugins kept updated can help prevent the exploit phase of this technique. Use modern browsers with security features turned on.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections to untrusted hosts that are used to send or receive data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for other unusual network traffic that may indicate additional tools transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence ofProcess Injectionfor attempts to hide execution, or evidence of Discovery.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1568">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1568</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dynamic Resolution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Malware researchers can reverse engineer malware variants that use dynamic resolution and determine future C2 infrastructure that the malware will attempt to contact, but this is a time and resource intensive effort.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1114">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_EHB"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_LLM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_PLM"/>
  <mayBeModeledBy rdf:resource="#D3_NNI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RNA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1114</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Collection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In an Exchange environment, Administrators can use Get-InboxRule / Remove-InboxRule and Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious auto-fowarding and transport rules. In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples includeX-MS-Exchange-Organization-AutoForwardedset to true,X-MailFwdByandX-Forwarded-To. TheforwardingSMTPAddressparameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.High volumes of emails that bear theX-MS-Exchange-Organization-AutoForwardedheader (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1573">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1020"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1573</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypted Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and or generated within malware samples configuration files.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1499">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1499</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Denial of Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1611">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1048"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0008_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0034_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1611</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Escape to Host</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider utilizing seccomp, seccomp-bpf, or a similar solution that restricts certain system calls such as mount. In Kubernetes environments, consider defining Pod Security Standards that limit container access to host process namespaces, the host network, and the host file system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove unnecessary tools and software from containers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use read-only containers, read-only file systems, and minimal images when possible to prevent the running of commands. Where possible, also consider using application control and software restriction tools (such as those provided by SELinux) to restrict access to files, processes, and system calls in containers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure containers are not running as root by default and do not use unnecessary privileges or mounted components. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the installation of kernel modules that could be abused to escape containers on a host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected usage of syscalls such asmountthat may indicate an attempt to escape from a privileged container to host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cluster-level (Kubernetes) data and events associated with changing containers` volume configurations.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1585">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0021_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1585</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Phishing).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0025_004"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_USICA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the creation and modification of cloud resources that may be abused for persistence, such as functions and workflows monitoring cloud events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed WMI Objects that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1480">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1055"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1480</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Guardrails</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversaryâ€™s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local external IP addresses.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Guardrails likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised. If targeted, efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior if compromised.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1048">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0010_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1048</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Alternative Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being uploaded via web browsers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network. Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP allowlisting along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use access control lists on cloud storage systems and objects.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure user permissions groups and roles for access to cloud storage. Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access. Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud-based file hosting services, such as Google Drive and Microsoft OneDrive, for unusual instances of file downloads â€“ for example, many downloads by a single user in a short period of time. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. Additionally, data loss prevention policies can be defined to detect and alert on exfiltration events on particularly sensitive data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1041">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1041</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over C2 Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being sent over unencrypted protocols.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1011">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Other Network Medium</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel in local computer security settings or by group policy if it is not needed within an environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent the creation of new network adapters where possible.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.Analytic 1 - Windows Process Network Connectionnetcon_from_sysproc = filter process_open_sockets where remote_port != 0 AND proc_name!= '';</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1052">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1034"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_002"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1052</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Physical Medium</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being copied to physical mediums.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if they are not required for business operations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the use of USB devices and removable media within a network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data via a physical medium, such as a removable drive.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes when removable media is mounted.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1567">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1567</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Web Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks or other features that could be abused to exfiltrate data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections to web and cloud services associated with abnormal or non-browser processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1190">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1016"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_DQSA"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1190</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploit Public-Facing Application</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application isolation will limit what other processes and system features the exploited target can access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Application Firewalls may be used to limit exposure of applications to prevent exploit traffic from reaching the application.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly by employing patch management for externally exposed applications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly scan externally facing systems for vulnerabilities and establish procedures to rapidly patch systems when critical vulnerabilities are discovered through scanning and through public disclosure.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1203">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SSC"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SFCV"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1203</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation for Client Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.  </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Other types of virtualization and application microsegmentation may also mitigate the impact of client-side exploitation. Risks of additional exploits and weaknesses in those systems may still exist. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1212">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1019"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_SSC"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SFCV"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1212</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation for Credential Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Â Credentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain access to systems. One example of this is MS14-068, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions. Exploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application developers should consider taking measures to validate authentication requests by enabling one-time passwords, providing timestamps or sequence numbers for messages sent, using digital signatures, and/or using random session keys.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly by employing patch management for internal enterprise endpoints and servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1211">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1019"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SSC"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SFCV"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1211</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation for Defense Evasion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Â Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly by employing patch management for internal enterprise endpoints and servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1068">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1019"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SSC"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SFCV"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1068</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation for Privilege Escalation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider blocking the execution of known vulnerable drivers that adversaries may exploit to execute code in kernel mode. Validate driver block rules in audit mode to ensure stability prior to production deployment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly by employing patch management for internal enterprise endpoints and servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may exploit software vulnerabilities in an attempt to elevate privileges.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for an invocation of either spoolsv.exe or conhost.exe by a user, thus alerting us of any potentially malicious activity. A common way of escalating privileges in a system is by externally invoking and exploiting these executables, both of which are legitimate Windows applications.Analytic 1 - Unusual Child Process for spoolsv.exe or connhost.exeprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe ==C:WindowsSystem32spoolsv.exe OR exe ==C:WindowsSystem32conhost.exe) AND parent_image_path == C:WindowsSystem32cmd.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1210">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1016"/>
  <preventedBy rdf:resource="#M1019"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1050"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SSC"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SFCV"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1210</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Remote Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.Â A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make it difficult for adversaries to advance their operation through exploitation of undiscovered or unpatched vulnerabilities by using sandboxing. Other types of virtualization and application microsegmentation may also mitigate the impact of some types of exploitation. Risks of additional exploits and weaknesses in these systems may still exist. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Minimize available services to only those that are necessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.  Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.  Many of these protections depend on the architecture and target application binary for compatibility and may not work for all software or services targeted.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Minimize permissions and access for service accounts to limit impact of exploitation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop a robust cyber threat intelligence capability to determine what types and levels of threat may use software exploits and 0-days against a particular organization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly by employing patch management for internal enterprise endpoints and servers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly scan the internal network for available services to identify new and potentially vulnerable services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1133">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1133</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Remote Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage external-facing remote services to initially access and or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such asÂ Windows Remote ManagementÂ andÂ VNCÂ can also be used externally.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable or block remotely available services that may be unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to remote services through centrally managed concentrators such as VPNs and other managed remote access systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of Multi-Factor Authentication Interception techniques for some two-factor authentication implementations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for detecting adversary use ofValid Accountsfor authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may use Valid Accounts to access and/or persist within a network using External Remote Services. Use of External Remote Services may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using External Remote Services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1008">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Fallback Channels</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery.Analytic 1 - Windows Process Network Connectionnetcon_from_sysproc = filter process_open_sockets where remote_port != 0 AND proc_name!= '';</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1083">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1083</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File and Directory Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information fromÂ File and Directory DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1222">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1222</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File and Directory Permissions Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applying more restrictive permissions to files and directories could prevent adversaries from modifying their access control lists. Additionally, ensure that user settings regarding local and remote symbolic links are properly set or disabled where unneeded.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and investigate attempts to modify ACLs and file/directory ownership.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1495">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1046"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1495</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware Corruption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and or the system. Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check the integrity of the existing BIOS and device firmware to determine if it is vulnerable to modification.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent adversary access to privileged accounts or access necessary to replace system firmware.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Patch the BIOS and other firmware as necessary to prevent successful use of known vulnerabilities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to the firmware for unexpected modifications to settings and/or data.Log attempts to read/write to BIOS and compare against known patching behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1187">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1187</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forced Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block SMB traffic from exiting an enterprise network with egress filtering or by blocking TCP ports 139, 445 and UDP port 137. Filter or block WebDAV protocol traffic from exiting the network. If access to external resources over SMB and WebDAV is necessary, then traffic should be tightly limited with allowlisting.  </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files used to gather credentials when the files are rendered</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.Analytic 1 - SMB Session Setupssmb_setup = filter flow where (dest_port == 445 and protocol == smb.setup)smb_setup.user = smb_write.proto_info.user_namesmb_setup.target_host = smb_write.proto_info.hostname</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1606">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0006_001"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1606</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forge Web Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict permissions and access to the AD FS server to only originate from privileged access workstations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure browsers/applications to regularly delete persistent web credentials (such as cookies).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles. In AWS environments, prohibit users from calling the sts:GetFederationToken API unless explicitly required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.Additionally, detect on unusual API calls to generate access tokens, such assts:GetFederationTokenin AWS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1592">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1592</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Host Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1589">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1589</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Identity Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1591">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1591</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Org Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions departments, specifics of business operations, as well as the roles and responsibilities of key employees.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1615">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0026_002"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1615</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group Policy Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network pathÂ  &lt;DOMAIN&gt; SYSVOL &lt;DOMAIN&gt; Policies .</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal LDAP queries with filters forgroupPolicyContainerand high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious use ofgpresult. Monitor for the use of PowerShell functions such asGet-DomainGPOandGet-DomainGPOLocalGroupand processes spawning with command-line arguments containingGPOLocalGroup.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1200">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1034"/>
  <preventedBy rdf:resource="#M1035"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0016_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1200</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Additions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e.Â Replication Through Removable Media), more robust hardware additions can be used to introduce new functionalities and or features into a system that can then be abused.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish network access control policies, such as using device certificates and the 802.1x standard.  Restrict use of DHCP to registered devices to prevent unregistered devices from communicating with trusted systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block unknown devices and accessories by endpoint security configuration and monitoring agent.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_USICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_DENCR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In an Exchange environment, Administrators can use Get-InboxRule / Remove-InboxRule and Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious inbox and transport rules.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1044"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When possible, include hash values in manifest files to help prevent side-loading of malicious libraries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Install software in write-protected locations. Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard library folders.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disallow loading of remote DLLs. This is included by default in Windows Server 2012+ and is available by patch for XP+ and Server 2003+.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable Safe DLL Search Mode to force search for system DLLs in directories with greater restrictions (e.g. %SYSTEMROOT%)to be used before local directory DLLs (e.g. a user's home directory)</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The Safe DLL Search Mode can be enabled via Group Policy at Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; MSS (Legacy): MSS: (SafeDllSearchMode) Enable Safe DLL search mode. The associated Windows Registry key for this is located at HKLM SYSTEM CurrentControlSet Control Session Manager SafeDLLSearchMode</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly to include patches that fix DLL side-loading vulnerabilities.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System] to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0025_001"/>
  <identifiedBy rdf:resource="#DS0025_004"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0018_001"/>
  <identifiedBy rdf:resource="#DS0018_004"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <identifiedBy rdf:resource="#DS0009_006"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <identifiedBy rdf:resource="#DS0024_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SYSVA"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check account role permissions to ensure only expected users and roles have permission to modify defensive tools and settings.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To ensure Audit rules can not be modified at runtime, add the auditctl -e 2 as the last command in the audit.rules files. Once started, any attempt to change the configuration in this mode will be audited and denied. The configuration can only be changed by rebooting the machine.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate, especially regarding the execution of tools outside of the organization's security policies (such as rootkit removal tools) that have been abused to impair system defenses. Ensure that only approved security applications are used and running on enterprise systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security/logging services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security/logging services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing policies on internal web servers, such HTTP Strict Transport Security, that enforce the use of HTTPS/network traffic encryption to prevent insecure connections.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging and DeleteTrail. In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink. In Azure, monitor for az monitor diagnostic-settings delete. Additionally, a sudden loss of a log source may indicate that it has been disabled.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes made to cloud services for unexpected modifications to settings and/or data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for missing log files hosts and services with known active periods.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes made to configuration files that contain settings for logging and defensive tools.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the abnormal execution of API functions associated with system logging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using another process or third-party tools, monitor for modifications or access to system processes associated with logging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry edits for modifications to services and startup programs that correspond to security tools.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1525">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0007_001"/>
  <identifiedBy rdf:resource="#DS0007_003"/>
  <identifiedBy rdf:resource="#DS0007_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1525</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implant Internal Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. UnlikeÂ Upload Malware, this technique focuses on adversaries implanting an image in a registry within a victimâ€™s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Several cloud service providers support content trust models that require container images be signed by trusted sources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor interactions with images and containers by users to identify ones that are added anomalously.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline virtual machine images to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor interactions with images and containers by users to identify ones that are modified anomalously.In containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0018_004"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_003"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0002_003"/>
  <identifiedBy rdf:resource="#DS0024_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversaryâ€™s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for abnormal modifications to application settings, such as the creation of malicious Exchange transport rules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary`s attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1202">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1202</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indirect Command Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invokingÂ cmd. For example,Â Forfiles, the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from aÂ Command and Scripting Interpreter, Run window, or via scripts.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1105">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1105</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ingress Tool Transfer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such asÂ ftp. Once present, adversaries may also transfer spread tools between victim devices within a compromised environment (i.e.Â Lateral Tool Transfer).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for suspicious activity associated with downloading external content.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for file creation and files transferred into the network</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1490">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0010_003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <identifiedBy rdf:resource="#DS0020_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1490</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inhibit System Recovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery. This may deny access to available backups and recovery options.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery. In cloud environments, enable versioning on storage objects where possible, and copy backups to other accounts or regions to isolate them from the original copies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider technical controls to prevent the disabling of services or deletion of files involved in system recovery. Additionally, ensure that WinRE is enabled using the following command: reagentc /enable.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the user accounts that have access to backups to only those required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a cloud storage objects (ex: AWSdelete-object), especially those associated with cloud backups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such asvssadmin,wbadmin, andbcdedit. After compromising a network of systems, threat actors often try to delete/resize Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies. This action is often employed by ransomware, may lead to a failure in recovering systems after an attack. The pseudo code detection focus on Windows Security and Sysmon process creation (4688 and 1). The use of wmic to delete shadow copy generates WMI-Activity Operationnal 5857 event and could generate 5858 (if the operation fails). These 2 EventIDs could be interesting when attackers use wmic without process creation and/or for forensics.Analytic 1 - Detecting Shadow Copy Deletion or Resizedeleted_copy = filter processes where ((event_id =4688 OR event_id =1) (CommandLine=vssadmindeleteshadows OR CommandLine=wmicshadowcopydelete OR CommandLine=vssadminresizeshadowstorage)) OR (event_id =5857 ProviderName=MSVSS__PROVIDER) OR (event_id =5858 Operation=Win32_ShadowCopy)Analytic 2 - BCDEdit Failure Recovery Modificationbcdedit_commands = filter processes where ( exe = C:WindowsSystem32bcdedit.exe AND command_line=recoveryenabled )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the status of services involved in system recovery.Note: For Windows, Event ID 7040 can be used to alert on changes to the start type of a service (e.g., going from enabled at startup to disabled) associated with system recovery.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of snapshots (ex: AWSdelete-snapshot), especially those associated with cloud backups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the registry for changes associated with system recovery features (ex: the creation ofHKEY_CURRENT_USERSoftwarePoliciesMicrosoftPreviousVersionsDisableLocalPage).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1056">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_IDA"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1056</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g.Â Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g.Â Web Portal Capture).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to access permissions and attributes</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes conducting malicious activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys or values for unexpected modifications</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1559">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1559</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-Process Communication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable the Hardened Runtime capability when developing applications. Do not include the com.apple.security.get-task-allow entitlement with the value set to any variation of true.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all COM alerts and Protected View are enabled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution.  Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Classes  AppID  {AppID_GUID} associated with the process-wide security of individual COM applications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Microsoft  Ole associated with system-wide security defaults for all COM applications that do no set their own process-wide security. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that are associated with abuse of IPC mechanisms</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1534">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1534</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internal Spearphishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1570">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0023_001"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_FC"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1570</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lateral Tool Transfer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e.Â Ingress Tool Transfer) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing overÂ SMB Windows Admin SharesÂ to connected network shares or with authenticated connections viaÂ Remote Desktop Protocol.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using the host firewall to restrict file sharing communications such as SMB. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware or unusual data transfer over known tools and protocols like FTP can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files to/from a lateral tool transfer</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about named pipes on the system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as SMB.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual processes with internal network connections creating files on-system may be suspiciousNote: Analytic Event Type is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing &amp; decoding captured SMB2 network traffic. From a network traffic capture standpoint, itâ€™s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes).Analytic 1 - Basicsuspicious_smb_traffic = filter log_events where ((event_id == smb2_write_response OR event_id == smb1_write_response OR event_id == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) )Analytic 2 - Multiple Attempts (Time Window)suspicious_smb_traffic = filter log_events where ((event_id == smb2_write_response OR event_id == smb1_write_response OR event_id == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed processes that assist in lateral tool transfers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0007_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0003_002"/>
  <identifiedBy rdf:resource="#DS0003_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implement security controls on the endpoint, such as a Host Intrusion Prevention System (HIPS), to identify and prevent execution of potentially malicious files (such as those with mismatching file signatures).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require signed binaries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use file system access controls to protect folders such as C: Windows System32.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users not to open email attachments or click unknown links (URLs). Such training fosters more secure habits within your organization and will limit many of the risks.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Masquerading.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters u202E ,  [U+202E] , and  %E2%80%AE .Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.In Linux, thefilecommand may be used to check the file signature.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted file accesses that may be associate with Masquerading.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting disk and resource filenames for binaries, comparing that the InternalName, OriginalFilename, and/or ProductName match what is expected, could provide useful leads but may not always be indicative of malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls such asfork()which can be abused to masquerade or manipulate process metadata.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints.Analytic 1 - Suspicious Run Locationssuspicious_locations = filter process where ( image_path == :RECYCLER* or image_path == :SystemVolumeInformation* or image_path == %windir%Tasks* or image_path == %systemroot%debug</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for file names that are mismatched between the file name on disk and that of the binary PE metadata, this is a likely indicator that a binary was renamed after it was compiled.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.On Windows, Event ID 4698 (Security Log - A scheduled task was created) can be used to alert on the creation of scheduled tasks and provides metadata including the task name and task content (as XML).On Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on invocations of cron, and provides the metadata included when executing the command.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1025"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without usingÂ Valid Accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review authentication logs to ensure that mechanisms such as enforcement of MFA are functioning as intended.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically review the hybrid identity solution in use for any discrepancies. For example, review all Pass Through Authentication (PTA) agents in the Azure Management Portal to identify any unwanted or unapproved ones. If ADFS is in use, review DLLs and executable files in the AD FS and Global Assembly Cache directories to ensure that they are signed by Microsoft. Note that in some cases binaries may be catalog-signed, which may cause the file to appear unsigned when viewing file properties.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically review for new and unknown network provider DLLs within the Registry (HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Services &lt;NetworkProviderName&gt; NetworkProvider ProviderPath). Ensure only valid network provider DLLs are registered. The name of these can be found in the Registry key at HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order, and have corresponding service subkey pointing to a DLL at HKEY_LOCAL_MACHINE SYSTEM CurrentC ontrolSet Services &lt;NetworkProviderName&gt; NetworkProvider.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only valid network provider DLLs are registered. The name of these can be found in the Registry key at HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order, and have corresponding service subkey pointing to a DLL at HKEY_LOCAL_MACHINE SYSTEM CurrentC ontrolSet Services &lt;NetworkProviderName&gt; NetworkProvider.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Starting in Windows 11 22H2, the EnableMPRNotifications policy can be disabled through Group Policy or through a configuration service provider to prevent Winlogon from sending credentials to network providers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that AllowReversiblePasswordEncryption property is set to disabled unless there are application requirements.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit on-premises accounts with access to the hybrid identity solution in place. For example, limit Azure AD Global Administrator accounts to only those required, and ensure that these are dedicated cloud-only accounts rather than hybrid ones.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enabled features, such as Protected Process Light (PPL), for LSA.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict write access to the /Library/Security/SecurityAgentPlugins directory.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict Registry permissions to disallow the modification of sensitive Registry keys such as HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper policies are implemented to dictate the the secure enrollment and deactivation of authentication mechanisms, such as MFA, for user accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Azure AD Application Proxy Connector, which are typically generated only when a new Pass Through Authentication (PTA) Agent is added.If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious additions to the/Library/Security/SecurityAgentPluginsdirectory.Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious modification of files associated with authentication processes, such as configuration files and module paths (e.g./etc/pam.d/). Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files. Also monitor for access to certificates and cryptographic keys material.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for calls toOpenProcessthat can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).Monitor for abnormal API calls toNPLogonNotify()that may highlight malicious network provider DLLs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServices&lt;NetworkProviderName&gt;NetworkProvider).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to Registry entries for password filters (ex:HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsaNotification Packages) and correlate then investigate the DLL files these files reference.Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlNetworkProviderOrder) and correlate then investigate the DLL files these values reference.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0025_003"/>
  <identifiedBy rdf:resource="#DS0030_001"/>
  <identifiedBy rdf:resource="#DS0030_002"/>
  <identifiedBy rdf:resource="#DS0030_004"/>
  <identifiedBy rdf:resource="#DS0030_005"/>
  <identifiedBy rdf:resource="#DS0030_006"/>
  <identifiedBy rdf:resource="#DS0030_007"/>
  <identifiedBy rdf:resource="#DS0020_001"/>
  <identifiedBy rdf:resource="#DS0020_002"/>
  <identifiedBy rdf:resource="#DS0020_004"/>
  <identifiedBy rdf:resource="#DS0020_005"/>
  <identifiedBy rdf:resource="#DS0034_001"/>
  <identifiedBy rdf:resource="#DS0034_002"/>
  <identifiedBy rdf:resource="#DS0034_004"/>
  <identifiedBy rdf:resource="#DS0034_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline instances to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the deletion of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline snapshots to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the mounting of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the unexpected creation or presence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the unexpected deletion or absence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline cloud block storage volumes to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the unexpected changes to cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1112">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1024"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1112</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote access to the registry can be achieved viaWindows API function RegConnectRegistrycommand line via reg.exegraphically via regedit.exeAll of these behaviors call into the Windows API, which uses the NamedPipe WINREG over SMB to handle the protocol information. This network can be decoded with wireshark or a similar sensor, and can also be detected by hooking the API function.Analytic 1 - Remote Registryflows = search Flow:Messagewinreg = filter flows where (dest_port == 445 and proto_info.pipe == WINREG)winreg_modify = filter flows where (proto_info.function == Create or proto_info.function == SetValue</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with concealing Registry keys, such as Reghide.Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autorunsand RegDelNull. Other API calls relevant to Registry Modification includeRegOpenKeyExA,RegCreateKeyExA,RegDeleteKeyExA,RegDeleteValueExA,RegEnumKeyExA,RegEnumValueExA, among others.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe). The analytic is oriented around detecting invocations ofRegwhere the parent executable is an instance of cmd.exe that wasnâ€™t spawned by explorer.exe. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exewill typically be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be baselined so they can be tuned out accordingly. Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Suspicious Processesreg_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == reg.exe AND parent_exe == cmd.exe))cmd_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == cmd.exe AND parent_exe != explorer.exe))reg_and_cmd_processes = join (reg_processes, cmd_processes) where (reg.parent_pid == cmd.pid and reg.hostname == cmd.hostname)Analytic 2 - Rare LolBAS Command Lineslolbas_processes = filter processes where (exe = At.exe OR exe = Atbroker.exe OR exe = Bash.exe OR exe = Bitsadmin.exe OR exe = Certutil.exe OR exe = Cmd.exe OR exe = Cmdkey.exe OR exe = Cmstp.exe OR exe = Control.exe OR exe = Csc.exe OR exe = Cscript.exe OR exe = Dfsvc.exe OR exe = Diskshadow.exe OR exe = Dnscmd.exe OR exe = Esentutl.exe OR exe = Eventvwr.exe OR exe = Expand.exe OR exe = Extexport.exe OR exe = Extrac32.exe OR exe = Findstr.exe OR exe = Forfiles.exe OR exe = Ftp.exe OR exe = Gpscript.exe OR exe = Hh.exe OR exe = Ie4uinit.exe OR exe = Ieexec.exe OR exe = Infdefaultinstall.exe OR exe = Installutil.exe OR exe = Jsc.exe OR exe = Makecab.exe OR exe = Mavinject.exe OR exe = Microsoft.Workflow.r.exe OR exe = Mmc.exe OR exe = Msbuild.exe OR exe = Msconfig.exe OR exe = Msdt.exe OR exe = Mshta.exe OR exe = Msiexec.exe OR exe = Odbcconf.exe OR exe = Pcalua.exe OR exe = Pcwrun.exe OR exe = Presentationhost.exe ORexe = Print.exe OR exe = Reg.exe OR exe = Regasm.exe OR exe = Regedit.exe OR exe = Register-cimprovider.exe OR exe = Regsvcs.exe OR exe = Regsvr32.exe OR exe = Replace.exe OR exe = Rpcping.exe OR exe = Rundll32.exe OR exe = Runonce.exe OR exe = Runscripthelper.exe OR exe = Sc.exe OR exe = Schtasks.exe OR exe = Scriptrunner.exe OR exe = SyncAppvPublishingServer.exe OR exe = Tttracer.exe OR exe = Verclsid.exe OR exe = Wab.exe OR exe = Wmic.exe OR exe = Wscript.exe OR exe = Wsreset.exe OR exe = Xwizard.exe OR exe = Advpack.dll OR exe = Comsvcs.dll OR exe = Ieadvpack.dll OR exe = Ieaframe.dll OR exe = Mshtml.dll OR exe = Pcwutl.dll OR exe = Setupapi.dll OR exe = Shdocvw.dll OR exe = Shell32.dll OR exe = Syssetup.dll ORexe = Url.dll OR exe = Zipfldr.dll OR exe = Appvlp.exe OR exe = Bginfo.exe OR exe = Cdb.exe OR exe = csi.exe OR exe = Devtoolslauncher.exe OR exe = dnx.exe OR exe = Dxcap.exe OR exe = Excel.exe OR exe = Mftrace.exe OR exe = Msdeploy.exe OR exe = msxsl.exe OR exe = Powerpnt.exe OR exe = rcsi.exe OR exe = Sqler.exe OR exe = Sqlps.exe OR exe = SQLToolsPS.exe OR exe = Squirrel.exe OR exe = te.exe OR exe = Tracker.exe OR exe = Update.exe OR exe = vsjitdebugger.exe OR exe = Winword.exe OR exe = Wsl.exe OR exe = CL_Mutexverifiers.ps1 OR exe = CL_Invocation.ps1 OR exe = Manage-bde.wsf OR exe = Pubprn.vbs OR exe = Slmgr.vbs OR exe = Syncappvpublishingserver.vbs OR exe = winrm.vbs OR exe = Pester.bat)process_count = count(lolbas_processes) by processprocess_count_avg = average(process_count)process_count_stdev = standard_deviation(process_count)lower_bound = process_count_avg - stdev * 1.5outliers = filter lolbas_processes where (process_count &lt; lower_bound)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed registry keys or values to aid in persistence and execution. Detection of creation of registry key HKEY_LOCAL_MACHINESystemCurrentControlSetControlSession ManagerSafeDllSearchMode. The key SafeDllSearchMode, if set to 0, will block the Windows mechanism for the search DLL order and adversaries may execute their own malicious dll.Analytic 1 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0safe_dll_search_processes = filter processes where command_line CONTAINS(SafeDllSearchMode) AND ((command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d)) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) OR ((command_line CONTAINS(00000000) AND command_line CONTAINS(0)))reg_keys = search Registry:value_editsafe_dll_reg_keys = filter reg_keys where value=SafeDllSearchMode AND value_data=0</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.Detection of modification of the registry key values of Notify, Userinit, and Shell located in HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWinlogon and HKEY_LOCAL_USERSoftwareMicrosoftWindows NTCurrentVersionWinlogon. When a user logs on, the Registry key values of Notify, Userinit and Shell are used to load dedicated Windows component. Attackers may insert malicious payload following the legitimate value to launch a malicious payload.Detection of the modification of the registry key Common Startup located in HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders and HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notifylogon_reg_processes = filter processes where command_line CONTAINS(MicrosoftWindows NTCurrentVersionWinlogon) AND (command_line CONTAINS(Userinit) OR command_line CONTAINS(Shell) OR command_line CONTAINS(Notify)) AND (((command_line CONTAINS(reg) OR command_line CONTAINS(add) OR command_line CONTAINS(/d)) OR (command_line CONTAINS(Set-ItemProperty) OR command_line CONTAINS(New-ItemProperty) OR command_line CONTAINS(-value))))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where (value=Userinit OR value=Shell OR value=Notify)Analytic 2 - Modification of Default Startup Folder in the Registry Key â€˜Common Startupâ€™logon_reg_processes = filter processes where (command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) AND command_line CONTAINS(Common Startup))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where value=Common Startup</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1601">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1043"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1601</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify System Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves. On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file.Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1111">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1111</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multi-Factor Authentication Interception</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove smart cards when not in use.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with polling to intercept keystrokes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1621">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1621</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multi-Factor Authentication Request Generation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user`s primary credentials have been compromised minus 2FA/MFA mechanism.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1104">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1104</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multi-Stage Channels</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1106">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1106</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Native API</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office VBA macros from calling Win32 APIs. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and block potentially malicious software executed that may be executed through this technique by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1599">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1043"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1599</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Boundary Bridging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised. Continue to monitor for additional activity and to ensure that the blocks are indeed effective.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1498">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1498</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Denial of Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes and to support other malicious activities, including distraction, hacktivism, and extortion.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1046">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0025_002"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1046</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Service Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and or vulnerability scans using tools that are brought onto a system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that unnecessary ports and services are closed to prevent risk of discovery and potential exploitation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use network intrusion detection/prevention systems to detect and prevent remote service scans.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper network segmentation is followed to protect critical servers and devices.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services.After compromising an initial machine, adversaries commonly attempt to laterally move across the network. The first step to attempt theLateral Movementoften involves conducting host identification, port and service scans on the internal network via the compromised machine using tools such as Nmap, Cobalt Strike, etc.Analytic 1 - Identifying Port Scanning Activityflow = filter flow where (src_type = firewall_logs AND dest_ip = internal_subnet )</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1135">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1135</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Share Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable Windows Group Policy Do Not Allow Anonymous Enumeration of SAM Accounts and Shares security setting to limit users who can enumerate network shares.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1040">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1040</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Sniffing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication wherever possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct access of broadcasts and multicast sniffing, and prevent attacks such as LLMNR/NBT-NS Poisoning and SMB Relay</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the networkNote: The Analytic is for Windows systems and looks for new processes that have the names of the most common network sniffing tools. While this may be noisy on networks where sysadmins are using any of these tools on a regular basis, in most networks their use is noteworthy.Analytic 1 - Windowsprocesses = filter processes where ((event_id == 1 OR event_id == 4688) ANDexe == tshark.exe ORexe == windump.exe OR(exe == logman.exe AND parent_exe exists AND parent_exe!=C:Program FilesWindows Event ReportingCoreEventReporting.AgentService.exe) ORexe == tcpdump.exe ORexe == wprui.exe ORexe == wpr.exe )</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1095">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1095</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Non-Application Layer Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected tunneled protocols, such as Serial over LAN (SOL).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Filter network traffic to prevent use of protocols across the network boundary that are unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems. Also ensure hosts are only provisioned to communicate over authorized interfaces.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1571">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1571</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Non-Standard Port</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis parsing of network data.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically detect and quarantine suspicious files. Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10+ to analyze commands after being processed/interpreted. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of common fileless storage locations (such as the Registry or WMI repository) to potentially identify abnormal and malicious data.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10+, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated payloads. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that a finite amount of ingress points to a software deployment system exist with restricted access for those required to allow and enable newly deployed software.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.File-based signatures may be capable of detecting code obfuscation depending on the methods used.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated code functionality. Dynamic malware analysis may also expose signs of code obfuscation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze calls to functions such asGetProcAddress()that are associated with malicious code obfuscation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0037_001"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0004_001"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy and or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal capabilities that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For the Office Test method, create the Registry key used to execute it and set the permissions to Read Control to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1025"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1043"/>
  <identifiedBy rdf:resource="#DS0026_002"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to performÂ Lateral MovementÂ and access restricted information.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manage the access control list for Replicating Directory Changes and other permissions associated with domain controller replication.Consider adding users to the Protected Users Active Directory security group. This can help limit the caching of users' plaintext credentials.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to secure LSASS and prevent credential stealing. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements.  It also does not protect against all forms of credential dumping. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure Domain Controller backups are properly secured.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling or restricting NTLM. Consider disabling WDigest authentication.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows:Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Linux:Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.. Monitor for replication requestsfrom IPs not associated with known domain controllers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools likeMimikatz.PowerShellscripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/&lt;pid&gt;/maps, where the&lt;pid&gt;directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1201">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1201</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Policy Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack throughÂ Brute Force. This information may help the adversary to create a list of common passwords and launch dictionary and or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1120">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1120</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Peripheral Device Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system. Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1069">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0036_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1069</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permission Groups Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging, messaging, and other artifacts provided by cloud services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an extracted list of ACLs of available groups and/or their associated settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a group which describes group and activity around it.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1566">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1049"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1566</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion prevention systems and systems designed to scan and remove malicious email attachments or links can be used to block activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Furthermore, policies may enforce / install browser extensions that protect against IDN and homograph attacks.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and phishing emails.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files from a phishing messages to gain access to victim systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1598">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1598</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing for Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different fromÂ PhishingÂ in that the objective is gathering data from the victim rather than executing malicious code.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Furthermore, policies may enforce / install browser extensions that protect against IDN and homograph attacks. Browser password managers may also be configured to only populate credential fields when the URL matches that of the original, legitimate site.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing attempts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1647">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1013"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1647</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Plist File Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as theÂ info.plistÂ file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure applications are using Apple's developer guidance which enables hardened runtime.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in~/LaunchAgents,~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm, and an application'sInfo.plist.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from~/Library/Scriptsor~/Library/Preferences. Also, monitor for significant changes to any path pointers in a modified plist.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes with arguments that can modify property list (plist) files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1046"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <identifiedBy rdf:resource="#DS0027_002"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_FBA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_FEMC"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFV"/>
  <mayBeDetectedBy rdf:resource="#D3_FV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_BA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.  </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Patch the BIOS and EFI as necessary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1057">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1057</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software applications running on systems within the network. Adversaries may use the information fromÂ Process DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls may attempt to get information about running processes on a system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to get information about running processes on a system. To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment.Because these commands are built in, they may be run frequently by power users or even by normal users. Thus, an analytic looking at this information should have well-defined white- or blacklists, and should consider looking at an anomaly detection approach, so that this information can be learned dynamically.Within the built-in Windows Commands:hostnameipconfignetquserqwinstasc with flags query, queryex, qcsysteminfotasklistdsquerywhoamiNote dsquery is only pre-existing on Windows servers.Analytic 1 - Host Discovery Commandsinfo_command = filter process where ( exe == hostname.exe or exe == ipconfig.exe or exe == net.exe or exe == quser.exe or exe == qwinsta.exe or exe == sc and (command_line match  query or command_line match  qc)) or exe == systeminfo.exe or exe == tasklist.exe or exe == whoami.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process. For example, on Windows 10, Attack Surface Reduction (ASR) rules may prevent Office applications from code injection. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for process memory inconsistencies, such as checking memory ranges against a known copy of the legitimate module.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1572">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1572</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protocol Tunneling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection network filtering and or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider filtering network traffic to untrusted or known bad domains and resources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1090">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1020"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1090</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proxy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, includingÂ HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network allow and block lists. It should be noted that this kind of blocking may be circumvented by other techniques like Domain Fronting.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If it is possible to inspect HTTPS traffic, the captures can be analyzed for connections that appear to be domain fronting.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1012">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Query Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management. The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider Registry</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asRegOpenKeyExA) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. OS API calls associated with querying the Windows Registry are RegOpenKeyEx , RegOpenUserClassesRoot, RegQueryValueExA, and RegQueryValueExW. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing). Also monitor for RegOpenUserClassesRoot api to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user. The returned key has a view of the registry that merges the contents of the HKEY_LOCAL_MACHINESoftwareClasses key with the contents of the SoftwareClasses keys in the user's registry hive.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls.Analytic 1 - Suspicious API Callssuspicious_apis = filter api_calls where ApiName LIKE '%RegOpenKeyEx%' OR ApiName LIKE '%RegOpenUserClassesRoot%'</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.Note: The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider Registry). The Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations.Note for Analytic 3: Replace FilePathToLolbasProcessXX.exe with lolBAS process names that are used by your organization. The number_standard_deviations parameter should be tuned accordingly. Identifying outliers by comparing distance from a data point to the average value against a certain number of standard deviations is recommended for data values that are symmetrical distributed. If your data is not distributed, try a different algorithm such as the Interquartile Range (IQR).Analytic 1 - Suspicious Processes with Registry keyssuspicious_processes = filter processes where (EventId == 1 OR EventId == 4688) AND((ProcessCommandLine LIKE '%reg%' AND ProcessCommandLine LIKE '%query%') OR (ProcessCommandLine LIKE '%Registry%' AND (ProcessCommandLine LIKE '%HKEY_CLASSES_ROOT%' OR ProcessCommandLine '%HKCR%')))Analytic 2 - reg.exe spawned from suspicious cmd.exereg_processes = filter processes where (EventId == 1 OR EventId == 4688) AND (ProcessFilePath LIKE '%reg.exe%' AND ProcessParentFilePath LIKE '%cmd.exe%')cmd_processes = filter command_line where (event_id == 1 OR event_id == 4688) AND (ProcessFilePath LIKE '%cmd.exe%' AND ProcessParentFilePath NOT LIKE '%explorer.exe%')suspicious_processes = SELECT r.ProcessGuid, r.ProcessFilePath, c.ProcessFilePath AS ProcessParentFilePathFROM reg_processes rINNER JOIN cmd_processes cON r.ProcessParentGuid = c.ProcessGuidAnalytic 3 - Rare LolBAS command linescount_lolbas_processes = filter processes where (EventId == 1 OR EventId == 4688) AND ProcessFilePath IN ('FilePathToLolbasProcess01.exe','FilePathToLolbasProcess02.exe')GROUP BY ProcessFilePathnumber_standard_deviations = 1.5suspicious_processes = SELECT ProcessFilePath, ProcessCount, AVG(ProcessCount) Over() - STDEV(ProcessCount) Over() * number_standard_deviations as LowerBound FROM count_lolbas_processesWHERE ProcessCount &lt; LowerBound</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information.Note: For Security Auditing event ids 4656 and 4663, a System Access Control List (SACL) that controls the use of specific access rights such as Enumerate sub-keys and Query key value is required for event generation. Depending on the Registry key you are monitoring, the implementation of a new System Access Control List (SACL) might be required. Depending of Registry key used for the creation of a System Access Control List (SACL), the generation of event ids 4656 and 4663 might be noisy.Analytic 1 - Suspicious Registrysuspicious_registry = filter registry where (event_id == 4663 OR event_id == 4656) AND ObjectType == Key AND RegistryKeyPath LIKE %SOFTWAREMicrosoftWindowsCurrentVersionUninstall% AND (UserAccessList LIKE %4435% OR UserAccessList LIKE %Enumerate sub-keys% OR UserAccessList LIKE %4432% OR UserAccessList LIKE %Query key value%) AND ProcessFilePath NOT IN (FilePathToExpectedProcess01.exe,FilePathToExpectedProcess02.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1620">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1620</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reflective Code Loading</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such asAssembly.Load()andNative APIfunctions such asCreateThread(),memfd_create(),execve(), and/orexecveat().</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1219">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1219</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Access Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may use legitimate desktop support and remote access software, such as Team Viewer, AnyDesk, Go2Assist, LogMein, AmmyyAdmin, etc, to establish an interactive command and control channel to target systems within networks. These services are commonly used as legitimate technical support software, and may be allowed by application control within a target environment. Remote access tools like VNC, Ammyy, and Teamviewer are used frequently when compared with other legitimate software commonly used by adversaries.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control to mitigate installation and use of unapproved software that can be used for remote access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Properly configure firewalls, application firewalls, and proxies to limit outgoing traffic to sites and services used by remote access software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures may be able to prevent traffic to remote access services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Suspicious Port Usagesuspicious_ports = filter network_traffic where ((protocol =6 and (serverPort = 5938 or serverPort = 6568 or serverPort = 5650 or serverPort = 5655 or serverPort =5631)) or (protocol = 17 and (serverPort = 15000 and serverPort = 5632 )) or(httpHost = remoteutilities.co))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for applications and processes related to remote admin software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators.Domain Frontingmay be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1563">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1563</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Service Session Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable firewall rules to block unnecessary traffic between network security zones within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow remote access to services as a privileged account unless necessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit remote user permissions if remote access is necessary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If remote services, such as the ability to make direct connections to cloud virtual machines, are not required, disable these connection types where feasible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication on remote service logons where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE SOFTWARE Microsoft Ole associated with system-wide security defaults for all COM applications that do not set their own process-wide security. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Malicious actors may rename built-in commands or external tools, such as those provided by SysInternals, to better blend in with the environment. In those cases, the file path name is arbitrary and may blend in well with the background. If the arguments are closely inspected, it may be possible to infer what tools are running and understand what an adversary is doing. When any legitimate software shares the same command lines, it must be whitelisted according to the expected parameters.Any tool of interest with commonly known command line usage can be detecting by command line analysis. Known substrings of command lines includePuTTYport forwarding-R * -pwsecure copy (scp)-pw * *@mimikatzsekurlsa::RAR-hpArchive* a * Additionally, it may be useful to find IP addresses in the command lined{1,3}.d{1,3}.d{1,3}.d{1,3}Analytic 1 - Suspicious Argumentsport_fwd = filter process where (command_line match -R .-pw)scp = filter process where (command_line match -pw ...@.mimikatz = filter process where (command_line match sekurlsa)rar = filter process where (command_line match  -hp )archive = filter process where (command_line match .a .*)ip_addr = filter process where (command_line match d{1,3}.d{1,3}.d{1,3}.d{1,3})</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for screensharingd and Authentication event messages.Note: When using Security event id 4624, %$ means user names that do not end with $ character. Usually, computer accounts or local system accounts names end with the $ character. When using Security event 4624, UserName and UserLogonId correspond to TargetUserName and TargetLogonId respectively. When using Security event 4624, LogonType 3 corresponds to a Network LogonAnalytic 1 - New services being created under network logon sessions by non-system usersremote_logon_sessions = filter Hostname, UserName, UserLogonId, SourceIp where event_id == 4624 AND LogonType == 3 AND UserName NOT LIKE '%$'new_services = filter UserName, UserLogonId, ServiceName where event_id = 4697suspicious_services = filter l.UserName, l.UserLogonId, l.SourceIp, s.ServicenameFROM remote_logon_sessions lINNER JOIN new_services sON l.UserLogonId = s.UserLogonId</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes, that may useValid Accountsto log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.Note: On Windows, Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes, including those designed to accept remote connections. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module to help reduce the number of events that are produced.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network service protocols such as SSH and RDP.Analytic 1 - Suspicious Protocolssuspicious_protocol = filter network_traffic where ((server_port = 636 AND protocol = 6) OR (server_port = 389 AND protocol = 17))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows that may be related to abuse ofValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may useValid Accountsto log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed WMI objects that is often used to log into a service that accepts remote connects.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1018">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1018</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote System Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such asÂ PingÂ orÂ net viewÂ usingÂ Net.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor toRDP Hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName Remote Desktop Users | select -expand ComputerName.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files (such as/etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.For Windows, Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on access attempts of local files that store host data, including C:WindowsSystem32Driversetchosts.For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on access attempts of local files that store host data, including /etc/hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that can be used to discover remote systems, such asping.exeandtracert.exe, especially when executed in quick succession.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1091">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1034"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0016_002"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1091</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replication Through Removable Media</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to block unsigned/untrusted executable files (such as .exe, .dll, or .scr) from running from USB removable drives. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if it is not required for business operations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the use of USB devices and removable media within a network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed drive letters or mount points to removable media</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files accessed on removable media.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files on removable media</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1496">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1496</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Resource Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage the resources of co-opted systems in order to solve resource intensive problems, which may impact system and or hosted service availability.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may indicate common cryptomining or proxyware functionality.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for common cryptomining or proxyware files on local systems that may indicate compromise and resource usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts, look for connections to/from strange ports, as well as reputation of IPs and URLs related cryptocurrency hosts.Note: Destination Host Name is not a comprehensive list of potential cryptocurrency URLs.Analytic 1 - Suspicious Port Connectionssuspicious_netcoms = filter network traffic where ((src_port = 3333 OR src_port = 4444 OR src_port = 5555 OR src_port = 6666) AND (dst_host_name = cryptmonero.com OR dst_host_name = crypto-pool.fr OR dst_host_name = crypto-pool.info OR dst_host_name = cryptonight-hub.miningpoolhub.com))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for common cryptomining or proxyware software process names that may indicate compromise and resource usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1207">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0026_003"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1207</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Rogue Domain Controller</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts.DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with GC/) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235â€“4B06â€“11D1-AB04â€“00C04FC2DCD2) can be set without logging.A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1014">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FBA"/>
  <mayBeDetectedBy rdf:resource="#D3_FEMC"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_FV"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Rootkit</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting hooking and modifying operating system API calls that supply system information.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to drive letters or mount points of data storage devices for unexpected modifications that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed containers that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed scheduled jobs that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1029">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1029</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Transfer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool command and control signatures over time or construct protocols in such a way to avoid detection by common defensive tools. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1113">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1113</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Screen Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such asÂ CopyFromScreen,Â xwd, orÂ screencapture.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such asCopyFromScreen,xwd, orscreencapture.. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1597">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1597</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Closed Sources</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains certificates as well as public collections of network data artifacts gathered from traffic and or scans.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1593">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1047"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1593</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Websites/Domains</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search freely available websites and or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested rewarded contracts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application developers uploading to public code repositories should be careful to avoid publishing sensitive information such as credentials and API keys.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scan public code repositories for exposed credentials or other sensitive information before making commits. Ensure that any leaked credentials are removed from the commit history, not just the current latest version of the code.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1594">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1594</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Victim-Owned Websites</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments divisions, physical locations, and data about key employees such as names, roles, and contact info (ex:Â Email Addresses). These sites may also have details highlighting business operations and relationships.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_EHB"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_LLM"/>
  <mayBeModeledBy rdf:resource="#D3_PLM"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_NNI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RNA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all application component binaries are signed by the correct application developers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling software components from servers when possible to prevent abuse by adversaries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using Group Policy to configure and block modifications to service and other critical server parameters in the Registry.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1648">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0025_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1648</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Serverless Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove permissions to create, modify, or run serverless resources from users that do not explicitly require them.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs generated by serverless execution for unusual activity. For example, in Exchange environments emails sent by Power Automate via the Outlook 365 connector include the phrase â€˜Power Appâ€™ or â€˜Power Automateâ€™ in the SMTP header 'x-ms-mail-application.'</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the creation and modification of serverless resources such as functions and workflows.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1489">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1030"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_006"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1489</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Service Stop</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operate intrusion detection, analysis, and response systems on a separate network from the production environment to lessen the chances that an adversary can see and interfere with critical response functions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper process and file permissions are in place to inhibit adversaries from disabling or interfering with critical services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper registry permissions are in place to inhibit adversaries from disabling or interfering with critical services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example,ChangeServiceConfigWmay be used by an adversary to prevent services from starting.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and command-line arguments to see if critical processes are terminated or stop running.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Alterations to the service binary path or the service startup type changed to disabled may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1129">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1129</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Shared Modules</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the WindowsÂ Native APIÂ which is called from functions likeÂ CreateProcess,Â LoadLibrary, etc. of the Win32 API.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and block potentially malicious software executed through this technique by using application control tools capable of preventing unknown modules from being loaded.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of shared modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled, or system modules such that deviation from known module loads may be suspiciousLimiting module loads to trusted directories, such as%SystemRoot%and%ProgramFiles%on Windows, may protect against module loads from unsafe paths.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may execute malicious payloads via loading shared modules.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1072">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1033"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1072</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Deployment Tools</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper system and access isolation for critical network systems through use of group policy.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict the use of third-party software suites installed within an enterprise network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper system isolation for critical network systems through use of firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Grant access to application deployment systems only to a limited number of authorized administrators.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If the application deployment system can be configured to deploy only signed binaries, then ensure that the trusted signing certificates are not co-located with the application deployment system and are instead located on a system that cannot be accessed remotely or to which remote access is tightly controlled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Patch deployment systems regularly to prevent potential remote access through Exploitation for Privilege Escalation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Have a strict approval policy for use of deployment systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.Perform application deployment at regular times so that irregular deployment activity stands out.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1518">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0018_002"/>
  <identifiedBy rdf:resource="#DS0018_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1518</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information fromÂ Software DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a firewall and activity around it such as name, policy, or status.hasDetection.append(Monitor for files being accessed that may search for common password storage locations to obtain user credentials.)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed (Develop Capabilities) or obtained (Obtain Capabilities) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased rented by the adversary (Acquire Infrastructure) or was otherwise compromised by them (Compromise Infrastructure). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1528">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1528</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal Application Access Token</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users -&gt; User settings -&gt; App registrations: Users can register applications can be set to no to prevent users from registering new applications. Enterprise applications -&gt; User settings -&gt; Enterprise applications: Users can consent to apps accessing company data on their behalf can be set to no to prevent users from consenting to allow third-party multi-tenant applications</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set automountServiceAccountToken: false in the YAML specification of pods that do not require access to service account tokens.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users need to be trained to not authorize third-party applications they donâ€™t recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a High severity app permissions policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the appâ€™s purpose, or apps with old Last authorized fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1649">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1649</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Authentication Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure certificate authorities (CA) are properly secured, including treating CA servers (and other resources hosting CA certificates) as tier 0 assets. Harden abusable CA settings and attributes.For example, consider disabling the usage of AD CS certificate SANs within relevant authentication protocol settings to enforce strict user mappings and prevent certificates from authenticating as other identifies.Also consider enforcing CA Certificate Manager approval for the templates that include SAN as an issuance requirement.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check and remediate unneeded existing authentication certificates as well as common abusable misconfigurations of CA settings and permissions, such as AD CS certificate enrollment permissions and published overly permissive certificate templates (which define available settings for created certificates). For example, available AD CS certificate templates can be checked via the Certificate Authority MMC snap-in (certsrv.msc). certutil.exe can also be used to examine various information within an AD CS CA database.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling old/dangerous authentication protocols (e.g. NTLM), as well as unnecessary certificate features, such as potentially vulnerable AD CS web and other enrollment server roles.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure certificates as well as associated private keys are appropriately secured. Consider utilizing additional hardware credential protections such as trusted platform modules (TPM) or hardware security modules (HSM). Enforce HTTPS and enable Extended Protection forAuthentication.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor AD CS certificate requests (ex: EID 4886) as well as issued certificates (ex: EID 4887) for abnormal activity, including unexpected certificate enrollments and signs of abuse within certificate attributes (such as abusable EKUs).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to CA attributes and settings, such as AD CS certificate template modifications (ex: EID 4899/4900 once a potentially malicious certificate is enrolled).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure CA audit logs are enabled and monitor these services for signs of abuse.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the execution of commands and other utilities abused to forge and/or steal certificates and related private keys.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for attempts to access files that store information about certificates and their associated private keys. For example, personal certificates for users may be stored on disk in folders such as%APPDATA%MicrosoftSystemCertificatesMyCertificates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor certificate-based authentication events, such as EID 4768 when an AD CS certificate is used for Kerberos authentication (especially those that donâ€™t correspond to legitimately issued certificates) or when Secure Channel (Schannel, associated with SSL/TLS) is highlighted as theLogon Processassociated with an EID 4624 logon event.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for attempts to access information stored in the Registry about certificates and their associated private keys. For example, user certificates are commonly stored underHKEY_CURRENT_USERSOFTWAREMicrosoftSystemCertificates.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1558">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTA"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1558</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Kerberos Tickets</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enableÂ Pass the Ticket. Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as realms, there are three basic participants: client, service, and Key Distribution Center (KDC). Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting. Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string"></hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.Monitor the lifetime of TGT tickets for values that differ from the default domain duration.Monitor for indications ofPass the Ticketbeing used to move laterally.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enablePass the Ticket.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessingsecrets.ldband.secrets.mkeylocated in/var/lib/sss/secrets/.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1539">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1539</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal Web Session Cookie</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure browsers or tasks to regularly delete persistent cookies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for attempts by programs to inject into or dump browser process memory.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System settings can prevent applications from running that haven't been downloaded through the Apple Store (or other legitimate repositories) which can help mitigate some of these issues. Also enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious content.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Group Policy can be used to manage root certificates and the Flags value of HKLM SOFTWARE Policies Microsoft SystemCertificates Root ProtectedRoots can be set to 1 to prevent non-administrator users from making further root installations into their own HKCU certificate store. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Public Key Pinning (HPKP) is one method to mitigate potential Adversary-in-the-Middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure Hide Microsoft Entries and Hide Windows Entries are both deselected.On macOS, the removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable CryptoAPI v2 (CAPI) event loggingto monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:Also consider enabling the Registry Global Object Access Auditingsetting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1195">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1016"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1195</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Supply Chain Compromise</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1050"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FCA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may bypass process and or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many native binaries may not be necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using application control to prevent execution of binaries that are susceptible to abuse and not required for a given system or network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using using trusted binaries to bypass application control.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that bypass process and/or signature based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1082">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1082</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Information Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information fromÂ System Information DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell. In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1614">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1614</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Location Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information fromÂ System Location DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote access tools with built-in features may interact directly with the Windows API, such as callingGetLocaleInfoWto gather information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1016">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1016</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Network Configuration Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may look for details about the network configuration and settings, such as IP and or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples includeÂ Arp,Â ipconfig ifconfig,Â nbtstat, andÂ route.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asGetAdaptersInfo()andGetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.Note: The Analytic looks for the creation ofipconfig,route, andnbtstatprocesses, all of which are system administration utilities that can be used for the purpose of system network configuration discovery. If these tools are commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Processprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == C:WindowsSystem32ipconfig.exe OR exe == C:WindowsSystem32route.exe OR exe == C:WindowsSystem32nbtstat.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1049">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1049</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Network Connections Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1033">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0026_002"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_DTP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1033</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Owner/User Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by usingÂ OS Credential Dumping. The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file directory ownership, session information, and system logs. Adversaries may use the information fromÂ System Owner User DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.. Monitor for replication requestsfrom IPs not associated with known domain controllers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools likeMimikatz.PowerShellscripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with lsass.exe.Common credential dumpers such asMimikatzaccess the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.LinuxTo obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc/&lt;pid&gt;/maps, where the&lt;pid&gt;directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances ofatbeing created, therefore implying the querying or creation of tasks. If this tools is commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning.Analytic 1 - Suspicious Process Executionprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == at.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1216">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1216</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Script Proxy Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files. This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1007">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Service Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such asÂ sc query,Â tasklist  svc,Â systemctl --type=service, andÂ net start.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with gathering information about registered local system services, such as QueryServiceStatusEx. Other Windows API calls worth monitoring include EnumServicesStatusExA, which can be used to enumerate services in the service control manager database.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). For event id 4688, depending on Windows version, you might need to enableAdministrative TemplatesSystemAudit Process CreationInclude command line in process creation eventsgroup policy to include command line in process creation events.Analytic 1 - Suspicious Processessuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND ((command_line LIKE '%sc%' AND command_line LIKE '%query%') OR (command_line LIKE '%tasklist%' AND command_line LIKE '%/svc%') OR (command_line LIKE '%systemctl%' AND command_line LIKE '%--type=service%') OR (command_line LIKE '%net%' AND command_line LIKE '%start%'))</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1569">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1569</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence (Create or Modify System Process), but adversaries can also abuse services for one-time or temporary execution.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by PsExec from running. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent users from installing their own launch agents or launch daemons.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for command line invocations of tools capable of modifying services that doesnâ€™t correspond to normal usage patterns and known software, patch cycles, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.Analytic 1 - Service Control Manager spawning Command Shellservice_proto = filter flows where (dest_port == 445 and proto_info.pipe == SVCCTL)service_create = filter flows where (proto_info.function == CreateServiceW OR proto_info.function == CreateServiceA OR proto_info.function == StartServiceW OR proto_info.function == StartServiceA )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons to execute commands or programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1529">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1529</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Shutdown/Reboot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may shutdown reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown reboot of a remote computer or network device viaÂ Network Device CLIÂ (e.g.Â reload).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may suggest the shutting down or rebooting of the system. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1124">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1124</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Time Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may gather the system time and or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1080">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1049"/>
  <preventedBy rdf:resource="#M1050"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1080</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Taint Shared Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using application control  tools, like AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect shared folders by minimizing users who have write access.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files that write or overwrite many files to a network shared directory may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1221">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1221</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Template Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoftâ€™s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network/Host intrusion prevention systems, antivirus, and detonation chambers can be employed to prevent documents from fetching and/or executing malicious payloads.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling Microsoft Office macros/active content to prevent the execution of malicious payloads in documents , though this setting may not mitigate the Forced Authentication use for this technique.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex:PowerShell), or other suspicious actions that could relate to post-compromise behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1205">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1205</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traffic Signaling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e.Â Port Knocking), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Wake-on-LAN if it is not needed within an environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes ofFFfollowed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1537">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0010_002"/>
  <identifiedBy rdf:resource="#DS0010_005"/>
  <identifiedBy rdf:resource="#DS0010_006"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0020_001"/>
  <identifiedBy rdf:resource="#DS0020_004"/>
  <identifiedBy rdf:resource="#DS0020_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1537</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Transfer Data to Cloud Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers downloads and network-based exfiltration detection.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implement network-based filtering restrictions to prohibit data transfers to untrusted VPCs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline cloud storage infrastructure to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous file transfer activity between accounts and/or to untrusted/unexpected VPCs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous internal traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline snapshots to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1127">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1127</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trusted Developer Utilities Proxy Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering. These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Specific developer utilities may not be necessary within a given environment and should be removed if not used.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certain developer utilities should be blocked or restricted if not required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1199">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1199</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trusted Relationship</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require MFA for all delegated administrator accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network segmentation can be used to isolate infrastructure components that do not require broad network access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Properly manage accounts and permissions used by parties in trusted relationships to minimize potential abuse by the party and if the party is compromised by an adversary. In Office 365 environments, partner relationships and roles can be viewed under the Partner Relationships page.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network. Monitor logs for unexpected actions taken by any delegated administrator accounts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure) from a trusted entity. Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and or misplaced in many locations on a system, including plaintext files (e.g.Â Bash History), operating system or application-specific repositories (e.g.Â Credentials in Registry), or other specialized files artifacts (e.g.Â Private Keys).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove vulnerable Group Policy Preferences.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When possible, store keys on separate cryptographic hardware instead of on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the Instance Metadata API. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit network access to sensitive services, such as the Instance Metadata API.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict file shares to specific directories with access only to necessary users.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply patch KB2962486 which prevents credentials from being stored in GPPs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). SeeValid Accountsfor more information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's.bash_historyis read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like history instead of commands likecat ~/.bash_history.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1535">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0030_001"/>
  <identifiedBy rdf:resource="#DS0030_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1535</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unused/Unsupported Cloud Regions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud service providers may allow customers to deactivate unused regions.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor system logs to review instance activities occurring across all cloud environments and regions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and consider configuring alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1550">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1550</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Alternate Authentication Material</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; SCM: Pass the Hash Mitigations: Apply UAC restrictions to local accounts on network logons.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1204">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0032_003"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0007_001"/>
  <identifiedBy rdf:resource="#DS0030_001"/>
  <identifiedBy rdf:resource="#DS0030_006"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1204</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms ofÂ Phishing.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent executable files from running unless they meet a prevalence, age, or trusted list criteria and to prevent Office applications from creating potentially malicious executable content by blocking malicious code from being written to disk. Note: cloud-delivered protection must be enabled to use certain rules. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application control may be able to prevent the running of executables masquerading as other files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used toDeobfuscate/Decode Files or Informationin payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed containers that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the activation or invocation of a container (ex: docker start or docker restart)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed image that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed instances that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used toDeobfuscate/Decode Files or Informationin payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1078">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_LAM"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1078</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Valid Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop. Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable legacy authentication, which does not support MFA, and require the use of modern authentication protocols instead.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that applications do not store sensitive data or credentials insecurely. (e.g. plaintext credentials in code, published credentials in repositories, or credentials in public cloud storage).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. When possible, applications that use SSH keys should be updated periodically and properly secured.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Policies should minimize (if not eliminate) reuse of passwords between different user accounts, especially employees using the same credentials for personal accounts that may not be defended by enterprise security resources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For example, audit the use of service accounts in Kubernetes, and avoid automatically granting them access to the Kubernetes API if this is not required. Implementing LAPS may also help prevent reuse of local administrator credentials across a domain.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1125">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_IDA"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1125</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Video Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1497">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1497</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization/Sandbox Evasion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromÂ Virtualization Sandbox EvasionÂ during automated discovery to shape follow-on behaviors.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1600">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1600</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weaken Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise a network deviceâ€™s encryption capability in order to bypass encryption that would otherwise protect data communications.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Modification</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1102">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1102</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an existing, legitimate external Web service as a means for relaying data to from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL TLS encryption, giving adversaries an added level of protection.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1047">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1047</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Management Instrumentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated byÂ Remote ServicesÂ such asÂ Distributed Component Object ModelÂ (DCOM) andÂ Windows Remote ManagementÂ (WinRM). Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by WMI commands from running. Note: many legitimate tools and applications utilize WMI for command execution. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of wmic.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the wmic.exe application and to prevent abuse.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent credential overlap across systems of administrator and privileged accounts. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that are used to perform remote behavior</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC groupnetsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.htmlAfter the WMI connection has been initialized, a process can be remotely launched using the command:wmic /node: process call create , which is detected in the third Detection Pseudocode.This leaves artifacts at both a network (RPC) and process (command line) level. Whenwmic.exe(or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine.After RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified.When the command line is executed, it has the parent process ofC:windowssystem32wbemWmiPrvSE.exe. This analytic looks for these two events happening in sequence, so that the network connection and target process are output.Certain strings can be identifiers of the WMI by looking up the interface UUID forIRemUnknown2in different formats- UUID00000143-0000-0000-c000-000000000046(decoded)- Hex43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46(raw)- ASCIICF(printable text only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is- UUID8a885d04-1ceb-11c9-9fe8-08002b104860(decoded)- Hex04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60(raw)- ASCII`]+H``(printable text only)Thus, a great ASCII based signature is-CF]+HCFCFhost Note: To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2. Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.Analytic 1 - Remote WMI over RPCwmi_flow = filter network_flow where (dest_port == 135 and proto_info.rpc_interface == IRemUnknown2)Analytic 2 : Remotely Launched Executables via WMIwmi_children = filter processes where (parent_process == wmiprvse.exe)wmi_flow = filter network flow where (src_port â‰¥ 49152 and dest_port â‰¥ 49152 and proto_info.rpc_interface == IRemUnknown2)remote_wmi_process = join wmi_children, wmi_flow where (wmi_flow.time &lt; wmi_children.time &lt; wmi_flow.time + 1 sec and wmi_flow.hostname == wmi_children.hostname</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines of wmic. If the command line utilitywmic.exeis used on the source host, then it can additionally be detected on an analytic. The command line on the source host is constructed into something likewmic.exe /node:&lt;hostname&gt; process call create &lt;command line&gt;. It is possible to also connect via IP address, in which case the string&lt;hostname&gt;would instead look like IP Address. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility PowerShell.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Besides executing arbitrary processes, wmic.exe can also be used to executed data stored in NTFS alternate data streamsNTFS File Attributes.Looks for instances of wmic.exe as well as the substrings in the command line:- process call create- /node:Analytic 1 : Create Remote Process via WMICprocesses = filter processes where ((event_id=10 OR event_id=4688) AND exe == wmic.exe AND command_line == process call create</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed WMI objects that will execute malicious commands and payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1220">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1220</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">XSL Script Processing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If msxsl.exe is unnecessary, then block its execution to prevent abuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe.Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1513">
  <rdf:type rdf:resource="#Technique"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1513</hasID>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1548"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism: Setuid and Setgid</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) userâ€™s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively. Normally an application is run in the current userâ€™s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications with known vulnerabilities or known shell escapes should not have the setuid or setgid bits set to reduce potential damage if an application is compromised. Additionally, the number of programs with setuid or setgid bits set should be minimized across a system.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the file system for files that have the setuid or setgid bits set.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different userâ€™s context.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1548"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism: Bypass User Account Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove users from the local administrator group on systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider updating Windows to the latest version and patch level to utilize the latest protective measures against UAC bypass.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as DLL Search Order Hijacking.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes, such aseventvwr.exeandsdclt.exe, that may bypass UAC mechanisms to elevate process privileges on system.Threat actors often, after compromising a machine, try to disable User Access Control (UAC) to escalate privileges. This is often done by changing the registry key for system policies using reg.exe, a legitimate tool provided by Microsoft for modifying the registry via command prompt or scripts. This action interferes with UAC and may enable a threat actor to escalate privileges on the compromised system, thereby allowing further exploitation of the system.Analytic 1 : UAC Bypasspossible_uac_bypass = filter processes where ( integrity_level == High and (parent_image_path == c:windowssystem32fodhelper.exe) or (command_line == .execleanmgr.exe /autoclean) or (image_path == c:program fileswindows media playerosk.exe) or (parent_image_path == c:windowssystem32slui.exe) or (parent_command_line == 'c:windowssystem32dism.exe.xml' and image_path != c:users*appdatalocaltemp*dismhost.exe) or (command_line == 'c:windowssystem32wusa.exe/quiet*' and user != NOT_TRANSLATED and current_working_directory == c:windowssystem32 and parent_image_path != c:windowsexplorer.exe) or (parent_image_path == c:windows*dccw.exe and image_path != c:windowssystem32cttune.exe))Analytic 2 : Disable UACcmd_processes = filter processes where ( (parent_image = C:WindowsSystem32cmd.exe) AND (command_line = reg.exe%HKLMSOFTWAREMicrosoftWindowsCurrentVersionPoliciesSystem%REG_DWORD /d 0%))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:* Theeventvwr.exebypass uses the[HKEY_CURRENT_USER]SoftwareClassesmscfileshellopencommandRegistry key.* Thesdclt.exebypass uses the[HKEY_CURRENT_USER]SoftwareMicrosoftWindowsCurrentVersionApp Pathscontrol.exeand[HKEY_CURRENT_USER]SoftwareClassesexefileshellrunascommandisolatedCommandRegistry keys.Analysts should monitor these Registry settings for unauthorized changes.UAC Bypass is an interesting technique in that new implementations are regularly found and existing implementations may be fixed (i.e., patched) by Microsoft in new builds of Windows. Therefore, it is important to validate than detections for UAC Bypass are still relevant (i.e., they target non-patched implementations).Note: Sysmon Event ID 12 (Registry Key Create/Delete), Sysmon Event ID 13 (Registry Value Set), and Sysmon Event ID 14 (Registry Key and Value Rename) are useful for creating detections around Registry Key Modification in the context of UAC Bypass.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1548"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism: Sudo and Sudo Caching</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may perform sudo caching and or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensuring that the tty_tickets setting is enabled will prevent this leakage across tty sessions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as thesudocommand.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on theLOG_INPUTandLOG_OUTPUTdirectives in the/etc/sudoersfile.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1548"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism: Elevated Execution with Prompt</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage theÂ AuthorizationExecuteWithPrivilegesÂ API to escalate privileges by prompting the user for credentials. The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System settings can prevent applications from running that haven't been downloaded through the Apple Store which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for/usr/libexec/security_authtrampolineexecutions which may indicate thatAuthorizationExecuteWithPrivilegesis being executed. MacOS system logs may also indicate whenAuthorizationExecuteWithPrivilegesis being called.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1134"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation: Token Impersonation/Theft</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token usingÂ DuplicateTokenÂ orÂ DuplicateTokenEx. The token can then be used withÂ ImpersonateLoggedOnUserÂ to allow the calling thread to impersonate a logged on user's security context, or withÂ SetThreadTokenÂ to assign the impersonated token to a thread.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators, such as DuplicateToken(Ex), ImpersonateLoggedOnUser , and SetThreadToken.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1134"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation: Create Process with Token</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such asÂ CreateProcessWithTokenWÂ andÂ runas.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such asCreateProcessWithTokenWand correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1134"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation: Make and Impersonate Token</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using theÂ LogonUserÂ function. The function will return a copy of the new session's access token and the adversary can useÂ SetThreadTokenÂ to assign the token to a thread.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object.  Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior, such as LogonUser and SetThreadToken. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1134"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation: Parent PID Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via theÂ CreateProcessÂ API call, which supports a parameter that defines the PPID to use. This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically viaÂ svchost.exeÂ orÂ consent.exe) rather than the current user context.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1134_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1134"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1015"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1134.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Token Manipulation: SID-History Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. An account can hold additional SIDs in the SID-History Active Directory attribute , allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Clean up SID-History attributes after legitimate account migration is complete.Consider applying SID Filtering to interforest trusts, such as forest trusts and external trusts, to exclude SID-History from requests to access domain resources. SID Filtering ensures that any authentication requests over a trust only contain SIDs of security principals from the trusted domain (i.e preventing the trusted domain from claiming a user has membership in groups outside of the domain).SID Filtering of forest trusts is enabled by default, but may have been disabled in some cases to allow a child domain to transitively access forest trusts. SID Filtering of external trusts is automatically enabled on all created external trusts using Server 2003 or later domain controllers.However note that SID Filtering is not automatically applied to legacy trusts or may have been deliberately disabled to allow inter-domain access to resources.SID Filtering can be applied by:Disabling SIDHistory on forest trusts using the netdom tool (netdom trust /domain: /EnableSIDHistory:noon the domain controller)Applying SID Filter Quarantining to external trusts using the netdom tool (netdom trust/domain:/quarantine:yeson the domain controller)Applying SID Filtering to domain trusts within a single forest is not recommended as it is an unsupported configuration and can cause breaking changes.If a domain within a forest is untrustworthy then it should not be a member of the forest. In this situation it is necessary to first split the trusted and untrusted domains into separate forests where SID Filtering can be applied to an interforest trust</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls, such as PowerShell Get-ADUser cmdlet or Windows API DsAddSidHistory function, to examine data in userâ€™s SID-History attributes, especially users who have SID-History values from the same domain.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Examine data in userâ€™s SID-History attributes</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1087_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1087"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_LAM"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1087.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Discovery: Local Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located at HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; Windows Components &gt; Credential User Interface: Enumerate administrator accounts on elevation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such asnet user,net account,net localgroup,Get-LocalUser, anddscl.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor access to file resources that contain local accounts and groups information such as/etc/passwd,/Usersdirectories, and the Windows SAM database.If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such asNetUserEnum()) that may attempt to gather local accounts information such as type of user, privileges and groups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes that can be used to enumerate user accounts and groups such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such asWindows Management InstrumentationandPowerShell.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). - For Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on the enumeration/reading of files that store local users, including/etc/passwd. - For MacOS, utilities that work in concert with Appleâ€™s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asidandgroups.Analytic 1 - Net Discovery Commandsprocesses = filter processes where ((event_id=10 OR event_id=4688) AND exe == net.exe OR exe == net1.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1087_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1087"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1087.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Discovery: Domain Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent administrator accounts from being enumerated when an application is elevating through UAC since it can lead to the disclosure of account names. The Registry key is located at HKLM  SOFTWARE Microsoft Windows CurrentVersion Policies CredUI EnumerateAdministrators. It can be disabled through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; Windows Components &gt; Credential User Interface: Enumerate administrator accounts on elevation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such asnet user /domainandnet group /domain,dscacheutil -q groupon macOS, andldapsearchon Linux.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes that can be used to enumerate domain accounts and groups, such asnet.exeandnet1.exe, especially when executed in quick succession.Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1087_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1087"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1087.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Discovery: Email Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such asGet-AddressList,Get-GlobalAddressList, andGet-OfflineAddressBook.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes, such asWindows Management InstrumentationandPowerShell, with arguments that can be used to enumerate email addresses and accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1087_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1087"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1087.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Discovery: Cloud Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: Additional Cloud Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the CreateKeyPair and ImportKeyPair API calls through IAM policies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that low-privileged user accounts do not have permission to add access keys to accounts. In AWS environments, prohibit users from calling the sts:GetFederationToken API unless explicitly required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected changes to cloud user accounts, such as Azure Activity Logs highlighting malicious Service Principal and Application modifications.Monitor for the use of API and CLI commands that add access keys or tokens to accounts, such asCreateAccessKeyorGetFederationTokenin AWS orservice-accounts keys createin GCP. Also monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0036_003"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: Additional Email Delegate Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If email delegation is not required, disable it. In Google Workspace this can be accomplished through the Google Admin console.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: Additional Cloud Roles</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments. With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that all accounts use the least privileges they require. In Azure AD environments, consider using Privileged Identity Management (PIM) to define roles that require two or more approvals before assignment to users.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that low-privileged user accounts do not have permissions to add permissions to accounts or update IAM policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. Monitor for updates to IAM policies and roles attached to user accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: SSH Authorized Keys</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify the SSHÂ authorized_keysÂ file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. TheÂ authorized_keysÂ file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory underÂ &lt;user-home&gt; .ssh authorized_keys. Users may edit the systemâ€™s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value yes to ensure public key and RSA authentication are enabled. The SSH config file is usually located underÂ  etc ssh sshd_config.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable SSH if it is not necessary on a host or restrict SSH access for specific users/groups using /etc/ssh/sshd_config.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict access to the authorized_keys file.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: Device Registration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require multi-factor authentication to register devices in Azure AD. Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts. When first enrolling MFA, use conditional access policies to restrict device enrollment to trusted locations or devices, and consider using temporary access passes as an initial MFA solution to enroll a device.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.Additionally, joined devices can be viewed via the Azure AD portal.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0038_001"/>
  <identifiedBy rdf:resource="#DS0038_002"/>
  <identifiedBy rdf:resource="#DS0038_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Domains</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Organizations may intentionally register similar domains to their own to deter adversaries from creating typosquatting domains. Other facets of this technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor queried domain name system (DNS) registry data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logged domain name system (DNS) data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: DNS Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex:Â Application Layer Protocol). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Virtual Private Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may rent Virtual Private Servers (VPSs)Â that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, lease, or rent physical serversÂ that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Adversaries may use web servers to support support watering hole operations, as inÂ Drive-by Compromise, or email servers to supportÂ PhishingÂ operations. Instead of compromising a third-partyÂ ServerÂ or renting aÂ Virtual Private Server, adversaries may opt to configure and run their own servers in support of operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Botnet</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, lease, or rent a network of compromised systemsÂ that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Adversaries may purchase a subscription to use an existing botnet from a booter stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scaleÂ PhishingÂ or Distributed Denial of Service (DDoS).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Web Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may register for web servicesÂ that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service),Â Exfiltration Over Web Service, orÂ Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) orExfiltration Over Web Service.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Serverless</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1583_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1583"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1583.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acquire Infrastructure: Malvertising</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements. Purchased ads may also target specific audiences using the advertising networkâ€™s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should be focused on initial access activities, such as drive by compromise where ad blocking adblockers can help prevent malicious code from executing.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in the malicious web content related to malvertising have been previously identified, internet scanning may uncover when an adversary has staged malicious web content. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1595_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1595"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1595.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Scanning: Scanning IP Blocks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1595_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1595"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1595.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Scanning: Vulnerability Scanning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1595_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1595"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1595.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Scanning: Wordlist Scanning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods toÂ Brute Force, its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex:Â Gather Victim Org Information, orÂ Search Victim-Owned Websites).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove or disable access to any systems, resources, and infrastructure that are not explicitly required to be available externally.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1557_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1557"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1557.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By responding to LLMNR NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable LLMNR and NetBIOS in local computer security settings or by group policy if they are not needed within an environment. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use host-based security software to block LLMNR/NetBIOS traffic. Enabling SMB Signing can stop NTLMv2 relay attacks.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045.Deploy an LLMNR/NBT-NS spoofing detection tool.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor HKLMSoftwarePoliciesMicrosoftWindows NTDNSClient for changes to the EnableMulticast DWORD value. A value of 0 indicates LLMNR is disabled.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1557_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1557"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1557.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary-in-the-Middle: ARP Cache Poisoning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such asÂ Network SniffingÂ orÂ Transmitted Data Manipulation.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling updating the ARP cache on gratuitous ARP replies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider enabling DHCP Snooping and Dynamic ARP Inspection on switches to create mappings between IP addresses requested via DHCP and ARP tables and tie the values to a port on the switch that may block bogus traffic.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create static ARP entries for networked devices. Implementing static ARP entries may be infeasible for large networks.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the applicationâ€™s certificate does not match the one expected by the host.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1557_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1557"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1557.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary-in-the-Middle: DHCP Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such asÂ Network SniffingÂ orÂ Transmitted Data Manipulation.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider filtering DHCP traffic on ports 67 and 68 to/from unknown or untrusted DHCP servers. Additionally, port security may also be enabled on layer switches. Furthermore, consider enabling DHCP snooping on layer 2 switches as it will prevent DHCP spoofing attacks and starvation attacks. Consider tracking available IP addresses through a script or a tool.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that can identify traffic patterns indicative of AiTM activity can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor network traffic for rogue DHCPv6 activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1071_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1071"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1071.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Layer Protocol: Web Protocols</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using application layer protocols associated with web traffic to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1071_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1071"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_FC"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1071.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Layer Protocol: File Transfer Protocols</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using application layer protocols associated with transferring files to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1071_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1071"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1071.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Layer Protocol: Mail Protocols</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1071_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1071"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1071.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Layer Protocol: DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider filtering DNS requests to unknown, untrusted, or known bad domains and resources. Resolving DNS requests with on-premise/proxy servers may also disrupt adversary attempts to conceal data within DNS packets.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNS over TLS (DoT) and DNS over HTTPS (DoH), that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1560_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1560"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1560.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Archive Collected Data: Archive via Utility</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use utilities to compress and or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier more secure to transport.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System scans can be performed to identify unauthorized archival utilities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip. BeforeExfiltrationthat an adversary hasCollection, it is very likely that aArchive Collected Datawill be created, so that transfer times are minimized and fewer files are transmitted. There is variety between the tools used to compress data, but the command line usage and context of archiving tools, such as ZIP, RAR, and 7ZIP, should be monitored.In addition to looking for RAR or 7z program names, command line usage of 7Zip or RAR can be detected with the flag usage of * a *. This is helpful, as adversaries may change program names.Note: This analytic looks for the command line argument a, which is used by RAR. However, there may be other programs that have this as a legitimate argument and may need to be filtered out.Analytic 1 - Command Line Usage of Archiving Softwarerar_argument = filter processes where (command_line == a)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1560_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1560"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1560.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Archive Collected Data: Archive via Library</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, includingÂ PythonÂ rarfile , libzip , and zlib . Most libraries include functionality to encrypt and or compress data.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1560_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1560"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1560.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Archive Collected Data: Archive via Custom Method</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1020_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1020"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1020.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automated Exfiltration: Traffic Duplication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the run keys in the Registry or startup folder will cause the program referenced to be executed when a user logs in. These programs will be executed under the context of the user and will have the account's associated permissions level.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes executed from the Run/RunOnce registry keys through Windows EID 9707 or SoftwareMicrosoftWindowsCurrentVersionRun and SoftwareMicrosoftWindowsCurrentVersionRunOnce registry keys with the full command line.Registry modifications are often essential in establishing persistence via known Windows mechanisms. Many legitimate modifications are done graphically via regedit.exe or by using the corresponding channels, or even calling the Registry APIs directly. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exe will likely be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be learned so they can be tuned out accordingly.Output DescriptionThe sequence of processes that resulted in reg.exe being started from a shell. That is, a hierarchy that looks likeâ€¢ great-grand_parent.exeâ€¢ grand_parent.exeâ€¢ parent.exeâ€¢ reg.exeAnalytic 1 - Reg.exe called from Command Shellreg = filter processes where (exe == reg.exe and parent_exe == cmd.exe)cmd = filter processes where (exe == cmd.exe and parent_exe != explorer.exe)reg_and_cmd = join (reg, cmd) where (reg.ppid == cmd.pid and reg.hostname == cmd.hostname)Analytic 2 - Rare LolBAS Command Lineslolbas_processes = filter processes where (exe = At.exe OR exe = Atbroker.exe OR exe = Bash.exe OR exe = Bitsadmin.exe OR exe = Certutil.exe OR exe = Cmd.exe OR exe = Cmdkey.exe OR exe = Cmstp.exe OR exe = Control.exe OR exe = Csc.exe OR exe = Cscript.exe OR exe = Dfsvc.exe OR exe = Diskshadow.exe OR exe = Dnscmd.exe OR exe = Esentutl.exe OR exe = Eventvwr.exe OR exe = Expand.exe OR exe = Extexport.exe OR exe = Extrac32.exe OR exe = Findstr.exe OR exe = Forfiles.exe OR exe = Ftp.exe OR exe = Gpscript.exe OR exe = Hh.exe OR exe = Ie4uinit.exe OR exe = Ieexec.exe OR exe = Infdefaultinstall.exe OR exe = Installutil.exe OR exe = Jsc.exe OR exe = Makecab.exe OR exe = Mavinject.exe OR exe = Microsoft.Workflow.r.exe OR exe = Mmc.exe OR exe = Msbuild.exe OR exe = Msconfig.exe OR exe = Msdt.exe OR exe = Mshta.exe OR exe = Msiexec.exe OR exe = Odbcconf.exe OR exe = Pcalua.exe OR exe = Pcwrun.exe OR exe = Presentationhost.exe OR exe = Print.exe OR exe = Reg.exe OR exe = Regasm.exe OR exe = Regedit.exe OR exe = Register-cimprovider.exe OR exe = Regsvcs.exe OR exe = Regsvr32.exe OR exe = Replace.exe OR exe = Rpcping.exe OR exe = Rundll32.exe OR exe = Runonce.exe OR exe = Runscripthelper.exe OR exe = Sc.exe OR exe = Schtasks.exe OR exe = Scriptrunner.exe OR exe = SyncAppvPublishingServer.exe OR exe = Tttracer.exe OR exe = Verclsid.exe OR exe = Wab.exe OR exe = Wmic.exe OR exe = Wscript.exe OR exe = Wsreset.exe OR exe = Xwizard.exe OR exe = Advpack.dll OR exe = Comsvcs.dll OR exe = Ieadvpack.dll OR exe = Ieaframe.dll OR exe = Mshtml.dll OR exe = Pcwutl.dll OR exe = Setupapi.dll OR exe = Shdocvw.dll OR exe = Shell32.dll OR exe = Syssetup.dll OR exe = Url.dll OR exe = Zipfldr.dll OR exe = Appvlp.exe OR exe = Bginfo.exe OR exe = Cdb.exe OR exe = csi.exe OR exe = Devtoolslauncher.exe OR exe = dnx.exe OR exe = Dxcap.exe OR exe = Excel.exe OR exe = Mftrace.exe OR exe = Msdeploy.exe OR exe = msxsl.exe OR exe = Powerpnt.exe OR exe = rcsi.exe OR exe = Sqler.exe OR exe = Sqlps.exe OR exe = SQLToolsPS.exe OR exe = Squirrel.exe OR exe = te.exe OR exe = Tracker.exe OR exe = Update.exe OR exe = vsjitdebugger.exe OR exe = Winword.exe OR exe = Wsl.exe OR exe = CL_Mutexverifiers.ps1 OR exe = CL_Invocation.ps1 OR exe = Manage-bde.wsf OR exe = Pubprn.vbs OR exe = Slmgr.vbs OR exe = Syncappvpublishingserver.vbs OR exe = winrm.vbs OR exe = Pester.bat)process_count = count(lolbas_processes) by processprocess_count_avg = average(process_count)process_count_stdev = standard_deviation(process_count)lower_bound = process_count_avg - stdev * 1.5outliers = filter lolbas_processes where (process_count &lt; lower_bound)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys Registry locations.Detection of the modification of the registry keyCommon Startuplocated in HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders and HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerUser Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys.Analytic 1 - Modification of Default Startup Folder in the Registry Key â€˜Common Startupâ€™logon_reg_processes = filter processes where (command_line CONTAINS(reg) AND command_line CONTAINS(add) AND command_line CONTAINS(/d) OR (command_line CONTAINS(Set-ItemProperty) AND command_line CONTAINS(-value)) AND command_line CONTAINS(Common Startup))reg_keys = search Registry:value_editlogon_reg_keys = filter reg_keys where value=Common Startup</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1025"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Authentication Package</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows 8.1, Windows Server 2012 R2, and later versions, may make LSA run as a Protected Process Light (PPL) by setting the Registry key HKLM SYSTEM CurrentControlSet Control Lsa RunAsPPL, which requires all DLLs loaded by LSA to be signed by Microsoft.  </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Time Providers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains. W32Time time providers are responsible for retrieving time stamps from hardware network resources and outputting these values to other network clients.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using Group Policy to configure and block additions/modifications to W32Time DLLs. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using Group Policy to configure and block modifications to W32Time parameters in the Registry. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes, such as the W32tm.exe utility.The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Winlogon Helper DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse features of Winlogon to execute DLLs and or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries inÂ HKLM Software[ Wow6432Node ] Microsoft Windows NT CurrentVersion Winlogon Â andÂ HKCU Software Microsoft Windows NT CurrentVersion Winlogon Â are used to manage additional helper programs and functionalities that support Winlogon.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and block potentially malicious software that may be executed through the Winlogon helper process by using application control  tools like AppLockerthat are capable of auditing and/or blocking unknown DLLs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and or executables when a user logs in.Analytic 1 - Modification of the Winlogon Registry Keysuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (ProcessCommandLine LIKE '%MicrosoftWindows NTCurrentVersionWinlogon%' AND (ProcessCommandLine LIKE '%Userinit%' OR ProcessCommandLine LIKE '%Shell%' OR ProcessCommandLine LIKE '%Notify%')) AND (ProcessCommandLine LIKE '%reg%' OR ProcessCommandLine LIKE '%add%' OR ProcessCommandLine LIKE '%/d%' OR ProcessCommandLine LIKE '%Set-ItemProperty%' OR ProcessCommandLine LIKE '%New-ItemProperty%' ProcessCommandLine LIKE '%-value%')</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values.Analytic 1 - Modification of the Winlogon Registry Keysuspicious_processes = filter registry where event_id == 13 AND (RegistryKeyPath LIKE %Userinit% OR RegistryKeyPath LIKE %Shell% OR RegistryKeyPath LIKE %Notify%)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1025"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Security Support Provider</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows 8.1, Windows Server 2012 R2, and later versions may make LSA run as a Protected Process Light (PPL) by setting the Registry key HKLM SYSTEM CurrentControlSet Control Lsa RunAsPPL, which requires all SSP DLLs to be signed by Microsoft.  </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry keyHKLMSOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution OptionsLSASS.exewith AuditLevel = 8.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0008_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Kernel Modules and Extensions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Common tools for detecting Linux rootkits include: rkhunter , chrootkit , although rootkits may be designed to evade certain detection tools.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application control and software restriction tools, such as SELinux, KSPP, grsecurity MODHARDEN, and Linux kernel tuning can aid in restricting kernel module loading.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in com.apple.syspolicy.kernel-extension-policy.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands:modprobe,insmod,lsmod,rmmod, ormodinfoAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled.Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.On macOS, monitor for execution ofkextloadcommands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in thekext_policytable. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database,/var/db/SystemPolicyConfiguration/KextPolicy.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">LKMs are typically loaded into/lib/modulesand have had the extension .ko (kernel object) since version 2.6 of the Linux kernel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Re-opened Applications</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to Reopen windows when logging back in. When selected, all applications currently open are added to a property list file namedÂ com.apple.loginwindow.[UUID].plistÂ within theÂ ~ Library Preferences ByHostÂ directory. Applications listed in this file are automatically reopened upon the userâ€™s next logon.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This feature can be disabled entirely with the following terminal command: defaults write -g ApplePersistence -bool no.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Holding the Shift key while logging in prevents apps from opening automatically.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1025"/>
  <preventedBy rdf:resource="#M1043"/>
  <preventedBy rdf:resource="#M1044"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: LSASS Driver</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10 and Server 2016, enable Windows Defender Credential Guard  to run lsass.exe in an isolated virtualized environment without any device drivers. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 8.1 and Server 2012 R2, enable LSA Protection by setting the Registry key HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa RunAsPPL to dword:00000001.  LSA Protection ensures that LSA plug-ins and drivers are only loaded if they are digitally signed with a Microsoft signature and adhere to the Microsoft Security Development Lifecycle (SDL) process guidance.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure safe DLL search mode is enabled HKEY_LOCAL_MACHINE System CurrentControlSet Control Session Manager SafeDllSearchMode to mitigate risk that lsass.exe loads a malicious code library. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Also monitor DLL load operations in lsass.exe.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Shortcut Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Port Monitors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through theÂ AddMonitorÂ API call to set a DLL to be loaded at startup. This DLL can be located inÂ C: Windows System32Â and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL toÂ HKLM SYSTEM CurrentControlSet Control Print Monitors.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor process API calls toAddMonitor.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry writes toHKLMSYSTEMCurrentControlSetControlPrintMonitors. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Print Processors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, spoolsv.exe, during boot.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit user accounts that can load or unload device drivers by disabling SeLoadDriverPrivilege.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal DLLs that are loaded byspoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious. New print processor DLLs are written to the print processor directory.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor process API calls toAddPrintProcessorandGetPrintProcessorDirectory.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry writes toHKLMSYSTEMControlSet001ControlPrintEnvironments[Windows architecture]Print Processors[user defined]DriverorHKLMSYSTEMCurrentControlSetControlPrintEnvironments[Windows architecture]Print Processors[user defined]Driveras they pertain to print processor installations.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_013">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1033"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: XDG Autostart Entries</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify XDG autostart entries to execute programs or commands during system boot. Linux desktop environments that are XDG compliant implement functionality for XDG autostart entries. These entries will allow an application to automatically start during the startup of a desktop environment after user logon. By default, XDG autostart entries are stored within theÂ  etc xdg autostartÂ orÂ ~ .config autostartÂ directories and have a .desktop file extension.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict software installation to trusted repositories only and be cautious of orphaned software packages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict write access to XDG autostart entries to only select privileged users.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious XDG autostart entries may be detected by auditing file creation events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious XDG autostart entries may be detected by auditing file modification events within the/etc/xdg/autostartand~/.config/autostartdirectories. Depending on individual configurations, defenders may need to query the environment variables$XDG_CONFIG_HOMEor$XDG_CONFIG_DIRSto determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_014">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Active Setup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer. These programs will be executed under the context of the user and will have the account's associated permissions level.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry key additions toHKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry key modifications toHKEY_LOCAL_MACHINESOFTWAREMicrosoftActive SetupInstalled Components.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1547_015">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1547"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1547.015</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Autostart Execution: Login Items</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in. Login items can be added via a shared file list or Service Management Framework. Shared file list login items can be set using scripting languages such asÂ AppleScript, whereas the Service Management Framework uses the API callÂ SMLoginItemSetEnabled.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">All login items created via shared file lists are viewable by using the System Preferences GUI or in the~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btmfile.These locations should be monitored and audited.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1037"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1024"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts: Logon Script (Windows)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system. This is done via adding a path to a script to theÂ HKCU Environment UserInitMprLogonScriptÂ Registry key.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys for logon scripts that may lead to persistence.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for logon scripts</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that execute logon scripts</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation/modification to Registry keys associated with Windows logon scrips, nameleyHKCUEnvironmentUserInitMprLogonScript.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1037"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts: Login Hook</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in theÂ  Library Preferences com.apple.loginwindow.plistÂ file and can be modified using theÂ defaultsÂ command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict write access to logon scripts to specific administrators.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands with arguments to install or modify login hooks.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of and/or changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1037"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts: Network Logon Script</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects. These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict write access to logon scripts to specific administrators.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for logon scripts</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files by unusual accounts outside of normal administration duties</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that execute logon scripts</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1037"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts: RC Scripts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like systemâ€™s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts so only authorized users can edit the rc.common file.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed /etc/rc.local file</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that execute /etc/rc.local if present.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1037_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1037"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1037.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot or Logon Initialization Scripts: Startup Items</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Since StartupItems are deprecated, preventing all users from writing to the /Library/StartupItems directory would prevent any startup items from getting registered.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for logon scripts</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files by unusual accounts outside of normal administration duties</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1110_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1110"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1110.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force: Password Guessing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Upgrade management services to the latest supported and compatible version. Specifically, any version providing increased password complexity or policy enforcement preventing default or weak passwords.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for many failed authentication attempts across various accounts that may result from password guessing attempts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1110_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1110"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1110.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force: Password Cracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained.Â OS Credential DumpingÂ can be used to obtain password hashes, this may only get an adversary so far whenÂ Pass the HashÂ is not an option. Further, adversaries may leverageÂ Data from Configuration RepositoryÂ in order to obtain hashed credentials for network devices.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs for system and application login failures ofValid Accounts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such asOS Credential DumpingorKerberoasting.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1110_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1110"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1110.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force: Password Spraying</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable account restrictions to prevent login attempts, and the subsequent 2FA/MFA service requests, from being initiated from suspicious locations or when the source of the login attempts do not match the location of the 2FA/MFA smart device. Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs for system and application login failures ofValid Accounts. Consider the following event IDs:Domain Controllers: Audit Logon (Success &amp; Failure) for event ID 4625.Domain Controllers: Audit Kerberos Authentication Service (Success &amp; Failure) for event ID 4771.All systems: Audit Logon (Success &amp; Failure) for event ID 4648.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1110_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1110"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1110.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force: Credential Stuffing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs for system and application login failures ofValid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for many failed authentication attempts across various accounts that may result from credential stuffing attempts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: PowerShell</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include theÂ Start-ProcessÂ cmdlet which can be used to run an executable and theÂ Invoke-CommandÂ cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set PowerShell execution policy to execute only signed scripts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate. PowerShell Constrained Language mode can be used to restrict access to sensitive or otherwise dangerous language elements such as those used to execute arbitrary Windows APIs or files (e.g., Add-Type).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When PowerShell is necessary, consider restricting PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations).PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).Analytic 1 - Processes loading PowerShell assembliessuspicious_processes = filter ProcessGuid, ProcessFilePath, ModulePath, FileDescription where EventId == 7 AND (ModulePath LIKE '%system.management.automation%' OR FileDescription LIKE '%system.management.automation%')</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). - The logic for Analytic 1 is based around detecting on non-interactive Powershell sessions (i.e., those not launched by a user through explorer.exe). This may lead to false positives when used in a production environment, so we recommend tuning any such analytics by including additional logic (e.g., looking for suspicious parent processes) that helps filter such events.- The logic for Analytic 2 is based around detecting on remote Powershell sessions. PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe.Analytic 1- Non-interactive Powershell Sessionsprocesses = filter process where ((event_id=10 OR event_id=4688) AND exe == powershell.exe AND parent_exe != explorer.exe)Analytic 2- Remote Powershell Sessionsprocesses = filter process where ((event_id=10 OR event_id=4688) AND exe == wsmprovhost.exe and parent_exe == svchost.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in theEngineVersionfield (which may also be relevant to detecting a potentialDowngrade Attack) as well as if PowerShell is running locally or remotely in theHostNamefield. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1045"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: AppleScript</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents. These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require that all AppleScript be signed by a trusted developer ID before being executed - this will prevent random AppleScript code from executing. This subjects AppleScript code to the same scrutiny as other .app files passing through Gatekeeper.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for execution of AppleScript throughosascriptand usage of theNSAppleScriptandOSAScriptAPIs that may be related to other suspicious behavior occurring on the system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system informationDiscovery,Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Windows Command Shell</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the Windows command shell for execution. The Windows command shell (cmd) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely viaÂ Remote ServicesÂ such asÂ SSH.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse the Windows command shell for execution.Note: This Analytic works by creating a baseline of parent processes ofcmdseen over the last 30 days and a list of parent processes ofcmdseen today. Parent processes in the baseline are removed from the set of parent processes seen today, leaving a list of new parent processes. This analytic attempts to identify suspicious programs spawningcmdby looking for programs that do not normally createcmd. It is very common for some programs to spawncmdas a subprocess, for example to run batch files or Windows commands. However, many processes donâ€™t routinely launch a command prompt - e.g., Microsoft Outlook. A command prompt being launched from a process that normally doesnâ€™t launch command prompts could be the result of malicious code being injected into that process, or of an attacker replacing a legitimate program with a malicious one.Analytic 1cmd == filter processes where ((event_id == 1 OR event_id == 4688) AND exe == cmd.exe)cmd == from cmd select parent_exehistoric_cmd == filter cmd (where timestamp &lt; now - 1 day AND timestamp &gt; now - 1 day)current_cmd == filter cmd (where timestamp &gt;= now - 1 day)new_cmd == historic_cmd - current_cmd</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Unix Shell</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Visual Basic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such asÂ Component Object ModelÂ and theÂ Native APIÂ through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Visual Basic scripts from executing potentially malicious downloaded content .</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off or restrict access to unneeded VB components.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate. VBA macros obtained from the Internet, based on the file's Mark of the Web (MOTW) attribute, may be blocked from executing in Office applications (ex: Access, Excel, PowerPoint, Visio, and Word) by default starting in Windows Version 2203.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the loading of modules associated with VB languages (ex: vbscript.dll).Note: For Windows, Sysmon Event ID 7 (Image loaded) can be used to alert on the loading of DLL modules (e.g., vbscript.dll) associated with Visual Basic into processes. Due to the high frequency of image load operations, Event ID 7 can generate a large volume of events. Therefore, we recommend tuning the Sysmon configuration file to exclude common, benign image loads that may result in false positives.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1033"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Python</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via theÂ python.exeÂ interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inventory systems for unauthorized Python installations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Denylist Python where not required.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent users from installing Python where not required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: JavaScript</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent JavaScript scripts from executing potentially malicious downloaded content .</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off or restrict access to unneeded scripting components.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Denylist scripting where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system informationDiscovery,Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA throughosascriptand usage ofOSAScriptAPI that may be related to other suspicious behavior occurring on the system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the loading of modules associated with scripting languages (ex: JScript.dll).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Network Device CLI</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1059_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1059"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1059.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command and Scripting Interpreter: Cloud API</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells,Â PowerShellÂ modules like Azure for PowerShell, or software developer kits (SDKs) available for languages such asÂ Python.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate to block use of PowerShell CmdLets or other host based resources to access cloud API resources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of proper Identity and Access Management (IAM) with Role Based Access Control (RBAC) policies to limit actions administrators can perform and provide a history of administrative actions to detect unauthorized use and abuse.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider reviewing command history in either host machines or cloud audit logs to determine if unauthorized or suspicious commands were executed.Cloud API activity logging is typically enabled by default and may be reviewed in sources like the Microsoft Unified Audit Log, AWS CloudTrail, and GCP Admin Acitivty logs. Review these sources for history of executed API commands. Host logs may also be reviewed to capture CLI commands or PowerShell module usage to invoke Cloud API functions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1586_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1586"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0021_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1586.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Accounts: Social Media Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e.Â Social Media Accounts), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1586_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1586"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1586.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Accounts: Email Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conductÂ Phishing for Information,Â Phishing, or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex:Â Domains).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1586_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1586"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1586.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Accounts: Cloud Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets forÂ Exfiltration to Cloud StorageÂ or toÂ Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such asÂ Virtual Private Servers orÂ ServerlessÂ infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0038_001"/>
  <identifiedBy rdf:resource="#DS0038_002"/>
  <identifiedBy rdf:resource="#DS0038_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Domains</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may hijack domains and or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant. Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for queried domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0038_001"/>
  <identifiedBy rdf:resource="#DS0038_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: DNS Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex:Â Application Layer Protocol). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for queried domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Virtual Private Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <identifiedBy rdf:resource="#DS0035_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing aÂ ServerÂ orÂ Virtual Private Server, adversaries may compromise third-party servers in support of operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Botnet</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise numerous third-party systems to form a botnetÂ that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks. Instead of purchasing renting a botnet from a booter stresser service, adversaries may build their own botnet by compromising numerous third-party systems. Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scaleÂ PhishingÂ or Distributed Denial of Service (DDoS).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Web Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise access to third-party web servicesÂ that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control (Web Service),Â Exfiltration Over Web Service, orÂ Phishing. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and ControlWeb ServiceorExfiltration Over Web Service.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1584_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1584"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1584.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compromise Infrastructure: Serverless</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1136_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1136"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1136.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create Account: Local Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. With a sufficient level of access, theÂ net user  addÂ command can be used to create a local account. On macOS systems theÂ dscl -createÂ command can be used to create a local account. Local accounts may also be added to network devices, often via commonÂ Network Device CLIÂ commands such asÂ username.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of accounts permitted to create other accounts. Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that are associated with local account creation, such asnet user /add,useradd,dscl -create, andkubectl create serviceaccount.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes associated with account creation, such as net.exeAnalytic 1 - Create local admin accounts using net.execertutil_downloads = filter processes where ( (exe = C:WindowsSystem32net.exe OR exe = C:WindowsSystem32net1.exe ) AND command_line = * -exportPFX * )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user and service accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network, a Kubernetes cluster, or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1136_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1136"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1136.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create Account: Domain Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, theÂ net user  add  domainÂ command can be used to create a domain account.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect domain controllers by ensuring proper security configuration for critical servers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of accounts with permissions to create other accounts. Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes associated with account creation, such as net.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1136_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1136"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1136.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create Account: Cloud Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of accounts with permissions to create other accounts. Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts, such as accounts that do not follow specified naming conventions or accounts created by unapproved users or sources.Monitor for newly created admin accounts that go over a certain threshold of known admins.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1543_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1543"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1543.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create or Modify System Process: Launch Agent</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found inÂ  System Library LaunchAgents,Â  Library LaunchAgents, andÂ ~ Library LaunchAgents. Property list files use theÂ Label,Â ProgramArgumentsÂ , andÂ RunAtLoadÂ keys to identify the Launch Agent's name, executable location, and execution time. Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set group policies to restrict file permissions to the ~/launchagents folder.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure Launch Agent'sProgramArgumentskey pointing to executables located in the/tmpor/sharedfolders are in alignment with enterprise policy. Ensure all Launch Agents with theRunAtLoadkey set totrueare in alignment with policy.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Launch Agent creation through additional plist files and utilities such as Objective-Seeâ€™s KnockKnock application.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1543_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1543"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1033"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1543.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create or Modify System Process: Systemd Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources. Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict software installation to trusted repositories only and be cautious of orphaned software packages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict read/write access to systemd unit files to only select privileged users who have a legitimate need to manage system services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit user access to system utilities such as systemctl to only users who have a legitimate need.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services:systemctl list-units -â€“type=service â€“all. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as/usr/sbin/servicemay reveal malicious systemd service execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Systemd service unit files may be detected by auditing file creation and modification events within the/etc/systemd/system,/usr/lib/systemd/system/, and/home//.config/systemd/user/directories, as well as associated symbolic links</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspicious processes or scripts spawned in this manner will have a parent process of â€˜systemdâ€™, a parent process ID of 1, and will usually execute as the â€˜rootâ€™ user.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for new constructed systemd services to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyze the contents of.servicefiles present on the file system and ensure that they refer to legitimate, expected executables.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1543_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1543"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1543.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create or Modify System Process: Windows Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions. Windows service configuration information, including the file path to the service's executable or recovery programs commands, is stored in the Windows Registry.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system. On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed service drivers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce registration and execution of only legitimately signed service drivers where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that Driver Signature Enforcement is enabled to restrict unsigned drivers from being installed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify the binary file for an existing service to achievePersistencewhile potentiallyDefense Evasion. If a newly created or modified runs as a service, it may indicate APT activity. However, services are frequently installed by legitimate software. A well-tuned baseline is essential to differentiating between benign and malicious service modifications. Look for events where a file was created and then later run as a service. In these cases, a new service has been created or the binary has been modified. Many programs, such as msiexec.exe, do these behaviors legitimately and can be used to help validate legitimate service creations/modifications.Analytic 1 - Service Binary Modificationslegitimate_installers = [C:windowssystem32msiexec.exe, C:windowssyswow64msiexec.exe, ...]file_change = search File:Create,Modifyprocess = search Process:Createservice_process = filter processes where (parent_exe == services.exe)modified_service = join (search, filter) where ( file_change.time &lt; service_process.time and file_change.file_path == service_process.image_path)modified_service = filter modified_service where (modified_service.file_change.image_path not in legitimate_installers)output modified_service</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for several ways that code can execute on a remote host. One of the most common methods is via the Windows Service Control Manager (SCM), which allows authorized users to remotely create and modify services. Several tools, such asPsExec, use this functionality.When a client remotely communicates with the Service Control Manager, there are two observable behaviors. First, the client connects to the RPC Endpoint Mapper over 135/tcp. This handles authentication, and tells the client what port the endpointâ€”in this case the SCMâ€”is listening on. Then, the client connects directly to the listening port on services.exe. If the request is to start an existing service with a known command line, the the SCM process will run the corresponding command.This compound behavior can be detected by looking for services.exe receiving a network connection and immediately spawning a child process.Analytic 1 - Remotely Launched Executables via Servicesservice = filter process where (parent_exe == services.exe)remote_start = join (flow, service ) where ( flow.hostname == service.hostname and flow.pid == service.pid and (flow.time &lt; service.time &lt; flow.time + 1 second))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may create or modify Windows services (ex:CreateServiceW()) to repeatedly execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.Windows runs the Service Control Manager (SCM) within the process services.exe. Windows launches services as independent processes or DLL loads within a svchost.exe group. To be a legitimate service, a process (or DLL) must have the appropriate service entry point SvcMain. If an application does not have the entry point, then it will timeout (default is 30 seconds) and the process will be killed.To survive the timeout, adversaries and red teams can create services that direct to cmd.exe with the flag /c, followed by the desired command. The /c flag causes the command shell to run a command and immediately exit. As a result, the desired program will remain running and it will report an error starting the service. This analytic will catch that command prompt instance that is used to launch the actual malicious executable. Additionally, the children and descendants of services.exe will run as a SYSTEM user by default.Note: Create a baseline of services seen over the last 30 days and a list of services seen today. Remove services in the baseline from services seen today, leaving a list of new services. Returns all processes named cmd.exe that have services.exe as a parent process. Because this should never happen, the /c flag is redundant in the search.Analytic 1 : Service Outlier Executablesservices = filter processes where (parent_image_path == C:WindowsSystem32services.exe)historic_services = filter services (where timestamp &lt; now - 1 day AND timestamp &gt; now - 1 day)current_services = filter services (where timestamp &gt;= now - 1 day)new_services = historic_services - current_servicesAnalytic 2 : Services launching CMDsuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (exe == cmd.exe and parent_exe == services.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045), especially those associated with unknown/abnormal drivers. New, benign services may be created during installation of new software.Analytic 1 : Creation of new services with unusual directory paths such as temporal files in APPDATAsuspicious_services = filter ServiceName, ServiceFilePath, ServiceType, ServiceStartType, ServiceAccountName where (event_id == 7045 OR event_id == 4697) AND (ServiceFilePath LIKE `%APPDATA%` OR ServiceImagePath LIKE `%PUBLIC%`)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to Windows services to repeatedly execute malicious payloads as part of persistence.Analytic 1 : System services via registry modificationssuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 13 AND EventType == SetValue AND RegistryKeyPath LIKE `%HKLMSystemCurrentControlSetServices%` AND (RegistryKeyPath LIKE `%ImagePath%` OR RegistryKeyPath LIKE `%Type%` OR RegistryKeyPath LIKE `%DisplayName%` OR RegistryKeyPath LIKE `%Objectname%`)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence.Analytic 1 : Creation of the HKLMSystemCurrentControlSetServices Registry keysuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 12 AND RegistryKeyPath LIKE %HKLMSystemCurrentControlSetServices%</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry atHKLMSYSTEMCurrentControlSetServices. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.Analytic 1 : Modification of the HKLMSystemCurrentControlSetServices Registry keysuspicious_registry = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where (event_id == 13 event_id == 14) AND RegistryKeyPath LIKE %HKLMSystemCurrentControlSetServices%</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1543_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1543"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1543.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create or Modify System Process: Launch Daemon</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found inÂ  System Library LaunchDaemons Â andÂ  Library LaunchDaemons . Required Launch Daemons parameters include aÂ LabelÂ to identify the task,Â ProgramÂ to provide a path to the executable, andÂ RunAtLoadÂ to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with theRunAtLoadparameter set to true, ensure theProgramparameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such asProgramandProgramArgumentsparameters but one must be present.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for new files added to the/Library/LaunchDaemons/folder. The System LaunchDaemons are protected by SIP.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services may create or modify Launch Daemons to execute malicious payloads as part of persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor services for changes made to Launch Daemons to execute malicious payloads as part of persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Keychain</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Appleâ€™s iCloud service.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for Keychain files being accessed that may be related to malicious credential collection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for Keychain Services API calls, specifically legacy extensions such asSecKeychainFindInternetPassword, that may collect Keychain data from a system to acquire credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes spawned by command line utilities to manipulate keychains directly, such assecurity, combined with arguments to collect passwords, such asdump-keychain -d.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Securityd Memory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may obtain root access (allowing them to read securitydâ€™s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the userâ€™s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may obtain root access (allowing them to read securitydâ€™s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the userâ€™s logon keychain.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being accessed that may obtain root access (allowing them to read securitydâ€™s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the userâ€™s logon keychain.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Credentials from Web Browsers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire credentials from web browsers by reading files specific to the target browser. Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify web browser files that contain credentials such as Google Chromeâ€™s Login Data database file:AppDataLocalGoogleChromeUser DataDefaultLogin Data. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Windows Credential Manager</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider enabling the Network access: Do not allow storage of passwords and credentials for network authentication setting that will prevent network credentials from being stored by the Credential Manager.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds: Windows Credentials</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring file reads to Vault locations,%Systemdrive%Users[Username]AppDataLocalMicrosoft[Vault/Credentials], for suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring API calls such asCredEnumerateAthat may list credentials from the Windows Credential Manager.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes for suspicious activity listing credentials from the Windows Credentials locker (e.g.vaultcmd /listcreds:Windows Credentials).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Password Managers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire user credentials from third-party password managers. Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies for master passwords.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update password managers regularly by employing patch management for internal enterprise endpoints and servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may acquire user credentials from third-party password managers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file reads that may acquire user credentials from third-party password managers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may search for common password storage locations to obtain user credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor process being accessed that may acquire user credentials from third-party password managers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1132_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1132"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1132.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Encoding: Standard Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME. Some data encoding systems may also result in data compression, such as gzip.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1132_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1132"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1132.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Encoding: Non-Standard Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific obfuscation technique used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1602_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1602"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1602.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Configuration Repository: SNMP (MIB Dump)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target the Management Information Base (MIB) to collect and or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure SNMPv3 to use the highest level of security (authPriv) available.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply extended ACLs to block unauthorized protocols outside the trusted network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segregate SNMP traffic on a separate management network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allowlist MIB objects and implement SNMP views.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Keep system images and software updated and migrate to SNMPv3.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1602_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1602"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1602.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Configuration Repository: Network Device Configuration Dump</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure SNMPv3 to use the highest level of security (authPriv) available.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply extended ACLs to block unauthorized protocols outside the trusted network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure intrusion prevention devices to detect SNMP queries and commands from unauthorized sources. Create signatures to detect Smart Install (SMI) usage from sources other than trusted director.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segregate SNMP traffic on a separate management network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Keep system images and software updated and migrate to SNMPv3.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1213_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1213"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1213.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Information Repositories: Confluence</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop and publish policies that define acceptable information to be stored in Confluence repositories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter.Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1213_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1213"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1213.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Information Repositories: Sharepoint</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop and publish policies that define acceptable information to be stored in SharePoint repositories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents.As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1213_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1213"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1213.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data from Information Repositories: Code Repositories</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage code repositories to collect valuable information. Code repositories are tools services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for logons to code repositories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop and publish policies that define acceptable information to be stored in code repositories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1565_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1565"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1565.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Manipulation: Stored Data Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider encrypting important information to reduce an adversaryâ€™s ability to perform tailored data modifications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and manipulate backups.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure least privilege principles are applied to important information resources to reduce exposure to data manipulation risk.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1565_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1565"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1565.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Manipulation: Transmitted Data Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypt all important data flows to reduce the impact of tailored modifications on data in transit.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for networks that solicits and obtains the configuration information of the queried device.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for network traffic originating from unknown/unexpected hardware devices.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1565_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1565"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1030"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1565.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Manipulation: Runtime Data Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data. By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent critical business and system processes from being replaced, overwritten, or reconfigured to load potentially malicious code.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1001_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1001"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1001.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Obfuscation: Junk Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending prepending data with junk characters or writing junk characters between significant characters.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1001_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1001"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1001.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Obfuscation: Steganography</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1001_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1001"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1001.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Obfuscation: Protocol Impersonation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate some obfuscation activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1074_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1074"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1074.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Staged: Local Data Staging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asÂ Archive Collected Data. Interactive command shells may be used, and common functionality withinÂ cmdÂ and bash may be used to copy data into a staging location.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1074_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1074"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1074.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Staged: Remote Data Staging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such asÂ Archive Collected Data. Interactive command shells may be used, and common functionality withinÂ cmdÂ and bash may be used to copy data into a staging location.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1491_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1491"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1491.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Defacement: Internal Defacement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper. Disturbing or offensive images may be used as a part ofÂ Internal DefacementÂ in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor internal and websites for unplanned content changes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1491_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1491"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1491.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Defacement: External Defacement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.Â External DefacementÂ may ultimately cause users to distrust the systems and to question discredit the systemâ€™s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.Â External DefacementÂ may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such asÂ Drive-by Compromise.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor external websites for unplanned content changes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1587_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1587"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0004_001"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1587.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop Capabilities: Malware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1587_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1587"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1587.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop Capabilities: Code Signing Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1587_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1587"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1587.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop Capabilities: Digital Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create self-signed SSL TLS certificates that can be used during targeting. SSL TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1587_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1587"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1587.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Develop Capabilities: Exploits</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits. Adversaries may use information acquired viaÂ VulnerabilitiesÂ to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1561_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1561"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_001"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1561.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disk Wipe: Disk Content Wipe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1561_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1561"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1053"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_001"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1561.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disk Wipe: Disk Structure Wipe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing IT disaster recovery plans that contain procedures for taking regular data backups that can be used to restore organizational data. Ensure backups are stored off system and is protected from common methods adversaries may use to gain access and destroy the backups to prevent recovery.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1484_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1484"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_003"/>
  <identifiedBy rdf:resource="#DS0026_004"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1484.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Policy Modification: Group Policy Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network pathÂ  &lt;DOMAIN&gt; SYSVOL &lt;DOMAIN&gt; Policies .</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as BloodHound (version 1.5.1 and later).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed active directory objects, such as Windows EID 5137.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1484_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1484"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_003"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1484.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Policy Modification: Domain Trust Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources. These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use the principal of least privilege and protect administrative access to domain trusts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed active directory objects, such as Windows EID 5137.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypesSet federation settings on domainandSet domain authentication.Monitor for PowerShell commands such as:Update-MSOLFederatedDomain â€“DomainName: Federated Domain Name, orUpdate-MSOLFederatedDomain â€“DomainName: Federated Domain Name â€“supportmultipledomain.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1568_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1568"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1568.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dynamic Resolution: Fast Flux DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1568_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1568"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1568.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dynamic Resolution: Domain Generation Algorithms</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Malware researchers can reverse engineer malware variants that use DGAs and determine future domains that the malware will attempt to contact, but this is a time and resource intensive effort. Malware is also increasingly incorporating seed values that can be unique for each instance, which would then need to be determined to extract future generated domains. In some cases, the seed that a particular sample uses can be extracted from DNS traffic. Even so, there can be thousands of possible domains generated per day; this makes it impractical for defenders to preemptively register all possible C2 domains due to the cost.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.Another approach is to use deep learning to classify domains as DGA-generated]</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1568_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1568"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_DNSTA"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_FRDDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_RRID"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_DNSDL"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1568.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dynamic Resolution: DNS Calculation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and or port number calculation can be used to bypass egress filtering on a C2 channel.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1114_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1114"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1114.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Collection: Local Email Collection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a userâ€™s local system, such as Outlook storage or cache files.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1114_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1114"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <mayBeDetectedBy rdf:resource="#D3_EHB"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeModeledBy rdf:resource="#D3_LLM"/>
  <mayBeModeledBy rdf:resource="#D3_NNI"/>
  <mayBeModeledBy rdf:resource="#D3_PLM"/>
  <mayBeRestoredBy rdf:resource="#D3_RNA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1114.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Collection: Remote Email Collection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such asÂ MailSniperÂ can be used to automate searches for specific keywords.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In Office365 environments, consider using PurviewAudit to collect MailItemsAccessed events and monitoring for unusual email access behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1114_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1114"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1114.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Collection: Email Forwarding Rule</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victimâ€™s organization to use as part of further exploits or operations. Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators. Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling external email forwarding.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.In environments using Exchange, monitor logs for the creation or modification of mail transport rules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows systems, monitor for creation of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1573_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1573"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1573.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypted Channel: Symmetric Cryptography</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1573_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1573"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1020"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1573.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypted Channel: Asymmetric Cryptography</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiverâ€™s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SSL/TLS inspection can be used to see the contents of encrypted sessions to look for network-based indicators of malware communication protocols.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1499_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1499"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1499.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Denial of Service: OS Exhaustion Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1499_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1499"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1499.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Denial of Service: Service Exhaustion Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well. Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1499_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1499"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1499.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Denial of Service: Application Exhaustion Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1499_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1499"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1499.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Denial of Service: Application or System Exploitation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services. Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users.Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1585_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1585"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0021_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1585.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish Accounts: Social Media Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex:Spearphishing via Service).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1585_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1585"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1585.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish Accounts: Email Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conductÂ Phishing for InformationÂ orÂ Phishing. Adversaries may also take steps to cultivate a persona around the email account, such as through use ofÂ Social Media Accounts, to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex:Â Domains).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1585_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1585"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1585.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish Accounts: Cloud Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets forÂ Exfiltration to Cloud StorageÂ or toÂ Upload Tools. Cloud accounts can also be used in the acquisition of infrastructure, such asÂ Virtual Private Servers orÂ ServerlessÂ infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Change Default File Association</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under[HKEY_CURRENT_USER]SoftwareMicrosoftWindowsCurrentVersionExplorerFileExtsand override associations configured under[HKEY_CLASSES_ROOT]. Changes to a users preference will occur under this entrys subkeys.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINESoftwareMicrosoftWindows NTCurrentVersionWindows or HKEY_LOCAL_MACHINESoftwareWow6432NodeMicrosoftWindows NTCurrentVersionWindows are loaded by user32.dll into every process that loads user32.dll. These values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes. Accordingly, this analytic looks for modifications to these registry keys that may be indicative of this type of abuse.Analytic 1 : AppInit DLLsappinit_keys = filter registry_keys where ((event_id == 12 OR event_id == 13 event_id == 14) AND key = SOFTWAREMicrosoftWindows NTCurrentVersionWindowsAppinit_Dlls* OR key = SOFTWAREWow6432NodeMicrosoftWindows NTCurrentVersionWindowsAppinit_Dlls</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Screensaver</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension. The Windows screensaver application scrnsave.scr is located inÂ C: Windows System32 , andÂ C: Windows sysWOW64 Â on 64-bit Windows systems, along with screensavers included with base Windows installations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Group Policy to disable screensavers if they are unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block .scr files from being executed from non-standard locations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments of .scr files.Analytic 1 - Modify the HKCUControl PanelDesktop registry keysuspicious_processes = filter processes where (event_id == 1 OR event_id == 4688) AND (ProcessCommandLine LIKE '%reg%' AND ProcessCommandLine LIKE '%add%' AND ProcessCommandLine LIKE '%HKCUControl PanelDesktop%')</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 - Created on disk that are being used as Screensaver filesscreensaver_key_modification = filter ProcessGuid, ProcessFilePath, UserName, RegistryKeyPath, RegistryKeyValueData where event_id == 13 AND RegistryKeyPath LIKE '%SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE%'new_files = filter ProcessFilePath, UserName, FileName where event_id == 11suspicious_files = filter k.ProcessGuid, k.ProcessFilePath, k.UserName, k.RegistryKeypath, k.RegistryKeyValueData FROM screensaver_key_modification kINNER JOIN new_files fON k.RegistryKeyValueData = f.FileName</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.Note: Although there are no standard events for file modification, Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted accesses of screensaver files (typically ending in a file extension of .scr).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.Analytic 1 : New processes whose image files are being used as Screensaver files and make an outbound network connection to unknown IP addressnew_processes = filter ProcessGuid, ProcessFilePath, ProcessCommandLine, UserNameFROM ProcessCreationDataWHERE event_id == 1new_network_connections = filter ProcessFilePath, DestinationIpFROM NetworkConnectionDataWHERE event_id == 3screensaver_key_modification = filter ProcessGuid, ProcessFilePath, UserName, RegistryKeyPath, RegistryKeyValueData FROM KeyModificationDataWHERE event_id == 13 AND RegistryKeyPath LIKE '%SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE%'screensaver_processes = filter p.ProcessGuid, p.ProcessFilePath, p.UserNameFROM new_processes pINNER JOIN screensaver_key_modification kON p.ProcessFilePath = k.RegistryKeyValueDatasuspicious_processes = filter p.ProcessGuid, p.ProcessFilePath, p.UserName, n.DestinationIpFROM new_network_connections nINNER JOIN screensaver_processes pON p.ProcessFilePath = n.ProcessFilePathWHERE n.DestinationIP NOT IN ('KnownIp01','KnownIp02')</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Default screen saver files are stored in C:WindowsSystem32. Use these files as a reference when defining list of not suspicious screen saver files.Analytic 1 : Registry Edit from Screensaverscr_reg_events = filter processes where ( event_id == 13 AND key=*SoftwarePoliciesMicrosoftWindowsControl PanelDesktopSCRNSAVE.EXE AND RegistryKeyValueData NOT IN (PathToScreenSaverFile1,PathToScreenSaverFile2))</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Windows Management Instrumentation Event Subscription</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent malware from abusing WMI to attain persistence.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent credential overlap across systems of administrator and privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that can be used to register WMI persistence, such as theRegister-WmiEventPowerShellcmdlet</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).Note: Windows Event ID 4688 (A new process has been created) and Sysmon Event ID 1 (Process creation) can be used to alert on processes created by WMI event subscription triggers by filtering on events with a parent process name of WmiPrvSe.exe.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.Monitor for the creation of new WMIEventFilter,EventConsumer, andFilterToConsumerBindingevents. Event ID 5861 is logged on Windows 10 systems when newEventFilterToConsumerBindingevents are created.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_USICA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Unix Shell Configuration Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence through executing malicious commands triggered by a userâ€™s shell. UserÂ Unix Shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system ( etc) and the userâ€™s home directory (~ ) to configure the environment. All login shells on a system use  etc profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the userâ€™s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Making these files immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a userâ€™s shell.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a userâ€™s shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the/etc/shellsfile.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to/etc/profileand/etc/profile.d, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a userâ€™s shell.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Trap</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. TheÂ trapÂ command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts likeÂ ctrl+cÂ andÂ ctrl+d.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: LC_LOAD_DYLIB Addition</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies. There are tools available to perform these changes.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn u2019t included as part of an update, it should be investigated.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce that all binaries be signed by the correct Apple Developer IDs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allow applications via known hashes.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes to binaries that do not line up with application updates or patches are also extremely suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file systems for changes to application binaries and invalid checksums/signatures.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes for those that may be used to modify binary headers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Netsh Helper DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility. The paths to registered netsh.exe helper DLLs are entered into the Windows Registry atÂ HKLM SOFTWARE Microsoft Netsh.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor theHKLMSOFTWAREMicrosoftNetshregistry key for any new or suspicious entries that do not correlate with known system files or benign software.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Accessibility Features</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can replace accessibility features binaries with alternate binaries to execute this technique. Identify and block potentially malicious software executed through accessibility features functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If possible, use a Remote Desktop Gateway to manage connections and security configuration of RDP within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To use this technique remotely, an adversary must use it in conjunction with RDP. Ensure that Network Level Authentication is enabled to force the remote desktop session to authenticate before the session is created and the login screen displayed. It is enabled by default on Windows Vista and later.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of Accessibility Features.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.An adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within Remote Desktop. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled. If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of cmd.exe or powershell.exe launched directly from the logon process, winlogon.exe.Several accessibility programs can be run using the Ease of Access centersethc.exe handles StickyKeysutilman.exe is the Ease of Access menuosk.exe runs the On-Screen Keyboardnarrator.exe reads screen text over audiomagnify.exe magnifies the view of the screen near the cursorOne simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the system32 folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set.The Windows Registry location HKLMSoftwareMicrosoftWindows NTCurrentVersionImage File Execution Options allows for parameters to be set for applications during execution. One feature used by malicious actors is the Debugger option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument. Adversaries can set a Debugger for Accessibility Applications. The analytic looks for the original command line as an argument to the Debugger. When the strings sethc.exe, utilman.exe, osk.exe, narrator.exe, and Magnify.exe are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic example looks for any creation of common accessibility processes such as sethc.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the parent process) that helps reduce false positives.Analytic 2 could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string sethc.exe being used as an argument for another application is unlikely, it still is a possibility.Analytic 1 : Command Launched from Winlogonprocesses = filter process where ((event_id == 1 OR event_id=4688) AND (parent_exe == winlogon.exe and exe == cmd.exe) AND command_line=(sethc.exe OR utilman.exe OR osk.exe OR narrator.exe OR magnify.exe)Analytic 2 : Debuggers for Accessibility Applicationsdebuggers = filter process where (command_line match $..(sethcutilmanosknarratormagnify).exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry keys withinHKEY_LOCAL_MACHINESOFTWAREMicrosoftWindows NTCurrentVersionImage File Execution Options.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: AppCert DLLs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in theÂ AppCertDLLsÂ Registry key underÂ HKEY_LOCAL_MACHINE System CurrentControlSet Control Session Manager Â are loaded into every process that calls the ubiquitously used application programming interface (API) functionsÂ CreateProcess,Â CreateProcessAsUser,Â CreateProcessWithLoginW,Â CreateProcessWithTokenW, orÂ WinExec.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries install new AppCertDLL binaries to execute this technique. Identify and block potentially malicious software executed through AppCertDLLs functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such asRegCreateKeyExandRegSetValueEx.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: AppInit DLLs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in theÂ AppInit_DLLsÂ value in the Registry keysÂ HKEY_LOCAL_MACHINE Software Microsoft Windows NT CurrentVersion WindowsÂ orÂ HKEY_LOCAL_MACHINE Software Wow6432Node Microsoft Windows NT CurrentVersion WindowsÂ are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can install new AppInit DLLs binaries to execute this technique. Identify and block potentially malicious software executed through AppInit DLLs functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Upgrade to Windows 8 or later and enable secure boot.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such asRegCreateKeyExandRegSetValueEx.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.Note: Sysmon Event ID 1 (process create) and Windows Security Log Event ID 4688 (a new process has been created) can be used to detect new reg.exe processes that modify the AppInit DLL registry keys since the registry keys are specified as a command-line parameter.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Application Shimming</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Microsoft released an optional patch update - KB3045645 - that will remove the auto-elevate flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changing UAC settings to Always Notify will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. There are several public tools available that will detect shims that are currently available:* Shim-Process-Scanner - checks memory of every running process for any shim flags* Shim-Detector-Lite - detects installation of custom shim databases* Shim-Guard - monitors registry for any shim installations* ShimScanner - forensic tool to find active shims in memory* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Image File Execution Options Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an applicationâ€™s IFEO will be prepended to the applicationâ€™s name, effectively launching the new process under the debugger (e.g.,Â C: dbg ntsd.exe -g notepad.exe).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such asDEBUG_PROCESSandDEBUG_ONLY_THIS_PROCESS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_013">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: PowerShell Profile</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile (profile.ps1) is a script that runs whenÂ PowerShellÂ starts and can be used as a logon script to customize user environments.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce execution of only signed PowerShell scripts. Sign profiles to avoid them from being modified.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Making PowerShell profiles immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Locations whereprofile.ps1can be stored should be monitored for new profiles.Example profile locations include:*$PsHomeProfile.ps1*$PsHomeMicrosoft.{HostProgram}_profile.ps1*$HomeMy DocumentsPowerShellProfile.ps1*$HomeMy DocumentsPowerShellMicrosoft.{HostProgram}_profile.ps1</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Locations whereprofile.ps1can be stored should be monitored for modifications.Example profile locations include:*$PsHomeProfile.ps1*$PsHomeMicrosoft.{HostProgram}_profile.ps1*$HomeMy DocumentsPowerShellProfile.ps1*$HomeMy DocumentsPowerShellMicrosoft.{HostProgram}_profile.ps1</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_014">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Emond</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is aÂ Launch DaemonÂ that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary atÂ  sbin emondÂ will load any rules from theÂ  etc emond.d rules Â directory and take action once an explicitly defined event takes place.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling emond by removing the Launch Daemon plist file.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor emond rules creation by checking for files created in/etc/emond.d/rules/and/private/var/db/emondClients.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor emond rules creation by checking for files modified in/etc/emond.d/rules/and/private/var/db/emondClients.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_015">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.015</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Component Object Model Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system. References to various COM objects are stored in the Registry.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on changes to COM registry keys, including HKCUSoftwareClassesCLSID*.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex:Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USERSoftwareClassesCLSID may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINESOFTWAREClassesCLSID.Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.Analytic 1 : Component Object Model Hijackingclsid_keys = filter registry_keys where ((event_id == 12 OR event_id == 13 event_id == 14) AND key = *SoftwareClassesCLSID</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1546_016">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1546"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1546.016</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Event Triggered Execution: Installer Packages</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may be related to abuse of installer packages, including malicious commands triggered by application installations.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor creation of files associated with installer packages that may be abused for malicious execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes with arguments that may be related to abuse of installer packages, including malicious, likely elevated processes triggered by application installations.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1480_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1480"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1055"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1480.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Guardrails: Environmental Keying</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation ofÂ Execution GuardrailsÂ that utilizes cryptographic techniques for deriving encryption decryption keys from specific types of values in a given computing environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Environmental Keying likely should not be mitigated with preventative controls because it may protect unintended targets from being compromised. If targeted, efforts should be focused on preventing adversary tools from running earlier in the chain of activity and on identifying subsequent malicious behavior if compromised.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms ofDiscovery, especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1048_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1048"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1048.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1048_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1048"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1048.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being uploaded via web browsers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1048_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1048"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1048.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being sent over unencrypted protocols.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary command and control infrastructure and malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1011_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1011"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1011.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Bluetooth in local computer security settings or by group policy if it is not needed within an environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent the creation of new network adapters where possible.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1052_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1052"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1034"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0016_002"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1052.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Physical Medium: Exfiltration over USB</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can detect and block sensitive data being copied to USB devices.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Autorun if it is unnecessary.  Disallow or restrict removable media at an organizational policy level if they are not required for business operations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the use of USB devices and removable media within a network.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data over a USB connected physical device.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes when removable media is mounted</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1567_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1567"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1021"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1567.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Web Service: Exfiltration to Code Repository</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https:  api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for use of code repositories for data exfiltration.Analytic 1 - Suspicious Data Exfilsuspicious_exfil = filter network_traffic where (httpHost = github.com or httpHost =justpaste.it or httpHost= pastebin.com or httpHost=onpaste.com or httpHost=transfernow.net or httpHost = codepad.org</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1567_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1567"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1021"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1567.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Web Service: Exfiltration to Cloud Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections to cloud services associated with abnormal or non-browser processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for cloud storages for data exfiltration.Analytic 1 - Suspicious Data Exfilsuspicious_exfil = filter network_traffic where (httpHost = dropbox.com or httpHost = box.com or httpHost = drive.google.com or httpHost = mega.io or httpHost = mediafire.com</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1567_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1567"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1021"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1567.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Web Service: Exfiltration to Text Storage Sites</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such asÂ pastebin[.]com, are commonly used by developers to share code and other information.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network traffic for exfiltration attempts using text storage sites, i.e. POST requests to text storage sites.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows, specifically to text storage sites such asPastebin[.]com,Paste[.]ee, andPastebin[.]pl.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1222_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1222"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1222.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File and Directory Permissions Modification: Windows File and Directory Permissions Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID  NT AUTHORITYSYSTEM ) and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 : Access Permission Modification for Windowsfile_dacl_events = filter log_events where (event_id == 4670 ANDobject_type == File ANDsubject_security_id != NT AUTHORITYSYSTEM)Analytic 2 - Access Permission Modification for Linuxchmod_processes = filter processes where command_line == chmod *</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1222_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1222"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1222.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify file or directory permissions attributes to evade access control lists (ACLs) and access protected files. File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments includechmod +x,chmod -R 755, andchmod 777.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.Windows environment logs can be noisy, so we take the following into consideration:We need to exclude events generated by the local system (subject security ID  NT AUTHORITYSYSTEM ) and focus on actual user events.When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed).Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.Analytic 1 : Access Permission Modification for Windowsfile_dacl_events = filter log_events where (event_id == 4670 ANDobject_type == File ANDsubject_security_id !=NT AUTHORITYSYSTEM)Analytic 2 - Access Permission Modification for Linuxchmod_processes = filter processes where command_line == chmod *</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1606_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1606"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1606.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forge Web Credentials: Web Cookies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure browsers/applications to regularly delete persistent web cookies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords orPrivate Keys.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1606_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1606"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0006_001"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1606.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forge Web Credentials: SAML Tokens</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate. The default lifetime of a SAML token is one hour, but the validity period can be specified in theÂ NotOnOrAfterÂ value of theÂ conditions ...Â element in a token. This value can be changed using theÂ AccessTokenLifetimeÂ in aÂ LifetimeTokenPolicy. Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For containing the impact of a previously forged SAML token, rotate the token-signing AD FS certificate in rapid succession twice, which will invalidate any tokens generated using the previous certificate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict permissions and access to the AD FS server to only originate from privileged access workstations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. The Federation Service validated a new credential) in the domain.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1592_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1592"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1592.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Host Information: Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card biometric readers, dedicated encryption hardware, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1592_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1592"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1592.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Host Information: Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1592_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1592"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1592.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Host Information: Firmware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age patch level, etc.).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1592_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1592"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1592.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Host Information: Client Configurations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system version, virtualization, architecture (ex: 32 or 64 bit), language, and or time zone.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1589_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1589"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1589.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Identity Information: Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1589_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1589"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1589.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Identity Information: Email Addresses</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1589_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1589"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1589.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Identity Information: Employee Names</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and or craft more-believable lures.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: Domain Properties</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a targetâ€™s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: Network Trust Dependencies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: Network Topology</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: IP Addresses</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where how their publicly-facing infrastructure is hosted.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1590_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1590"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1590.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Network Information: Network Security Appliances</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1591_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1591"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1591.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Org Information: Determine Physical Locations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and or authorities the victim operates within.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1591_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1591"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1591.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Org Information: Business Relationships</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organizationâ€™s business relationships may include a variety of details, including second or third-party organizations domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victimâ€™s hardware and software resources.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1591_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1591"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1591.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Org Information: Identify Business Tempo</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organizationâ€™s business tempo may include a variety of details, including operational hours days of the week. This information may also reveal times dates of purchases and shipments of the victimâ€™s hardware and software resources.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1591_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1591"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1591.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Gather Victim Org Information: Identify Roles</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data resources they have access to.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Hidden Files and Directories</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a â€˜hiddenâ€™ file. These files donâ€™t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (dir  aÂ for Windows andÂ ls â€“aÂ for Linux and macOS).</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the file system and shell commands for files being created with a leading and the Windows command-line use of attrib.exe to add the hidden attribute.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the file system and shell commands for files being created with a leading .</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_002"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_USICA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Hidden Users</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If the computer is domain joined, then group policy can help restrict the ability to create or hide users. Similarly, preventing the modification of the /Library/Preferences/com.apple.loginwindow Hide500Users value will force all users to be visible.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the/Library/Preferences/com.apple.loginwindowplist file for unexpected modifications to theHide500Userskey value on macOS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and theHide500Userskey value in the/Library/Preferences/com.apple.loginwindowplist file set toTRUE.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry key or values for unexpected modifications of theHKLMSOFTWAREMicrosoftWindows NTCurrentVersionWinlogonSpecialAccountsUserListkey.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Hidden Window</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit or restrict program execution using anti-virus software. On MacOS, allowlist programs that are allowed to have the plist tag. All other programs should be considered suspicious.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for theapple.awt.UIElementor any other suspicious plist tag in plist files and flag them.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: NTFS File Attributes</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file directory on the partition. Within MFT entries are file attributes, such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider adjusting read and write permissions for NTFS EA, though this should be tested to ensure routine OS operations are not impeded. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex:file.ext:ads[.ext]) is commonly associated with ADSs.For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor calls to theZwSetEaFileandZwQueryEaFileWindows API functions as well as binaries used to interact with EA,and consider regularly scanning for the presence of modified information.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_DENCR"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Hidden File System</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools.Bootkit</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0007_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Run Virtual Instance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Hyper-V if not necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control to mitigate installation and use of unapproved virtualization software.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex.-silent,-ignore-reboot), as well as those associated with running a headless (in the background with no UI) virtual instance (ex.VBoxManage startvm $VM --type headless).Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex.VBoxManage.exe setextradata global GUI/SuppressMessages all). Monitor for commands which enable hypervisors such as Hyper-V.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.Network adapter information may also be helpful in detecting the use of virtual instances.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons that may carry out malicious operations using a virtual instance to avoid detection. Consider monitoring for newWindows Service, with respect to virtualization software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: VBA Stomping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off or restrict access to unneeded VB components.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if thePROJECTstream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to thePROJECTstream will inhibit attempts of reading the VBA source code through the GUI.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection efforts should be placed finding differences between VBA source code and p-code.VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Email Hiding Rules</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as theÂ New-InboxRuleÂ orÂ Set-InboxRuleÂ PowerShellÂ cmdlets on Windows systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries. In environments using Exchange, monitor logs for the creation or modification of mail transport rules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows and Exchange systems, monitor for creation or modification of suspicious inbox rules through the use of theNew-InboxRule,Set-InboxRule,New-TransportRule, andSet-TransportRulePowerShell cmdlets.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On MacOS systems, monitor for modifications to theRulesActiveState.plist,SyncedRules.plist,UnsyncedRules.plist, andMessageRules.plistfiles.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1013"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Resource Forking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code. Usage of a resource fork is identifiable when displaying a fileâ€™s extended attributes, usingÂ ls -l@Â orÂ xattr -lÂ commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in theÂ  ResourcesÂ folder.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure applications to use the application bundle structure which leverages the /Resources folder location.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify files with thecom.apple.ResourceForkextended attribute and large data amounts stored in resource forks.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Process Argument Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools sensors that monitor process creations may retrieve the process arguments from the PEB.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring forProcess Hollowing, which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1044"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: DLL Search Order Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and or evading restrictions on file execution.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use new DLLs to execute this technique. Identify and block potentially malicious software executed through search order hijacking by using application control solutions capable of blocking DLLs loaded by legitimate software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disallow loading of remote DLLs. This is included by default in Windows Server 2012+ and is available by patch for XP+ and Server 2003+.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: DLL Side-Loading</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by side-loading DLLs. Similar toÂ DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When possible, include hash values in manifest files to help prevent side-loading of malicious libraries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update software regularly to include patches that fix DLL side-loading vulnerabilities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files in common folders on the computer system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to access permissions and attributes</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Dylib Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed withÂ @rpath, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable. Additionally, if weak linking is used, such as theÂ LC_LOAD_WEAK_DYLIBÂ function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard dylib folders.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed dylibs</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for dynamic libraries being loaded. Run path dependent libraries can include LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, and LC_RPATH. Other special keywords are recognized by the macOS loader are @rpath, @loader_path, and @executable_path.These loader instructions can be examined for individual binaries or frameworks using the otool -l command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Executable Installer File Permissions Weakness</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System] to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to binaries and service executables that may normally occur during software updates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes to match an existing service executables.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Dynamic Linker Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such asÂ LD_PRELOADÂ on Linux orÂ DYLD_INSERT_LIBRARIESÂ on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When System Integrity Protection (SIP) is enabled in macOS, the aforementioned environment variables are ignored when executing protected binaries. Third-party applications can also leverage Appleâ€™s Hardened Runtime, ensuring these environment variables are subject to imposed restrictions. Admins can add restrictions to applications by setting the setuid and/or setgid bits, use entitlements, or have a __RESTRICT segment in the Mach-O binary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Path Interception by PATH Environment Variable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. Adversaries may place a program in an earlier entry in the list of directories stored in the PATH environment variable, which Windows will then execute when it searches sequentially through that PATH listing in search of the binary that was called from a script or the command line.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes for process executable paths that are named for partial directories.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for modifications of PATH environment variable Registry keys such asHKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlSession ManagerEnvironmentPath. An adversary can add a new directory or list of directories before other locations where programs can be executed from.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Path Interception by Search Order Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes for process executable paths that are named for partial directories.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Path Interception by Unquoted Path</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory C: and system directories, such as C: Windows , to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as findstr, net, and python. If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Services File Permissions Weakness</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Turn off UAC's privilege elevation for standard users [HKEY_LOCAL_MACHINE SOFTWARE Microsoft Windows CurrentVersion Policies System]to automatically deny elevation requests, add: ConsentPromptBehaviorUser=dword:00000000. Consider enabling installer detection for all users by adding: EnableInstallerDetection=dword:00000001. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: EnableInstallerDetection=dword:00000000. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hashing of binaries and service executables could be used to detect replacement against historical data.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1024"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: Services Registry Permissions Weakness</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry underÂ HKLM SYSTEM CurrentControlSet Services. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,Â PowerShell, orÂ Reg. Access to Registry keys is controlled through access control lists and user permissions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys for system components that may lead to privilege escalation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for modification of Registry keys and values used by services such as HKLMSYSTEMCurrentControlSetServices that may allow adversaries to launch their own code when a service starts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: COR_PROFILER</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and block potentially malicious unmanaged COR_PROFILER profiling DLLs by using application control solutions like AppLocker that are capable of auditing and/or blocking unapproved DLLs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys associated with COR_PROFILER.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, andReg. Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL files that are associated with COR_PROFILER environment variables.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1574_013">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1574"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1574.013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijack Execution Flow: KernelCallbackTable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse theÂ KernelCallbackTableÂ of a process to hijack its execution flow in order to run their own payloads. TheÂ KernelCallbackTableÂ can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process onceÂ user32.dllÂ is loaded.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asWriteProcessMemory()andNtQueryInformationProcess()with the parameter set toProcessBasicInformationmay be used for this technique.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_006"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <identifiedBy rdf:resource="#DS0024_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable or Modify Tools</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify and or disable security tools to avoid possible detection of their malware tools and activities. This may take many forms, such as killing security software processes or services, modifying   deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control where appropriate, especially regarding the execution of tools outside of the organization's security policies (such as rootkit removal tools) that have been abused to impair system defenses. Ensure that only approved security applications are used and running on enterprise systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering with security services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such asSet-MpPreference-DisableScriptScanning 1in Windows,sudo spctl --master-disablein macOS, andsetenforce 0in Linux. Furthermore, on Windows monitor for the execution of taskkill.exe or Net Stop commands which may deactivate antivirus software and other security systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In an attempt to avoid detection after compromising a machine, threat actors often try to disable Windows Defender. This is often done using sc [service control], a legitimate tool provided by Microsoft for managing services. This action interferes with event detection and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Note: Though this analytic is utilizing Event ID 1 for process creation, the arguments are specifically looking for the use of service control for querying or trying to stop Windows Defender.Analytic 1 - Detecting Tampering of Windows Defender Command Prompttarget_processes = filter processes where ((exe=C:WindowsSystem32sc.exe) AND (command_line=scconfig OR command_line=scstop OR command_line=scquery))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes for unexpected termination related to security tools/services. Specifically, before execution of ransomware, monitor for rootkit tools, such as GMER, PowerTool or TDSSKiller, that may detect and terminate hidden processes and the host antivirus software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lack of expected log events may be suspicious. Monitor for telemetry that provides context for modification or deletion of information related to security software processes or services such as Windows Defender definition files in Windows and System log files in Linux.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for telemetry that provides context of security software services being disabled or modified. In cloud environments, monitor virtual machine logs for the status of cloud security agents. Spyware and malware remain a serious problem and Microsoft developed security services, Windows Defender and Windows Firewall, to combat this threat. In the event Windows Defender or Windows Firewall is turned off, administrators should correct the issue immediately to prevent the possibility of infection or further infection and investigate to determine if caused by crash or user manipulation.Note: Stopping services events are Windows Event Code 7036.Analytic 1 - User Activity from Stopping Windows Defensive Serviceslog_name == System ANDevent_code == 7036param1 in [Windows Defender, Windows Firewall] ANDparam2 == stopped</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:SOFTWAREMicrosoftAMSIProviders.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:SOFTWAREPoliciesMicrosoftWindows Defender.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable Windows Event Logging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more. This data is used by security tools and analysts to generate detections.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of auditpol settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with logging or deleting or modifying .evtx logging files. Ensure .evtx files, which are located at C: Windows system32 Winevt Logs, have the proper file permissions for limited, legitimate access and audit policies for detection.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper Registry permissions are in place to prevent adversaries from disabling or interfering logging. The addition of the MiniNT registry key disables Event Viewer.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for commands that can be used to disable logging. For example,Wevtutil, auditpol,sc stop EventLog,reg add,Set- or Stop-Service,Set- or New-ItemProperty,sc config, and offensive tooling (such asMimikatzand Invoke-Phant0m) may be used to clear logs and/or change the EventLog/audit policy.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.Analytic 1 - Disable Windows Event Loggingsusp_processes = filter processes where ((command_line CONTAINS(New-Item) OR command_line CONTAINS(reg add)) OR command_line CONTAINS(MiniNt)) OR (command_line CONTAINS(Stop-Service)AND command_line CONTAINS(EventLog)) OR (command_line CONTAINS(EventLog) AND (command_line CONTAINS(Set-Service) OR command_line CONTAINS(reg add) OR command_line CONTAINS(Set-ItemProperty) OR command_line CONTAINS(New-ItemProperty) OR command_line CONTAINS(sc config))) OR (command_line CONTAINS(auditpol) AND (command_line CONTAINS(/set) OR command_line CONTAINS(/clear) OR command_line CONTAINS(/revove))) OR ((command_line CONTAINS(wevtutil) AND (command_line CONTAINS(sl) OR command_line CONTAINS(set-log))))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging, messaging that may disable Windows event logging to limit data that can be leveraged for detections and audits. For example, adversaries may modify the EventLog file path to a different file name and location.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControl, which may disable Event Viewer.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControl, which may disable Event Viewer.Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. There are different ways to perform this attack.1. The first one is to create the Registry Key HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlMiniNt. This action will not generate Security EventLog 4657 or Sysmon EventLog 13 because the value of the key remains empty. However, if an attacker uses powershell to perform this attack (and not cmd), a Security EventLog 4663 will be generated (but 4663 generates a lot of noise).2. The second way is to disable the service EventLog (display name Windows Event Log). After disabed, attacker must reboot the system. The action of disabling or put in manual the service will modify the Registry Key value HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesEventLogstart, therefore Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system.3. The third way is linked with the second. By default, the EventLog service cannot be stopped. If an attacker tries to stop the service, this one will restart immediately. Why ? Because to stop completely, this service must stop others, one in particular called netprofm (display name Network List Service). This service remains running until it is disabled. So Attacker must either disable EventLog and after to stop it or disable netprofm and after stop EventLog. Only stopping the service (even as admin) will not have an effect on the EventLog service because of the link with netprofm. Security EventLog 1100 will log the stop of the EventLog service (but also generates a lot of noise because it will generate a log everytime the system shutdown).4. The fourth way is to use auditpol.exe to modify the audit configuration and disable/modify important parameters that will lead to disable the creation of EventLog.5. The last one is to modify the Registry Key value HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesEventLogSecurityfile (or other kind of log) to modify the path where the EventLog are stocked. Importantly, with this technique, the EventViewer will use the value of the Registry Key file to know where to find the Log. Thus, using the EventViewer will always show the current event logs, but the old one will be stocked in another evtx. Also, the path must be in a folder that the Eventlog process has access (like it doesnâ€™t work if attacker set up the new path in the Desktop). Attacker can also decrease the maxsize value of the Log to force the system to rewrite on the older EventLog (but the minimum cannot be less than 1028 KB). As the Registry key is modified, Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system. All of these attacks required administrative right. Attacks number three, four and five do not require a system reboot to be effective immediately.Analytic 1 - Disable Windows Event Loggingevent_log_reg_keys = filter reg_keys where Key=EventLog AND (value=Start OR value=File OR value=MaxSize)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1039"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_ACH"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Impair Command History Logging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent users from changing the HISTCONTROL, HISTFILE, and HISTFILESIZE environment variables. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make sure that the HISTCONTROL environment variable is set to ignoredups instead of ignoreboth or ignorespace.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlating a user session with a distinct lack of new commands in their.bash_historycan be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with-HistorySaveStyle SaveNothingcommand-line arguments and use of the PowerShell commandsSet-PSReadlineOption -HistorySaveStyle SaveNothingandSet-PSReadLineOption -HistorySavePath {File Path}. For network devices, monitor for missing or inconsistencies in Network Device CLI logging present in AAA logs as well as in specific RADIUS and TACAS+ logs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users checking or changing theirHISTCONTROL,HISTFILE, orHISTFILESIZEenvironment variables may be suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0018_001"/>
  <identifiedBy rdf:resource="#DS0018_004"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable or Modify System Firewall</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check account role permissions to ensure only expected users and roles have permission to modify system firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper process and file permissions are in place to prevent adversaries from disabling or modifying firewall settings.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper Registry permissions are in place to prevent adversaries from disabling or modifying firewall settings.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments associated with disabling or the modification of system firewalls such asnetsh advfirewall firewall set rule group=file and printer sharing new enable=Yes,ufw disable, andufw logging off.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firewall rules that might allow remote communication over protocols such as SMD and RDP. Modification of firewall rules might also consider opening local ports and services for different network profiles such as public and domain</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such as HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesSharedAccessParametersFirewallPolicy.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Indicator Blocking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting or even disabling host-based sensors, such as Event Tracing for Windows (ETW), by tampering settings that control the collection and flow of event telemetry. These settings may be stored on the system in configuration files and or in the Registry as well as being accessible via administrative utilities such asÂ PowerShellÂ orÂ Windows Management Instrumentation.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure event tracers/forwarders , firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure event tracers/forwarders , firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. Adversaries may attempt to evade system defenses by unloading minifilter drivers used by host-based sensors such as Sysmon through the use of the fltmc command-line utility. Accordingly, this analytic looks for command-line invocations of this utility when used to unload minifilter drivers.Analytic 1 - Indicator Blocking - Driver Unloadedfltmc_processes = filter processes where (exe = fltmc.exe AND command_line = unload)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data. Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers:HKLMSYSTEMCurrentControlSetControlWMIAutologgerAUTOLOGGER_NAME{PROVIDER_GUID}</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0018_001"/>
  <identifiedBy rdf:resource="#DS0018_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable or Modify Cloud Firewall</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described inÂ Disable or Modify System Firewall.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud logs for modification or creation of new security groups or firewall rules</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0025_001"/>
  <identifiedBy rdf:resource="#DS0025_004"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable Cloud Logs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may disable cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable logging to avoid detection of their activities.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging, UpdateTrail DeleteTrail. In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink and google.logging.v2.ConfigServiceV2.DeleteSink. In Azure, monitor for az monitor diagnostic-settings update and az monitor diagnostic-settings delete. Additionally, a sudden loss of a log source may indicate that it has been disabled.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes made to cloud services for unexpected modifications to settings and/or data</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as theUpdate UserandChange User Licenseevents in the Azure AD audit log.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SICA"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Safe Mode Boot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that endpoint defenses run in safe mode.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments associated with making configuration changes to boot settings, such asbcdedit.exeandbootcfg.exe.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a*in front of the Startup value name:HKLMSoftwareMicrosoftWindowsCurrentVersionRun[*Startup={Path}]or by adding a key toHKLMSYSTEMCurrentControlSetControlSafeBootMinimal.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a*in front of the Startup value name:HKLMSoftwareMicrosoftWindowsCurrentVersionRun[*Startup={Path}]or by adding a key toHKLMSYSTEMCurrentControlSetControlSafeBootMinimal.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeModeledBy rdf:resource="#D3_SYSVA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Downgrade Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and or does not support updated security controls such as logging. For example,Â PowerShellÂ versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent toÂ Impair DefensesÂ while running malicious scripts that may have otherwise been detected.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider removing previous versions of tools that are unnecessary to the environment when possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider implementing policies on internal web servers, such HTTP Strict Transport Security, that enforce the use of HTTPS/network traffic encryption to prevent insecure connections.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex:powershell â€“v 2).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically theEngineVersionfield which shows the version of PowerShell running, may highlight a malicious downgrade attack.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Spoof Security Alerting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may spoof security alerting from tools, presenting false evidence to impair defendersâ€™ awareness of malicious activity. Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application controls to mitigate installation and use of payloads that may be utilized to spoof security alerting.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for suspicious processes that may be spoofing security tools and monitoring messages.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor logging, messaging, and other artifacts highlighting the health of host sensors (e.g., metrics, errors, and/or exceptions from logging applications), especially correlating and comparing centralized telemetry against potentially suspicious notifications presented on individual systems.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Windows Event Logs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell) such asRemove-EventLog -LogName Security.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on attempts to Clear Windows Event Logs. In particular, Powershell has a built-in Clear-EventLog cmdlet that allows for a specified log to be cleared.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: The audit log was cleared). When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared. For Security logs, its event code 1100 and 1102. For System logs, it is event code 104.It is unlikely that event log data would be cleared during normal operations, and it is likely that malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared, it is suspicious.This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Alerting when a Clear Event Log is generated could point to this intruder technique. Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk.Attackers may set the option of the sources of events withLimit-EventLog -LogName Security -OverflowAction DoNotOverwriteto not delete old Evenlog when the .evtx is full. By default the Security Log size is configured with the minimum value of 20 480KB (~23 000 EventLog). So if this option is enabled, all the new EventLogs will be automatically deleted. We can detect this behavior with the Security EventLog 1104.Attackers may delete .evtx withdel C:WindowsSystem32winevtlogsSecurity.evtxorRemove-Item C:WindowsSystem32winevtlogsSecurity.evtxafter having disabled and stopped the Eventlog service. As the EventLog service is disabled and stopped, the .evtx files are no longer used by this service and can be deleted. The new EventLog will be Unavailable until the configuration is reset.Attackers may use the powershell commandRemove-EventLog -LogName Securityto unregister source of events that are part of Windows (Application, Securityâ€¦). This command deletes the security EventLog (which also generates EventId 1102) but the new Eventlogs are still recorded until the system is rebooted . After the System is rebooted, the Security log is unregistered and doesnâ€™t log any new Eventlog. However logs generated between the command and the reboot are still available in the .evtx file.Analytic 1 - User Activity from Clearing Event Logscleared_logs = filter log_files where ((log_name = Security) AND (event_id = 1100 OR event_id =1102 OR event_id = 1104)) OR (log_name = System AND event_code = 104</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may clear Windows Event Logs to hide the activity of an intrusion. In an attempt to clear traces after compromising a machine, threat actors often try to clear Windows Event logs. This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network.Analytic 1 - Clearing Windows Logs with Wevtutilcleared_logs = filter processes where (event_id = 1 AND process_name = wevtutil AND cmd_line= cl</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Linux or Mac System Logs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under theÂ  var log Â directory. Subfolders in this directory categorize logs by their related functions, such as:</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to system log files, typically stored in /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1039"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Command History</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Making the environment variables associated with command history read only may ensure that the history is preserved.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forward logging of historical data to remote data store and centralized logging solution to preserve historical command line log data.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their ~/.bash_history or ConsoleHost_history.txt files.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to clear command history, such asClear-Historyon Windows orclear logging/clear historyvia a Network Device CLI in AAA logs, or to disable writing command history, such ashistory -cin bash/zsh .Analytic 1 : Clear Powershell Console Command Historysuspicious_commands = filter ProcessId, ProcessFilePath, command_line where (event_id == 1 OR event_id == 4688) AND (command_line LIKE '%rm (Get-PSReadlineOption).HistorySavePath%' OR command_line LIKE '%del (Get-PSReadlineOption).HistorySavePath%' OR command_line LIKE '%Set-PSReadlineOption â€“HistorySaveStyle SaveNothing%â€™ OR command_line LIKE '%Remove-Item (Get-PSReadlineOption).HistorySavePath%' OR (command_line LIKE '%del%' AND command_line LIKE '%MicrosoftWindowsPowershellPSReadlineConsoleHost_history.txt%'))Analytic 2 : Powershell Commandssuspicious_commands = filter CommandName, CommandType where event_id == 4103 AND (CommandName LIKE '%Clear-History%' OR (CommandName LIKE '%Remove-Item%' AND CommandParameterValue LIKE '%ConsoleHost_history.text%'))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.Analytic 1 : Deletion of command history filessuspicious_files = filter ProcessGuid, ProcessFilePath, UserName, FilePath where (event_id == 23 AND FilePath LIKE '%ConsoleHost_history.txt%') OR (event_id == 4663 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (UserAccessList LIKE '%1537%' OR UserAccessList LIKE '%DELETE%'))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.Analytic 1 : Modification of access rights to command history filessuspicious_files = filter ProcessGuid, ProcessFilePath, UserName, FilePath where (event_id == 4663 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (UserAccessList LIKE '%1539%' or UserAccessList LIKE '%WRITE_DAC%')) OR (event_id == 4670 AND FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == File AND (ObjectNewSd LIKE '%;FA%' OR ObjectNewSd LIKE '%;FW%' OR ObjectNewSd LIKE '%;BU%'))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: File Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex:Â Ingress Tool Transfer) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletion of files from the system</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Network Share Connection Removal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive andÂ SMB Windows Admin SharesÂ connections can be removed when no longer needed.Â NetÂ is an example utility that can be used to remove network share connections with theÂ net use  system share  deleteÂ command.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for various methods of removing network shares via the command line, which is otherwise a rare event.Analytic 1: Network Share Connection Removaltarget_processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND (exe == C:WindowsSystem32net.exe AND command_line == delete) OR command_line=Remove-SmbShare OR command_line=Remove-FileShare )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Timestomp</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for file modifications that collects information on file handle opens and can compare timestamp values</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected modifications to file timestamps</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1029"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0018_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Network Connection History and Configurations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system from behaviors that require network connections, such asÂ Remote ServicesÂ orÂ External Remote Services. Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files and logs that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may delete or alter malicious network configuration settings as well as generated artifacts on a host system, including logs and files such asDefault.rdpor/var/log/.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes to files that may be indicators of deleting or altering malicious network configuration settings as well as generated artifacts on a host system that highlight network connection history, such asDefault.rdpor/var/log/.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor created processes with arguments that may delete or alter malicious network configuration settings as well as generated artifacts that highlight network connection history on a host system -- which may include logs, files, or Registry values.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Clear Network Connection History and Configurations	Monitor for changes to Registry keys (ex:HKEY_CURRENT_USERSoftwareMicrosoftTerminal Server ClientDefault) and associated values that may be malicious attempts to conceal adversary network connection history.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Mailbox Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In an Exchange environment, Administrators can use Get-TransportRule / Remove-TransportRule to discover and remove potentially malicious transport rules.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward mail data and events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In environments using Exchange, monitor logs for the creation or modification of mail processing settings, such as transport rules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails. In Exchange environments, monitor for PowerShell cmdlets that may create or alter transport rules, such asNew-TransportRuleandSet-TransportRule.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for deletion of generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:UsersUsernameAppDataLocalCommsUnistoredata. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to generated artifacts on a host system, including logs or captured files such as quarantined emails.On Windows 10, mail application data is stored inC:UsersUsernameAppDataLocalCommsUnistoredata. On Linux, mail data is stored in/var/spool/mailor/var/mail. On macOS, mail data is stored in~/Library/Mail.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes with arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1070_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1070"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1029"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_003"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_003"/>
  <identifiedBy rdf:resource="#DS0002_003"/>
  <identifiedBy rdf:resource="#DS0024_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1070.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Indicator Removal: Clear Persistence</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables,Â Modify Registry,Â Plist File Modification, or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence. Adversaries may also delete accounts previously created to maintain persistence (i.e.Â Create Account).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automatically forward events to a log server or data repository to prevent conditions in which the adversary can locate and manipulate data on the local system. When possible, minimize time delay on event reporting to avoid prolonged storage on the local system.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may delete or alter generated artifacts associated with persistence on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for a file that may delete or alter generated artifacts associated with persistence on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to a file may delete or alter generated artifacts associated with persistence on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may delete or alter generated artifacts associated with persistence on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary`s attempt to remove an account (e.g.,Event ID 4726 - A user account was deleted).Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor windows registry keys that may be deleted or alter generated artifacts associated with persistence on a host system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts associated with persistence on a host system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1056_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1056"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <identifiedBy rdf:resource="#DS0027_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_IDA"/>
  <mayBeIsolatedBy rdf:resource="#D3_IOPR"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1056.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Capture: Keylogging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities whenÂ OS Credential DumpingÂ efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys or values for unexpected modifications</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1056_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1056"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1056.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Capture: GUI Input Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex:Â Bypass User Account Control).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1056_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1056"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SBV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1056.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Capture: Web Portal Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1056_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1056"/>
  <accomplishedTactic rdf:resource="#TA0009"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1056.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Capture: Credential API Hooking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials. UnlikeÂ Keylogging, this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using toolsor by programmatically examining internal kernel structures.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1559_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1559"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1048"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1559.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-Process Communication: Component Object Model</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE). Remote COM execution is facilitated byÂ Remote ServicesÂ such asÂ Distributed Component Object ModelÂ (DCOM).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all COM alerts and Protected View are enabled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE  SOFTWARE  Classes  AppID  {AppID_GUID} associated with the process-wide security of individual COM applications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for COM objects loading DLLs and other modules not typically associated with the application.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also proceed malicious use.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1559_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1559"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1048"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1559.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-Process Communication: Dynamic Data Exchange</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure Protected View is enabled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution.  Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.Analytic 1 - Unusual Child Process spawned using DDE exploittarget_processes = filter processes where ( (parent_image=excel.exe OR parent_image=word.exe OR parent_image=outlook.exe) AND image=.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. OLE and Office Open XML files can be scanned for â€˜DDEAUTOâ€™, â€˜DDEâ€™, and other strings indicative of DDE execution.https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1559_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1559"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1013"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1559.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-Process Communication: XPC Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC ServiceÂ C APIÂ or the high levelÂ NSXPCConnection APIÂ in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable the Hardened Runtime capability when developing applications. Do not include the com.apple.security.get-task-allow entitlement with the value set to any variation of true.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1045"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Invalid Code Signature</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require signed binaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Right-to-Left Override</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable namedÂ March 25  u202Excod.scrÂ will display asÂ March 25 rcs.docx. A JavaScript file namedÂ photo_high_re u202Egnp.jsÂ will be displayed asÂ photo_high_resj.png.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for common formats of RTLO characters within filenames such as u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Rename System Utilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: renameÂ rundll32.exe). An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use file system access controls to protect folders such as C: Windows System32.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.Note: There are no standard Windows events for file modification. However, Event ID 4663 (An attempt was made to access an object) can be used to audit and alert on attempts to access system utility binaries; the Accesses field can be used to filter by type of access (e.g., MODIFY vs DELETE).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for file names that are mismatched between the file name on disk and that of the binary PE metadata, this is a likely indicator that a binary was renamed after it was compiled.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0003_002"/>
  <identifiedBy rdf:resource="#DS0003_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Masquerade Task or Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks services executed by the Task Scheduler or systemd will typically be given a name and or description. Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to scheduled jobs for unexpected modifications to execution launch</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to services for unexpected modifications to names, descriptions, and/or start types</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1045"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0007_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Match Legitimate Name or Location</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may match or approximate the name or location of legitimate files or resources when naming placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs images or something innocuous.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require signed binaries and images.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use file system access controls to protect folders such as C: Windows System32.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may match or approximate the name or location of legitimate files or resources when naming/placing them. Looks for mismatches between process names and their image paths.Malware authors often use this technique to hide malicious executables behind legitimate Windows executable names (e.g. lsass.exe, svchost.exe, etc).There are several sub-techniques, but this analytic focuses onMatch Legitimate Name or Locationonly.Note: With process monitoring, hunt for processes matching these criteria:process name is svchost.exe, smss.exe, wininit.exe, taskhost.exe, etc.process path is not C:WindowsSystem32 or C:WindowsSysWow64Examples (true positive):C:Usersadministratorsvchost.exeTo make sure the rule doesnâ€™t miss cases where the executable would be started from a sub-folder of these locations, the entire path is checked for the process path. The below example should be considered as suspicious: C:WindowsSystem32srvsvchost.exeAnalytic 1 - Common Windows Process Masqueradingsuspicious_processes = filter processes where ( (exe=svchost.exe AND (image_path!=C:WindowsSystem32svchost.exe OR process_path!=C:WindowsSysWow64svchost.exe)) OR (exe=smss.exe AND image_path!=C:WindowsSystem32smss.exe) OR (exe=wininit.exe AND image_path!=C:WindowsSystem32wininit.exe) OR (exe=taskhost.exe AND image_path!=C:WindowsSystem32taskhost.exe) OR (exe=lasass.exe AND image_path!=C:WindowsSystem32lsass.exe) OR (exe=winlogon.exe AND image_path!=C:WindowsSystem32winlogon.exe) OR (exe=csrss.exe AND image_path!=C:WindowsSystem32csrss.exe) OR (exe=services.exe AND image_path!=C:WindowsSystem32services.exe) OR (exe=lsm.exe AND image_path!=C:WindowsSystem32lsm.exe) OR (exe=explorer.exe AND image_path!=C:Windowsexplorer.exe))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Space after Filename</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Double File Extension</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex:Â File.txt.exeÂ may render in some views as justÂ File.txt). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the systemâ€™s policies.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the default to hide file extensions for known file types in Windows OS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Masquerade File Type</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the fileâ€™s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a fileâ€™s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the fileâ€™s type. For example, the header of a JPEG file, isÂ 0xFF 0xD8Â and the file extension is eitherÂ .JPE,Â .JPEGÂ orÂ .JPG.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implement security controls on the endpoint, such as a Host Intrusion Prevention System (HIPS), to identify and prevent execution of files with mismatching file signatures.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that input sanitization is performed and that files are validated properly before execution; furthermore, implement a strict allow list to ensure that only authorized file types are processed. Restrict and/or block execution of files where headers and extensions do not match.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal command execution from otherwise non-executable file types (such as.txtand.jpg).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.In Linux, thefilecommand may be used to check the file signature.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1025"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Domain Controller Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enabled features, such as Protected Process Light (PPL), for LSA.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Password Filter DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (C: Windows System32  by default) of a domain controller and/or local computer with a corresponding entry in HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control Lsa Notification Packages.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlLsaNotification Packages) and correlate then investigate the DLL files these files reference.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Pluggable Authentication Modules</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module isÂ pam_unix.so, which retrieves, sets, and verifies account authentication information inÂ  etc passwdÂ andÂ  etc shadow.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Network Device Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Patch System ImageÂ to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <identifiedBy rdf:resource="#DS0002_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Reversible Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. TheÂ AllowReversiblePasswordEncryptionÂ property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that AllowReversiblePasswordEncryption property is set to disabled unless there are application requirements.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor property changes in Group Policy:Computer Configuration Windows Settings Security Settings Account Policies Password Policy Store passwords using reversible encryption. By default, the property should be set to Disabled.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor command-line usage for-AllowReversiblePasswordEncryption $trueor other actions that could be related to malicious tampering of user settings (i.e.Group Policy Modification).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such asSet-ADUserandSet-ADAccountControl, that change account configurations.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process:Reversible Encryption	Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_005"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <identifiedBy rdf:resource="#DS0002_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Multi-Factor Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review MFA actions alongside authentication logs to ensure that MFA-based logins are functioning as intended. Review user accounts to ensure that all accounts have MFA enabled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that MFA and MFA policies and requirements are properly implemented for existing and deactivated or dormant accounts and devices. If possible, consider configuring MFA solutions to fail closed rather than grant access in case of serious errors.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that proper policies are implemented to dictate the secure enrollment and deactivation of MFA for user accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logon sessions for user accounts and devices that did not require MFA for authentication.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon. Monitor for attempts to disable MFA on individual user accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Hybrid Identity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically review the hybrid identity solution in use for any discrepancies. For example, review all PTA agents in the Azure Management Portal to identify any unwanted or unapproved ones. If ADFS is in use, review DLLs and executable files in the AD FS and Global Assembly Cache directories to ensure that they are signed by Microsoft. Note that in some cases binaries may be catalog-signed, which may cause the file to appear unsigned when viewing file properties.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit on-premises accounts with access to the hybrid identity solution in place. For example, limit Azure AD Global Administrator accounts to only those required, and ensure that these are dedicated cloud-only accounts rather than hybrid ones.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Azure AD Application Proxy Connector, which are typically generated only when a new PTA Agent is added.If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious modification of files associated with hybrid identity authentication processes, such as configuration files. Monitor for access to certificates and cryptographic keys material.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for discrepancies in authentication to cloud services, such as PTA sign-ins recorded in Azure AD that lack corresponding events in AD.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the hybrid identity solution in use for the loading of unauthorized DLLs. For example, monitor all PTA agent servers for the creation of DLLs as well as the loading of DLLs into theAzureADConnectAuthenticationAgentServiceprocess.If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into theMicrosoft.IdentityServer.Servicehostapplication.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1556_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1556"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1556.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Authentication Process: Network Provider DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions. During the logon process, Winlogon (the interactive logon module) sends credentials to the localÂ mpnotify.exeÂ process via RPC. TheÂ mpnotify.exeÂ process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically review for new and unknown network provider DLLs within the Registry (HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Services &lt;NetworkProviderName&gt; NetworkProvider ProviderPath).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Starting in Windows 11 22H2, the EnableMPRNotifications policy can be disabled through Group Policy or through a configuration service provider to prevent Winlogon from sending credentials to network providers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict Registry permissions to disallow the modification of sensitive Registry keys such as HKEY_LOCAL_MACHINE SYSTEM CurrentControlSet Control NetworkProvider Order.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal API calls toNPLogonNotify().</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the addition of network provider Registry keys (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServices&lt;NetworkProviderName&gt;NetworkProvider).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to Registry entries for network providers (e.g.,HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlNetworkProviderOrder) and correlate then investigate the DLL files these values reference.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1578"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0020_001"/>
  <identifiedBy rdf:resource="#DS0020_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure: Create Snapshot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike inÂ Revert Cloud InstanceÂ where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the gcloud compute instances create command to create a new VM disk from a snapshot.It is also possible to detect the usage of the GCP API with thesourceSnapshotparameter pointed toglobal/snapshots/[BOOT_SNAPSHOT_NAME].</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline snapshots to identify malicious modifications or additions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1578"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0030_001"/>
  <identifiedBy rdf:resource="#DS0030_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure: Create Cloud Instance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary mayÂ Create SnapshotÂ of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collectÂ Data from Local SystemÂ or forÂ Remote Data Staging.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check user permissions to ensure only the expected users have the capability to create new instances.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline instances to identify malicious modifications or additions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1578"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0030_002"/>
  <identifiedBy rdf:resource="#DS0030_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure: Delete Cloud Instance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence. Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check user permissions to ensure only the expected users have the capability to delete new instances.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline instances to identify malicious modifications or additions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1578"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0030_004"/>
  <identifiedBy rdf:resource="#DS0030_005"/>
  <identifiedBy rdf:resource="#DS0030_006"/>
  <identifiedBy rdf:resource="#DS0030_007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure: Revert Cloud Instance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline instances to identify malicious modifications or additions.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1601_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1601"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1043"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1601.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify System Image: Patch System Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses. Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file. Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1601_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1601"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1043"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1601.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify System Image: Downgrade System Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may install an older version of the operating system of a network device to weaken security. Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer less updated defensive features.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some vendors of embedded network devices provide cryptographic signing to ensure the integrity of operating system images at boot time. Implement where available, following vendor guidelines. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many vendors provide digitally signed operating system images to validate the integrity of the software used on their platform. Make use of this feature where possible in order to prevent and/or detect attempts by adversaries to compromise the system image. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction withPatch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1599_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1599"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1043"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1599.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Boundary Bridging: Network Address Translation Traversal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may bridge network boundaries by modifying a network deviceâ€™s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some embedded network devices are capable of storing passwords for local accounts in either plain-text or encrypted formats. Ensure that, where available, local passwords are always encrypted, per vendor recommendations. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block Traffic Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised. Continue to monitor for additional activity and to ensure that the blocks are indeed effective.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS. Follow vendor prescribed best practices for hardening access control. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Refer to NIST guidelines when creating password policies. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict administrator accounts to as few individuals as possible, following least privilege principles. Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1498_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1498"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1498.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Denial of Service: Direct Network Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network.Â Direct Network Floods are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1498_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1498"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1498.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Denial of Service: Reflection Amplification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target. This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Binary Padding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Software Packing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Employ heuristic-based malware detection. Ensure updated virus definitions and create custom signatures for observed malware.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Steganography</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Compile After Delivery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC MinGW.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files for payloads</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Indicator Removal from Tools</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1048"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: HTML Smuggling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser sandboxes can be used to mitigate some of the impact of exploitation, but sandbox escapes may still exist.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Dynamic API Resolution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses variousÂ Native APIÂ functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Depending on the method used to obfuscate API function calls, a file-based signature may be capable of detecting dynamical resolution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated API function calls. Dynamic malware analysis may also expose signs of function obfuscation, such as memory reads that correspond to addresses of API function code within modules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze calls to functions such asGetProcAddress()andLoadLibrary()that are associated with dynamically loading API functions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Stripped Payloads</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating systemâ€™sÂ linkerÂ when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting the presence of stripped payloads may be difficult and unwarranted in real-time, though analyzing contextual data about files (such as content and character entropy) may highlight attempts at obfuscation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Embedded Payloads</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries toÂ Subvert Trust ControlsÂ by not impacting execution controls such as digital signatures and notarization tickets.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can be used to automatically detect and quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files containing large amounts of data. Abnormal file sizes may be an indicator of embedded content.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a file that may highlight embedded payloads, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Command Obfuscation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g.,Â PhishingÂ andÂ Drive-by Compromise) or interactively viaÂ Command and Scripting Interpreter.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider utilizing the Antimalware Scan Interface (AMSI) on Windows 10+ to analyze commands after being processed/interpreted.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10+, enable Attack Surface Reduction (ASR) rules to block execution of potentially obfuscated scripts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g.,^).Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g.,^).Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0005_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: Fileless Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may store data in fileless formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider periodic review of common fileless storage locations (such as the Registry or WMI repository) to potentially identify abnormal and malicious data.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0004_001"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Malware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Tool</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex:Â PsExec). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such asÂ Cobalt Strike. Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks inCobalt Strikepayloads.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0004_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Code Signing Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy and or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with. Users and or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such asCode SigningorInstall Root Certificate.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0037_001"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Digital Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy and or steal SSL TLS certificates that can be used during targeting. SSL TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure. Some server-side components of adversary tools may have default values set for SSL/TLS certificates.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal SSL/TLS certificates that can be used during targeting. Detection efforts may be focused on related behaviors, such asWeb Protocols,Asymmetric Cryptography, and/orInstall Root Certificate.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Exploits</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find modify exploits from online or purchase them from exploit vendors.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1588_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1588"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1588.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obtain Capabilities: Vulnerabilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Office Template Macros</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect events related to Registry key creation for keys that could be used for Office-based persistence.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect events related to Registry key modification for keys that could be used for Office-based persistence.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Office Test</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create the Registry key used to execute it and set the permissions to Read Control to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse the Microsoft Office Office Test Registry key to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Outlook Forms</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Outlook Home Page</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Outlook Rules</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine. Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose toolRulercan be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1137_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1137"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1137.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Office Application Startup: Add-ins</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. There are different types of add-ins that can be used by the various Office products; including Word Excel add-in Libraries (WLL XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit the Registry entries relevant for enabling add-ins.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1025"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1040"/>
  <preventedBy rdf:resource="#M1043"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: LSASS Memory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conductÂ Lateral MovementÂ usingÂ Use Alternate Authentication Material.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to secure LSASS and prevent credential stealing. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">With Windows 10, Microsoft implemented new protections called Credential Guard to protect the LSA secrets that can be used to obtain credentials through forms of credential dumping. It is not configured by default and has hardware and firmware system requirements. It also does not protect against all forms of credential dumping.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling or restricting NTLM. Consider disabling WDigest authentication.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 8.1 and Windows Server 2012 R2, enable Protected Process Light for LSA.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Note: Event ID 4104 from the Microsoft-Windows-PowerShell/Operational log captures Powershell script blocks, whose contents can be further analyzed to determine if theyâ€™re performing LSASS dumping.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior from credentials being accessed by process memory of the LSASS. For example, detect behaviors of Secretsdump against a system, not being a Domain Controller.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). OS API calls associated with LSASS process dumping includeOpenProcessandMiniDumpWriteDump. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing) and 10 (Microsoft Sysmon)Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected processes interacting with LSASS.exe.Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflectiveProcess Injectionto reduce potential indicators of malicious activity.Usage of Procdump and Windows Task Manager for LSASS dumping can also be detected via process creation events, since they both have a predictable set of command-line arguments (i.e., for specifying the process to be dumped).Note: Sysmon process access events (Event ID 10) can be extremely noisy, which necessitates tweaking the Sysmon configuration file. We recommend taking an approach analogous to that of the Sysmon Modular Configuration project (https://github.com/olafhartong/sysmon-modular) and filtering out any benign processes in your environment that produce large volumes of process access events.The GrantedAccess value in the below analytic for Mimikatz is meant to be used solely as an illustrative example of detecting Mimikatz LSASS access. However, actual GrantedAccess values change over time with different versions of Mimikatz and therefore detection engineers need to verify the accuracy of any GrantedAccess values that their analytics are using.Analytic 1 - Mimikatzprocesses = filter processes where (event_id == 10 AND target_process == *lsass.exe AND granted_access == 0x1410)Analytic 2 - Procdumpprocesses = filter processes where (event_id == 10 AND target_process == lsass.exe AND source_process == procdump.exe)Analytic 3 - Windows Task Managerprocesses = filter processes where (event_id == 10 AND target_process == *lsass.exe AND source_process == c:windows*taskmgr.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Try monitoring for Sysmon Event ID 1 and/or Windows Security Event ID 4688 for process activity.Note: Rundll32/MiniDump has a different command-line syntax than that of Procdump, in that the process being dumped is specified via process ID instead of name (as with Procdump). Therefore, because the LSASS process ID is non-deterministic, the MiniDump detection isnâ€™t specific to LSASS dumping and may need to be tuned to help reduce false positives.Analytic 1 - Procdumpprocesses = filter processes where ((event_id == 1 OR event_id == 4688) AND exe == procdump.exe and command_line == lsass*)Analytic 2 - MiniDump via rundll32processes = filter processes where ((event_id == 1 OR event_id == 4688) AND exe == rundll32.exe and command_line == comsvcs.dll MiniDump</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to Registry entries associated with credential access that is stored in the process memory of the LSASS. For example, the adversary can modify the SAM and SYSTEM files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: Security Account Manager</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with theÂ net userÂ command. Enumerating the SAM database requires SYSTEM level access.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling or restricting NTLM.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping:Security Account Manager	Monitor newly constructed files being written with default names that have extracted credentials from the Security Account Manager.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromisedValid Accountsin-use by adversaries may help as well.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: NTDS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located inÂ %SystemRoot% NTDS Ntds.ditÂ of a domain controller.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure Domain Controller backups are properly secured.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.Note: Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of commands and parameters being executed via creation of a new process. Event 800 (PowerShell) provides context of commands and parameters being executed via PowerShell. This detection is based on known Windows utilities commands and parameters that can be used to copy the ntds.dit file. It is recommended to keep the list of commands and parameters up to date.Analytic 1 - Command line attempt to access or create a copy of ntds.dit filesuspicious_command = filter command_execution where ((event_id = 4688 OR event_id = 1 OR event_id = 800) AND ((command_line = ntds AND command_line = ntdsutil AND command_line = create) OR (command_line = vssadmin AND command_line = create AMD command_line = shadow) OR (command_line = copy AND command_line = ntds.dit)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for access or copy of the NTDS.dit.Note: Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users requesting access or accessing file objects (ObjectType = File) such as C:WindowsNTDSntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. Access rights that allow read operations on file objects and its attributes are %%4416 Read file data, %%4419 Read extended file attributes, %%4423 Read file attributes. If you search for just the name of the file and not the entire directory, you may get access events related to the ntds.dit file within a snapshot or volume shadow copy.Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users creating or copying file objects (ObjectType = File) such as C:WindowsNTDSntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. In order to filter file creation events, filter access rigths %%4417 Write data to the file and %%4424 Write file attributes.Event 11 (Microsoft Windows Sysmon) provide context of processes and users creating or copying files. Unfortunately, this event provides context of the file being created or copied, but not the file being copied. A good starting point would be to look for new files created or copied with extension .dit.Analytic 1suspicious_file = filter file_access where ((event_id = 4656 OR event_id = 4663) AND (object_type = File) AND(file_name = ntds.dit) AND(access_list = %%4416 OR access_list = %%4419 OR access_list = %%4416)Analytic 2suspicious_file = filter file_access where ((event_id = 4656 OR event_id = 4663) AND (object_type = File) AND(file_name = ntds.dit) AND(access_list = %%4417 OR access_list = %%4424)Analytic 3suspicious_file = filter file_access where ((event_id = 11) AND (file_name = *.dit</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: LSA Secrets</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts. LSA secrets are stored in the registry atÂ HKEY_LOCAL_MACHINE SECURITY Policy Secrets. LSA secrets can also be dumped from memory.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the LSA secrets are stored in the registry atHKEY_LOCAL_MACHINESECURITYPolicySecretsbeing accessed</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: Cached Domain Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider adding users to the Protected Users Active Directory security group. This can help limit the caching of users' plaintext credentials.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider limiting the number of cached credentials (HKLM SOFTWARE Microsoft Windows NT Current Version Winlogon cachedlogonscountvalue)</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Detection of compromisedValid Accountsin-use by adversaries may help as well.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0026_002"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_ANAA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: DCSync</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API) to simulate the replication process from a remote domain controller using a technique called DCSync.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manage the access control list for Replicating Directory Changes and other permissions associated with domain controller replication.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.Note: Domain controllers may not log replication requests originating from the default domain controller account.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: Proc Filesystem</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather credentials from the proc filesystem orÂ  proc. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, theÂ  proc &lt;PID&gt; mapsÂ file shows how memory is mapped within the processâ€™s virtual address space. AndÂ  proc &lt;PID&gt; mem, exposed for debugging purposes, provides access to the processâ€™s virtual address space.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that root accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or/proc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path/proc//maps, where thedirectory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1003_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1003"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1003.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS Credential Dumping: /etc/passwd and /etc/shadow</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to dump the contents ofÂ  etc passwdÂ andÂ  etc shadowÂ to enable offline password cracking. Most modern Linux operating systems use a combination ofÂ  etc passwdÂ andÂ  etc shadowÂ to store user account information including password hashes inÂ  etc shadow. By default,Â  etc shadowÂ is only readable by the root user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that root accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed that may attempt to dump the contents of/etc/passwdand/etc/shadowto enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access/etc/passwdand/etc/shadow, alerting on the pid, process name, and arguments of such programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1069_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1069"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1069.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permission Groups Discovery: Local Groups</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with finding local system groups and permission settings, such as NetLocalGroupEnum. Other API calls relevant to Local Group discovery include NetQueryDisplayInformation and NetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to find local system groups and permission settings.Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). The logic in the Analytic looks for any instances of net.exe used for local user/group discovery; although this utility is not normally used for benign purposes, such usage by system administrator actions may trigger false positives.Analytic 1 - Suspicious Processesprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe = net.exe AND ( command_line=netuser OR command_line=netgroup OR command_line=netlocalgroup OR command_line=get-localgroup OR command_line=get-ADPrincipalGroupMembership* )</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1069_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1069"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1069.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permission Groups Discovery: Domain Groups</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with finding domain-level groups and permission settings, such asNetGroupEnum. Other API calls relevant to Domain Group discovery includeNetQueryDisplayInformationandNetGetDisplayInformationIndex.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to find domain-level groups and permission settings.For Linux, auditing frameworks that support alerting on process creation, including the audit daemon (auditd), can be used to alert on invocations of commands such asldapsearch.For MacOS, utilities that work in concert with Appleâ€™s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such asdscacheutil -q group.Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created).Analytic 1 - Local Permission Group Discovery - Netprocesses = filter processes where ((event_id=10 OR event_id=4688) AND (exe == net.exe OR exe == net1.exe) AND command_line=group/domain</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1069_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1069"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0036_001"/>
  <identifiedBy rdf:resource="#DS0036_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1069.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permission Groups Discovery: Cloud Groups</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for events collected that may attempt to find cloud groups and permission settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an extracted list of available groups and/or their associated setting</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to find cloud groups and permission settings.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1566_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1566"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1049"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1566.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing: Spearphishing Attachment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely uponÂ User ExecutionÂ to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can also automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion prevention systems and systems designed to scan and remove malicious email attachments can be used to block activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing emails.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1566_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1566"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_SMRA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_ISVA"/>
  <mayBeDetectedBy rdf:resource="#D3_SRA"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_EF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_ITF"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RE"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1566.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing: Spearphishing Link</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation..</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0. Additionally, users may perform visual checks of the domains they visit; however, homographs in ASCII and in IDN domains and URL schema obfuscation may render manual checks difficult. Phishing training and other cybersecurity training may raise awareness to check URLs before visiting the sites.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can help detect links leading to known malicious sites.Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for cloned sites as well as homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1566_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1566"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1049"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1566.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing: Spearphishing via Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Anti-virus can also automatically quarantine suspicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1598_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1598"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1598.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing for Information: Spearphishing Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Â Establish AccountsÂ orÂ Compromise Accounts) and or sending multiple, seemingly urgent messages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing attempts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1598_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1598"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1598.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing for Information: Spearphishing Attachment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Â Establish AccountsÂ orÂ Compromise Accounts) and or sending multiple, seemingly urgent messages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing attempts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1598_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1598"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1598.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing for Information: Spearphishing Link</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex:Â Establish AccountsÂ orÂ Compromise Accounts) and or sending multiple, seemingly urgent messages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify social engineering techniques and spearphishing attempts. Additionally, users may perform visual checks of the domains they visit; however, homographs in ASCII and in IDN domains and URL schema obfuscation may render manual checks difficult. Phishing training and other cybersecurity training may raise awareness to check URLs before visiting the sites.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can also help detect links leading to known malicious sites.Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).Furthermore, monitor network traffic for homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Also monitor and analyze traffic patterns and packet inspection for indicators of cloned websites. For example, if adversaries use HTTrack to clone websites,Mirrored from (victim URL)may be visible in the HTML section of packets.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1542"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1046"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FBA"/>
  <mayBeDetectedBy rdf:resource="#D3_FEMC"/>
  <mayBeDetectedBy rdf:resource="#D3_FV"/>
  <mayBeDetectedBy rdf:resource="#D3_SFV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot: System Firmware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification. Use Trusted Platform Module technology.  Move system's root of trust to hardware to prevent tampering with the SPI flash memory. Technologies such as Intel Boot Guard can assist with this. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent adversary access to privileged accounts or access necessary to perform this technique.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Patch the BIOS and EFI as necessary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to firmware.Dump and inspect BIOS images on vulnerable systems and compare against known good images.Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1542"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0027_002"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FBA"/>
  <mayBeDetectedBy rdf:resource="#D3_FEMC"/>
  <mayBeDetectedBy rdf:resource="#D3_FV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot: Component Firmware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar toÂ System FirmwareÂ but conducted upon other system components devices that may not have the same capability or level of integrity checking.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Perform regular firmware updates to mitigate risks of exploitation and/or abuse.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes that may reveal indicators of malicious firmware such as strings. Also consider comparing components, including hashes of component firmware and behavior, against known good images.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology)disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1542"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0016_003"/>
  <mayBeHardenedBy rdf:resource="#D3_BA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot: Bootkit</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised.  </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1542"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1046"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FBA"/>
  <mayBeDetectedBy rdf:resource="#D3_FEMC"/>
  <mayBeDetectedBy rdf:resource="#D3_FV"/>
  <mayBeDetectedBy rdf:resource="#D3_SFV"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot: ROMMONkit</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically check the integrity of system image to ensure it has not been modified.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1542_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1542"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1046"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0001_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1542.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-OS Boot: TFTP Boot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically check the integrity of the running configuration and system image to ensure they have not been modified.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable secure boot features to validate the digital signature of the boot environment and system image using a special purpose hardware device. If the validation check fails, the device will fail to boot preventing loading of unauthorized software. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict use of protocols without encryption or authentication mechanisms. Limit access to administrative and management interfaces from untrusted network sources.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific protocols, such as TFTP, can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific technique used by a particular adversary or tool, and will likely be different across various network configurations.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Follow vendor device hardening best practices to disable unnecessary and unused features and services, avoid using default configurations and passwords, and introduce logging and auditing for detection.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization.  </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes to boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS.The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_004"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Dynamic-link Library Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module loads to help reduce the number of events that are produced.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.Search for remote thread creations that start at LoadLibraryA or LoadLibraryW. Depending on the tool, it may provide additional information about the DLL string that is an argument to the function. If there is any security software that legitimately injects DLLs, it must be carefully whitelisted.Microsoft Windows allows for processes to remotely create threads within other processes of the same privilege level. This functionality is provided via the Windows API CreateRemoteThread. Both Windows and third-party software use this ability for legitimate purposes. For example, the Windows process csrss.exe creates threads in programs to send signals to registered callback routines. Both adversaries and host-based security software use this functionality to inject DLLs, but for very different purposes. An adversary is likely to inject into a program to evade defenses or bypass User Account Control, but a security program might do this to gain increased monitoring of API calls. One of the most common methods of DLL Injection is through the Windows API LoadLibrary.Allocate memory in the target program with VirtualAllocExWrite the name of the DLL to inject into this program with WriteProcessMemoryCreate a new thread and set its entry point to LoadLibrary using the API CreateRemoteThread.This behavior can be detected by looking for thread creations across processes, and resolving the entry point to determine the function name. If the function is LoadLibraryA or LoadLibraryW, then the intent of the remote thread is clearly to inject a DLL. When this is the case, the source process must be examined so that it can be ignored when it is both expected and a trusted process.Analytic 1 - DLL Injection via Load Libraryremote_thread = filter (start_function == LoadLibraryA or start_function == LoadLibraryW)remote_thread = filter (src_image_path != C:PathToTrustedProgram.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for process memory inconsistencies compared to DLL files on disk by checking memory ranges against a known copy of the legitimate module.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. Injecting a malicious DLL into a process is a common adversary TTP. Although the ways of doing this are numerous, mavinject.exe is a commonly used tool for doing so because it roles up many of the necessary steps into one, and is available within Windows. Attackers may rename the executable, so we also use the common argument INJECTRUNNING as a related signature here. Whitelisting certain applications may be necessary to reduce noise for this analytic.Analytic 1 - DLL Injection with Mavinjectmavinject_processes = filter processes where ( exe = C:WindowsSysWOW64mavinject.exe OR Image=C:WindowsSystem32mavinject.exe OR command_line = /INJECTRUNNING</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Portable Executable Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThreadand those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Thread Execution Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Asynchronous Procedure Call</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asSuspendThread/SetThreadContext/ResumeThread,QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Thread Local Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Ptrace System Calls</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeDetectedBy rdf:resource="#D3_SFA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Proc Memory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into processes via the  proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict the permissions on sensitive files such as /proc/[pid]/maps or /proc/[pid]/mem.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Extra Window Memory Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLongand SetWindowLong. Malware associated with this technique have also used SendNotifyMessageto trigger the associated window procedure and eventual malicious injection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <mayBeDetectedBy rdf:resource="#D3_PCSV"/>
  <mayBeDetectedBy rdf:resource="#D3_MBT"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Process Hollowing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asCreateRemoteThread,SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be used for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Adversaries may start legitimate processes and then use their memory space to run malicious code. This analytic looks for common Windows processes that have been abused this way in the past; when the processes are started for this purpose they may not have the standard parent that we would expect. This list is not exhaustive, and it is possible for cyber actors to avoid this discepency. These signatures only work if Sysmon reports the parent process, which may not always be the case if the parent dies before sysmon processes the event.Analytic 1 - Processes Started From Irregular Parentsmismatch_processes = filter processes where ( parent_exe exists AND (exe=smss.exe AND (parent_exe!=smss.exe AND parent_exe!=System) OR (exe=csrss.exe AND (parent_exe!=smss.exe AND parent_exe!=svchost.exe)) OR (exe=wininit.exe AND parent_exe!=smss.exe) OR (exe=winlogon.exe AND parent_exe!=smss.exe) OR (exe=lsass.exe AND (parent_exe!=wininit.exe AND parent_exe!=winlogon.exe)) OR (exe=LogonUI.exe AND (parent_exe!=winlogon.exe AND parent_exe!=wininit.exe)) OR (exe=services.exe AND parent_exe!=wininit.exe) OR (exe=spoolsv.exe AND parent_exe!=services.exe) OR (exe=taskhost.exe AND (parent_exe!=services.exe AND parent_exe!=svchost.exe)) OR (exe=taskhostw.exe AND (parent_exe!=services.exe AND parent_exe!=svchost.exe)) OR (exe=userinit.exe AND (parent_exe!=dwm.exe AND parent_exe!=winlogon.exe))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_013">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: Process DoppelgÃ¤nging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into process via process doppelgÃ¤nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgÃ¤nging is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scan file objects reported during the PsSetCreateProcessNotifyRoutine,which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access.Also consider comparing file objects loaded in memory to the corresponding file on disk.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze calls toCreateTransaction,CreateFileTransacted,RollbackTransaction, and other rarely used functions indicative of TxF activity. Process DoppelgÃ¤nging also invokes an outdated and undocumented implementation of the Windows process loader via calls toNtCreateProcessExandNtCreateThreadExas well as API calls used to modify memory within another process, such asWriteProcessMemory.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_014">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: VDSO Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor library load events, especially unusual creation of these binary files followed by loading into processes. Look for libraries that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1055_015">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1055"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1055.015</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Injection: ListPlanting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for excessive use ofSendMessageand/orPostMessageAPI functions withLVM_SETITEMPOSITIONand/orLVM_GETITEMPOSITIONarguments.Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such asFindWindow,FindWindowEx,EnumWindows,EnumChildWindows, and those that can be used to modify memory within another process, such asVirtualAllocEx/WriteProcessMemory, may be abused for this technique.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1090_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1090"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1090.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proxy: Internal Proxy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, includingÂ HTRAN, ZXProxy, and ZXPortMap. Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1090_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1090"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1090.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proxy: External Proxy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, includingÂ HTRAN, ZXProxy, and ZXPortMap. Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level. Signatures are often for unique indicators within protocols and may be based on the specific C2 protocol used by a particular adversary or tool, and will likely be different across various malware families and versions. Adversaries will likely change tool C2 signatures over time or construct protocols in such a way as to avoid detection by common defensive tools.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1090_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1090"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1090.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proxy: Multi-hop Proxy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network allow and block lists. It should be noted that this kind of blocking may be circumvented by other techniques like Domain Fronting.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1090_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1090"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1020"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1090.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proxy: Domain Fronting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, domainless fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If it is possible to inspect HTTPS traffic, the captures can be analyzed for connections that appear to be domain fronting.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1563_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1563"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1563.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Service Session Hijacking: SSH Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that agent forwarding is disabled on systems that do not explicitly require this feature to prevent misuse. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow remote access via SSH as root or other privileged accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper file permissions are set and harden system to prevent root privilege escalation opportunities.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1563_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1563"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1563.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Service Session Hijacking: RDP Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may hijack a legitimate userâ€™s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the RDP service if it is unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use remote desktop gateways.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable firewall rules to block RDP traffic between network security zones within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Change GPOs to define shorter timeouts sessions and maximum amount of time any single session can be active. Change GPOs to specify the maximum amount of time that a disconnected session stays active on the RD session host server.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider removing the local Administrators group from the list of groups allowed to log in through RDP.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit remote user permissions if remote access is necessary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking. Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor to RDP hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access:Find-DomainLocalGroupMember -GroupName Remote Desktop Users | select -expand ComputerName.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Windows security log Event ID 4624 (An account was successfully logged on) is generated when a user logs onto a remote machine using RDP.Correlating logon session creation events with RDP network flows can provide a clearer picture of RDP activity and serve as a useful starting point for investigating suspicious RDP connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols including RDP.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. RDP sessions may be split up into multiple flows and would therefore need to be aggregated.Anomaly detection using machine learning or other methods based on baselined RDP network flows may be a viable approach to alerting on potential RDP session hijacking.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring processes for tscon.exe usage. Using tscon.exe to hijack an RDP session requires SYSTEM level permissions. Therefore, we recommend also looking for Privilege Escalation techniques that may be used for this purpose in conjunction with RDP Session Hijacking.In addition to tscon.exe, mstsc.exe can similarly be used to hijack existing RDP sessions. In this case, we recommend looking for the command-line parameters of/noconsentPromptand/shadow:, which allow for stealthy hijacking of an RDP session with no prompt and without kicking off the existing session.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: Remote Desktop Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the RDP service if it is unnecessary.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use remote desktop gateways.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for remote logins.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not leave RDP accessible from the internet. Enable firewall rules to block RDP traffic between network security zones within a network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Change GPOs to define shorter timeouts sessions and maximum amount of time any single session can be active. Change GPOs to specify the maximum amount of time that a disconnected session stays active on the RD session host server.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider removing the local Administrators group from the list of groups allowed to log in through RDP.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit remote user permissions if remote access is necessary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.Monitoring logon and logoff events for hosts on the network is very important for situational awareness. This information can be used as an indicator of unusual activity as well as to corroborate activity seen elsewhere.Could be applied to a number of different types of monitoring depending on what information is desired. Some use cases include monitoring for all remote connections and building login timelines for users. Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista.Analyticfiltered_logons = filter logon_events where ( (event_id = 4624) AND user NOT IN TOP30(user))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor authentication logs and analyze for unusual access patterns. A remote desktop logon, through RDP, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Analyticsuspicious_logon = filter logons where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections (typically over port 3389) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network traffic for uncommon data flows that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP).The Remote Desktop Protocol (RDP), built in to Microsoft operating systems, allows a user to remotely log in to the desktop of another host. It allows for interactive access of the running windows, and forwards key presses, mouse clicks, etc. Network administrators, power users, and end-users may use RDP for day-to-day operations. From an adversaryâ€™s perspective, RDP provides a means to laterally move to a new host. Determining which RDP connections correspond to adversary activity can be a difficult problem in highly dynamic environments, but will be useful in identifying the scope of a compromise.Remote Desktop can be detected in several waysNetwork connections to port 3389/tcp (assuming use of the default port)Packet capture analysisWindows security logs (Event ID 4624, 4634, 4647, 4778)Detecting network connections frommstsc.exeExecution of the processrdpclip.exeRuns as the clipboard manager on the RDP target if clipboard sharing is enabledAnalytic 1rdp_start = filter flow_start where (port == 3389)rdp_end = filter flow_start where (port == 3389)rdp = group flow_start, flow_end by src_ip, src_port, dest_ip, dest_port</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes (such asmstsc.exe) that may useValid Accountsto log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0033_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: SMB/Windows Admin Shares</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using the host firewall to restrict file sharing communications such as SMB. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling Windows administrative shares.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that connect to remote shares, such asNet, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential connections and writing to remote shares.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for logon behavior (ex: EID 4624 Logon Type 3) usingValid Accountsto interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor interactions with network shares, such as reads or file transfers, using Server Message Block (SMB).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.Note: Event ID is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing &amp; decoding captured SMB2 network traffic. Preference would be to detect smb2_write_response event (instead of smb2_write_request), because it would confirm the file was actually written to the remote destination. Unfortunately, Bro/Zeek does not have an event for that SMB message-type yet. From a network traffic capture standpoint, itâ€™s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes).Analytic 1 is indication of an SMB file write to a Windows Admin File Share: ADMIN$ or C$Analytic 2 is observed originating from the same host, regardless of write-attempts and regardless of whether or not any connection is successful â€”just connection attemptsâ€” within a specified period of time.From a network traffic capture standpoint, itâ€™s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.The Service Control Manager (SCM) can be used to copy a file to the ADMIN$ share and execute it as a service. This can be detected by looking for incoming RPC network connections to the Service Control Manager, followed by services.exe spawning a child process.Analytic 1 - Basicsuspicious_smb_traffic = filter log_events where ((event_id == smb2_write_request OR event_type == smb1_write_andx_response) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$))Analytic 2 - Multiple Attempts (Time Window)suspicious_smb_traffic = filter log_events where ( (event_type == smb2_tree_connect_request OR event_type == smb1_tree_connect_andx_request) AND (connection.smb_state.path == ADMIN$ OR connection.smb_state.path == C$) REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on SMB network flows.Notes:The logic for Implementation 1 is based around detecting on SMB write requests, which are often used by adversaries to move laterally to another host. Unlike SMB Reads, SMB Write requests typically require an additional level of access, resulting in less activity. Focusing on SMB Write activity narrows the field to looking at techniques associated with actively changing remote hosts, instead of passively reading files.The logic for Implementation 2 is based around detection of new processes that were created from a file written to an SMB share. First, a file is remotely written to a host via an SMB share; then, a variety of Execution techniques can be used to remotely establish execution of the file or script. To detect this behavior, look for files that are written to a host over SMB and then later run directly as a process or in the command line arguments. SMB File Writes and Remote Execution may happen normally in an environment, but the combination of the two behaviors is less frequent and more likely to indicate adversarial activity.Analytic 1 - SMB Writesmb_write = filter flow where (dest_port == 445 AND protocol == smb.write)Analytic 2 - SMB Copy and Executionremote_start = join (smb:write, process:create) where ( smb_write.hostname == process.hostname AND smb_write.file_path == process.image_path AND (smb_write.time &lt; process.time))Analytic 3 - RPC Activityrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port &gt;= 49152 and src_port &gt;= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time &lt; rpc_endpoint.time &lt; rpc_mapper.time + 2 seconds) and (rpc_mapper.src_ip == rpc_endpoint.src_ip and rpc_mapper.dest_ip == rpc_endpoint.dest_ip))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the creation of WMI Win32_Process class and method Create to interact with a remote network share using Server Message Block (SMB). Relevant indicators detected by Bro/Zeek is IWbemServices::ExecMethod or IWbemServices::ExecMethodAsync. One thing to notice is that when the Create method is used on a remote system, the method is run under a host process named Wmiprvse.exe.The process WmiprvSE.exe is what spawns the process defined in the CommandLine parameter of the Create method. Therefore, the new process created remotely will have Wmiprvse.exe as a parent. WmiprvSE.exe is a DCOM server and it is spawned underneath the DCOM service host svchost.exe with the following parameters C:WINDOWSsystem32svchost.exe -k DcomLaunch -p. From a logon session perspective, on the target, WmiprvSE.exe is spawned in a different logon session by the DCOM service host. However, whatever is executed by WmiprvSE.exe occurs on the new network type (3) logon session created by the user that authenticated from the network.Analytic 1 - Basicsuspicious_smb_traffic = filter processes where((event_id = 4688 or event_id = 1) AND parent_process_name = wmiprvse.exe AND targetlogonid = 0x3e7)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1048"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: Distributed Component Object Model</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all COM alerts and Protected View are enabled.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling DCOM through Dcomcnfg.exe.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable Windows firewall, which prevents DCOM instantiation by default.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Registry settings (directly or using Dcomcnfg.exe) in HKEY_LOCAL_MACHINE SOFTWARE Classes AppID {{AppID_GUID}} associated with the process-wide security of individual COM applications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for COM objects loading DLLs and other modules not typically associated with the application.Note: Sysmon Event ID 7 (Image loaded) can be used to monitor for suspicious DLLs loaded by the DCOM Server Process Launcher which runs inside of svchost.exe. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign svchost.exe module loads that occur as part of its typical operation.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may useValid Accountsto interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.Analytic 1 - RPC Mapperrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port &gt;= 49152 and src_port &gt;= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time &lt; rpc_endpoint.time &lt; rpc_mapper.time + 2 seconds) AND (rpc_mapper.src_ip == rpc_endpoint.src_ip AND rpc_mapper.dest_ip == rpc_endpoint.dest_ip))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, viaQuery RegistryorPowerShell, may also precede malicious use.The Microsoft Management Console (mmc.exe) can be by used by threat actors used to spawn arbitrary processes through DCOM. The typical process tree for this method looks like: svchost.exe â€”&gt; mmc.exe â€”&gt;.exe.Accordingly, look for process creation events of mmc.exe in conjunction with the -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.Similar to the Microsoft Management Console, Excel can also be used to execute processes through DCOM. In this case, the typical process tree looks like: svchost.exe â€”&gt; excel.exe â€”&gt;.exe.Look for process creation events of excel.exe in conjunction with the /automation -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: SSH</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the SSH daemon on systems that do not require it. For macOS ensure Remote Login is disabled under Sharing Preferences.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit which user accounts are allowed to login via SSH.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in/var/log/auth.logor/var/log/securedepending on the distro you are using.For Linux systems, the Audit framework (auditd) can be used to monitor any writes to SSH log files that store information about logged in accounts such as /var/log/auth.log.For macOS systems (10.12+), Unified Logs can be queried to show SSH daemon (sshd) messages that include information on logged in accounts. The following command-line can be used to query the last hourâ€™s worth of unified logs in this manner:log show -info --debug --predicate 'processImagePath CONTAINS sshd AND eventMessage CONTAINS Accepted' --last 1h | grep sshd</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections (typically port 22) that may useValid Accountsto log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.Network Analysis Frameworks such as Zeek can be used to capture, decode, and alert on network traffic. Accordingly, they can be used to look for the creation of SSH network connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may useValid Accountsto log into remote machines using Secure Shell (SSH). For example, on macOS systemslog show --predicate 'process = sshd'can be used to review incoming SSH connection attempts for suspicious activity. The commandlog show --info --predicate 'process = ssh or eventMessage contains ssh'can be used to review outgoing SSH connection activity.For Linux systems, the Audit framework (auditd) can be used to monitor for the creation of SSH related processes such as ssh.For macOS systems (10.12+), the above command can be used to look through the Unified Logs for SSH connection activity, though we also recommend including the â€”debug parameter to ensure that all relevant data is returned:log show --info --debug --predicate 'process = ssh or eventMessage contains ssh'</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1033"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: VNC</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to remotely control machines using Virtual Network Computing (VNC). VNC is a platform-independent desktop sharing system that uses the RFB (remote framebuffer) protocol to enable users to remotely control another computerâ€™s display by relaying the screen, mouse, and keyboard inputs over the network.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inventory workstations for unauthorized VNC server software.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Uninstall any VNC server software where not required.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">VNC defaults to TCP ports 5900 for the server, 5800 for browser access, and 5500 for a viewer in listening mode. Filtering or blocking these ports will inhibit VNC traffic utilizing default ports.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict software installation to user groups that require it. A VNC server must be manually installed by the user or adversary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logged into systems that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systemslog show --predicate 'process = screensharingd and eventMessage contains Authentication:'can be used to review incoming VNC connection attempts for suspicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how itâ€™s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may useValid Accountsto remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems thescreensharingdprocess may be related to VNC connection activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_CAA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: Windows Remote Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may useÂ Valid AccountsÂ to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable the WinRM service.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user accounts logging into the system viaValid Accountsto interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows.When a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI /wsman is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.). This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host. Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis.Note: Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.Analytic 1 - RPC Activityrpc_mapper = filter flows where (dest_port == 135)rpc_endpoint = filter flows where (dest_port &gt;= 49152 and src_port &gt;= 49152)rpc = join rpc_mapper, rpc_endpoint where ( (rpc_mapper.time &lt; rpc_endpoint.time &lt; rpc_mapper.time + 2 seconds) AND (rpc_mapper.src_ip == rpc_endpoint.src_ip AND rpc_mapper.dest_ip == rpc_endpoint.dest_ip))Analytic 2 - WinRMwinrm = filter flow where (dest_port == 5985)winrm_s = filter flow where (dest_port == 5986)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may useValid Accountsto interact with remote systems using Windows Remote Management (WinRM), as well as service processes such aswmiprvse.exeon destination hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: Cloud Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may log into accessible cloud services within a compromised environment usingÂ Valid AccountsÂ that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication on cloud services whenever possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of high-privileged domain and cloud accounts, and ensure that these are not used for day-to-day operations. Ensure that on-premises accounts do not have privileged cloud permissions and that isolated, cloud-only accounts are used for managing cloud environments.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior to cloud services. For example, in Azure AD, consider using Identity Protection to monitor for suspicious login behaviors to cloud resources.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1053"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job: At</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse theÂ atÂ utility to perform task scheduling for initial or recurring execution of malicious code. TheÂ atÂ utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor ofÂ Scheduled Task'sÂ schtasksÂ in Windows environments, usingÂ atÂ requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges.  Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft Windows NT CurrentVersion Schedule TaskCache Tree At1.  In Linux and macOS environments, scheduled tasks using at can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to at can be managed using at.allow and at.deny files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such asWindows Management InstrumentationandPowerShell, so additional logging may need to be configured to gather the appropriate data.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows, monitor Windows Task Scheduler stores in%systemroot%System32Tasksfor change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, allatjobs are stored in/var/spool/cron/atjobs/.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. When AT.exe is used to remotely schedule tasks, Windows uses named pipes over SMB to communicate with the API on the remote machine. After authentication over SMB, the Named PipeATSVCis opened, over which the JobAdd function is called. On the remote host, the job files are created by the Task Scheduler and follow the conventionC:WindowsSystem32AT.This pipe activity could be discovered with a network decoder, such as that in wireshark, that can inspect SMB traffic to identify the use of pipes. It could also be detected by looking for raw packet capture streams or from a custom sensor on the host that hooks the appropriate API functions. If no network or API level of visibility is possible, this traffic may inferred by looking at SMB connections over 445/tcp followed by the creation of files matching the patternC:WindowsSystem32AT&lt;job_id&gt;.To detect AT via network traffic, a sensor is needed that has the ability to extract and decode PCAP information. Specifically, it needs to properly decode SMB and the functions that are implemented over it via NamedPipes. If a sensor meets these criteria, then the PCAP data needs to search for instances of the commandJobAddover the pipeATSVC, which is all implemented over Windows SMB 445/tcp.Analytic 1 - Remotely Scheduled Tasks via ATflows = search Flow:Messageat_proto = filter flows where (dest_port == 445 and proto_info.pipe == ATSVC)at_create = filter flows where (proto_info.function == JobAdd</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn fromsvchost.exeor the Windows Task Schedulertaskeng.exefor older OS versions.Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Instances of the process at.exe running imply the querying or creation of tasks. Although the command_line is not essential for the analytic to run, it is critical when identifying the command that was scheduled.Analyticat = filter process where (exe == at.exe)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed scheduled jobs. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. On Windows, enable the Microsoft-Windows-TaskScheduler/Operational setting within the event logging service where several events will then be logged on scheduled task activity, including:Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registeredEvent ID 4698 on Windows 10, Server 2016 - Scheduled task createdEvent ID 4700 on Windows 10, Server 2016 - Scheduled task enabledEvent ID 4701 on Windows 10, Server 2016 - Scheduled task disabledTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1053"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job: Cron</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse theÂ cronÂ utility to perform task scheduling for initial or recurring execution of malicious code. TheÂ cronÂ utility is a time-based job scheduler for Unix-like operating systems. TheÂ crontabÂ file contains the schedule of cron entries to be run and the specified times for execution. AnyÂ crontabÂ files are stored in operating system-specific file paths.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review changes to the cron schedule. cron execution can be reviewed within the /var/log directory. To validate the location of the cron log file, check the syslog config at /etc/rsyslog.conf or /etc/syslog.conf</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">cron permissions are controlled by /etc/cron.allow and /etc/cron.deny. If there is a cron.allow file, then the user or users that need to use cron will need to be listed in the file. cron.deny is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files for unexpected modifications to access permissions and attributes</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed scheduled jobs. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1053"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job: Scheduled Task</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. TheÂ schtasksÂ utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure settings for scheduled tasks to force tasks to run under the context of the authenticated account instead of allowing them to run as SYSTEM. The associated Registry key is located at HKLM SYSTEM CurrentControlSet Control Lsa SubmitControl. The setting can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; Security Options: Domain Controller: Allow server operators to schedule tasks, set to disabled. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.Analytic 1 : New processes whose command line includes commands that create or modify scheduled tasks with a suspicious script, extension or user writable pathsuspicious_processes = filter ProcessId, ProcessFilePath, command_line, ProcessParentFilePath,ProcessParentCommandLine where (EventId == 1 OR EventId == 4688) AND command_line LIKE '%SCHTASKS%' AND (command_line LIKE '%/CREATE%' OR command_line LIKE '%/CHANGE%') AND (command_line LIKE '%.cmd%' OR command_line LIKE '%.ps1%' OR command_line LIKE '%.vbs%' OR command_line LIKE '%.py%' OR command_line LIKE '%.js%' OR command_line LIKE '%.exe%' OR command_line LIKE '%.bat%' OR command_line LIKE '%javascript%' OR command_line LIKE '%powershell%' OR command_line LIKE '%rundll32%' OR command_line LIKE '%wmic%' OR command_line LIKE '%cmd%' OR command_line LIKE '%cscript%' OR command_line LIKE '%wscript%' OR command_line LIKE '%regsvr32%' OR command_line LIKE '%mshta%' OR command_line LIKE '%bitsadmin%' OR command_line LIKE '%certutil%' OR command_line LIKE '%msiexec%' OR command_line LIKE '%javaw%' OR command_line LIKE '%[%]APPDATA[%]%' OR command_line LIKE '%AppDataRoaming%' OR command_line LIKE '%[%]PUBLIC[%]%' OR command_line LIKE '%C:UsersPublic%' OR command_line LIKE '%[%]ProgramData[%]%' OR command_line LIKE '%C:ProgramData%' OR command_line LIKE '%[%]TEMP[%]%' OR command_line LIKE '%AppDataLocalTemp%' OR command_line LIKE '%WindowsPLASystem%' OR command_line LIKE '%tasks%' OR command_line LIKE '%RegistrationCRMLog%' OR command_line LIKE '%FxsTmp%' OR command_line LIKE '%spooldriverscolor%' OR command_line LIKE '%tracing%' OR)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Windows Task Scheduler stores in %systemroot%System32Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. In order to gain persistence, privilege escalation, or remote execution, an adversary may use the Windows Task Scheduler to schedule a command to be run at a specified time, date, and even host. Task Scheduler stores tasks as files in two locations - C:WindowsTasks (legacy) or C:WindowsSystem32Tasks. Accordingly, this analytic looks for the creation of task files in these two locations.Analytic 1 - Scheduled Task - File Creationtask_files = filter files where ( (file_path = C:WindowsSystem32Tasks* or file_path = C:WindowsTasks*) and image_path != C:WINDOWSsystem32svchost.exe</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor Windows Task Scheduler stores in %systemroot%System32Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Look for RPC traffic after being mapped, which implies a destination port of at least 49152. If network inspection is available via packet captures or a NIDS, then traffic through theITaskSchedulerServiceinterface can be detected. Microsoft has a list of the possible methods that are implemented for theITaskSchedulerServiceinterface, which may be useful in differentiating read and query operations from creations and modifications.When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established, the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.Certain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formatsUUID86d35949-83c9-4044-b424-db363231fd0c(decoded)Hex49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c(raw)ASCIIIYD@$621(printable bytes only)This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic.Analytic 1 - Remotely Scheduled Tasks via Schtasksschtasks_rpc = filter flows where (src_port &gt;= 49152 AND dest_port &gt;= 49152 AND proto_info.rpc_interface == ITaskSchedulerService)sch_create = filter flows where (proto_info.function == SchRpcRegisterTask OR proto_info.function == SchRpcRun OR proto_info.function == SchRpcEnableTask</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows.If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Look for instances ofschtasks.exerunning as processes. Thecommand_linefield is necessary to disambiguate between types of schtasks commands. These include the flags/create,/run,/query,/delete,/change, and/end.Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 - New processes whose parent processes are svchost.exe or taskeng.exesuspicious_processes = filter ProcessId, ProcessFilePath, ProcessParentFilePath where (EventId == 1 OR EventId == 4688) AND (ProcessParentFilePath LIKE '%svchost.exe%' OR ProcessParentFilePath LIKE '%taskeng.exe%')Analytic 2 - Scheduled Task Creation or Modification Containing Suspicious Scripts, Extensions or User Writable Pathssusp_tasks_processes = filter processes where command_line CONTAINS(SCHTASKS) AND (command_line CONTAINS(/CREATE) OR command_line CONTAINS(/CHANGE)) AND (command_line CONTAINS(.cmd) OR command_line CONTAINS(.ps1) OR command_line CONTAINS(.vbs) OR command_line CONTAINS(.py) OR command_line CONTAINS(.js) OR command_line CONTAINS(.exe) OR command_line CONTAINS(.bat) OR (command_line CONTAINS(javascript) OR command_line CONTAINS(powershell) OR command_line CONTAINS(wmic) OR command_line CONTAINS(rundll32) OR command_line CONTAINS(cmd) OR command_line CONTAINS(cscript) OR command_line CONTAINS(wscript) OR command_line CONTAINS(regsvr32) OR command_line CONTAINS(mshta) OR command_line CONTAINS(bitsadmin) OR command_line CONTAINS(certutil) OR command_line CONTAINS(msiexec) OR command_line CONTAINS(javaw) OR (command_line CONTAINS(%APPDATA%) OR command_line CONTAINS(AppDataRoaming) OR command_line CONTAINS(%PUBLIC%) OR command_line CONTAINS(C:UsersPublic) OR command_line CONTAINS(%ProgramData%) OR command_line CONTAINS(C:ProgramData) OR command_line CONTAINS(%TEMP%) OR command_line CONTAINS(AppDataLocalTemp) OR command_line CONTAINS(WindowsPLASystem) OR command_line CONTAINS(tasks) OR command_line CONTAINS(RegistrationCRMLog) OR command_line CONTAINS(FxsTmp) OR command_line CONTAINS(spooldriverscolor) OR command_line CONTAINS(tracing))))tasks = search Task:createsusp_tasks = filter tasks where (task_content CONTAINS(.cmd) OR task_content CONTAINS(.ps1) OR task_content CONTAINS(.vbs) OR task_content CONTAINS(.py) OR task_content CONTAINS(.js) OR task_content CONTAINS(.exe) OR task_content CONTAINS(.bat) OR (task_content CONTAINS(javascript) OR task_content CONTAINS(powershell) OR task_content CONTAINS(wmic) OR task_content CONTAINS(rundll32) OR task_content CONTAINS(cmd) OR task_content CONTAINS(cscript) OR task_content CONTAINS(wscript) OR task_content CONTAINS(regsvr32) OR task_content CONTAINS(mshta) OR task_content CONTAINS(bitsadmin) OR task_content CONTAINS(certutil) OR task_content CONTAINS(msiexec) OR task_content CONTAINS(javaw) OR (task_content CONTAINS(%APPDATA%) OR task_content CONTAINS(AppDataRoaming) OR task_content CONTAINS(%PUBLIC%) OR task_content CONTAINS(C:UsersPublic) OR task_content CONTAINS(%ProgramData%) OR task_content CONTAINS(C:ProgramData) OR task_content CONTAINS(%TEMP%) OR task_content CONTAINS(AppDataLocalTemp) OR task_content CONTAINS(WindowsPLASystem) OR task_content CONTAINS(tasks) OR task_content CONTAINS(RegistrationCRMLog) OR task_content CONTAINS(FxsTmp) OR task_content CONTAINS(spooldriverscolor) OR task_content CONTAINS(tracing))))</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed scheduled jobs by enabling the Microsoft-Windows-TaskScheduler/Operational setting within the event logging service.Several events will then be logged on scheduled task activity, including: Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered; Event ID 4698 on Windows 10, Server 2016 - Scheduled task created;Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled;Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabledNote: Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log.Analytic 1 : New schedule tasks whose content includes suspicious scripts, extensions or user writable pathsuspicious_scheduled_jobs = filter UserName, JobName, JobContent where EventId == 4698 AND (JobContent LIKE '%.cmd%' OR JobContent LIKE '%.ps1%' OR JobContent LIKE '%.vbs%' OR JobContent LIKE '%.py%' OR JobContent LIKE '%.js%' OR JobContent LIKE '%.exe%' OR JobContent LIKE '%.bat%' OR JobContent LIKE '%javascript%' OR JobContent LIKE '%powershell%' OR JobContent LIKE '%wmic%' OR JobContent LIKE '%rundll32%' OR JobContent LIKE '%cmd%' OR JobContent LIKE '%cscript%' OR JobContent LIKE '%wscript%' OR JobContent LIKE '%regsvr32%' OR JobContent LIKE '%mshta%' OR JobContent LIKE '%bitsadmin%' OR JobContent LIKE '%certutil%' OR JobContent LIKE '%msiexec%' OR JobContent LIKE '%javaw%' OR JobContent LIKE '%[%]APPDATA[%]%' OR JobContent LIKE '%AppDataRoaming%' OR JobContent LIKE '%[%]PUBLIC[%]%' OR JobContent LIKE '%C:UsersPublic%' OR JobContent LIKE '%[%]ProgramData[%]%' OR JobContent LIKE '%C:ProgramData%' OR JobContent LIKE '%[%]TEMP[%]%' OR JobContent LIKE '%AppDataLocalTemp%' OR JobContent LIKE '%WindowsPLASystem%' OR JobContent LIKE '%tasks%' OR JobContent LIKE '%RegistrationCRMLog%' OR JobContent LIKE '%FxsTmp%' OR JobContent LIKE '%spooldriverscolor%' OR JobContent LIKE '%tracing%')</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed registry keys upon creation of new task. Deletion of values/keys in the registry may further indicate malicious activity.Note: Sysmon event id 12 is used in the analyticAnalytic 1 : Suspicious Creations under Schedule Registry Keysuspicious_processes = filter ProcessGuid, ProcessFilePath, RegistryKeyPath, UserName where event_id == 12 AND (RegistryKeyPath LIKE %HKLMSOFTWAREMicrosoftWindows NTCurrentVersionScheduleTaskCacheTasks% OR RegistryKeyPath LIKE %HKLMSOFTWAREMicrosoftWindows NTCurrentVersionScheduleTaskCacheTree%)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1053"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job: Systemd Timers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extensionÂ .timerÂ that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative toÂ CronÂ in Linux environments. Systemd timers may be activated remotely via theÂ systemctlÂ command line utility, which operates overÂ SSH.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict read/write access to systemd .timer unit files to only select privileged users who have a legitimate need to manage system services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines that will have a parent process of â€˜systemdâ€™, a parent process ID of 1, and will usually execute as the â€˜rootâ€™ user.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: systemctl list-timers â€“all. Analyze the contents of corresponding .service files present on the file system and ensure that they refer to legitimate, expected executables.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1053_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1053"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0003_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_SJA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDM"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1053.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Task/Job: Container Orchestration Job</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure containers are not running as root by default. In Kubernetes environments, consider defining Pod Security Standards that prevent pods from running privileged containers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed containers</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the anomalous creation of scheduled jobs in container orchestration environments.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1597_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1597"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1597.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Closed Sources: Threat Intel Vendors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs countermeasures.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1597_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1597"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1597.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Closed Sources: Purchase Technical Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1596"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases: DNS/Passive DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a targetâ€™s subdomains, mail servers, and other hosts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1596"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases: WHOIS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1596"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases: Digital Certificates</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL TLS communications), contain information about the registered organization such as name and location.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1596"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases: CDNs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestorâ€™s geographical region.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1596_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1596"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1596.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Technical Databases: Scan Databases</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1593_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1593"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1593.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Websites/Domains: Social Media</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1593_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1593"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1593.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Websites/Domains: Search Engines</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls. Efforts should focus on minimizing the amount and sensitivity of data available to external parties.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1593_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1593"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1013"/>
  <preventedBy rdf:resource="#M1047"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1593.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Open Websites/Domains: Code Repositories</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application developers uploading to public code repositories should be careful to avoid publishing sensitive information such as credentials and API keys.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scan public code repositories for exposed credentials or other sensitive information before making commits. Ensure that any leaked credentials are removed from the commit history, not just the current latest version of the code.</hasMitigation>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1505"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component: SQL Stored Procedures</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started restarted).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all application component binaries are signed by the correct application developers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.Consider enabling audit features that can log malicious startup activities.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1505"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_EHB"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_ER"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_LLM"/>
  <mayBeModeledBy rdf:resource="#D3_NNI"/>
  <mayBeModeledBy rdf:resource="#D3_PLM"/>
  <mayBeRestoredBy rdf:resource="#D3_RNA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component: Transport Agent</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails. Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure all application component binaries are signed by the correct application developers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1505"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_EHB"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DNR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_LLM"/>
  <mayBeModeledBy rdf:resource="#D3_PLM"/>
  <mayBeModeledBy rdf:resource="#D3_NNI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RNA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component: Web Shell</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling functions from web technologies such as PHPâ€™s eval() that may be abused for web shells.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload:&lt;?php @eval($_POST['password']);&gt;Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.A web shell is a web script placed on an openly accessible web server to allow an adversary to use the server as a gatway in a network. As the shell operates, commands will be issued from within the web application into the broader server operating system. This analytic looks for host enumeration executables initiated by any web service that would not normally be executed within that environment.Analytic 1 - Webshell-Indicative Process Treesuspicious_processes = filter processes where ( (parent_exe == w3wp.exe OR parent_exe == httpd.exe OR parent_exe == tomcat*.exe OR parent_exe == nginx.exe ) AND (exe == cmd.exe OR exe == powershell.exe OR exe == net.exe OR exe == whoami.exe OR exe == hostname.exe OR exe == systeminfo.exe OR exe == ipconfig.exe) )</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1505"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component: IIS Components</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions:Â Get{Extension Filter}Version,Â Http{Extension Filter}Proc, and (optionally)Â Terminate{Extension Filter}. IIS modules may also be installed to extend IIS web servers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure IIS DLLs and binaries are signed by the correct application developers.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict unallowed ISAPI extensions and filters from running by specifying a list of ISAPI extensions and filters that can run on IIS.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor execution and command-line arguments ofAppCmd.exe, which may be abused to install malicious IIS modules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to%windir%system32inetsrvconfigapplicationhost.configcould indicate an IIS module installation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1505_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1505"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1505.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component: Terminal Services DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using Group Policy to configure and block modifications to Terminal Services parameters in the Registry.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor unexpected changes and/or interactions withtermsrv.dll, which is typically stored in%SystemRoot%System32.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor module loads by the Terminal Services process (ex:svchost.exe -k termsvcs) for unexpected DLLs (the default is%SystemRoot%System32termsrv.dll, though an adversary could also useMatch Legitimate Name or Locationto potentially conceal a malicious payload).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex:reg.exe) or modify/replace the legitimatetermsrv.dll.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Software Component:Terminal Services DLL	Monitor for changes to Registry keys associated withServiceDlland other subkey values underHKLMSystemCurrentControlSetservicesTermServiceParameters.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1518_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1518"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0018_002"/>
  <identifiedBy rdf:resource="#DS0018_003"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1518.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Discovery: Security Software Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information fromÂ Security Software DiscoveryÂ during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and or attempts specific actions.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Security Software Discovery.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands).hasDetection.append(Monitor for unusual access to stored browser data, such as local files and databases (e.g.,%APPDATA%/Google/Chrome).Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for contextual data about a firewall and activity around it such as name, policy, or status.hasDetection.append(Monitor for Keychain files being accessed that may be related to malicious credential collection.)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. OS API calls associated with LSASS process dumping include EnumProcesses, which can be used to enumerate the set of processes running on a host and filtered to look for security-specific processes.Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: Upload Malware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enableÂ Ingress Tool TransferÂ by placing it on an Internet accessible web server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asUser ExecutionorIngress Tool Transfer.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: Upload Tool</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex:Â PsExec). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enableÂ Ingress Tool TransferÂ by placing it on an Internet accessible web server.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such asIngress Tool Transfer.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: Install Digital Certificate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may install SSL TLS certificates that can be used during targeting. SSL TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.Detection efforts may be focused on related behaviors, such asWeb ProtocolsorAsymmetric Cryptography.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: Drive-by Target</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as inÂ Drive-by Compromise. In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such asÂ Application Access Token. Prior toÂ Drive-by Compromise, adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired (Acquire Infrastructure) or previously compromised (Compromise Infrastructure).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in the malicious web content utilized to deliver aDrive-by Compromisehave been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: Link Target</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as inÂ Malicious Link. Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as inÂ Spearphishing Link) or a phish to gain initial access to a system (as inÂ Spearphishing Link), an adversary must set up the resources for a link target for the spearphishing link.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as duringSpearphishing Link,Spearphishing Link, orMalicious Link.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1608_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1608"/>
  <accomplishedTactic rdf:resource="#TA0042"/>
  <preventedBy rdf:resource="#M1056"/>
  <identifiedBy rdf:resource="#DS0035_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1608.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stage Capabilities: SEO Poisoning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the siteâ€™s ranking score reputation calculated by their web crawlers and algorithms.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This technique cannot be easily mitigated with preventive controls since it is based on behaviors performed outside of the scope of enterprise defenses and controls.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If infrastructure or patterns in the malicious web content related to SEO poisoning orDrive-by Targethave been previously identified, internet scanning may uncover when an adversary has staged web content supporting a strategic web compromise. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such asDrive-by CompromiseorExploitation for Client Execution.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1558_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1558"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1558.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Kerberos Tickets: Golden Ticket</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket. Golden tickets enable adversaries to generate authentication material for any account in Active Directory.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1558_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1558"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1558.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Kerberos Tickets: Silver Ticket</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1558_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1558"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_RTA"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1558.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Kerberos Tickets: Kerberoasting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable toÂ Brute Force.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1558_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1558"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1558.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Steal or Forge Kerberos Tickets: AS-REP Roasting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication byÂ Password CrackingÂ Kerberos messages.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: Gatekeeper Bypass</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Appleâ€™s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System settings can prevent applications from running that haven't been downloaded through the Apple Store which can help mitigate some of these issues.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and investigate attempts to modify extended file attributes with utilities such asxattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reviewfalsevalues under theLSFileQuarantineEnabledentry in an application'sInfo.plistfile (required by every application).falseunderLSFileQuarantineEnabledindicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecifiedLSFileQuarantineEnabledentry will default to not setting the quarantine flag.QuarantineEvents is a SQLite database containing a list of all files assigned thecom.apple.quarantineattribute, located at~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The removal of thecom.apple.quarantineflag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: Code Signing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. The certificates used during an operation may be created, acquired, or stolen by the adversary. UnlikeÂ Invalid Code Signature, this activity will result in a valid signature.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: SIP and Trust Provider Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function, which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict storage and execution of SIP DLLs to protected directories, such as C: Windows, rather than user directories.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for Registry hives to prevent users from modifying keys related to SIP and trust provider components. Components may still be able to be hijacked to suitable functions already present on disk if malicious modifications to Registry keys are not prevented.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure Hide Microsoft Entries and Hide Windows Entries are both deselected.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable CryptoAPI v2 (CAPI) event loggingto monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable the Registry Global Object Access Auditingsetting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:*HKLMSOFTWAREMicrosoftCryptographyOID*HKLMSOFTWAREWOW6432NodeMicrosoftCryptographyOID*HKLMSOFTWAREMicrosoftCryptographyProvidersTrust*HKLMSOFTWAREWOW6432NodeMicrosoftCryptographyProvidersTrustNote:As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process usingRegsvr32.Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1028"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_002"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: Install Root Certificate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. Certificates are commonly used for establishing secure TLS SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Group Policy can be used to manage root certificates and the Flags value of HKLM SOFTWARE Policies Microsoft SystemCertificates Root ProtectedRoots can be set to 1 to prevent non-administrator users from making further root installations into their own HKCU certificate store. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Public Key Pinning (HPKP) is one method to mitigate potential Adversary-in-the-Middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for commands, such assecurity add-trusted-cert(macOS) orcertutil -addstore(Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.The Sysinternals Sigcheck utility can also be used (sigcheck.exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for processes, such ascertmgr.exe(macOS) orcertutil.exe(Windows), that can be used to install root certificates. A system root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and throughauthroot.stl.The Sysinternals Sigcheck utility can also be used (sigcheck.exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.Analytic 1 - Attempt to Add Certificate to Untrusted Storeaddstore_commands = filter processes where ( exe =C:WindowsSystem32certutil.exe AND command_line=-addstore )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry underHKLMSOFTWAREMicrosoftEnterpriseCertificatesRootCertificatesand[HKLM or HKCU]Software[Policies]MicrosoftSystemCertificatesRootCertificates. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: Mark-of-the-Web Bypass</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) namedÂ Zone.IdentifierÂ with a specific value known as the MOTW. Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known trusted, SmartScreen will prevent the execution and warn the user not to run it.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling auto-mounting of disk image files (i.e., .iso, .img, .vhd, and .vhdx). This can be achieved by modifying the Registry values related to the Windows Explorer file associations in order to disable the automatic Explorer Mount and Burn dialog for these file extensions. Note: this will not deactivate the mount functionality itself.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider blocking container file types at web and/or email gateways. Consider unregistering container file extensions in Windows File Explorer.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1553_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1553"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1024"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1553.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Trust Controls: Code Signing Policy Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Secure Boot may prevent some implementations of modification to code signing policies.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure proper permissions are set for the Registry to prevent users from modifying keys related to code signing policies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the execution of commands that could modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such asbcdedit.exe -set TESTSIGNING ON.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider monitoring for modifications made to Registry keys associated with code signing policies, such asHKCUSoftwarePoliciesMicrosoftWindows NTDriver Signing. Modifications to the code signing policy of a system are likely to be rare.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1195_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1195"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1016"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1195.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Supply Chain Compromise: Compromise Software Dependencies and Development Tools</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1195_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1195"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1016"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1195.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Supply Chain Compromise: Compromise Software Supply Chain</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update distribution mechanism for that software, or replacing compiled releases with a modified version.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A patch management process should be implemented to check unused applications, unmaintained and/or previously vulnerable software, unnecessary features, components, files, and documentation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Continuous monitoring of vulnerability sources and the use of automatic and manual code review tools should also be implemented as well.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1195_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1195"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1046"/>
  <identifiedBy rdf:resource="#DS0013_001"/>
  <mayBeModeledBy rdf:resource="#D3_HCI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1195.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Supply Chain Compromise: Compromise Hardware Supply Chain</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Trusted Platform Module technology and a secure or trusted boot process to prevent system integrity from being compromised. Check the integrity of the existing BIOS or EFI to determine if it is vulnerable to modification.  </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and and compare against known good baseline behavior.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Compiled HTML File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting web related programming languages such VBA, JScript, Java, and ActiveX. CHM content is displayed using underlying components of the Internet Explorer browser loaded by the HTML Help executable program (hh.exe).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using application control to prevent execution of hh.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor presence and use of CHM files, especially if they are not typically used within an environment.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze the execution and arguments of hh.exe.Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of any HTML Help Executable (hh.exe) processes. Adversaries may hide malicious code in.chmcompiled help files; whenever a user tries to open one of these files, Windows executes the HTML Help Executable. Therefore, if there are legitimate uses of compiled help files in your environment, this analytic may lead to false positives and will require additional tuning.Analytic 1 - Compiled HTML Accessprocesses = filter processes where ((event_id == 1 OR event_id == 4688) AND exe=C:Windowssyswow64hh.exe OR exe=C:Windowssystem32hh.exe)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1038"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Control Panel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify and block potentially malicious and unknown .cpl files by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict storage and execution of Control Panel items to protected directories, such as C: Windows, rather than user directories.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When executed from the command line or clicked, control.exe will execute the CPL file (ex:control.exe file.cpl) beforeRundll32is used to call the CPL's API functions (ex:rundll32.exe shell32.dll,Control_RunDLL file.cpl). CPL files can be executed directly via the CPL API function with just the latterRundll32command, which may bypass detections and/or execution filters for control.exe.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for DLL/PE file events, such as theControl_RunDLLandControlRunDLLAsUserAPI functions in shell32.dll.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries inHKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerControlPanelNameSpaceandHKEY_CLASSES_ROOTCLSID{GUID}. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel.* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in theCPLsandExtended PropertiesRegistry keys ofHKEY_LOCAL_MACHINE or HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionControl Panel. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (WinExec(c:windowssystem32control.exe {Canonical_Name}, SW_NORMAL);) or from a command line (control.exe /name {Canonical_Name}).* Some Control Panel items are extensible via Shell extensions registered inHKEY_LOCAL_MACHINESoftwareMicrosoftWindowsCurrentVersionControls Folder{name}ShellexPropertySheetHandlerswhere {name} is the predefined name of the system item.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: CMSTP</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CMSTP.exe may not be necessary within a given environment (unless using it for VPN connection installation).</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider using application control configured to block execution of CMSTP.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include:* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of a new CMSTP.exe process which initiates a network connection to a non-local IP address. This is a specific implementation where CMSTP.exe can be leveraged to setup listeners that will receive and install malware from remote sources in a trusted fashion.Analytic 1 - CMSTPprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND exe == C:WindowsSystem32CMSTP.exe AND src_ip NOT IN [10.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12] )</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: InstallUtil</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system:Â C: Windows Microsoft.NET Framework v InstallUtil.exeÂ andÂ C: Windows Microsoft.NET Framework64 v InstallUtil.exe.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">InstallUtil may not be necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Mshta</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mshta.exe may not be necessary within a given environment since its functionality is tied to older versions of Internet Explorer that have reached end of life.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of mshta.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the mshta.exe application and to prevent abuse.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of mshta.exe.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Msiexec</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi). The Msiexec.exe binary may also be digitally signed by Microsoft.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider disabling the AlwaysInstallElevated policy to prevent elevated execution of Windows Installer packages.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Odbcconf</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names. The Odbcconf.exe binary may be digitally signed by Microsoft.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Odbcconf.exe may not be necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of Odbcconf.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Regsvcs/Regasm</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NETÂ Component Object ModelÂ (COM) assemblies. Both are binaries that may be digitally signed by Microsoft.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regsvcs and Regasm may not be necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block execution of Regsvcs.exe and Regasm.exe if they are not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_010">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1050"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Regsvr32</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass application control.  Identify and block potentially malicious software executed through regsvr32 functionality by using application control  tools, like Windows Defender Application Control, AppLocker,or Software Restriction Policies  where appropriate. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). - Analytic 1 is a more generic analytic that looks for suspicious usage of regsvr32.exe, specifically for cases where regsvr32.exe creates child processes that arenâ€™t itself. Itâ€™s not likely that this will result in millions of hits, but it does occur during benign activity so some form of baselining would be necessary for this to be useful as an alerting analytic.- Analytic 2 is around Squiblydoo, which is a specific usage of regsvr32.exe to load a COM scriptlet directly from the internet and execute it in a way that bypasses application whitelisting. It looks for regsvr32.exe process creation events that load scrobj.dll via the command-line (which executes the COM scriptlet).Analytic 1 - Generic Regsvr32processes = filter processes where ( (event_id == 1 OR event_id == 4688) AND parent_image_path == regsvr32.exe and exe != regsvr32.exe*)Analytic 2 - Squiblydooprocesses = filter process where ( (event_id == 1 OR event_id == 4688) AND (process_path == regsvr32.exe and command_line == scrobj.dll))</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1050"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_004"/>
  <identifiedBy rdf:resource="#DS0011_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Rundll32</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e.Â Shared Modules), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex:Â rundll32.exe {DLLname, DLLfunction}).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass application control.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Typical command-line usage of rundll32.exe isrundll32.exe DllFile,EntryPointwhereDllFileis the name of the DLL file being called and EntryPoint the name of the entry point in the DLL file.DLLs stored on SMB shares can similarly be called using the syntax ofrundll32.exe DllFile,EntryPointwhereis the IPv4 address of the host of the SMB share.Rundll32 can also be used to execute arbitrary Javascript using the syntaxrundll32.exe javascript:&lt;code_block&gt;where &lt;code_block&gt; is a string defining the Javascript code to be executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls. Static Portable Executable (PE) analysis tools can be used to examine and dump the exports of a particular DLL.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.When monitoring for all instances of Rundll32 execution, as defined by the logic in the Detection Pseudocode, it is imperative to also investigate the full set of command-line parameters used. These parameters contain key information about the DLL payload, including the name, entry point, and optional arguments.Note: Event IDs are for Sysmon (Event ID 10 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of rundll32.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the user that created the process) that helps reduce false positives.Analytic 1 - RunDLL32.exe Monitoringprocesses = filter process where ((event_id == 1 OR event_id == 4688) AND exe == rundll32.exe</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Verclsid</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider removing verclsid.exe if it is not necessary within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of verclsid.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider modifying host firewall rules to prevent egress traffic from verclsid.exe.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_013">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SAOR"/>
  <mayBeHardenedBy rdf:resource="#D3_PSEP"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: Mavinject</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider removing mavinject.exe if Microsoft App-V is not used within a given environment.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of mavinject.exe if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may rename abusable binaries to evade detections, but the argumentINJECTRUNNINGis required for mavinject.exe to performDynamic-link Library Injectionand may therefore be monitored to alert malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1218_014">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1218"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1218.014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Binary Proxy Execution: MMC</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt. MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">MMC may not be necessary within a given environment since it is primarily used by system administrators, not regular users or clients.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of MMC if it is not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such asservices.mscoreventvwr.msc. Invoking non-Microsoft .msc files may be an indicator of malicious activity.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1614_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1614"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1614.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Location Discovery: System Language Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution scrutiny from other entities.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1016_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1016"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1016.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Network Configuration Discovery: Internet Connection Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as usingÂ Ping,Â tracert, and GET requests to websites.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1216_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1216"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0012_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1216.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Script Proxy Execution: PubPrn</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is aÂ Visual BasicÂ script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through theÂ Windows Command ShellÂ viaÂ Cscript.exe. For example, the following code publishes a printer within the specified domain:Â cscript pubprn Printer1 LDAP:  CN=Container1,DC=Domain1,DC=Com.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, update Windows Defender Application Control policies to include rules that block the older, vulnerable versions of PubPrn.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1569_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1569"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1569.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Services: Launchctl</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent users from installing their own launch agents or launch daemons.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor command-line execution of thelaunchctlcommand immediately followed by abnormal network connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users/Library/LaunchAgentsor/Library/LaunchDaemonsfolders.Launch AgentorLaunch Daemonwith executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed services/daemons to execute commands or programs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1569_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1569"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0019_001"/>
  <identifiedBy rdf:resource="#DS0024_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1569.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Services: Service Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (services.exe) is an interface to manage and manipulate services. The service control manager is accessible to users via GUI components as well as system utilities such asÂ sc.exeÂ andÂ Net.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by PsExec from running. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly constructed services that abuse control manager to execute malicious commands or payloads.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1205_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1205"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1205.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traffic Signaling: Port Knocking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1205_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1205"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1037"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1205.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traffic Signaling: Socket Filters</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as theÂ libpcapÂ library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor recently started applications creating raw socket connections.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1127_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1127"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1127.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trusted Developer Utilities Proxy Execution: MSBuild</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">MSBuild.exe may not be necessary within an environment and should be removed if not being used.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use application control configured to block execution of msbuild.exe if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the msbuild.exe application and to prevent abuse.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.Trusted developer utilities such as MSBuild may be leveraged to run malicious code with elevated privileges. This analytic looks for any instances of msbuild.exe, which will execute any C# code placed within a given XML document; and msxsl.exe, which processes xsl transformation specifications for XML files and will execute a variaty of scripting languages contained within the XSL file. Both of these executables are rarely used outside of Visual Studio.Analytic 1 - MSBuild and msxsltarget_processes = filter processes where ( (exe=C:Program Files (x86)Microsoft Visual Studio*binMSBuild.exe OR exe=C:WindowsMicrosoft.NETFrameworkmsbuild.exe OR exe=C:users*appdataroamingmicrosoftmsxsl.exe) AND image_path!=Microsoft Visual Studio*</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Credentials In Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code binary files containing embedded passwords.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish an organizational policy that prohibits password storage in files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict file shares to specific directories with access only to necessary users.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). SeeValid Accountsfor more information.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes for local file systems and remote file shares for files containing insecurely stored credentials.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as password. In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files &amp; Registryprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND command_line == regquery HKLM /f password /t REG_SZ /s OR command_line == regquery HKCU /f password /t REG_SZ /s OR command_line == Get-UnattendedInstallFile OR command_line == Get-Webconfig OR command_line == Get-ApplicationHost OR command_line == Get-SiteListPassword OR command_line == Get-CachedGPPPassword OR command_line == Get-RegistryAutoLogon</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <identifiedBy rdf:resource="#DS0024_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_SCP"/>
  <mayBeModeledBy rdf:resource="#D3_DI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <mayBeRestoredBy rdf:resource="#D3_RD"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Credentials in Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Proactively search for credentials within the Registry and attempt to remediate the risk.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not store credentials within the Registry.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly executed processes for applications that can be used to query the Registry, such asReg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of theRegsystem utility, by looking for keys and values that contain strings such as password. In addition, adversaries may use toolkits such asPowerSploitin order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality.Analytic 1 - Credentials in Files &amp; Registryprocesses = filter processes where ( (event_id == 1 OR event_id == 4688) AND command_line == regquery HKLM /f password /t REG_SZ /s OR command_line == regquery HKCU /f password /t REG_SZ /s OR command_line == Get-UnattendedInstallFile OR command_line == Get-Webconfig OR command_line == Get-ApplicationHost OR command_line == Get-SiteListPassword OR command_line == Get-CachedGPPPassword OR command_line == Get-RegistryAutoLogon</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1028"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Bash History</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the history utility. Once a user logs out, the history is flushed to the userâ€™sÂ .bash_historyÂ file. For each user, this file resides at the same location:Â ~ .bash_history. Typically, this file keeps track of the userâ€™s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There are multiple methods of preventing a user's command history from being flushed to their .bash_history file, including use of the following commands:set +o history and set -o history to start logging again;unset HISTFILE being added to a user's .bash_rc file; andln -s /dev/null ~/.bash_history to write commands to /dev/nullinstead.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">While users do typically rely on their history of commands, they often access this history through other utilities like history instead of commands likecat ~/.bash_history.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring when the user's.bash_historyis read can help alert to suspicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1022"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Private Keys</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption decryption, and digital signatures. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When possible, store keys on separate cryptographic hardware instead of on the local system. For example, on Windows systems use a TPM to secure keys and other sensitive credential material.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use strong passphrases for private keys to make cracking difficult.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure permissions are properly set on folders containing sensitive private keys to prevent unintended access. Additionally, on Cisco devices, set the nonexportable flag during RSA key pair generation.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1035"/>
  <preventedBy rdf:resource="#M1037"/>
  <preventedBy rdf:resource="#M1042"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Cloud Instance Metadata API</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable unnecessary metadata services and restrict or disable insecure versions of metadata services that are in use to prevent adversary access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the Instance Metadata API. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access to the Instance Metadata API using a host-based firewall such as iptables.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1051"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0022_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeModeledBy rdf:resource="#D3_CI"/>
  <mayBeModeledBy rdf:resource="#D3_NTPM"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RCF"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Group Policy Preferences</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove vulnerable Group Policy Preferences.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search SYSVOL for any existing GGPs that may contain credentials and remove them.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply patch KB2962486 which prevents credentials from being stored in GPPs.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for attempts to access SYSVOL that involve searching for XML files.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_007">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1030"/>
  <preventedBy rdf:resource="#M1035"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Container API</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit communications with the container service to managed and secured channels, such as local Unix sockets or remote access via SSH. Require secure port access to communicate with the APIs over TLS by disabling unauthenticated access to the Docker API and Kubernetes API Server. In Kubernetes clusters deployed in cloud environments, use native cloud platform features to restrict the IP ranges that are permitted to access to API server. Where possible, consider enabling just-in-time (JIT) access to the Kubernetes API to place additional restrictions on access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use the principle of least privilege for privileged accounts such as the service account in Kubernetes. For example, if a pod is not required to access the Kubernetes API, consider disabling the service account altogether.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce authentication and role-based access control on the container API to restrict users to the least privileges required. When using Kubernetes, avoid giving users wildcard permissions or adding users to the system:masters group, and use RoleBindings rather than ClusterRoleBindings to limit user privileges to specific namespaces.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">It may be possible to detect adversary use of credentials they have obtained such as inValid Accounts.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1552_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1552"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1552.008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsecured Credentials: Chat Messages</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preemptively search through communication services to find shared unsecured credentials. Searching for common patterns like password is , password= and take actions to reduce exposure when found.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that developers and system administrators are aware of the risk associated with sharing unsecured passwords across communication services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1550_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1550"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1550.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Alternate Authentication Material: Application Access Token</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File encryption should be enforced across email communications containing sensitive information that may be obtained through access to email services.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specificâ€”include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application that is not meant to read emails accessing usersâ€™ mail boxes and potentially exfiltrating sensitive data, or a token associated with a cloud service account being used to make API calls from an IP address outside of the cloud environment.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1550_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1550"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1051"/>
  <preventedBy rdf:resource="#M1052"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1550.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Alternate Authentication Material: Pass the Hash</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may pass the hash using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enable pass the hash mitigations to apply UAC restrictions to local accounts on network logon. The associated Registry key is located HKLM SOFTWARE Microsoft Windows CurrentVersion Policies System LocalAccountTokenFilterPolicy.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow a domain user to be in the local administrator group on multiple systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.Note: Analytic Event ID is for Windows Security Log (Event ID 4624 - An account was successfully logged on). The successful use of Pass the Hash for lateral movement between workstations would trigger Event ID 4624, with an event level of Information, from the Windows Security log. This event would show an account logon with a LogonType of 3 using NTLM authentication, a logon that is not a domain logon, and the user account not being the ANONYMOUS LOGON account.Analytic 1logons = filter log_events where (event_id== 4624 AND target_user_name != ANONYMOUS LOGON ANDauthentication_package_name == NTLM</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1550_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1550"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0026_001"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1550.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Alternate Authentication Material: Pass the Ticket</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may pass the ticket using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To contain the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do not allow a user to be a local administrator for multiple systems.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to Integrity check on decrypted field failed and indicates misuse by a previously invalidated golden ticket.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior that may pass the ticket using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1550_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1550"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1054"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0006_002"/>
  <mayBeDetectedBy rdf:resource="#D3_PSMD"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_PSA"/>
  <mayBeDetectedBy rdf:resource="#D3_CCSA"/>
  <mayBeDetectedBy rdf:resource="#D3_PLA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DUC"/>
  <mayBeEvictedBy rdf:resource="#D3_ANCI"/>
  <mayBeEvictedBy rdf:resource="#D3_CR"/>
  <mayBeEvictedBy rdf:resource="#D3_PT"/>
  <mayBeEvictedBy rdf:resource="#D3_PS"/>
  <mayBeHardenedBy rdf:resource="#D3_CRO"/>
  <mayBeHardenedBy rdf:resource="#D3_CTS"/>
  <mayBeIsolatedBy rdf:resource="#D3_MAC"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_HBPI"/>
  <mayBeRestoredBy rdf:resource="#D3_RC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1550.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use Alternate Authentication Material: Web Session Cookie</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure browsers or tasks to regularly delete persistent cookies.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1204_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1204"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_HD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_ID"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_URA"/>
  <mayBeDetectedBy rdf:resource="#D3_UA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1204.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Execution: Malicious Link</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior fromÂ Spearphishing Link. Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability viaÂ Exploitation for Client Execution. Links may also lead users to download files that require execution viaÂ Malicious File.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a link is being visited by a user, network intrusion prevention systems and systems designed to scan and remove malicious downloads can be used to block activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">malicious documents and files that are downloaded from a link and executed on the user's computer</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1204_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1204"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1038"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0022_002"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_DA"/>
  <mayBeDetectedBy rdf:resource="#D3_FA"/>
  <mayBeDetectedBy rdf:resource="#D3_FIM"/>
  <mayBeDetectedBy rdf:resource="#D3_EFA"/>
  <mayBeDeceivedBy rdf:resource="#D3_DF"/>
  <mayBeEvictedBy rdf:resource="#D3_FR"/>
  <mayBeHardenedBy rdf:resource="#D3_FE"/>
  <mayBeHardenedBy rdf:resource="#D3_LFP"/>
  <mayBeIsolatedBy rdf:resource="#D3_EDL"/>
  <mayBeIsolatedBy rdf:resource="#D3_EAL"/>
  <mayBeRestoredBy rdf:resource="#D3_RF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1204.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Execution: Malicious File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior fromÂ Spearphishing Attachment. Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, various Attack Surface Reduction (ASR) rules can be enabled to prevent the execution of potentially malicious executable files (such as those that have been downloaded and executed by Office applications/scripting interpreters/email clients or that do not meet specific prevalence, age, or trusted list criteria). Note: cloud-delivered protection must be enabled for certain rules. </hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application control may be able to prevent the running of executables masquerading as other files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).While batch files are not inherently malicious, it is uncommon to see them created after OS installation, especially in the Windows directory. This analytic looks for the suspicious activity of a batch file being created within the C:WindowsSystem32 directory tree. There will be only occasional false positives due to administrator actions.For Windows, Sysmon Event ID 11 (File create) can be used to track file creation events. This event also provides the Process ID of the process that created the file, which can be correlated with process creation events (e.g., Sysmon Event ID 1) to determine if the file was downloaded from an external network.For MacOS, utilities that work in concert with Appleâ€™s Endpoint Security Framework such as File Monitor can be used to track file creation events.Analytic 1 : Batch File Write to System32batch_files = filter files where ( extension =.bat AND file_path = C:Windowssystem32* )</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1204_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1204"/>
  <accomplishedTactic rdf:resource="#TA0002"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1031"/>
  <preventedBy rdf:resource="#M1045"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0015_001"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0032_001"/>
  <identifiedBy rdf:resource="#DS0032_003"/>
  <identifiedBy rdf:resource="#DS0007_001"/>
  <identifiedBy rdf:resource="#DS0030_001"/>
  <identifiedBy rdf:resource="#DS0030_006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1204.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Execution: Malicious Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository viaÂ Upload Malware, and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit images deployed within the environment to ensure they do not contain any malicious components.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Utilize a trust model such as Docker Content Trust with digital signatures to ensure runtime verification of the integrity and publisher of specific image tags.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network prevention intrusion systems and systems designed to scan and remove malicious downloads can be used to block activity.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Track the deployment of new containers, especially from newly built images.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the local image registry to make sure malicious images are not added.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed instances that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs)</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1078_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1078"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1078.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Valid Accounts: Default Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1078_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1078"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1032"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_DAM"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1078.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Valid Accounts: Domain Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional Tactic such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoftâ€™s Audit Logon Events page.Analytic 1 - Remote Desktop Logonsuspicious_netconn = filter network_connections where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10)Analytic 2 - Simultaneous Logins on a Hostusers_grouped = group users_list by hostnameusers_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_countmultiple_logins = filter users_grouped where (latest_time - earliest_time &lt;= 1 hour and user_count &gt; 1)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on LinuxNote:For Windows, Security Logs events, including Event ID 4624, can be monitored to track user login behavior.For Linux, auditing frameworks that support File Integrity Monitoring (FIM), including the audit daemon (auditd), can be used to alert on changes to files that store login information. These files include:/etc/login.defs,/etc/securetty,/var/log/faillog,/var/log/lastlog,/var/log/tallylog.For MacOS, auditing frameworks that support capturing information on user logins, such as OSQuery, can be used to audit user account logins and authentications.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1078_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1078"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_LAM"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1078.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Valid Accounts: Local Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that local administrator accounts have complex, unique passwords across all systems on the network.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.A remote desktop logon, throughRemote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary.Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoftâ€™s Audit Logon Events page.Analytic 1 - Remote Desktop Logonsuspicious_netconn = filter network_connections where (event_id = 4624 AND AuthenticationPackageName = 'Negotiate' AND Severity = Information AND logon_type = 10)Analytic 2 - Simultaneous Logins on a Hostusers_grouped = group users_list by hostnameusers_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_countmultiple_logins = filter users_grouped where (latest_time - earliest_time &lt;= 1 hour and user_count &gt; 1)</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux.Notes: For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on changes to log files that track authentication attempts, including/var/log/secure.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1078_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1078"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1015"/>
  <preventedBy rdf:resource="#M1017"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1026"/>
  <preventedBy rdf:resource="#M1027"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1036"/>
  <identifiedBy rdf:resource="#DS0028_001"/>
  <identifiedBy rdf:resource="#DS0028_002"/>
  <identifiedBy rdf:resource="#DS0002_001"/>
  <mayBeDetectedBy rdf:resource="#D3_ANET"/>
  <mayBeDetectedBy rdf:resource="#D3_RAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_JFAPA"/>
  <mayBeDetectedBy rdf:resource="#D3_AZET"/>
  <mayBeDetectedBy rdf:resource="#D3_SDA"/>
  <mayBeEvictedBy rdf:resource="#D3_AL"/>
  <mayBeHardenedBy rdf:resource="#D3_BAN"/>
  <mayBeHardenedBy rdf:resource="#D3_MFA"/>
  <mayBeHardenedBy rdf:resource="#D3_UAP"/>
  <mayBeHardenedBy rdf:resource="#D3_SPP"/>
  <mayBeHardenedBy rdf:resource="#D3_OTP"/>
  <mayBeModeledBy rdf:resource="#D3_AM"/>
  <mayBeRestoredBy rdf:resource="#D3_RUAA"/>
  <mayBeRestoredBy rdf:resource="#D3_ULA"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1078.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Valid Accounts: Cloud Accounts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management systems, such as Windows Active Directory.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use conditional access policies to block logins from non-compliant devices or from outside defined organization IP ranges.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable legacy authentication, which does not support MFA, and require the use of modern authentication protocols instead.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access, such as Global Administrator and Privileged Role Administrator in Azure AD. These reviews should also check if new privileged cloud accounts have been created that were not authorized. For example, in Azure AD environments configure alerts to notify when accounts have gone many days without using privileged roles, as these roles may be able to be removed. Consider using temporary, just-in-time (JIT) privileged access to Azure AD resources rather than permanently assigning privileged roles.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for suspicious account behavior across cloud services that share account.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account, account usage at atypical hours, or account authentication from unexpected locations or IP addresses. Service accounts should only be accessible from IP addresses from within the cloud environment.For example, in Azure AD environments, consider using Identity Protection to flag risky sign-ins based on location, device compliance, and other factors.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1497_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1497"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1497.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization/Sandbox Evasion: System Checks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromÂ Virtualization Sandbox EvasionÂ during automated discovery to shape follow-on behaviors.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1497_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1497"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1497.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization/Sandbox Evasion: User Activity Based Checks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned fromÂ Virtualization Sandbox EvasionÂ during automated discovery to shape follow-on behaviors.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1497_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1497"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017_001"/>
  <identifiedBy rdf:resource="#DS0009_001"/>
  <identifiedBy rdf:resource="#DS0009_003"/>
  <mayBeDetectedBy rdf:resource="#D3_SCA"/>
  <mayBeHardenedBy rdf:resource="#D3_SU"/>
  <mayBeIsolatedBy rdf:resource="#D3_SCF"/>
  <mayBeModeledBy rdf:resource="#D3_AVE"/>
  <mayBeModeledBy rdf:resource="#D3_SWI"/>
  <mayBeRestoredBy rdf:resource="#D3_RS"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1497.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Virtualization/Sandbox Evasion: Time Based Evasion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1600_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1600"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1600.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weaken Encryption: Reduce Key Space</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1600_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1600"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0022_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1600.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weaken Encryption: Disable Crypto Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries disable a network deviceâ€™s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1102_001">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1102"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1102.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Service: Dead Drop Resolver</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1102_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1102"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1102.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Service: Bidirectional Communication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1102_003">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1102"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1021"/>
  <preventedBy rdf:resource="#M1031"/>
  <identifiedBy rdf:resource="#DS0029_001"/>
  <identifiedBy rdf:resource="#DS0029_002"/>
  <identifiedBy rdf:resource="#DS0029_003"/>
  <mayBeDetectedBy rdf:resource="#D3_CSPP"/>
  <mayBeDetectedBy rdf:resource="#D3_NTCD"/>
  <mayBeDetectedBy rdf:resource="#D3_PMAD"/>
  <mayBeDetectedBy rdf:resource="#D3_PHDURA"/>
  <mayBeDetectedBy rdf:resource="#D3_RTSD"/>
  <mayBeDetectedBy rdf:resource="#D3_UGLPA"/>
  <mayBeDetectedBy rdf:resource="#D3_RPA"/>
  <mayBeIsolatedBy rdf:resource="#D3_OTF"/>
  <mayBeIsolatedBy rdf:resource="#D3_NTF"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1102.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Service: One-Way Communication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware can be used to mitigate activity at the network level.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for newly constructed network connections that are sent or received by untrusted hosts.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1548_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1548"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1548_005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Abuse Elevation Control Mechanism: Temporary Elevated Cloud Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the privileges of cloud accounts to assume, create, or impersonate additional roles, policies, and permissions to only those required. Where just-in-time access is enabled, consider requiring manual approval for temporary elevation of privileges.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Log API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1098_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1098"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <accomplishedTactic rdf:resource="#TA0004"/>
  <preventedBy rdf:resource="#M1032"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1098_006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Manipulation: Additional Container Cluster Roles</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account. Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Require multi-factor authentication for user accounts integrated into container clusters through cloud deployments or via authentication protocols such as LDAP or SAML.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ensure that low-privileged accounts do not have permissions to add permissions to accounts or to update container cluster roles.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect usage logs from accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to high-privileged cluster roles that go over a certain threshold of known admins.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1659">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <accomplishedTactic rdf:resource="#TA0011"/>
  <preventedBy rdf:resource="#M1041"/>
  <preventedBy rdf:resource="#M1021"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <identifiedBy rdf:resource="#DS0029"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1659</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Content Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., Drive-by Target followed by Drive-by Compromise), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., Ingress Tool Transfer) and other data to already compromised systems.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Where possible, ensure that online traffic is appropriately encrypted through services such as trusted VPNs.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected and abnormal file creations that may indicate malicious content injected through online network communications.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for other unusual network traffic that may indicate additional malicious content transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious payloads, content obfuscation, and exploit code.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, or evidence of Discovery.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1555_006">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1555"/>
  <accomplishedTactic rdf:resource="#TA0006"/>
  <preventedBy rdf:resource="#M1026"/>
  <identifiedBy rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1555_006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credentials from Password Stores: Cloud Secrets Management Stores</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the number of cloud accounts and services with permission to query the secrets manager to only those required. Ensure that accounts and services with permissions to query the secrets manager only have access to the secrets they require.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from the secrets manager, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests. </hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1567_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1567"/>
  <accomplishedTactic rdf:resource="#TA0010"/>
  <preventedBy rdf:resource="#M1057"/>
  <identifiedBy rdf:resource="#DS0015"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <identifiedBy rdf:resource="#DS0029"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1567_004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exfiltration Over Web Service: Exfiltration Over Webhook</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data loss prevention can be detect and block sensitive data being uploaded to web services via web browsers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may exfiltrate data to a webhook as a malicious command and control channel. Additionally, monitor commands that may create new webhook configurations in SaaS services - for example, gh webhook forward in Github or mgc subscriptions create in Office 365.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for files being accessed to exfiltrate data to a webhook as a malicious command and control channel.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1657">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0040"/>
  <preventedBy rdf:resource="#M1018"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0015"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1657</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Financial Theft</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware, business email compromise (BEC) and fraud, 'pig butchering,' bank hacking, and exploiting cryptocurrency networks.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit access/authority to execute sensitive transactions, and switch to systems and procedures designed to authenticate/approve payments and purchase requests outside of insecure communication lines such as email.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train and test users to identify social engineering techniques used to enable financial theft.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review and monitor financial application logs for signs of financial theft, such as abnormal monetary transactions or resource balances.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email logs may also highlight account takeovers, impersonation, or another activity that may enable monetary theft.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1564_011">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1564"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1564_011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hide Artifacts: Ignore Process Interrupts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off. These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments, such as nohup, that may attempt to hide processes from interrupt signals.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor newly created processes for artifacts, such as nohup or PowerShell -ErrorAction SilentlyContinue, that may attempt to hide processes from interrupt signals.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1562_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1562"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1562_012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impair Defenses: Disable or Modify Linux Audit System</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely check account role permissions to ensure only expected users and roles have permission to modify logging settings. To ensure Audit rules can not be modified at runtime, add the auditctl -e 2 as the last command in the audit.rules files. Once started, any attempt to change the configuration in this mode will be audited and denied. The configuration can only be changed by rebooting the machine.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary must already have root level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require. </hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command-line invocation of the auditctl utility may be unusual, depending on how systems are typically used in a particular environment. At runtime, look for commands to modify or create rules using the auditctl utility.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for missing log files from machines with known active periods.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor changes made to the /etc/audit/audit.rules file containing the sequence of auditctl commands loaded at boot time.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for abnormal execution of syslog and other functions associated with system logging.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using another process or third-party tools, monitor for potentially malicious modifications or access to the auditd system process.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1656">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1019"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0015"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1656</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Impersonation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via Phishing for Information, Phishing, or Internal Spearphishing) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversaryâ€™s ultimate goals, possibly against multiple victims.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Threat intelligence helps defenders and users be aware of and defend against common lures and active campaigns that have been used for impersonation.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to be aware of impersonation tricks and how to counter them, for example confirming incoming requests through an independent platform like a phone call or in-person, to reduce risk.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Review and monitor email and other user communication logs for signs of impersonation, such as suspicious emails (e.g., from known malicious or compromised accounts) or content associated with an adversary's actions on objective (e.g., abnormal monetary transactions).</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1654">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1654</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Log Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records (Account Discovery), security or vulnerable software (Software Discovery), or hosts within a compromised network (Remote System Discovery).</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit the ability to access and export sensitive logs to privileged accounts where possible.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the use of commands and arguments of utilities and other tools used to access and export logs.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for access to system and service log files, especially from unexpected and abnormal users.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected process activity associated with utilities that can access and export logs, such as wevutil.exe on Windows and CollectGuestLogs.exe on Azure hosted VMs.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1036_009">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1036"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1036_009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Masquerading: Break Process Trees</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the 'parent-child' relationship for detection, breaking this relationship could result in the adversaryâ€™s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls such as fork() which can be abused to masquerade or manipulate process metadata.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for the abnormal creation of background processes as well as processes executing from abnormal locations, such as /dev/shm.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1578_005">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1578"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1047"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1578_005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victimâ€™s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Routinely monitor user permissions to ensure only the expected users have the capability to request quota adjustments or modify tenant-level compute settings.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit permissions to request quotas adjustments or modify tenant-level compute setting to only those required.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1027_012">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1027"/>
  <accomplishedTactic rdf:resource="#TA0005"/>
  <preventedBy rdf:resource="#M1049"/>
  <preventedBy rdf:resource="#M1040"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1027_012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obfuscated Files or Information: LNK Icon Smuggling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the IconEnvironmentDataBlock) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use signatures or heuristics to detect malicious LNK and subsequently downloaded files.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts or payloads.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for downloaded malicious files, though developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by LNK Icon Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor contextual data about a file that may highlight embedded malicious content, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1566_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1566"/>
  <accomplishedTactic rdf:resource="#TA0001"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0015"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1566_004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing: Spearphishing Voice</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify and report social engineering techniques and spearphishing attempts, while also being suspicious of and verifying the identify of callers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1598_004">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1598"/>
  <accomplishedTactic rdf:resource="#TA0043"/>
  <preventedBy rdf:resource="#M1017"/>
  <identifiedBy rdf:resource="#DS0015"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1598_004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing for Information: Spearphishing Voice</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: Impersonation) and/or creating a sense of urgency or alarm for the recipient.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Users can be trained to identify and report social engineering techniques and spearphishing attempts, while also being suspicious of and verifying the identify of callers.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1653">
  <rdf:type rdf:resource="#Technique"/>
  <accomplishedTactic rdf:resource="#TA0003"/>
  <preventedBy rdf:resource="#M1047"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1653</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Power Settings</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Periodically inspect systems for abnormal and unexpected power settings that may indicate malicious activty.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor and inspect commands and arguments associated with manipulating the power settings of a system.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for unexpected changes to configuration files associated with the power settings of a system.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1021_008">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1021"/>
  <accomplishedTactic rdf:resource="#TA0008"/>
  <preventedBy rdf:resource="#M1042"/>
  <preventedBy rdf:resource="#M1018"/>
  <identifiedBy rdf:resource="#DS0028"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1021_008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services: Direct Cloud VM Connections</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may leverage Valid Accounts to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the Cloud API, such as Azure Serial Console, AWS EC2 Instance Connect, and AWS System Manager.</hasDescription>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If direct virtual machine connections are not required for administrative use, disable these connection types where feasible.</hasMitigation>
  <hasMitigation rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit which users are allowed to access compute infrastructure via cloud native methods.</hasMitigation>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor cloud audit logs and host logs for logon session events. These can be found in CloudTrail, Unified Audit Logs, Windows Event Logs and /var/log/auth.log or /var/log/secure for Linux systems.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#T1016_002">
  <rdf:type rdf:resource="#Technique"/>
  <isSubTechniqueOf rdf:resource="#T1016"/>
  <accomplishedTactic rdf:resource="#TA0007"/>
  <identifiedBy rdf:resource="#DS0017"/>
  <identifiedBy rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">T1016_002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Network Configuration Discovery: Wi-Fi Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of Account Discovery, Remote System Discovery, and other discovery or Credential Access activity to support both ongoing and future campaigns.</hasDescription>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor executed commands and arguments that may collect Wi-Fi information on compromised systems.</hasDetection>
  <hasDetection rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitor for API calls (such as those from wlanAPI.dll) that may gather details about locally reachable Wi-Fi networks.</hasDetection>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0026"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Credential Request</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A user requested active directory credentials, such as a ticket or token</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0026"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Object Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening of an active directory object, typically to collect/read its value</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0026"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Object Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new active directory object</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0026"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Object Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of an active directory object</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0026_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0026"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0026.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Object Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to an active directory object</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0015">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0015</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Log</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0015_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0015"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0015.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Log Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logging, messaging, and other artifacts provided by third-party services</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0037">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0037</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certificate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0037_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0037"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0037.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certificate Registration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Queried or logged information highlighting current and expired digital certificates</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0025">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0025</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0025_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0025.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Disable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deactivation or stoppage of a cloud service</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0025_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0025.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of cloud services</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0025_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0025.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a cloud service and activity around it such as name, type, or purpose/function</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0025_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0025"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0025.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Service Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a cloud service, including its settings and/or data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening of a cloud storage infrastructure, typically to collect/read its value</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of new cloud storage infrastructure</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of cloud storage infrastructure</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of cloud storage infrastructure</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about cloud storage infrastructure and activity around it such as name, size, or owner</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0010_006">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0010.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloud Storage Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to cloud storage infrastructure, including its settings and/or data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0017">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0017</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0017_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0017"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0017.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The execution of a line of text, potentially with arguments, created from program code</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0032">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0032</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0032_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0032"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0032.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new container</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0032_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0032"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0032.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of containers</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0032_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0032"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0032.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Container Start</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Activation or invocation of a container</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0038">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0038</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Name</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0038_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0038"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0038.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Queried domain name system (DNS) registry data highlighting current domain to IP address resolutions</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0038_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0038"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0038.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Registration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information about domain name assignments and other domain metadata</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0038_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0038"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0038.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passive DNS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logged domain name system (DNS) data highlighting timelines of domain to IP address resolutions</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0016">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0016</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drive</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A non-volatile data storage device (hard drive, floppy disk, USB flash drive) with at least one formatted partition, typically mounted to the file system and/or assigned a drive letter</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0016_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0016"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0016.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drive Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening of a data storage device with an assigned drive letter or mount point</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0016_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0016"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0016.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drive Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a drive letter or mount point to a data storage device</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0016_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0016"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0016.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drive Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a drive letter or mount point of a data storage device</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0027">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0027</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Driver</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0027_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0027.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Driver Load</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Attaching a driver to either user or kernel-mode of a system</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0027_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0027.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Driver Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a driver and activity around it such as driver issues reporting or integrity (page hash, code) checking</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening a file, which makes the file contents available to the requestor</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new file</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of a file</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a file, which may include information such as name, the content</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0022_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0022"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0022.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a file, or its access permissions and attributes, typically to alter the contents of the targeted file</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0018">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0018</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewall</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0018_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0018.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewall Disable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deactivation or stoppage of a cloud service</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0018_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0018.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewall Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of available firewalls and/or their associated settings/rules</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0018_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0018.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewall Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a firewall and activity around it such as name, policy, or status</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0018_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0018.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firewall Rule Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a firewall rule, typically to allow/block specific network traffic</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0001">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0001_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0001.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to firmware, including its settings and/or data, such as MBR (Master Boot Record) and VBR (Volume Boot Record)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0036">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0036</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0036_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0036"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0036.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of available groups and/or their associated settings</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0036_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0036"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0036.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of available groups and/or their associated settings</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0036_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0036"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0036.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a group, such as membership, name, or permissions</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0007">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Image</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0007_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0007.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Image Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a virtual machine image</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0007_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0007.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Image Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of a virtual machine image</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0007_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0007.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Image Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a virtual machine image such as name, resource group, state, or type</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0007_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0007.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Image Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a virtual machine image, including setting and/or control data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new instance</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of an instance</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of instances within a cloud environment</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about an instance and activity around it such as name, type, or status</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to an instance, including its settings and/or control data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_006">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Start</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Activation or invocation of an instance</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0030_007">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0030"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0030.007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instance Stop</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deactivation or stoppage of an instance</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0035">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0035</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internet Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0035_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0035"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0035.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Response Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logged network traffic in response to a scan showing both protocol header and body values</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0035_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0035"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0035.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Response Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about an Internet-facing resource gathered from a scan, such as running services or ports</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0008">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0008</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Kernel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0008_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0008.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Kernel Module Load</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An object file that contains code to extend the running kernel of an OS, typically used to add support for new hardware (as device drivers) and/or filesystems, or for adding system calls</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0028">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0028</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logon Session</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0028_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0028"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0028.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logon Session Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a successful new user logon following an authentication attempt</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0028_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0028"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0028.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logon Session Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a logon session, such as username, logon type, access tokens (security context, user SIDs, logon identifiers, and logon SID), and any activity associated within it</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0023">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0023</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Named Pipe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0023_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0023"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0023.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Named Pipe Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a named pipe on a system, including pipe name and creating process</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0004">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0004_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0004.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malware Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Code, strings, and other signatures that compromise a malicious payload</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0004_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0004.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malware Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0011">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0011</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Module</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0011_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0011"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0011.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Module Load</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Attaching a module into the memory of a process/program, typically to access shared resources/features provided by the module</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0033">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0033</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Share</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0033_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0033"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0033.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Share Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening a network share, which makes the contents available to the requestor</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0029">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0029</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0029_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0029"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0029.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Connection Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a network connection, such as capturing socket information with a source/destination IP and port(s)</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0029_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0029"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0029.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logged network traffic data showing both protocol header and body values</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0029_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0029"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0029.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Flow</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Summarized network packet data, with metrics, such as protocol headers and volume</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0021">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0021</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Persona</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0021_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0021"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0021.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Social Media</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Established, compromised, or otherwise acquired social media personas</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0014">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0014</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pod</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A single unit of shared resources within a cluster, comprised of one or more containers</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0014_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0014"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0014.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pod Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new pod</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0014_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0014"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0014.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pod Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of pods within a cluster</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0014_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0014"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0014.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pod Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a pod, including its settings and/or control data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">OS API Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operating system function/method calls executed by a process</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening of a process by another process, typically to read memory of the target process</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The initial construction of an executable managed by the OS, that may involve one or more tasks or threads.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a running process, which may include information such as environment variables, image name, user/owner, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a process, or its contents, typically to write and/or execute code in the memory of the target process</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0009_006">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0009.006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Termination</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exit of a running process</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0003">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Job</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automated tasks that can be executed at a specific time or on a recurring schedule running in the background</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0003_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0003.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Job Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new scheduled job</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0003_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0003.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Job Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a scheduled job, which may include information such as name, timing, command(s), etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0003_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0003.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Job Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a scheduled job, such as modifications to the execution launch</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0012">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0012</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A file or stream containing a list of commands, allowing them to be launched in sequence</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0012_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0012"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0012.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Script Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The execution of a text file that contains code via the interpreter</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0013">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensor Health</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information from host telemetry providing insights about system status, errors, or other notable functional activity</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0013_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0013"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0013.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Host Status</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logging, messaging, and other artifacts highlighting the health of host sensors</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0019">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0019</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0019_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0019"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0019.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Service Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new service/daemon</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0019_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0019"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0019.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Service Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0019_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0019"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0019.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ervice Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a service/daemon, such as changes to name, description, and/or start type</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0020"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new snapshot</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0020"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of a snapshot</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0020"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of snapshops within a cloud environment</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0020"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a snapshot, which may include information such as ID, type, and status</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0020_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0020"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0020.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Snapshot Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a snapshop, such as metadata and control data</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A profile representing a user, device, service, or application used to authenticate and access resources</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attempt by a user to gain access to a network or computing resource, often by providing credentials</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new account</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of an account</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about an account, which may include a username, user ID, environmental data, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0002_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0002.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to an account, such as permissions and/or membership in specific groups</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0034"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a cloud volume</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0034"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of a a cloud volume</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0034"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An extracted list of available volumes within a cloud environment</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0034"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a cloud volume and activity around it, such as id, type, state, and size</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0034_005">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0034"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0034.005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Volume Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contextual data about a cloud volume and activity around it, such as id, type, state, and size</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0006">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0006</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Credential</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential material, such as session cookies or tokens, used to authenticate to web applications and services</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0006_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0006.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Credential Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of new web credential material</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0006_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0006.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Credential Usage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attempt by a user to gain access to a network or computing resource by providing web credentials</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0024">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0024</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0024_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0024"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0024.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Registry Key Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Opening a Registry Key, typically to read the associated value</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0024_002">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0024"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0024.002</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Registry Key Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a new Registry Key</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0024_003">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0024"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0024.003</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Registry Key Deletion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removal of a Registry Key</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0024_004">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0024"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0024.004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Registry Key Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Changes made to a Registry Key and/or Key value</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0005">
  <rdf:type rdf:resource="#Detection"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0005</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">WMI</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#DS0005_001">
  <rdf:type rdf:resource="#Detection"/>
  <isSubDetectionOf rdf:resource="#DS0005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DS0005.001</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">WMI Creation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initial construction of a WMI object, such as a filter, consumer, subscription, binding, or provider</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1013">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1013</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Developer Guidance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This mitigation describes any guidance or training given to developers of applications to avoid introducing security weaknesses that an adversary may be able to take advantage of.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1015">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1015</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Directory Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1016">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1016</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Vulnerability Scanning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Vulnerability scanning is used to find potentially exploitable software vulnerabilities to remediate them.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1017">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1017</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Training</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1018">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1018</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manage the creation, modification, use, and permissions associated to user accounts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1019">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1019</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Threat Intelligence Program</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A threat intelligence program helps an organization generate their own threat intelligence information and track trends to inform defensive priorities to mitigate risk.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1020">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1020</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SSL/TLS Inspection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Break and inspect SSL/TLS sessions to look at encrypted web traffic for adversary activity.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1021">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1021</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict Web-Based Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1022">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1022</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict File and Directory Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict access by setting directory and file permissions that are not specific to users or privileged accounts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1024">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1024</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict Registry Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict the ability to modify certain hives or keys in the Windows Registry.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1025">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1025</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privileged Process Integrity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect processes with high privileges that can be used to interact with critical system components through use of protected process light, anti-process injection defenses, or other process integrity enforcement measures.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1026">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1026</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privileged Account Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1027">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1027</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Policies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Set and enforce secure password policies for accounts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1028">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1028</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operating System Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1029">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1029</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Data Storage</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use remote security log and sensitive file storage where access can be controlled better to prevent exposure of intrusion detection log data or sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1030">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1030</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Segmentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1031">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1031</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Intrusion Prevention</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use intrusion detection signatures to block traffic at network boundaries.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1032">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1032</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multi-factor Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1033">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1033</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit Software Installation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block users or groups from installing unapproved software.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1034">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1034</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit Hardware Installation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block users or groups from installing or using unapproved hardware on systems, including USB devices.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1035">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1035</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limit Access to Resource Over Network</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent access to file shares, remote access to systems, unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1036">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1036</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Use Policies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure features related to account use like login attempt lockouts, specific login times, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1037">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1037</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Filter Network Traffic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1038">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1038</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Prevention</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block execution of code on a system through application control, and/or script blocking.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1039">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1039</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Environment Variable Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent modification of environment variables by unauthorized users and groups.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1040">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1040</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Behavior Prevention on Endpoint</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, API call, etc. behavior.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1041">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1041</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypt Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protect sensitive information with strong encryption.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1042">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1042</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable or Remove Feature or Program</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1043">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1043</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Access Protection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use capabilities to prevent successful credential access by adversaries; including blocking forms of credential dumping.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1044">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1044</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict Library Loading</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Prevent abuse of library loading mechanisms in the operating system and software to load untrusted code by configuring appropriate library loading mechanisms and investigating potential vulnerable software.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1045">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1045</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Code Signing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1046">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1046</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Boot Integrity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use secure methods to boot a system and verify the integrity of the operating system and loading mechanisms.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1047">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1047</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1048">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1048</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Isolation and Sandboxing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restrict execution of code to a virtual environment on or in transit to an endpoint system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1049">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1049</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Antivirus/Antimalware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use signatures or heuristics to detect malicious software.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1050">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1050</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploit Protection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1051">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1051</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Update Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Perform regular software updates to mitigate exploitation risk.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1052">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1052</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configure Windows User Account Control to mitigate risk of adversaries obtaining elevated process access.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1053">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1053</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Backup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Take and store data backups from end user systems and critical servers. Ensure backup and storage systems are hardened and kept separate from the corporate network to prevent compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1054">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1054</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1055">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1055</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Do Not Mitigate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This category is to associate techniques that mitigation might increase risk of compromise and therefore mitigation is not recommended.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1056">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1056</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pre-compromise</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This category is used for any applicable mitigation activities that apply to techniques occurring before an adversary gains Initial Access, such as Reconnaissance and Resource Development techniques.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#M1057">
  <rdf:type rdf:resource="#Mitigation"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">M1057</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Loss Prevention</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use a data loss prevention (DLP) strategy to categorize sensitive data, identify data formats indicative of personal identifiable information (PII), and restrict exfiltration of sensitive data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Analysis is an analytic process to determine a file's status. For example: virus, trojan, benign, malicious, trusted, unauthorized, sensitive, etc.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dynamic Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Executing or opening a file in a synthetic 'sandbox' environment to determine if the file is a malicious program or if the file exploits another program such as a document reader.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EFA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EFA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Emulated File Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Emulating instructions in a file looking for specific patterns.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FCOA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FCOA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Content Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Employing a pattern matching algorithm to statically analyze the content of files.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FCR">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FCR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Content Rules</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Employing a pattern matching rule language to analyze the content of files.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FH">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FH</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Hashing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Employing file hash comparisons to detect known malware.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ID">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ID</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identifier Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing identifier artifacts such as IP address, domain names, or URL(I)s.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_HD">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-HD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Homoglyph Detection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparing strings using a variety of techniques to determine if a deceptive or malicious string is being presented to a user.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IAA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IAA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identifier Activity Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Taking known malicious identifiers and determining if they are present in a system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IRA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IRA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identifier Reputation Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the reputation of an identifier.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_URA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-URA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">URL Reputation Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the reputation of a URL.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_UA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-UA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">URL Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Determining if a URL is benign or malicious by analyzing the URL or its components.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_MA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-MA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Message Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing email or instant message content to detect unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SMRA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SMRA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sender MTA Reputation Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Characterizing the reputation of mail transfer agents (MTA) to determine the security risk in emails.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SRA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SRA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sender Reputation Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Ascertaining sender reputation based on information associated with a message (e.g. email/instant messaging).</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NTA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NTA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing intercepted or summarized computer network traffic to detect unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ANAA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ANAA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Administrative Network Activity Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of unauthorized use of administrative network protocols by analyzing network activity against a baseline.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Certificate Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ACA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ACA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Certificate Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Actively collecting PKI certificates by connecting to the server and downloading its server certificates for analysis.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PCA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PCA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passive Certificate Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting host certificates from network traffic or other passive sources like a certificate transparency log and analyzing them for unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CSPP">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CSPP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Client-server Payload Profiling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passively collecting certificates and analyzing them.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CAA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CAA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Connection Attempt Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparing client-server request and response payloads to a baseline profile to identify outliers.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DNSTA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DNSTA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DNS Traffic Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing failed connections in a network to detect unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FC">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Carving</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analysis of domain name metadata, including name and DNS records, to determine whether the domain is likely to resolve to an undesirable host.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ISVA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ISVA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inbound Session Volume Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identifying and extracting files from network application protocols through the use of network stream reassembly software.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IPCTA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IPCTA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">IPC Traffic Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing inbound network session or connection attempt volume.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NTCD">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NTCD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Community Deviation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing standard inter process communication (IPC) protocols to detect deviations from normal protocol activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PHDURA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PHDURA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Per Host Download- Upload Ratio Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establishing baseline communities of network hosts and identifying statistically divergent inter-community communication.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PMAD">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PMAD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protocol Metadata Anomaly Detection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting anomalies that indicate malicious activity by comparing the amount of data downloaded versus data uploaded by a host.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RPA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RPA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Relay Pattern Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting network communication protocol metadata and identifying statistical outliers.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RTSD">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RTSD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Terminal Session Detection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The detection of an internal host relaying traffic between the internal network and the external network.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RTA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RTA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">RPC Traffic Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detection of an unauthorized remote live terminal console session by examining network traffic to a network host.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Platform Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the activity of remote procedure calls in communication traffic to establish standard protocol operations and potential attacker activities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FIM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FIM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Integrity Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring platform components such as operating systems software, hardware devices, or firmware.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FBA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FBA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware Behavior Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting any suspicious changes to files in a computer system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FV">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware Verification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the behavior of embedded code in firmware and looking for anomalous behavior and suspicious activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FEMC">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FEMC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Firmware Embedded Monitoring Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cryptographically verifying firmware integrity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SFV">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SFV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Firmware Verification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring code is injected into firmware for integrity monitoring of firmware and firmware data.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_OSM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-OSM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operating System Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cryptographically verifying installed system firmware integrity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EHB">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EHB</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Endpoint Health Beacon</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The operating system software, for D3FEND's purposes, includes the kernel and its process management functions, hardware drivers, initialization or boot logic. It also includes and other key system daemons and their configuration. The monitoring or analysis of these components for unauthorized activity constitute Operating System Monitoring.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IDA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IDA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Device Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the security status of an endpoint by sending periodic messages with health status, where absence of a response may indicate that the endpoint has been compromised.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_MBT">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-MBT</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Memory Boundary Tracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operating system level mechanisms to prevent abusive input device exploitation.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SJA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SJA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheduled Job Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing a call stack for return addresses which point to unexpected memory locations.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SDM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SDM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Daemon Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analysis of source files, processes, destination files, or destination servers associated with a scheduled job to detect unauthorized use of job scheduling.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SFA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SFA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System File Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Tracking changes to the state or configuration of critical system level processes.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SBV">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SBV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Service Binary Verification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring system files such as authentication databases, configuration files, system logs, and system executables for modification or tampering.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SICA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SICA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Init Config Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing changes in service binary files by comparing to a source of truth.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_USICA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-USICA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Session Init Config Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analysis of any system process startup configuration.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing modifications to user session config files such as .bashrc or .bash_profile.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DQSA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DQSA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Database Query String Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Analysis consists of observing a running application process and analyzing it to watch for certain behaviors or conditions which may indicate adversary activity. Analysis can occur inside of the process or through a third-party monitoring application. Examples include monitoring system and privileged calls, monitoring process initiation chains, and memory boundary allocations.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PCSV">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PCSV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Code Segment Verification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing database queries to detect [SQL Injection]</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PSMD">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PSMD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Self-Modification Detection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparing the text or code memory segments to a source of truth.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PSA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PSA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Spawn Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detects processes that modify, change, or replace their own code at runtime.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PLA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PLA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Lineage Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing spawn arguments or attributes of a process to detect processes that are unauthorized.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SSC">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SSC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Shadow Stack Comparisons</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identification of suspicious processes executing on an end-point device by examining the ancestry and siblings of a process, and the associated metadata of each node on the tree, such as process execution, duration, and order relative to siblings and ancestors.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SCA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SCA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Call Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparing a call stack in system memory with a shadow call stack maintained by the processor to determine unauthorized shellcode activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FCA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FCA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Creation Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing system calls to determine whether a process is exhibiting unauthorized behavior.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_UBA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-UBA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Behavior Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the properties of file create system call invocations.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ANET">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ANET</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Event Thresholding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User behavior analytics as defined by Gartner, is a cybersecurity process about detection of insider threats, targeted attacks, and financial fraud. UBA solutions look at patterns of human behavior, and then apply algorithms and statistical analysis to detect meaningful anomalies from those patterns-anomalies that indicate potential threats.' Instead of tracking devices or security events, UBA tracks a system's users. Big data platforms are increasing UBA functionality by allowing them to analyze petabytes worth of data to detect insider threats and advanced persistent threats.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AZET">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AZET</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authorization Event Thresholding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting authentication events, creating a baseline user profile, and determining whether authentication events are consistent with the baseline profile.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CCSA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CCSA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Compromise Scope Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collecting authorization events, creating a baseline user profile, and determining whether authorization events are consistent with the baseline profile.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DAM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DAM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Account Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Determining which credentials may have been compromised by analyzing the user logon history of a particular system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_JFAPA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-JFAPA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Job Function Access Pattern Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Monitoring the existence of or changes to Domain User Accounts.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_LAM">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-LAM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Local Account Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detecting anomalies in user access patterns by comparing user access activity to behavioral profiles that categorize users by role such as job title, function, department.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RAPA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RAPA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Resource Access Pattern Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing local user accounts to detect unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SDA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SDA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Duration Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the resources accessed by a user to identify unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_UGLPA">
  <rdf:type rdf:resource="#Detect"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-UGLPA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Geolocation Logon Pattern Analysis</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Analyzing the duration of user sessions in order to detect unauthorized activity.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CHN">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CHN</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Connected Honeynet</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A decoy service, system, or environment, that is connected to the enterprise network, and simulates or emulates certain functionality to the network, without exposing full access to a production system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DE">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy Environment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A Decoy Environment comprises hosts and networks for the purposes of deceiving an attacker.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DF">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A file created for the purposes of deceiving an adversary.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DNR">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DNR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy Network Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deploying a network resource for the purposes of deceiving an adversary.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DO">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DO</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy Object</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A Decoy Object is created and deployed for the purposes of deceiving attackers.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DST">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DST</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy Session Token</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An authentication token created for the purposes of deceiving an adversary.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DUC">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DUC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Decoy User Credential</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A Credential created for the purpose of deceiving an adversary.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IHN">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IHN</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Integrated Honeynet</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The practice of setting decoys in a production environment to entice interaction from attackers.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SHN">
  <rdf:type rdf:resource="#Deceive"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SHN</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Standalone Honeynet</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An environment created for the purpose of attracting attackers and eliciting their behaviors that is not connected to any production enterprise systems.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deceive</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AL">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Locking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The process of temporarily disabling user accounts on a system or domain.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ANCI">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ANCI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Cache Invalidation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Removing tokens or credentials from an authentication cache to prevent further user associated account accesses.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CE">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Eviction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Eviction techniques disable or remove compromised credentials from a computer network.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CR">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Revoking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deleting a set of credentials permanently to prevent them from being used to authenticate.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ER">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ER</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Removal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The email removal technique deletes email files from system storage.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FEV">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FEV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Eviction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File eviction techniques evict files from system storage.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FR">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Removal</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The file removal technique deletes malicious artifacts or programs from a computer system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PE">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Eviction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process eviction techniques terminate or remove running processes.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PS">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PS</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Suspension</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Suspending a running process on a computer system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PT">
  <rdf:type rdf:resource="#Evict"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PT</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Termination</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Terminating a running application process on a computer system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evict</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ACH">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ACH</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Configuration Hardening</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modifying an application's configuration to reduce its attack surface.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AH">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AH</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Hardening</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Hardening makes an executable application more resilient to a class of exploits which either introduce new code or execute unwanted existing code. These techniques may be applied at compile-time or on an application binary.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_BAN">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-BAN</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Biometric Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using biological measures in order to authenticate a user.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_BA">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-BA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Bootloader Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cryptographically authenticating the bootloader software before system boot.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CH">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CH</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Hardening</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Hardening techniques modify system or network properties in order to protect system or network/domain credentials.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CRO">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CRO</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Rotation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Expiring an existing set of credentials and reissuing a new valid set.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CTS">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CTS</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Transmission Scoping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limiting the transmission of a credential to a scoped set of relying parties.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DENCR">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DENCR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disk Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypting a hard disk partition to prevent cleartext access to a file system.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DTP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DTP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Domain Trust Policy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting inter-domain trust by modifying domain configuration.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FE">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encrypting a file using a cryptographic key.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_LFP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-LFP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Local File Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting access to a local file by configuring operating system functionality.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_MFA">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-MFA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multi-factor Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Requiring proof of two or more pieces of evidence in order to authenticate a user.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_OTP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-OTP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">One-time Password</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A one-time password is valid for only one user authentication.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PH">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PH</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Platform Hardening</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardening components of a Platform with the intention of making them more difficult to exploit. Platforms include components such as BIOS UEFI Subsystems, Hardware security devices such as Trusted Platform Modules, Boot process logic or code, Kernel software components.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PSEP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PSEP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Segment Execution Prevention</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preventing execution of any address in a memory region other than the code segment.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SAOR">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SAOR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Segment Address Offset Randomization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Randomizing the base (start) address of one or more segments of memory during the initialization of a process.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SU">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SU</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Update</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replacing old software on a computer system component.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SFCV">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SFCV</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stack Frame Canary Validation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparing a value stored in a stack frame with a known good value in order to prevent or detect a memory segment overwrite.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SPP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SPP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Strong Password Policy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modifying system configuration to increase password strength.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SCP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SCP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Configuration Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting system configuration modifications to a specific user or group of users.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_UAP">
  <rdf:type rdf:resource="#Harden"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-UAP</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Account Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting a user account's access to resources.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harden</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DNSAL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DNSAL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DNS Allowlisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permitting only approved domains and their subdomains to be resolved.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DNSDL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DNSDL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DNS Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking DNS Network Traffic based on criteria such as IP address, domain name, or DNS query type.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EF">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Email Filtering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Filtering incoming email traffic based on specific criteria.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EAL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EAL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Executable Allowlisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using a digital signature to authenticate a file before opening.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EDL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EDL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Executable Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking the execution of files on a host in accordance with defined application policy rules.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_EI">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-EI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Isolation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution Isolation techniques prevent application processes from accessing non-essential system resources, such as memory, devices, or files.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_FRDDL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-FRDDL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forward Resolution Domain Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking a lookup based on the query's domain name value.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_HBPI">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-HBPI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware-based Process Isolation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Preventing one process from writing to the memory space of another process through hardware-based address manager implementations.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_HDDL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-HDDL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hierarchical Domain Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking the resolution of any subdomain of a specified domain name.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_HDL">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-HDL</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Homoglyph Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking DNS queries that are deceptively similar to legitimate domain names.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ITF">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ITF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inbound Traffic Filtering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting network traffic originating from untrusted networks destined towards a private host or enclave.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_IOPR">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-IOPR</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">IO Port Restriction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Limiting access to computer input/output (IO) ports to restrict unauthorized devices.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_KBPI">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-KBPI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Kernel-based Process Isolation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using kernel-level capabilities to isolate processes.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_MAC">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-MAC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mandatory Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Controlling access to local computer system resources with kernel-level capabilities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NI">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Isolation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Isolation techniques prevent network hosts from accessing non-essential system network resources.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NTF">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NTF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Filtering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting network traffic originating from any location.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_OTF">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-OTF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Outbound Traffic Filtering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restricting network traffic originating from a private host or enclave destined towards untrusted networks.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RRID">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RRID</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reverse Resolution IP Denylisting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Blocking a reverse lookup based on the query's IP address value.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SCF">
  <rdf:type rdf:resource="#Isolate"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SCF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Call Filtering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuring a kernel to use an allow or deny list to filter kernel API calls.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Isolate</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Modeling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access modeling identifies and records the access permissions granted to administrators, users, groups, and systems.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ALLM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ALLM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Logical Link Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active logical link mapping sends and receives network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connections.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_APLM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-APLM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active Physical Link Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active physical link mapping sends and receives network traffic as a means to map the physical layer.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Asset Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Asset inventorying identifies and records the organization's assets and enriches each inventory item with knowledge about their vulnerabilities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_AVE">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-AVE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Asset Vulnerability Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Asset vulnerability enumeration enriches inventory items with knowledge identifying their vulnerabilities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_CI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-CI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration inventory identifies and records the configuration of software and hardware and their components throughout the organization.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_DI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-DI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Data inventorying identifies and records the schemas, formats, volumes, and locations of data stored and used on the organization's architecture.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_HCI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-HCI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Component Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware component inventorying identifies and records the hardware items in the organization's architecture.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_LLM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-LLM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logical Link Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logical link mapping creates a model of existing or previous node-to-node connections using network-layer data or metadata.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network mapping encompasses the techniques to identify and model the physical layer, network layer, and data exchange layers of the organization's network and their physical location, and determine allowed pathways through that network.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NNI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NNI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Node Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network node inventorying identifies and records all the network nodes (hosts, routers, switches, firewalls, etc.) in the organization's architecture.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_NTPM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-NTPM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Traffic Policy Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network traffic policy mapping identifies and models the allowed pathways of data at the network, transport, and/or application levels.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_OAM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-OAM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operational Activity Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operational activity mapping identifies activities of the organization and the organization's suborganizations, groups, roles, and individuals that carry out the activities and then establishes the dependencies of the activities on the systems and people that perform those activities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PLLM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PLLM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passive Logical Link Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passive logical link mapping only listens to network traffic as a means to map the whole data link layer, where the links represent logical data flows rather than physical connections.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_PLM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-PLM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Physical Link Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Physical link mapping identifies and models the link connectivity of the network devices within a physical network.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SWI">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SWI</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Inventory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software inventorying identifies and records the software items in the organization's architecture.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SYSM">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SYSM</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System mapping encompasses the techniques to identify the organization's systems, how they are configured and decomposed into subsystems and components, how they are dependent on one another, and where they are physically located.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_SYSVA">
  <rdf:type rdf:resource="#Model"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-SYSVA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Vulnerability Assessment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System vulnerability assessment relates all the vulnerabilities of a system's components in the context of their configuration and internal dependencies and can also include assessing risk emerging from the system's design as a whole, not just the sum of individual component vulnerabilities.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Model</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RC">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RC</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reissue Credential</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Issue a new credential to a user which supersedes their old credential.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RA">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring an entity's access to resources.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RCF">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RCF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring a software configuration.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RD">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RD</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Database</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring the data in a database.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RE">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RE</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Email</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring an email for an entity to access.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RF">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RF</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring a file for an entity to access.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RNA">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RNA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Network Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring an entity's access to a computer network.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RO">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RO</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Object</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring an object for an entity to access. This is the broadest class for object restoration.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RS">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RS</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring software to a host.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_RUAA">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-RUAA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore User Account Access</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring a user account's access to resources.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#D3_ULA">
  <rdf:type rdf:resource="#Restore"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">D3-ULA</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unlock Account</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restoring a user account's access to resources by unlocking a locked User Account.</hasDescription>
  <hasType rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restore</hasType>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_1">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-1</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Accessing Functionality Not Properly Constrained by ACLs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_10">
  <rdf:type rdf:resource="#CAPEC"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_13"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-10</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Buffer Overflow via Environment Variables</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the adversary finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_101">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_600"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-101</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Side Include (SSI) Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_102">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_593"/>
  <mapToCAPEC rdf:resource="#T1185"/>
  <mapToCAPEC rdf:resource="#T1550_001"/>
  <mapToCAPEC rdf:resource="#T1563"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-102</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Sidejacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim. This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_104">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_233"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-104</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross Zone Scripting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_105">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_115"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_141"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_148"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_593"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-105</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Request Splitting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to split a single HTTP request into multiple unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server).See CanPrecede relationships for possible consequences.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_107">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_63"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_593"/>
  <mapToCAPEC rdf:resource="#T1185"/>
  <mapToCAPEC rdf:resource="#T1550_001"/>
  <mapToCAPEC rdf:resource="#T1563"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-107</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross Site Tracing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross Site Tracing (XST) enables an adversary to steal the victim's session cookie and possibly other authentication credentials transmitted in the header of the HTTP request when the victim's browser communicates to a destination system's web server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_11">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-11</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cause Web Server Misclassification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attack of this type exploits a Web server's decision to take action based on filename or file extension. Because different file types are handled by different server processes, misclassification may force the Web server to take unexpected action, or expected actions in an unexpected sequence. This may cause the server to exhaust resources, supply debug or system data to the attacker, or bind an attacker to a remote process.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_112">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1110"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-112</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Brute Force</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_114">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-114</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Abuse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_115">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-115</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker gains access to application, service, or device with the privileges of an authorized or privileged user by evading or circumventing an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_116">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_163"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_150"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_545"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_569"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_675"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-116</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Excavation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary actively probes the target in a manner that is designed to solicit information that could be leveraged for malicious purposes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_117">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_651"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-117</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Interception</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary monitors data streams to or from the target for information gathering purposes. This attack may be undertaken to solely gather sensitive information or to support a further attack against the target. This attack pattern can involve sniffing network traffic as well as other types of data streams (e.g. radio). The adversary can attempt to initiate the establishment of a data stream or passively observe the communications as they unfold. In all variants of this attack, the adversary is not the intended recipient of the data stream. In contrast to other means of gathering information (e.g., targeting data leaks), the adversary must actively position themself so as to observe explicit data channels (e.g. network traffic) and read the content. However, this attack differs from a Adversary-In-the-Middle (CAPEC-94) attack, as the adversary does not alter the content of the communications nor forward data to the intended recipient.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_12">
  <rdf:type rdf:resource="#CAPEC"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-12</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Choosing Message Identifier</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This pattern of attack is defined by the selection of messages distributed via multicast or public information channels that are intended for another client by determining the parameter value assigned to that client. This attack allows the adversary to gain access to potentially privileged information, and to possibly perpetrate other attacks through the distribution means by impersonation. If the channel/message being manipulated is an input rather than output mechanism for the system, (such as a command bus), this style of attack could be used to change the adversary's identifier to more a privileged one.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_120">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-120</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Double Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary utilizes a repeating of the encoding process for a set of characters (that is, character encoding a character encoding of a character) to obfuscate the payload of a particular request. This may allow the adversary to bypass filters that attempt to detect illegal characters or strings, such as those that might be used in traversal or injection attacks. Filters may be able to catch illegal encoded strings, but may not catch doubly encoded strings. For example, a dot (.), often used in path traversal attacks and therefore often blocked by filters, could be URL encoded as %2E. However, many filters recognize this encoding and would still block the request. In a double encoding, the % in the above URL encoding would be encoded again as %25, resulting in %252E which some filters might not catch, but which could still be interpreted as a dot (.) by interpreters on the target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_122">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-122</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Abuse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_125">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <mapToCAPEC rdf:resource="#T1499"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-125</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Flooding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary consumes the resources of a target by rapidly engaging in a large number of interactions with the target. This type of attack generally exposes a weakness in rate limiting or flow. When successful this attack prevents legitimate users from accessing the service and can cause the target to crash. This attack differs from resource depletion through leaks or allocations in that the latter attacks do not rely on the volume of requests made to the target but instead focus on manipulation of the target's operations. The key factor in a flooding attack is the number of requests the adversary can make in a given period of time. The greater this number, the more likely an attack is to succeed against a given target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_127">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1083"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-127</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Directory Indexing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_13">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1562_003"/>
  <mapToCAPEC rdf:resource="#T1574_006"/>
  <mapToCAPEC rdf:resource="#T1574_007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-13</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subverting Environment Variable Values</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary directly or indirectly modifies environment variables used by or controlling the target software. The adversary's goal is to cause the target software to deviate from its expected operation in a manner that benefits the adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_130">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-130</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Excessive Allocation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources. This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_131">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-131</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Resource Leak Exposure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary utilizes a resource leak on the target to deplete the quantity of the resource available to service legitimate requests.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_132">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1547_009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-132</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Symlink Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary positions a symbolic link in such a manner that the targeted user or application accesses the link's endpoint, assuming that it is accessing a file with the link's name.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_14">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_13"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-14</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Client-side Injection-induced Buffer Overflow</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service. This hostile service is created to deliver the correct content to the client software. For example, if the client-side application is a browser, the service will host a webpage that the browser loads.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_141">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1557_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-141</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cache Poisoning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits the functionality of cache technologies to cause specific data to be cached that aids the attackers' objectives. This describes any attack whereby an attacker places incorrect or harmful material in cache. The targeted cache can be an application's cache (e.g. a web browser cache) or a public cache (e.g. a DNS or ARP cache). Until the cache is refreshed, most applications or clients will treat the corrupted cache value as valid. This can lead to a wide range of exploits including redirecting web browsers towards sites that install malware and repeatedly incorrect calculations based on the incorrect value.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_142">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1584_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-142</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DNS Cache Poisoning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A domain name server translates a domain name (such as www.example.com) into an IP address that Internet hosts use to contact Internet resources. An adversary modifies a public DNS cache to cause certain names to resolve to incorrect addresses that the adversary specifies. The result is that client applications that rely upon the targeted cache for domain name resolution will be directed not to the actual address of the specified domain name but to some other address. Adversaries can use this to herd clients to sites that install malware on the victim's computer or to masquerade as part of a Pharming attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_143">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_150"/>
  <mapToCAPEC rdf:resource="#T1003"/>
  <mapToCAPEC rdf:resource="#T1119"/>
  <mapToCAPEC rdf:resource="#T1213"/>
  <mapToCAPEC rdf:resource="#T1530"/>
  <mapToCAPEC rdf:resource="#T1555"/>
  <mapToCAPEC rdf:resource="#T1602"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-143</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect Unpublicized Web Pages</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary searches a targeted web site for web pages that have not been publicized. In doing this, the adversary may be able to gain access to information that the targeted site did not intend to make public.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_144">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_150"/>
  <mapToCAPEC rdf:resource="#T1003"/>
  <mapToCAPEC rdf:resource="#T1119"/>
  <mapToCAPEC rdf:resource="#T1213"/>
  <mapToCAPEC rdf:resource="#T1530"/>
  <mapToCAPEC rdf:resource="#T1555"/>
  <mapToCAPEC rdf:resource="#T1602"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-144</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Detect Unpublicized Web Services</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary searches a targeted web site for web services that have not been publicized. This attack can be especially dangerous since unpublished but available services may not have adequate security controls placed upon them given that an administrator may believe they are unreachable.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_145">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_148"/>
  <mapToCAPEC rdf:resource="#T1491"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-145</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Checksum Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary spoofs a checksum message for the purpose of making a payload appear to have a valid corresponding checksum. Checksums are used to verify message integrity. They consist of some value based on the value of the message they are protecting. Hash codes are a common checksum mechanism. Both the sender and recipient are able to compute the checksum based on the contents of the message. If the message contents change between the sender and recipient, the sender and recipient will compute different checksum values. Since the sender's checksum value is transmitted with the message, the recipient would know that a modification occurred. In checksum spoofing an adversary modifies the message body and then modifies the corresponding checksum so that the recipient's checksum calculation will match the checksum (created by the adversary) in the message. This would prevent the recipient from realizing that a change occurred.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_147">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_528"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-147</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">XML Ping of the Death</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker initiates a resource depletion attack where a large number of small XML messages are delivered at a sufficiently rapid rate to cause a denial of service or crash of the target. Transactions such as repetitive SOAP transactions can deplete resources faster than a simple flooding attack because of the additional resources used by the SOAP protocol and the resources necessary to process SOAP messages. The transactions used are immaterial as long as they cause resource utilization on the target. In other words, this is a normal flooding attack augmented by using messages that will require extra processing on the target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_148">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1491"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-148</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Content Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary modifies content to make it contain something other than what the original content producer intended while keeping the apparent source of the content unchanged. The term content spoofing is most often used to describe modification of web pages hosted by a target to display the adversary's content instead of the owner's content. However, any content can be spoofed, including the content of email messages, file transfers, or the content of other network communication protocols. Content can be modified at the source (e.g. modifying the source file for a web page) or in transit (e.g. intercepting and modifying a message between the sender and recipient). Usually, the adversary will attempt to hide the fact that the content has been modified, but in some cases, such as with web site defacement, this is not necessary. Content Spoofing can lead to malware exposure, financial fraud (if the content governs financial transactions), privacy violations, and other unwanted outcomes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_149">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_497"/>
  <mapToCAPEC rdf:resource="#T1083"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-149</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Explore for Predictable Temporary File Names</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker explores a target to identify the names and locations of predictable temporary files for the purpose of launching further attacks against the target. This involves analyzing naming conventions and storage locations of the temporary files created by a target application. If an attacker can predict the names of temporary files they can use this information to mount other attacks, such as information gathering and symlink attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_150">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1003"/>
  <mapToCAPEC rdf:resource="#T1119"/>
  <mapToCAPEC rdf:resource="#T1213"/>
  <mapToCAPEC rdf:resource="#T1530"/>
  <mapToCAPEC rdf:resource="#T1555"/>
  <mapToCAPEC rdf:resource="#T1602"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-150</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect Data from Common Resource Locations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits well-known locations for resources for the purposes of undermining the security of the target. In many, if not most systems, files and resources are organized in a default tree structure. This can be useful for adversaries because they often know where to look for resources or files that are necessary for attacks. Even when the precise location of a targeted resource may not be known, naming conventions may indicate a small area of the target machine's file tree where the resources are typically located. For example, configuration files are normally stored in the /etc director on Unix systems. Adversaries can take advantage of this to commit other types of attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_151">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_49"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_509"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_55"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_555"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_560"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_561"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_565"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_568"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_600"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_644"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_645"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_652"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_70"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_94"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_473"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_98"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-151</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identity Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_153">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-153</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Input Data Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits a weakness in input validation by controlling the format, structure, and composition of data to an input-processing interface. By supplying input of a non-standard or unexpected form an attacker can adversely impact the security of the target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_154">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_159"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_616"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-154</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Resource Location Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary deceives an application or user and convinces them to request a resource from an unintended location. By spoofing the location, the adversary can cause an alternate resource to be used, often one that the adversary controls and can be used to help them achieve their malicious goals.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_155">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_150"/>
  <mapToCAPEC rdf:resource="#T1003"/>
  <mapToCAPEC rdf:resource="#T1119"/>
  <mapToCAPEC rdf:resource="#T1213"/>
  <mapToCAPEC rdf:resource="#T1530"/>
  <mapToCAPEC rdf:resource="#T1555"/>
  <mapToCAPEC rdf:resource="#T1602"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-155</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Screen Temporary Files for Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits the temporary, insecure storage of information by monitoring the content of files used to store temp data during an application's routine execution flow. Many applications use temporary files to accelerate processing or to provide records of state across multiple executions of the application. Sometimes, however, these temporary files may end up storing sensitive information. By screening an application's temporary files, an adversary might be able to discover such sensitive information. For example, web browsers often cache content to accelerate subsequent lookups. If the content contains sensitive information then the adversary could recover this from the web cache.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_157">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_652"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_158"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_31"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_57"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_609"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_65"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-157</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sniffing Attacks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack pattern, the adversary intercepts information transmitted between two third parties. The adversary must be able to observe, read, and/or hear the communication traffic, but not necessarily block the communication or change its content. Any transmission medium can theoretically be sniffed if the adversary can examine the contents between the sender and recipient. Sniffing Attacks are similar to Adversary-In-The-Middle attacks (CAPEC-94), but are entirely passive. AiTM attacks are predominantly active and often alter the content of the communications themselves.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_158">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1040"/>
  <mapToCAPEC rdf:resource="#T1111"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-158</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sniffing Network Traffic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack pattern, the adversary monitors network traffic between nodes of a public or multicast network in an attempt to capture sensitive information at the protocol level. Network sniffing applications can reveal TCP/IP, DNS, Ethernet, and other low-level network communication information. The adversary takes a passive role in this attack pattern and simply observes and analyzes the traffic. The adversary may precipitate or indirectly influence the content of the observed transaction, but is never the intended recipient of the target information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_159">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-159</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Redirect Access to Libraries</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in the way an application searches for external libraries to manipulate the execution flow to point to an adversary supplied library or code base. This pattern of attack allows the adversary to compromise the application or server via the execution of unauthorized code. An application typically makes calls to functions that are a part of libraries external to the application. These libraries may be part of the operating system or they may be third party libraries. If an adversary can redirect an application's attempts to access these libraries to other libraries that the adversary supplies, the adversary will be able to force the targeted application to execute arbitrary code. This is especially dangerous if the targeted application has enhanced privileges. Access can be redirected through a number of techniques, including the use of symbolic links, search path modification, and relative path manipulation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_16">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_560"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_561"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_600"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_49"/>
  <mapToCAPEC rdf:resource="#T1110_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-16</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dictionary-based Password Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker tries each of the words in a dictionary as passwords to gain access to the system via some user's account. If the password chosen by the user was a word within the dictionary, this attack will be successful (in the absence of other mitigations). This is a specific instance of the password brute forcing attack pattern.Dictionary Attacks differ from similar attacks such as Password Spraying (CAPEC-565) and Credential Stuffing (CAPEC-600), since they leverage unknown username/password combinations and don't care about inducing account lockouts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_161">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_141"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_268"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_481"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_571"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_700"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-161</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infrastructure Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits characteristics of the infrastructure of a network entity in order to perpetrate attacks or information gathering on network objects or effect a change in the ordinary information flow between network objects. Most often, this involves manipulation of the routing of network messages so, instead of arriving at their proper destination, they are directed towards an entity of the attackers' choosing, usually a server controlled by the attacker. The victim is often unaware that their messages are not being processed correctly. For example, a targeted client may believe they are connecting to their own bank but, in fact, be connecting to a Pharming site controlled by the attacker which then collects the user's login information in order to hijack the actual bank account.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_163">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1534"/>
  <mapToCAPEC rdf:resource="#T1566_001"/>
  <mapToCAPEC rdf:resource="#T1566_002"/>
  <mapToCAPEC rdf:resource="#T1566_003"/>
  <mapToCAPEC rdf:resource="#T1598_001"/>
  <mapToCAPEC rdf:resource="#T1598_002"/>
  <mapToCAPEC rdf:resource="#T1598_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-163</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Spear Phishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary targets a specific user or group with a Phishing (CAPEC-98) attack tailored to a category of users in order to have maximum relevance and deceptive capability. Spear Phishing is an enhanced version of the Phishing attack targeted to a specific user or group. The quality of the targeted email is usually enhanced by appearing to come from a known or trusted entity. If the email account of some trusted entity has been compromised the message may be digitally signed. The message will contain information specific to the targeted users that will enhance the probability that they will follow the URL to the compromised site. For example, the message may indicate knowledge of the targets employment, residence, interests, or other information that suggests familiarity. As soon as the user follows the instructions in the message, the attack proceeds as a standard Phishing attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_164">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_98"/>
  <mapToCAPEC rdf:resource="#T1566"/>
  <mapToCAPEC rdf:resource="#T1598"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-164</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mobile Phishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary targets mobile phone users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Mobile Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a text or SMS message, rather than email. The user is enticed to provide information or visit a compromised web site via this message. Apart from the manner in which the attack is initiated, the attack proceeds as a standard Phishing attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_165">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-165</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker modifies file contents or attributes (such as extensions or names) of files in a manner to cause incorrect processing by an application. Attackers use this class of attacks to cause applications to enter unstable states, overwrite or expose sensitive information, and even execute arbitrary code with the application's privileges. This class of attacks differs from attacks on configuration information (even if file-based) in that file manipulation causes the file processing to result in non-standard behaviors, such as buffer overflows or use of the incorrect interpreter. Configuration attacks rely on the application interpreting files correctly in order to insert harmful configuration information. Likewise, resource location attacks rely on controlling an application's ability to locate files, whereas File Manipulation attacks do not require the application to look in a non-default location, although the two classes of attacks are often combined.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_167">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_191"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_204"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-167</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">White Box Reverse Engineering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker discovers the structure, function, and composition of a type of computer software through white box analysis techniques. White box techniques involve methods which can be applied to a piece of software when an executable or some other compiled object can be directly subjected to analysis, revealing at least a portion of its machine instructions that can be observed upon execution.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_168">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_636"/>
  <mapToCAPEC rdf:resource="#T1001_002"/>
  <mapToCAPEC rdf:resource="#T1027_003"/>
  <mapToCAPEC rdf:resource="#T1027_004"/>
  <mapToCAPEC rdf:resource="#T1218_001"/>
  <mapToCAPEC rdf:resource="#T1221"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-168</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows ::DATA Alternate Data Stream</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits the functionality of Microsoft NTFS Alternate Data Streams (ADS) to undermine system security. ADS allows multiple 'files' to be stored in one directory entry referenced as filename:streamname. One or more alternate data streams may be stored in any file or directory. Normal Microsoft utilities do not show the presence of an ADS stream attached to a file. The additional space for the ADS is not recorded in the displayed file size. The additional space for ADS is accounted for in the used space on the volume. An ADS can be any type of file. ADS are copied by standard Microsoft utilities between NTFS volumes. ADS can be used by an attacker or intruder to hide tools, scripts, and data from detection by normal system utilities. Many anti-virus programs do not check for or scan ADS. Windows Vista does have a switch (-R) on the command line DIR command that will display alternate streams.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_169">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1217"/>
  <mapToCAPEC rdf:resource="#T1592"/>
  <mapToCAPEC rdf:resource="#T1595"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-169</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in probing and exploration activities to identify constituents and properties of the target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_17">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_005"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-17</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Malicious Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attack of this type exploits a system's configuration that allows an adversary to either directly access an executable file, for example through shell access; or in a possible worst case allows an adversary to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_170">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_541"/>
  <mapToCAPEC rdf:resource="#T1592_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-170</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Application Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker sends a series of probes to a web application in order to elicit version-dependent and type-dependent behavior that assists in identifying the target. An attacker could learn information such as software versions, error pages, and response headers, variations in implementations of the HTTP protocol, directory structures, and other similar information about the targeted service. This information can then be used by an attacker to formulate a targeted attack plan. While web application fingerprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_173">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_504"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-173</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Action Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary is able to disguise one action for another and therefore trick a user into initiating one type of action when they intend to initiate a different action. For example, a user might be led to believe that clicking a button will submit a query, but in fact it downloads software. Adversaries may perform this attack through social means, such as by simply convincing a victim to perform the action or relying on a user's natural inclination to do so, or through technical means, such as a clickjacking attack where a user sees one interface but is actually interacting with a second, invisible, interface.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_174">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-174</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Flash Parameter Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary takes advantage of improper data validation to inject malicious global parameters into a Flash file embedded within an HTML document. Flash files can leverage user-submitted data to configure the Flash document and access the embedding HTML document.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_175">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_251"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-175</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Code Inclusion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness on the target to force arbitrary code to be retrieved locally or from a remote location and executed. This differs from code injection in that code injection involves the direct inclusion of code while code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_176">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_203"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_578"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-176</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Configuration/Environment Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_177">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-177</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Create files with the same name as files protected with a higher classification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits file location algorithms in an operating system or application by creating a file with the same name as a protected or privileged file. The attacker could manipulate the system if the attacker-created file is trusted by the operating system or an application component that attempts to load the original file. Applications often load or include external files, such as libraries or configuration files. These files should be protected against malicious manipulation. However, if the application only uses the name of the file when locating it, an attacker may be able to create a file with the same name and place it in a directory that the application will search before the directory with the legitimate file is searched. Because the attackers' file is discovered first, it would be used by the target application. This attack can be extremely destructive if the referenced file is executable and/or is granted special privileges based solely on having a particular name.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_180">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-180</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploiting Incorrectly Configured Access Control Security Levels</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the system or network. Sensitive functionality should always be protected with access controls. However configuring all but the most trivial access control systems can be very complicated and there are many opportunities for mistakes. If an attacker can learn of incorrectly configured access security settings, they may be able to exploit this in an attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_184">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_691"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_186"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_669"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-184</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Integrity Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker initiates a series of events designed to cause a user, program, server, or device to perform actions which undermine the integrity of software code, device data structures, or device firmware, achieving the modification of the target's integrity to achieve an insecure state.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_185">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_662"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_159"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-185</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Software Download</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker uses deceptive methods to cause a user or an automated process to download and install dangerous code that originates from an attacker controlled source. There are several variations to this strategy of attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_186">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-186</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Software Update</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses deceptive methods to cause a user or an automated process to download and install dangerous code believed to be a valid update that originates from an adversary controlled source.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_187">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1072"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-187</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Automated Software Update via Redirection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits two layers of weaknesses in server or client software for automated update mechanisms to undermine the integrity of the target code-base. The first weakness involves a failure to properly authenticate a server as a source of update or patch content. This type of weakness typically results from authentication mechanisms which can be defeated, allowing a hostile server to satisfy the criteria that establish a trust relationship. The second weakness is a systemic failure to validate the identity and integrity of code downloaded from a remote location, hence the inability to distinguish malicious code from a legitimate update.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_19">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027_009"/>
  <mapToCAPEC rdf:resource="#T1546_004"/>
  <mapToCAPEC rdf:resource="#T1546_016"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-19</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Embedding Scripts within Scripts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary leverages the capability to execute their own script by embedding it within other scripts that the target software is likely to execute due to programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_191">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1552_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-191</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Read Sensitive Constants Within an Executable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in activities to discover any sensitive constants present within the compiled code of an executable. These constants may include literal ASCII strings within the file itself, or possibly strings hard-coded into particular routines that can be revealed by code refactoring methods including static and dynamic analysis.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_194">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_657"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_543"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_633"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-194</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Fake the Source of Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary takes advantage of improper authentication to provide data or services under a falsified identity. The purpose of using the falsified identity may be to prevent traceability of the provided data or to assume the rights granted to another individual. One of the simplest forms of this attack would be the creation of an email message with a modified 'From' field in order to appear that the message was sent from someone other than the actual sender. The root of the attack (in this case the email system) fails to properly authenticate the source and this results in the reader incorrectly performing the instructed action. Results of the attack vary depending on the details of the attack, but common results include privilege escalation, obfuscation of other attacks, and data corruption/manipulation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_196">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1134_002"/>
  <mapToCAPEC rdf:resource="#T1134_003"/>
  <mapToCAPEC rdf:resource="#T1606"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-196</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Credential Falsification through Forging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker creates a false but functional session credential in order to gain or usurp access to a service. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. If an attacker is able to forge valid session credentials they may be able to bypass authentication or piggy-back off some other authenticated user's session. This attack differs from Reuse of Session IDs and Session Sidejacking attacks in that in the latter attacks an attacker uses a previous or existing credential without modification while, in a forging attack, the attacker must create their own credential, although it may be based on previously observed credentials.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_2">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1531"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-2</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inducing Account Lockout</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker leverages the security functionality of the system aimed at thwarting potential attacks to launch a denial of service attack against a legitimate system user. Many systems, for instance, implement a password throttling mechanism that locks an account after a certain number of incorrect log in attempts. An attacker can leverage this throttling mechanism to lock a legitimate user out of their own account. The weakness that is being leveraged by an attacker is the very security feature that has been put in place to counteract attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_20">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_668"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_112"/>
  <mapToCAPEC rdf:resource="#T1110"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-20</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encryption Brute Forcing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker, armed with the cipher text and the encryption algorithm used, performs an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_201">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_122"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-201</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Serialized Data External Linking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary creates a serialized data file (e.g. XML, YAML, etc...) that contains an external data reference. Because serialized data parsers may not validate documents with external references, there may be no checks on the nature of the reference in the external data. This can allow an adversary to open arbitrary files or connections, which may further lead to the adversary gaining access to information on the system that they would normally be unable to obtain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_203">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1112"/>
  <mapToCAPEC rdf:resource="#T1647"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-203</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulate Registry Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in authorization in order to modify content within a registry (e.g., Windows Registry, Mac plist, application registry). Editing registry information can permit the adversary to hide configuration information or remove indicators of compromise to cover up activity. Many applications utilize registries to store configuration and service information. As such, modification of registry information can affect individual services (affecting billing, authorization, or even allowing for identity spoofing) or the overall configuration of a targeted application. For example, both Java RMI and SOAP use registries to track available services. Changing registry values is sometimes a preliminary step towards completing another attack pattern, but given the long term usage of many registry values, manipulation of registry information could be its own end.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_204">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-204</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lifting Sensitive Data Embedded in Cache</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary examines a target application's cache, or a browser cache, for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_206">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-206</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signing Malicious Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary extracts credentials used for code signing from a production environment and then uses these credentials to sign malicious content with the developer's key. Many developers use signing keys to sign code or hashes of code. When users or applications verify the signatures are accurate they are led to believe that the code came from the owner of the signing key and that the code has not been modified since the signature was applied. If the adversary has extracted the signing credentials then they can use those credentials to sign their own code bundles. Users or tools that verify the signatures attached to the code will likely assume the code came from the legitimate developer and install or run the code, effectively allowing the adversary to execute arbitrary code on the victim's computer. This differs fromCAPEC-673, because the adversary is performing the code signing.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_21">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1134"/>
  <mapToCAPEC rdf:resource="#T1528"/>
  <mapToCAPEC rdf:resource="#T1539"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-21</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Trusted Identifiers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary guesses, obtains, or 'rides' a trusted identifier (e.g. session ID, resource ID, cookie, etc.) to perform authorized actions under the guise of an authenticated user or service.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_212">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_2"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_620"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-212</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Functionality Misuse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary leverages a legitimate capability of an application in such a way as to achieve a negative technical impact. The system functionality is not altered or modified but used in a way that was not intended. This is often accomplished through the overuse of a specific functionality or by leveraging functionality with design flaws that enables the adversary to gain access to unauthorized, sensitive data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_216">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_94"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-216</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Communication Channel Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary manipulates a setting or parameter on communications channel in order to compromise its security. This can result in information exposure, insertion/removal of information from the communications stream, and/or potentially system compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_218">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_148"/>
  <mapToCAPEC rdf:resource="#T1491"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-218</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Spoofing of UDDI/ebXML Messages</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker spoofs a UDDI, ebXML, or similar message in order to impersonate a service provider in an e-business transaction. UDDI, ebXML, and similar standards are used to identify businesses in e-business transactions. Among other things, they identify a particular participant, WSDL information for SOAP transactions, and supported communication protocols, including security protocols. By spoofing one of these messages an attacker could impersonate a legitimate business in a transaction or could manipulate the protocols used between a client and business. This could result in disclosure of sensitive information, loss of message integrity, or even financial fraud.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_219">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_94"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-219</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">XML Routing Detour Attacks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker subverts an intermediate system used to process XML content and forces the intermediate to modify and/or re-route the processing of the content. XML Routing Detour Attacks are Adversary in the Middle type attacks (CAPEC-94). The attacker compromises or inserts an intermediate system in the processing of the XML message. For example, WS-Routing can be used to specify a series of nodes or intermediaries through which content is passed. If any of the intermediate nodes in this route are compromised by an attacker they could be used for a routing detour attack. From the compromised system the attacker is able to route the XML process to other nodes of their choice and modify the responses so that the normal chain of processing is unaware of the interception. This system can forward the message to an outside entity and hide the forwarding and processing from the legitimate processing systems by altering the header information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_224">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_312"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_313"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_541"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-224</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary compares output from a target system to known indicators that uniquely identify specific details about the target. Most commonly, fingerprinting is done to determine operating system and application versions. Fingerprinting can be done passively as well as actively. Fingerprinting by itself is not usually detrimental to the target. However, the information gathered through fingerprinting often enables an adversary to discover existing weaknesses in the target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_226">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_196"/>
  <mapToCAPEC rdf:resource="#T1134_002"/>
  <mapToCAPEC rdf:resource="#T1134_003"/>
  <mapToCAPEC rdf:resource="#T1606"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-226</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Credential Falsification through Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker manipulates an existing credential in order to gain access to a target application. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. An attacker may be able to manipulate a credential sniffed from an existing connection in order to gain access to a target server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_227">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-227</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sustained Client Engagement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary attempts to deny legitimate users access to a resource by continually engaging a specific resource in an attempt to keep the resource tied up as long as possible. The adversary's primary goal is not to crash or flood the target, which would alert defenders; rather it is to repeatedly perform actions or abuse algorithmic flaws such that a given resource is tied up and not available to a legitimate user. By carefully crafting a requests that keep the resource engaged through what is seemingly benign requests, legitimate users are limited or completely denied access to the resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_23">
  <rdf:type rdf:resource="#CAPEC"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-23</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Content Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary poisons files with a malicious payload (targeting the file systems accessible by the target software), which may be passed through by standard channels such as via email, and standard web content like PDF and multimedia files. The adversary exploits known vulnerabilities or handling routines in the target processes, in order to exploit the host's trust in executing remote content, including binary files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_230">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-230</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Serialized Data with Nested Payloads</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Applications often need to transform data in and out of a data format (e.g., XML and YAML) by using a parser. It may be possible for an adversary to inject data that may have an adverse effect on the parser when it is being processed. Many data format languages allow the definition of macro-like structures that can be used to simplify the creation of complex structures. By nesting these structures, causing the data to be repeatedly substituted, an adversary can cause the parser to consume more resources while processing, causing excessive memory consumption and CPU utilization.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_231">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-231</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Oversized Serialized Data Payloads</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary injects oversized serialized data payloads into a parser during data processing to produce adverse effects upon the parser such as exhausting system resources and arbitrary code execution.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_233">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-233</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Escalation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness enabling them to elevate their privilege and perform an action that they are not supposed to be authorized to perform.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_234">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_233"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-234</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijacking a privileged process</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary gains control of a process that is assigned elevated privileges in order to execute arbitrary code with those privileges. Some processes are assigned elevated privileges on an operating system, usually through association with a particular user, group, or role. If an attacker can hijack this process, they will be able to assume its level of privilege in order to execute their own code.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_237">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_480"/>
  <mapToCAPEC rdf:resource="#T1611"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-237</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Escaping a Sandbox by Calling Code in Another Language</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The attacker may submit malicious code of another language to obtain access to privileges that were not intentionally exposed by the sandbox, thus escaping the sandbox. For instance, Java code cannot perform unsafe operations, such as modifying arbitrary memory locations, due to restrictions placed on it by the Byte code Verifier and the JVM. If allowed, Java code can call directly into native C code, which may perform unsafe operations, such as call system calls and modify arbitrary memory locations on their behalf. To provide isolation, Java does not grant untrusted code with unmediated access to native C code. Instead, the sandboxed code is typically allowed to call some subset of the pre-existing native code that is part of standard libraries.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_242">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_19"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-242</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Code Injection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in input validation on the target to inject new code into that which is currently executing. This differs from code inclusion in that code inclusion involves the addition or replacement of a reference to a code file, which is subsequently loaded by the target and used as part of the code of some application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_25">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-25</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forced Deadlock</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary triggers and exploits a deadlock condition in the target software to cause a denial of service. A deadlock can occur when two or more competing actions are waiting for each other to finish, and thus neither ever does. Deadlock conditions can be difficult to detect.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_251">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1055"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-251</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Local Code Inclusion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The attacker forces an application to load arbitrary code files from the local machine. The attacker could use this to try to load old versions of library files that have known vulnerabilities, to load files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_252">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_251"/>
  <mapToCAPEC rdf:resource="#T1055"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-252</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">PHP Local File Inclusion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The attacker loads and executes an arbitrary local PHP file on a target machine. The attacker could use this to try to load old versions of PHP files that have known vulnerabilities, to load PHP files that the attacker placed on the local machine during a prior attack, or to otherwise change the functionality of the targeted application in unexpected ways.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_263">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_17"/>
  <mapToCAPEC rdf:resource="#T1574_005"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-263</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Force Use of Corrupted Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This describes an attack where an application is forced to use a file that an attacker has corrupted. The result is often a denial of service caused by the application being unable to process the corrupted file, but other results, including the disabling of filters or access controls (if the application fails in an unsafe way rather than failing by locking down) or buffer overflows are possible.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_267">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-267</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage Alternate Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary leverages the possibility to encode potentially harmful input or content used by applications such that the applications are ineffective at validating this encoding standard.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_268">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1070"/>
  <mapToCAPEC rdf:resource="#T1562_002"/>
  <mapToCAPEC rdf:resource="#T1562_003"/>
  <mapToCAPEC rdf:resource="#T1562_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-268</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Audit Log Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The attacker injects, manipulates, deletes, or forges malicious log entries into the log file, in an attempt to mislead an audit of the log file or cover tracks of an attack. Due to either insufficient access controls of the log files or the logging mechanism, the attacker is able to perform such actions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_270">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1547_001"/>
  <mapToCAPEC rdf:resource="#T1547_014"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-270</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modification of Registry Run Keys</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary adds a new entry to the 'run keys' in the Windows registry so that an application of their choosing is executed when a user logs in. In this way, the adversary can get their executable to operate and run on the target system with the authorized user's level of permissions. This attack is a good way for an adversary to run persistent spyware on a user's machine, such as a keylogger.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_271">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_94"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-271</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Schema Poisoning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary corrupts or modifies the content of a schema for the purpose of undermining the security of the target. Schemas provide the structure and content definitions for resources used by an application. By replacing or modifying a schema, the adversary can affect how the application handles or interprets a resource, often leading to possible denial of service, entering into an unexpected state, or recording incomplete data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_273">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_115"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_141"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_148"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_593"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-273</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Response Smuggling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary manipulates and injects malicious content in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., server).See CanPrecede relationships for possible consequences.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_276">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-276</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-component Protocol Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inter-component protocols are used to communicate between different software and hardware modules within a single computer. Common examples are: interrupt signals and data pipes. Subverting the protocol can allow an adversary to impersonate others, discover sensitive information, control the outcome of a session, or perform other attacks. This type of attack targets invalid assumptions that may be inherent in implementers of the protocol, incorrect implementations of the protocol, or vulnerabilities in the protocol itself.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_285">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-285</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Echo Request Ping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends out an ICMP Type 8 Echo Request, commonly known as a 'Ping', in order to determine if a target system is responsive. If the request is not blocked by a firewall or ACL, the target host will respond with an ICMP Type 0 Echo Reply datagram. This type of exchange is usually referred to as a 'Ping' due to the Ping utility present in almost all operating systems. Ping, as commonly implemented, allows a user to test for alive hosts, measure round-trip time, and measure the percentage of packet loss.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_287">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-287</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP SYN Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a SYN scan to determine the status of ports on the remote target. SYN scanning is the most common type of port scanning that is used because of its many advantages and few drawbacks. As a result, novice attackers tend to overly rely on the SYN scan while performing system reconnaissance. As a scanning method, the primary advantages of SYN scanning are its universality and speed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_290">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_309"/>
  <mapToCAPEC rdf:resource="#T1016"/>
  <mapToCAPEC rdf:resource="#T1049"/>
  <mapToCAPEC rdf:resource="#T1590"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-290</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Enumerate Mail Exchange (MX) Records</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary enumerates the MX records for a given via a DNS query. This type of information gathering returns the names of mail servers on the network. Mail servers are often not exposed to the Internet but are located within the DMZ of a network protected by a firewall. A side effect of this configuration is that enumerating the MX records for an organization my reveal the IP address of the firewall or possibly other internal systems. Attackers often resort to MX record enumeration when a DNS Zone Transfer is not possible.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_291">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_309"/>
  <mapToCAPEC rdf:resource="#T1016"/>
  <mapToCAPEC rdf:resource="#T1049"/>
  <mapToCAPEC rdf:resource="#T1590"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-291</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DNS Zone Transfers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits a DNS misconfiguration that permits a ZONE transfer. Some external DNS servers will return a list of IP address and valid hostnames. Under certain conditions, it may even be possible to obtain Zone data about the organization's internal network. When successful the attacker learns valuable information about the topology of the target organization, including information about particular servers, their role within the IT structure, and possibly information about the operating systems running upon the network. This is configuration dependent behavior so it may also be required to search out multiple DNS servers while attempting to find one with ZONE transfers allowed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_292">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-292</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Host Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends a probe to an IP address to determine if the host is alive. Host discovery is one of the earliest phases of network reconnaissance. The adversary usually starts with a range of IP addresses belonging to a target network and uses various methods to determine if a host is present at that IP address. Host discovery is usually referred to as 'Ping' scanning using a sonar analogy. The goal is to send a packet through to the IP address and solicit a response from the host. As such, a 'ping' can be virtually any crafted packet whatsoever, provided the adversary can identify a functional host based on its response. An attack of this nature is usually carried out with a 'ping sweep,' where a particular kind of ping is sent to a range of IP addresses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_293">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_309"/>
  <mapToCAPEC rdf:resource="#T1016"/>
  <mapToCAPEC rdf:resource="#T1049"/>
  <mapToCAPEC rdf:resource="#T1590"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-293</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Traceroute Route Enumeration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a traceroute utility to map out the route which data flows through the network in route to a target destination. Tracerouting can allow the adversary to construct a working topology of systems and routers by listing the systems through which data passes through on their way to the targeted machine. This attack can return varied results depending upon the type of traceroute that is performed. Traceroute works by sending packets to a target while incrementing the Time-to-Live field in the packet header. As the packet traverses each hop along its way to the destination, its TTL expires generating an ICMP diagnostic message that identifies where the packet expired. Traditional techniques for tracerouting involved the use of ICMP and UDP, but as more firewalls began to filter ingress ICMP, methods of traceroute using TCP were developed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_294">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-294</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Address Mask Request</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends an ICMP Type 17 Address Mask Request to gather information about a target's networking configuration. ICMP Address Mask Requests are defined by RFC-950, 'Internet Standard Subnetting Procedure.' An Address Mask Request is an ICMP type 17 message that triggers a remote system to respond with a list of its related subnets, as well as its default gateway and broadcast address via an ICMP type 18 Address Mask Reply datagram. Gathering this type of information helps the adversary plan router-based attacks as well as denial-of-service attacks against the broadcast address.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_295">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1124"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-295</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Timestamp Request</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This pattern of attack leverages standard requests to learn the exact time associated with a target system. An adversary may be able to use the timestamp returned from the target to attack time-based security algorithms, such as random number generators, or time-based authentication mechanisms.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_296">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-296</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Information Request</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends an ICMP Information Request to a host to determine if it will respond to this deprecated mechanism. ICMP Information Requests are a deprecated message type. Information Requests were originally used for diskless machines to automatically obtain their network configuration, but this message type has been superseded by more robust protocol implementations like DHCP.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_297">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-297</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP ACK Ping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends a TCP segment with the ACK flag set to a remote host for the purpose of determining if the host is alive. This is one of several TCP 'ping' types. The RFC 793 expected behavior for a service is to respond with a RST 'reset' packet to any unsolicited ACK segment that is not part of an existing connection. So by sending an ACK segment to a port, the adversary can identify that the host is alive by looking for a RST packet. Typically, a remote server will respond with a RST regardless of whether a port is open or closed. In this way, TCP ACK pings cannot discover the state of a remote port because the behavior is the same in either case. The firewall will look up the ACK packet in its state-table and discard the segment because it does not correspond to any active connection. A TCP ACK Ping can be used to discover if a host is alive via RST response packets sent from the host.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_298">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-298</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UDP Ping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends a UDP datagram to the remote host to determine if the host is alive. If a UDP datagram is sent to an open UDP port there is very often no response, so a typical strategy for using a UDP ping is to send the datagram to a random high port on the target. The goal is to solicit an 'ICMP port unreachable' message from the target, indicating that the host is alive. UDP pings are useful because some firewalls are not configured to block UDP datagrams sent to strange or typically unused ports, like ports in the 65K range. Additionally, while some firewalls may filter incoming ICMP, weaknesses in firewall rule-sets may allow certain types of ICMP (host unreachable, port unreachable) which are useful for UDP ping attempts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_299">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-299</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP SYN Ping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses TCP SYN packets as a means towards host discovery. Typical RFC 793 behavior specifies that when a TCP port is open, a host must respond to an incoming SYN 'synchronize' packet by completing stage two of the 'three-way handshake' - by sending an SYN/ACK in response. When a port is closed, RFC 793 behavior is to respond with a RST 'reset' packet. This behavior can be used to 'ping' a target to see if it is alive by sending a TCP SYN packet to a port and then looking for a RST or an ACK packet in response.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_3">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-3</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Leading 'Ghost' Character Sequences to Bypass Input Filters</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Some APIs will strip certain leading characters from a string of parameters. An adversary can intentionally introduce leading 'ghost' characters (extra characters that don't affect the validity of the request at the API layer) that enable the input to pass the filters and therefore process the adversary's input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_30">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1055_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-30</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hijacking a Privileged Thread of Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary hijacks a privileged thread of execution by injecting malicious code into a running process. By using a privleged thread to do their bidding, adversaries can evade process-based detection that would stop an attack that creates a new process. This can lead to an adversary gaining access to the process's memory and can also enable elevated privileges. The most common way to perform this attack is by suspending an existing thread and manipulating its memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_300">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-300</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Port Scanning</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a combination of techniques to determine the state of the ports on a remote target. Any service or application available for TCP or UDP networking will have a port open for communications over the network.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_301">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-301</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Connect Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses full TCP connection attempts to determine if a port is open on the target system. The scanning process involves completing a 'three-way handshake' with a remote port, and reports the port as closed if the full handshake cannot be established. An advantage of TCP connect scanning is that it works against any TCP/IP stack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_302">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-302</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP FIN Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a TCP FIN scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with the FIN bit set in the packet header. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow the adversary to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_303">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-303</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Xmas Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a TCP XMAS scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with all possible flags set in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_304">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-304</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Null Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a TCP NULL scan to determine if ports are closed on the target machine. This scan type is accomplished by sending TCP segments with no flags in the packet header, generating packets that are illegal based on RFC 793. The RFC 793 expected behavior is that any TCP segment with an out-of-state Flag sent to an open port is discarded, whereas segments with out-of-state flags sent to closed ports should be handled with a RST in response. This behavior should allow an attacker to scan for closed ports by sending certain types of rule-breaking packets (out of sync or disallowed by the TCB) and detect closed ports via RST packets.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_305">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-305</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP ACK Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses TCP ACK segments to gather information about firewall or ACL configuration. The purpose of this type of scan is to discover information about filter configurations rather than port state. This type of scanning is rarely useful alone, but when combined with SYN scanning, gives a more complete picture of the type of firewall rules that are present.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_306">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-306</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Window Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in TCP Window scanning to analyze port status and operating system type. TCP Window scanning uses the ACK scanning method but examine the TCP Window Size field of response RST packets to make certain inferences. While TCP Window Scans are fast and relatively stealthy, they work against fewer TCP stack implementations than any other type of scan. Some operating systems return a positive TCP window size when a RST packet is sent from an open port, and a negative value when the RST originates from a closed port. TCP Window scanning is one of the most complex scan types, and its results are difficult to interpret. Window scanning alone rarely yields useful information, but when combined with other types of scanning is more useful. It is a generally more reliable means of making inference about operating system versions than port status.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_307">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-307</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP RPC Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary scans for RPC services listing on a Unix/Linux host.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_308">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_300"/>
  <mapToCAPEC rdf:resource="#T1046"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-308</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UDP Scan</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in UDP scanning to gather information about UDP port status on the target system. UDP scanning methods involve sending a UDP datagram to the target port and looking for evidence that the port is closed. Open UDP ports usually do not respond to UDP datagrams as there is no stateful mechanism within the protocol that requires building or establishing a session. Responses to UDP datagrams are therefore application specific and cannot be relied upon as a method of detecting an open port. UDP scanning relies heavily upon ICMP diagnostic messages in order to determine the status of a remote port.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_309">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1016"/>
  <mapToCAPEC rdf:resource="#T1049"/>
  <mapToCAPEC rdf:resource="#T1590"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-309</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Topology Mapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in scanning activities to map network nodes, hosts, devices, and routes. Adversaries usually perform this type of network reconnaissance during the early stages of attack against an external network. Many types of scanning utilities are typically employed, including ICMP tools, network mappers, port scanners, and route testing utilities such as traceroute.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_31">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1539"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-31</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Accessing/Intercepting/Modifying HTTP Cookies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_310">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_541"/>
  <mapToCAPEC rdf:resource="#T1592_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-310</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scanning for Vulnerable Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker engages in scanning activity to find vulnerable software versions or types, such as operating system versions or network services. Vulnerable or exploitable network configurations, such as improperly firewalled systems, or misconfigured systems in the DMZ or external network, provide windows of opportunity for an attacker. Common types of vulnerable software include unpatched operating systems or services (e.g FTP, Telnet, SMTP, SNMP) running on open ports that the attacker has identified. Attackers usually begin probing for vulnerable software once the external network has been port scanned and potential targets have been revealed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_312">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-312</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Active OS Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in activity to detect the operating system or firmware version of a remote target by interrogating a device, server, or platform with a probe designed to solicit behavior that will reveal information about the operating systems or firmware in the environment. Operating System detection is possible because implementations of common protocols (Such as IP or TCP) differ in distinct ways. While the implementation differences are not sufficient to 'break' compatibility with the protocol the differences are detectable because the target will respond in unique ways to specific probing activity that breaks the semantic or logical rules of packet construction for a protocol. Different operating systems will have a unique response to the anomalous input, providing the basis to fingerprint the OS behavior. This type of OS fingerprinting can distinguish between operating system types and versions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_313">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-313</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Passive OS Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in activity to detect the version or type of OS software in a an environment by passively monitoring communication between devices, nodes, or applications. Passive techniques for operating system detection send no actual probes to a target, but monitor network or client-server communication between nodes in order to identify operating systems based on observed behavior as compared to a database of known signatures or values. While passive OS fingerprinting is not usually as reliable as active methods, it is generally better able to evade detection.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_317">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-317</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">IP ID Sequencing Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe analyzes the IP 'ID' field sequence number generation algorithm of a remote host. Operating systems generate IP 'ID' numbers differently, allowing an attacker to identify the operating system of the host by examining how is assigns ID numbers when generating response packets. RFC 791 does not specify how ID numbers are chosen or their ranges, so ID sequence generation differs from implementation to implementation. There are two kinds of IP 'ID' sequence number analysis - IP 'ID' Sequencing: analyzing the IP 'ID' sequence generation algorithm for one protocol used by a host and Shared IP 'ID' Sequencing: analyzing the packet ordering via IP 'ID' values spanning multiple protocols, such as between ICMP and TCP.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_318">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-318</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">IP 'ID' Echoed Byte-Order Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'ID' value from the probe packet. An attacker sends a UDP datagram with an arbitrary IP 'ID' value to a closed port on the remote host to observe the manner in which this bit is echoed back in the ICMP error message. The identification field (ID) is typically utilized for reassembling a fragmented packet. Some operating systems or router firmware reverse the bit order of the ID field when echoing the IP Header portion of the original datagram within an ICMP error message.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_319">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-319</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">IP (DF) 'Don't Fragment Bit' Echoing Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe tests to determine if the remote host echoes back the IP 'DF' (Don't Fragment) bit in a response packet. An attacker sends a UDP datagram with the DF bit set to a closed port on the remote host to observe whether the 'DF' bit is set in the response packet. Some operating systems will echo the bit in the ICMP error message while others will zero out the bit in the response packet.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_320">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-320</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Timestamp Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe examines the remote server's implementation of TCP timestamps. Not all operating systems implement timestamps within the TCP header, but when timestamps are used then this provides the attacker with a means to guess the operating system of the target. The attacker begins by probing any active TCP service in order to get response which contains a TCP timestamp. Different Operating systems update the timestamp value using different intervals. This type of analysis is most accurate when multiple timestamp responses are received and then analyzed. TCP timestamps can be found in the TCP Options field of the TCP header.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_321">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-321</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Sequence Number Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe tests the target system's assignment of TCP sequence numbers. One common way to test TCP Sequence Number generation is to send a probe packet to an open port on the target and then compare the how the Sequence Number generated by the target relates to the Acknowledgement Number in the probe packet. Different operating systems assign Sequence Numbers differently, so a fingerprint of the operating system can be obtained by categorizing the relationship between the acknowledgement number and sequence number as follows: 1) the Sequence Number generated by the target is Zero, 2) the Sequence Number generated by the target is the same as the acknowledgement number in the probe, 3) the Sequence Number generated by the target is the acknowledgement number plus one, or 4) the Sequence Number is any other non-zero number.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_322">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-322</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP (ISN) Greatest Common Divisor Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe sends a number of TCP SYN packets to an open port of a remote machine. The Initial Sequence Number (ISN) in each of the SYN/ACK response packets is analyzed to determine the smallest number that the target host uses when incrementing sequence numbers. This information can be useful for identifying an operating system because particular operating systems and versions increment sequence numbers using different values. The result of the analysis is then compared against a database of OS behaviors to determine the OS type and/or version.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_323">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-323</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP (ISN) Counter Rate Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS detection probe measures the average rate of initial sequence number increments during a period of time. Sequence numbers are incremented using a time-based algorithm and are susceptible to a timing analysis that can determine the number of increments per unit time. The result of this analysis is then compared against a database of operating systems and versions to determine likely operation system matches.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_324">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-324</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP (ISN) Sequence Predictability Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This type of operating system probe attempts to determine an estimate for how predictable the sequence number generation algorithm is for a remote host. Statistical techniques, such as standard deviation, can be used to determine how predictable the sequence number generation is for a system. This result can then be compared to a database of operating system behaviors to determine a likely match for operating system and version.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_325">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-325</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Congestion Control Flag (ECN) Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe checks to see if the remote host supports explicit congestion notification (ECN) messaging. ECN messaging was designed to allow routers to notify a remote host when signal congestion problems are occurring. Explicit Congestion Notification messaging is defined by RFC 3168. Different operating systems and versions may or may not implement ECN notifications, or may respond uniquely to particular ECN flag types.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_326">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-326</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Initial Window Size Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe checks the initial TCP Window size. TCP stacks limit the range of sequence numbers allowable within a session to maintain the 'connected' state within TCP protocol logic. The initial window size specifies a range of acceptable sequence numbers that will qualify as a response to an ACK packet within a session. Various operating systems use different Initial window sizes. The initial window size can be sampled by establishing an ordinary TCP connection.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_327">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-327</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Options Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe analyzes the type and order of any TCP header options present within a response segment. Most operating systems use unique ordering and different option sets when options are present. RFC 793 does not specify a required order when options are present, so different implementations use unique ways of ordering or structuring TCP options. TCP options can be generated by ordinary TCP traffic.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_328">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-328</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP 'RST' Flag Checksum Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This OS fingerprinting probe performs a checksum on any ASCII data contained within the data portion or a RST packet. Some operating systems will report a human-readable text message in the payload of a 'RST' (reset) packet when specific types of connection errors occur. RFC 1122 allows text payloads within reset packets but not all operating systems or routers implement this functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_329">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-329</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Error Message Quoting Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the amount of data returned or 'Quoted' from the originating request that generated the ICMP error message.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_33">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_115"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_141"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_148"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_593"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-33</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Request Smuggling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary abuses the flexibility and discrepancies in the parsing and interpretation of HTTP Request messages using various HTTP headers, request-line and body parameters as well as message sizes (denoted by the end of message signaled by a given HTTP header) by different intermediary HTTP agents (e.g., load balancer, reverse proxy, web caching proxies, application firewalls, etc.) to secretly send unauthorized and malicious HTTP requests to a back-end HTTP agent (e.g., web server).See CanPrecede relationships for possible consequences.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_330">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-330</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Error Message Echoing Integrity Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses a technique to generate an ICMP Error message (Port Unreachable, Destination Unreachable, Redirect, Source Quench, Time Exceeded, Parameter Problem) from a target and then analyze the integrity of data returned or 'Quoted' from the originating request that generated the error message.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_331">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-331</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP IP Total Length Field Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends a UDP packet to a closed port on the target machine to solicit an IP Header's total length field value within the echoed 'Port Unreachable' error message. This type of behavior is useful for building a signature-base of operating system responses, particularly when error messages contain other types of information that is useful identifying specific operating system responses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_332">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_312"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-332</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP IP 'ID' Field Error Message Probe</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary sends a UDP datagram having an assigned value to its internet identification field (ID) to a closed port on a target to observe the manner in which this bit is echoed back in the ICMP error message. This allows the attacker to construct a fingerprint of specific OS behaviors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_34">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_115"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_141"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_148"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_593"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-34</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Response Splitting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary manipulates and injects malicious content, in the form of secret unauthorized HTTP responses, into a single HTTP response from a vulnerable or compromised back-end HTTP agent (e.g., web server) or into an already spoofed HTTP response from an adversary controlled domain/site.See CanPrecede relationships for possible consequences.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_35">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027_006"/>
  <mapToCAPEC rdf:resource="#T1027_009"/>
  <mapToCAPEC rdf:resource="#T1564_009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-35</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leverage Executable Code in Non-Executable Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attack of this type exploits a system's trust in configuration and resource files. When the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_37">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <mapToCAPEC rdf:resource="#T1552_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-37</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Retrieve Embedded Sensitive Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_38">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_007"/>
  <mapToCAPEC rdf:resource="#T1574_009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-38</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leveraging/Manipulating Configuration File Search Paths</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This pattern of attack sees an adversary load a malicious resource into a program's standard path so that when a known command is executed then the system instead executes the malicious component. The adversary can either modify the search path a program uses, like a PATH variable or classpath, or they can manipulate resources on the path to point to their malicious components. J2EE applications and other component based applications that are built from multiple binaries can have very long list of dependencies to execute. If one of these libraries and/or references is controllable by the attacker then application controls can be circumvented by the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_383">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1056_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-383</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Harvesting Information via API Event Monitoring</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary hosts an event within an application framework and then monitors the data exchanged during the course of the event for the purpose of harvesting any important data leaked during the transactions. One example could be harvesting lists of usernames or userIDs for the purpose of sending spam messages to those users. One example of this type of attack involves the adversary creating an event within the sub-application. Assume the adversary hosts a 'virtual sale' of rare items. As other users enter the event, the attacker records via AiTM (CAPEC-94) proxy the user_ids and usernames of everyone who attends. The adversary would then be able to spam those users within the application using an automated script.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_384">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_196"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_94"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-384</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application API Message Manipulation via Man-in-the-Middle</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to perform adversary-in-the-middle (CAPEC-94) communications between the web browser and the remote system. Despite the use of AiTH software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true 'Adversary-in-the-Middle' attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_386">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_94"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-386</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application API Navigation Remapping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_39">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-39</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulating Opaque Client-based Data Tokens</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_390">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-390</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Bypassing Physical Security</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Facilities often used layered models for physical security such as traditional locks, Electronic-based card entry systems, coupled with physical alarms. Hardware security mechanisms range from the use of computer case and cable locks as well as RFID tags for tracking computer assets. This layered approach makes it difficult for random physical security breaches to go unnoticed, but is less effective at stopping deliberate and carefully planned break-ins. Avoiding detection begins with evading building security and surveillance and methods for bypassing the electronic or physical locks which secure entry points.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_4">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-4</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Alternative IP Address Encodings</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack relies on the adversary using unexpected formats for representing IP addresses. Networked applications may expect network location information in a specific format, such as fully qualified domains names (FQDNs), URL, IP address, or IP Address ranges. If the location information is not validated against a variety of different possible encodings and formats, the adversary can use an alternate format to bypass application access control.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_401">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_440"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <mapToCAPEC rdf:resource="#T1200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-401</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Physically Hacking Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in access control to gain access to currently installed hardware and precedes to implement changes or secretly replace a hardware component which undermines the system's integrity for the purpose of carrying out an attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_406">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_163"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_675"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_150"/>
  <mapToCAPEC rdf:resource="#T1003"/>
  <mapToCAPEC rdf:resource="#T1119"/>
  <mapToCAPEC rdf:resource="#T1213"/>
  <mapToCAPEC rdf:resource="#T1530"/>
  <mapToCAPEC rdf:resource="#T1555"/>
  <mapToCAPEC rdf:resource="#T1602"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-406</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dumpster Diving</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary cases an establishment and searches through trash bins, dumpsters, or areas where company information may have been accidentally discarded for information items which may be useful to the dumpster diver. The devastating nature of the items and/or information found can be anything from medical records, resumes, personal photos and emails, bank statements, account details or information about software, tech support logs and so much more, including hardware devices. By collecting this information an adversary may be able to learn important facts about the person or organization that play a role in helping the adversary in their attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_407">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1589"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-407</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pretexting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in pretexting behavior to solicit information from target persons, or manipulate the target into performing some action that serves the adversary's interests. During a pretexting attack, the adversary creates an invented scenario, assuming an identity or role to persuade a targeted victim to release information or perform some action. It is more than just creating a lie; in some cases it can be creating a whole new identity and then using that identity to manipulate the receipt of information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_410">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_407"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-410</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information Elicitation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages an individual using any combination of social engineering methods for the purpose of extracting information. Accurate contextual and environmental queues, such as knowing important information about the target company or individual can greatly increase the success of the attack and the quality of information gathered. Authentic mimicry combined with detailed knowledge increases the success of elicitation attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_412">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_407"/>
  <mapToCAPEC rdf:resource="#T1589"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-412</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pretexting via Customer Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in pretexting behavior, assuming the role of someone who works for Customer Service, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. One example of a scenario such as this would be to call an individual, articulate your false affiliation with a credit card company, and then attempt to get the individual to verify their credit card number.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_413">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_407"/>
  <mapToCAPEC rdf:resource="#T1589"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-413</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pretexting via Tech Support</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in pretexting behavior, assuming the role of a tech support worker, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. An adversary who uses social engineering to impersonate a tech support worker can have devastating effects on a network. This is an effective attack vector, because it can give an adversary physical access to network computers. It only takes a matter of seconds for someone to compromise a computer with physical access. One of the best technological tools at the disposal of a social engineer, posing as a technical support person, is a USB thumb drive. These are small, easy to conceal, and can be loaded with different payloads depending on what task needs to be done. However, this form of attack does not require physical access as it can also be effectively carried out via phone or email.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_414">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_407"/>
  <mapToCAPEC rdf:resource="#T1589"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-414</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pretexting via Delivery Person</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in pretexting behavior, assuming the role of a delivery person, to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. Impersonating a delivery person is an effective attack and an easy attack since not much acting is involved. Usually the hardest part is looking the part and having all of the proper credentials, papers and 'deliveries' in order to be able to pull it off.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_415">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_407"/>
  <mapToCAPEC rdf:resource="#T1589"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-415</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pretexting via Phone</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in pretexting behavior, assuming some sort of trusted role, and contacting the targeted individual or organization via phone to solicit information from target persons, or manipulate the target into performing an action that serves the adversary's interests. This is the most common social engineering attack. Some of the most commonly effective approaches are to impersonate a fellow employee, impersonate a computer technician or to target help desk personnel.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_416">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_407"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-416</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulate Human Behavior</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits inherent human psychological predisposition to influence a targeted individual or group to solicit information or manipulate the target into performing an action that serves the adversary's interests. Many interpersonal social engineering techniques do not involve outright deception, although they can; many are subtle ways of manipulating a target to remove barriers, make the target feel comfortable, and produce an exchange in which the target is either more likely to share information directly, or let key information slip out unintentionally. A skilled adversary uses these techniques when appropriate to produce the desired outcome. Manipulation techniques vary from the overt, such as pretending to be a supervisor to a help desk, to the subtle, such as making the target feel comfortable with the adversary's speech and thought patterns.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_43">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-43</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploiting Multiple Input Interpretation Layers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a 'layer' of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps. The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application: &lt;parser1&gt; --&gt; &lt;input validator&gt; --&gt; &lt;parser2&gt;. In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_438">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-438</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modification During Manufacture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker modifies a technology, product, or component during a stage in its manufacture for the purpose of carrying out an attack against some entity involved in the supply chain lifecycle. There are an almost limitless number of ways an attacker can modify a technology when they are involved in its manufacture, as the attacker has potential inroads to the software composition, hardware design and assembly, firmware, or basic design mechanics. Additionally, manufacturing of key components is often outsourced with the final product assembled by the primary manufacturer. The greatest risk, however, is deliberate manipulation of design specifications to produce malicious hardware or devices. There are billions of transistors in a single integrated circuit and studies have shown that fewer than 10 transistors are required to create malicious functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_439">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-439</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulation During Distribution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker undermines the integrity of a product, software, or technology at some stage of the distribution channel. The core threat of modification or manipulation during distribution arise from the many stages of distribution, as a product may traverse multiple suppliers and integrators as the final asset is delivered. Components and services provided from a manufacturer to a supplier may be tampered with during integration or packaging.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_440">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <mapToCAPEC rdf:resource="#T1200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-440</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Integrity Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in the system maintenance process and causes a change to be made to a technology, product, component, or sub-component or a new one installed during its deployed use at the victim location for the purpose of carrying out an attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_441">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_442"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-441</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Logic Insertion</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary installs or adds malicious logic (also known as malware) into a seemingly benign component of a fielded system. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. With the proliferation of mass digital storage and inexpensive multimedia devices, Bluetooth and 802.11 support, new attack vectors for spreading malware are emerging for things we once thought of as innocuous greeting cards, picture frames, or digital projectors. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems and their components that are still under development and part of the supply chain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_442">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-442</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infected Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary adds malicious logic, often in the form of a computer virus, to otherwise benign software. This logic is often hidden from the user of the software and works behind the scenes to achieve negative impacts. Many times, the malicious logic is inserted into empty space between legitimate code, and is then called when the software is executed. This pattern of attack focuses on software already fielded and used in operation as opposed to software that is still under development and part of the supply chain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_443">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-443</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Logic Inserted Into Product by Authorized Developer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses their privileged position within an authorized development organization to inject malicious logic into a codebase or product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_444">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_691"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_206"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_443"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_445"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_446"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_511"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_516"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_520"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_532"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_537"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_538"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_539"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_670"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_672"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_673"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_678"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_438"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-444</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Development Alteration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary modifies a technology, product, or component during its development to acheive a negative impact once the system is deployed. The goal of the adversary is to modify the system in such a way that the negative impact can be leveraged when the system is later deployed. Development alteration attacks may include attacks that insert malicious logic into the system's software, modify or replace hardware components, and other attacks which negatively impact the system during development. These attacks generally require insider access to modify source code or to tamper with hardware components. The product is then delivered to the user where the negative impact can be leveraged at a later time.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_445">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-445</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Logic Insertion into Product Software via Configuration Management Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a configuration management system so that malicious logic is inserted into a software products build, update or deployed environment. If an adversary can control the elements included in a product's configuration management for build they can potentially replace, modify or insert code files containing malicious logic. If an adversary can control elements of a product's ongoing operational configuration management baseline they can potentially force clients receiving updates from the system to install insecure software when receiving updates from the server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_446">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-446</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Logic Insertion into Product via Inclusion of Third-Party Component</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary conducts supply chain attacks by the inclusion of insecure third-party components into a technology, product, or code-base, possibly packaging a malicious driver or component along with the product before shipping it to the consumer or acquirer.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_447">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_671"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_674"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_438"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-447</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Design Alteration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary modifies the design of a technology, product, or component to acheive a negative impact once the system is deployed. In this type of attack, the goal of the adversary is to modify the design of the system, prior to development starting, in such a way that the negative impact can be leveraged when the system is later deployed. Design alteration attacks differ from development alteration attacks in that design alteration attacks take place prior to development and which then may or may not be developed by the adverary. Design alteration attacks include modifying system designs to degrade system performance, cause unexpected states or errors, and general design changes that may lead to additional vulnerabilities. These attacks generally require insider access to modify design documents, but they may also be spoofed via web communications. The product is then developed and delivered to the user where the negative impact can be leveraged at a later time.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_448">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027_009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-448</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Embed Virus into DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary tampers with a DLL and embeds a computer virus into gaps between legitimate machine instructions. These gaps may be the result of compiler optimizations that pad memory blocks for performance gains. The embedded virus then attempts to infect any machine which interfaces with the product, and possibly steal private data or eavesdrop.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_452">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_638"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-452</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infected Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary inserts malicious logic into hardware, typically in the form of a computer virus or rootkit. This logic is often hidden from the user of the hardware and works behind the scenes to achieve negative impacts. This pattern of attack focuses on hardware already fielded and used in operation as opposed to hardware that is still under development and part of the supply chain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_456">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_457"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-456</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infected Memory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary inserts malicious logic into memory enabling them to achieve a negative impact. This logic is often hidden from the user of the system and works behind the scenes to achieve negative impacts. This pattern of attack focuses on systems already fielded and used in operation as opposed to systems that are still under development and part of the supply chain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_457">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1091"/>
  <mapToCAPEC rdf:resource="#T1092"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-457</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">USB Memory Attacks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary loads malicious code onto a USB memory stick in order to infect any system which the device is plugged in to. USB drives present a significant security risk for business and government agencies. Given the ability to integrate wireless functionality into a USB stick, it is possible to design malware that not only steals confidential data, but sniffs the network, or monitor keystrokes, and then exfiltrates the stolen data off-site via a Wireless connection. Also, viruses can be transmitted via the USB interface without the specific use of a memory stick. The attacks from USB devices are often of such sophistication that experts conclude they are not the work of single individuals, but suggest state sponsorship. These attacks can be performed by an adversary with direct access to a target system or can be executed via means such as USB Drop Attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_458">
  <rdf:type rdf:resource="#CAPEC"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-458</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Flash Memory Attacks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary inserts malicious logic into a product or technology via flashing the on-board memory with a code-base that contains malicious logic. Various attacks exist against the integrity of flash memory, the most direct being rootkits coded into the BIOS or chipset of a device.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_459">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_473"/>
  <mapToCAPEC rdf:resource="#T1036_001"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-459</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Creating a Rogue Certification Authority Certificate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness resulting from using a hashing algorithm with weak collision resistance to generate certificate signing requests (CSR) that contain collision blocks in their 'to be signed' parts. The adversary submits one CSR to be signed by a trusted certificate authority then uses the signed blob to make a second certificate appear signed by said certificate authority. Due to the hash collision, both certificates, though different, hash to the same value and so the signed blob works just as well in the second certificate. The net effect is that the adversary's second X.509 certificate, which the Certification Authority has never seen, is now signed and validated by that Certification Authority.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_461">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_115"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-461</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Services API Signature Forgery Leveraging Hash Function Extension Weakness</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary utilizes a hash function extension/padding weakness, to modify the parameters passed to the web service requesting authentication by generating their own call in order to generate a legitimate signature hash (as described in the notes), without knowledge of the secret token sometimes provided by the web service.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_464">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1606_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-464</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evercookie</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker creates a very persistent cookie that stays present even after the user thinks it has been removed. The cookie is stored on the victim's machine in over ten places. When the victim clears the cookie cache via traditional means inside the browser, that operation removes the cookie from certain places but not others. The malicious code then replicates the cookie from all of the places where it was not deleted to all of the possible storage locations once again. So the victim again has the cookie in all of the original storage locations. In other words, failure to delete the cookie in even one location will result in the cookie's resurrection everywhere. The evercookie will also persist across different browsers because certain stores (e.g., Local Shared Objects) are shared between different browsers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_465">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1090_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-465</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Transparent Proxy Abuse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A transparent proxy serves as an intermediate between the client and the internet at large. It intercepts all requests originating from the client and forwards them to the correct location. The proxy also intercepts all responses to the client and forwards these to the client. All of this is done in a manner transparent to the client.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_466">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_94"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-466</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Leveraging Active Adversary in the Middle Attacks to Bypass Same Origin Policy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker leverages an adversary in the middle attack (CAPEC-94) in order to bypass the same origin policy protection in the victim's browser. This active adversary in the middle attack could be launched, for instance, when the victim is connected to a public WIFI hot spot. An attacker is able to intercept requests and responses between the victim's browser and some non-sensitive website that does not use TLS.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_469">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-469</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP DoS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker performs flooding at the HTTP level to bring down only a particular web application rather than anything listening on a TCP/IP connection. This denial of service attack requires substantially fewer packets to be sent which makes DoS harder to detect. This is an equivalent of SYN flood in HTTP. The idea is to keep the HTTP session alive indefinitely and then repeat that hundreds of times. This attack targets resource depletion weaknesses in web server software. The web server will wait to attacker's responses on the initiated HTTP sessions while the connection threads are being exhausted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_471">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_001"/>
  <mapToCAPEC rdf:resource="#T1574_004"/>
  <mapToCAPEC rdf:resource="#T1574_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-471</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Search Order Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in an application's specification of external libraries to exploit the functionality of the loader where the process loading the library searches first in the same directory in which the process binary resides and then in other directories. Exploitation of this preferential search order can allow an attacker to make the loading process load the adversary's rogue library rather than the legitimate library. This attack can be leveraged with many different libraries and with many different loading processes. No forensic trails are left in the system's registry or file system that an incorrect library had been loaded.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_472">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_541"/>
  <mapToCAPEC rdf:resource="#T1592_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-472</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_473">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_001"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-473</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoof</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_474">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1552_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-474</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoofing by Key Theft</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_475">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_542"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_473"/>
  <mapToCAPEC rdf:resource="#T1036_001"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-475</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoofing by Improper Validation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a cryptographic weakness in the signature verification algorithm implementation to generate a valid signature without knowing the key.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_476">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_473"/>
  <mapToCAPEC rdf:resource="#T1036_001"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-476</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoofing by Misrepresentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits a weakness in the parsing or display code of the recipient software to generate a data blob containing a supposedly valid signature, but the signer's identity is falsely represented, which can lead to the attacker manipulating the recipient software or its victim user to perform compromising actions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_477">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_473"/>
  <mapToCAPEC rdf:resource="#T1036_001"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-477</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoofing by Mixing Signed and Unsigned Content</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker exploits the underlying complexity of a data structure that allows for both signed and unsigned content, to cause unsigned data to be processed as though it were signed data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_478">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_011"/>
  <mapToCAPEC rdf:resource="#T1543_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-478</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modification of Windows Service Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in access control to modify the execution parameters of a Windows service. The goal of this attack is to execute a malicious binary in place of an existing service.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_479">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1553_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-479</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Root Certificate</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in authorization and installs a new root certificate on a compromised system. Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_480">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1611"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-480</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Escaping Virtualization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary gains access to an application, service, or device with the privileges of an authorized or privileged user by escaping the confines of a virtualized environment. The adversary is then able to access resources or execute unauthorized code within the host environment, generally with the privileges of the user running the virtualized process. Successfully executing an attack of this type is often the first step in executing more complex attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_481">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1090_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-481</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Contradictory Destinations in Traffic Routing Schemes</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries can provide contradictory destinations when sending messages. Traffic is routed in networks using the domain names in various headers available at different levels of the OSI model. In a Content Delivery Network (CDN) multiple domains might be available, and if there are contradictory domain names provided it is possible to route traffic to an inappropriate destination. The technique, called Domain Fronting, involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. An alternative technique, called Domainless Fronting, is similar, but the SNI field is left blank.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_482">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <mapToCAPEC rdf:resource="#T1499_001"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-482</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using the TCP protocol with the intent to deny legitimate users access to a service. These attacks exploit the weakness within the TCP protocol where there is some state information for the connection the server needs to maintain. This often involves the use of TCP SYN messages.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_485">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1552_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-485</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signature Spoofing by Key Recreation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker obtains an authoritative or reputable signer's private signature key by exploiting a cryptographic weakness in the signature algorithm or pseudorandom number generation and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_486">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_125"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <mapToCAPEC rdf:resource="#T1499"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-486</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UDP Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using the UDP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. Additionally, firewalls often open a port for each UDP connection destined for a service with an open UDP port, meaning the firewalls in essence save the connection state thus the high packet nature of a UDP flood can also overwhelm resources allocated to the firewall. UDP attacks can also target services like DNS or VoIP which utilize these protocols. Additionally, due to the session-less nature of the UDP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_487">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_125"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <mapToCAPEC rdf:resource="#T1499"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-487</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using the ICMP protocol with the intent to deny legitimate users access to a service by consuming the available network bandwidth. A typical attack involves a victim server receiving ICMP packets at a high rate from a wide range of source addresses. Additionally, due to the session-less nature of the ICMP protocol, the source of a packet is easily spoofed making it difficult to find the source of the attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_488">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-488</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">HTTP Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using the HTTP protocol with the intent to deny legitimate users access to a service by consuming resources at the application layer such as web services and their infrastructure. These attacks use legitimate session-based HTTP GET requests designed to consume large amounts of a server's resources. Since these are legitimate sessions this attack is very difficult to detect.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_489">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-489</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SSL Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using the SSL protocol with the intent to deny legitimate users access to a service by consuming all the available resources on the server side. These attacks take advantage of the asymmetric relationship between the processing power used by the client and the processing power used by the server to create a secure connection. In this manner the attacker can make a large number of HTTPS requests on a low provisioned machine to tie up a disproportionately large number of resources on the server. The clients then continue to keep renegotiating the SSL connection. When multiplied by a large number of attacking machines, this attack can result in a crash or loss of service to legitimate users.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_49">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1110_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-49</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Brute Forcing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary tries every possible value for a password until they succeed. A brute force attack, if feasible computationally, will always be successful because it will essentially go through all possible passwords given the alphabet used (lower case letters, upper case letters, numbers, symbols, etc.) and the maximum length of the password.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_490">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1498_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-490</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Amplification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute an amplification where the size of a response is far greater than that of the request that generates it. The goal of this attack is to use a relatively few resources to create a large amount of traffic against a target server. To execute this attack, an adversary send a request to a 3rd party service, spoofing the source address to be that of the target server. The larger response that is generated by the 3rd party service is then sent to the target server. By sending a large number of initial requests, the adversary can generate a tremendous amount of traffic directed at the target. The greater the discrepancy in size between the initial request and the final payload delivered to the target increased the effectiveness of this attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_492">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-492</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Regular Expression Exponential Blowup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute an attack on a program that uses a poor Regular Expression(Regex) implementation by choosing input that results in an extreme situation for the Regex. A typical extreme situation operates at exponential time compared to the input size. This is due to most implementations using a Nondeterministic Finite Automaton(NFA) state machine to be built by the Regex algorithm since NFA allows backtracking and thus more complex regular expressions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_493">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-493</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SOAP Array Blowup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute an attack on a web service that uses SOAP messages in communication. By sending a very large SOAP array declaration to the web service, the attacker forces the web service to allocate space for the array elements before they are parsed by the XML parser. The attacker message is typically small in size containing a large array declaration of say 1,000,000 elements and a couple of array elements. This attack targets exhaustion of the memory resources of the web service.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_494">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-494</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TCP Fragmentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a TCP Fragmentation attack against a target with the intention of avoiding filtering rules of network controls, by attempting to fragment the TCP packet such that the headers flag field is pushed into the second fragment which typically is not filtered.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_495">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-495</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UDP Fragmentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker may execute a UDP Fragmentation attack against a target server in an attempt to consume resources such as bandwidth and CPU. IP fragmentation occurs when an IP datagram is larger than the MTU of the route the datagram has to traverse. Typically the attacker will use large UDP packets over 1500 bytes of data which forces fragmentation as ethernet MTU is 1500 bytes. This attack is a variation on a typical UDP flood but it enables more network bandwidth to be consumed with fewer packets. Additionally it has the potential to consume server CPU resources and fill memory buffers associated with the processing and reassembling of fragmented packets.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_496">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_130"/>
  <mapToCAPEC rdf:resource="#T1499_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-496</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ICMP Fragmentation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker may execute a ICMP Fragmentation attack against a target with the intention of consuming resources or causing a crash. The attacker crafts a large number of identical fragmented IP packets containing a portion of a fragmented ICMP message. The attacker these sends these messages to a target host which causes the host to become non-responsive. Another vector may be sending a fragmented ICMP message to a target host with incorrect sizes in the header which causes the host to hang.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_497">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1083"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-497</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">File Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in probing and exploration activities to determine if common key files exists. Such files often contain configuration and security parameters of the targeted application, system or network. Using this knowledge may often pave the way for more damaging attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_498">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_545"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <mapToCAPEC rdf:resource="#T1555_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-498</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Probe iOS Screenshots</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary examines screenshot images created by iOS in an attempt to obtain sensitive information. This attack targets temporary screenshots created by the underlying OS while the application remains open in the background.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_50">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_560"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_561"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_600"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-50</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Recovery Exploitation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker may take advantage of the application feature to help users recover their forgotten passwords in order to gain access into the system with the same privileges as the original user. Generally password recovery schemes tend to be weak and insecure.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_502">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_148"/>
  <mapToCAPEC rdf:resource="#T1491"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-502</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Intent Spoof</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a previously installed malicious application, issues an intent directed toward a specific trusted application's component in an attempt to achieve a variety of different objectives including modification of data, information disclosure, and data injection. Components that have been unintentionally exported and made public are subject to this type of an attack. If the component trusts the intent's action without verififcation, then the target application performs the functionality at the adversary's request, helping the adversary achieve the desired negative technical impact.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_503">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_122"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-503</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">WebView Exposure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a malicious web page, accesses application specific functionality by leveraging interfaces registered through WebView's addJavascriptInterface API. Once an interface is registered to WebView through addJavascriptInterface, it becomes global and all pages loaded in the WebView can call this interface.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_504">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-504</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Task Impersonation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a previously installed malicious application, impersonates an expected or routine task in an attempt to steal sensitive information or leverage a user's privileges.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_505">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-505</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Scheme Squatting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a previously installed malicious application, registers for a URL scheme intended for a target application that has not been installed. Thereafter, messages intended for the target application are handled by the malicious application. Upon receiving a message, the malicious application displays a screen that mimics the target application, thereby convincing the user to enter sensitive information. This type of attack is most often used to obtain sensitive information (e.g., credentials) from the user as they think that they are interacting with the intended target application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_508">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_560"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_651"/>
  <mapToCAPEC rdf:resource="#T1111"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-508</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Shoulder Surfing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In a shoulder surfing attack, an adversary observes an unaware individual's keystrokes, screen content, or conversations with the goal of obtaining sensitive information. One motive for this attack is to obtain sensitive information about the target for financial, personal, political, or other gains. From an insider threat perspective, an additional motive could be to obtain system/application credentials or cryptographic keys. Shoulder surfing attacks are accomplished by observing the content 'over the victim's shoulder', as implied by the name of this attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_509">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1558_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-509</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Kerberoasting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Through the exploitation of how service accounts leverage Kerberos authentication with Service Principal Names (SPNs), the adversary obtains and subsequently cracks the hashed credentials of a service account target to exploit its privileges. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. As an authenticated user, the adversary may request Active Directory and obtain a service ticket with portions encrypted via RC4 with the private key of the authenticated account. By extracting the local ticket and saving it disk, the adversary can brute force the hashed value to reveal the target account credentials.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_51">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_203"/>
  <mapToCAPEC rdf:resource="#T1112"/>
  <mapToCAPEC rdf:resource="#T1647"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-51</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Poison Web Service Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SOA and Web Services often use a registry to perform look up, get schema information, and metadata about services. A poisoned registry can redirect (think phishing for servers) the service requester to a malicious service provider, provide incorrect information in schema or metadata, and delete information about service provider interfaces.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_510">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_21"/>
  <mapToCAPEC rdf:resource="#T1134"/>
  <mapToCAPEC rdf:resource="#T1528"/>
  <mapToCAPEC rdf:resource="#T1539"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-510</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SaaS User Request Forgery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a previously installed malicious application, performs malicious actions against a third-party Software as a Service (SaaS) application (also known as a cloud based application) by leveraging the persistent and implicit trust placed on a trusted user's session. This attack is executed after a trusted user is authenticated into a cloud service, 'piggy-backing' on the authenticated session, and exploiting the fact that the cloud service believes it is only interacting with the trusted user. If successful, the actions embedded in the malicious application will be processed and accepted by the targeted SaaS application and executed at the trusted user's privilege level.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_511">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-511</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infiltration of Software Development Environment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker uses common delivery mechanisms such as email attachments or removable media to infiltrate the IDE (Integrated Development Environment) of a victim manufacturer with the intent of implanting malware allowing for attack control of the victim IDE environment. The attack then uses this access to exfiltrate sensitive data or information, manipulate said data or information, and conceal these actions. This will allow and aid the attack to meet the goal of future compromise of a recipient of the victim's manufactured product further down in the supply chain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_516">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-516</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Component Substitution During Baselining</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary with access to system components during allocated baseline development can substitute a maliciously altered hardware component for a baseline component during the product development and research phases. This can lead to adjustments and calibrations being made in the product so that when the final product, now containing the modified component, is deployed it will not perform as designed and be advantageous to the adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_52">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-52</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Embedding NULL Bytes</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s).</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_520">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-520</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Counterfeit Hardware Component Inserted During Product Assembly</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary with either direct access to the product assembly process or to the supply of subcomponents used in the product assembly process introduces counterfeit hardware components into product assembly. The assembly containing the counterfeit components results in a system specifically designed for malicious purposes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_522">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-522</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Hardware Component Replacement</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary replaces legitimate hardware in the system with faulty counterfeit or tampered hardware in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_523">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-523</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Software Implanted</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker implants malicious software into the system in the supply chain distribution channel, with purpose of causing malicious disruption or allowing for additional compromise when the system is deployed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_524">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_439"/>
  <mapToCAPEC rdf:resource="#T1195"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-524</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Rogue Integration Procedures</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker alters or establishes rogue processes in an integration facility in order to insert maliciously altered components into the system. The attacker would then supply the malicious components. This would allow for malicious disruption or additional compromise when the system is deployed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_528">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1499_002"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-528</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">XML Flood</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may execute a flooding attack using XML messages with the intent to deny legitimate users access to a web service. These attacks are accomplished by sending a large number of XML based requests and letting the service attempt to parse each one. In many cases this type of an attack will result in a XML Denial of Service (XDoS) due to an application becoming unstable, freezing, or crashing.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_529">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_270"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_457"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_169"/>
  <mapToCAPEC rdf:resource="#T1217"/>
  <mapToCAPEC rdf:resource="#T1592"/>
  <mapToCAPEC rdf:resource="#T1595"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-529</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malware-Directed Internal Reconnaissance</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary uses malware or a similarly controlled application installed inside an organizational perimeter to gather information about the composition, configuration, and security mechanisms of a targeted application, system or network.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_53">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-53</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Postfix, Null Terminate, and Backslash</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an adversary to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_530">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_531"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-530</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Provide Counterfeit Component</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker provides a counterfeit component during the procurement process of a lower-tier component supplier to a sub-system developer or integrator, which is then built into the system being upgraded or repaired by the victim, allowing the attacker to cause disruption or additional compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_531">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-531</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Component Substitution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker substitutes out a tested and approved hardware component for a maliciously-altered hardware component. This type of attack is carried out directly on the system, enabling the attacker to then cause disruption or additional compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_532">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1495"/>
  <mapToCAPEC rdf:resource="#T1542_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-532</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Altered Installed BIOS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker with access to download and update system software sends a maliciously altered BIOS to the victim or victim supplier/integrator, which when installed allows for future exploitation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_533">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_186"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-533</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Manual Software Update</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker introduces malicious code to the victim's system by altering the payload of a software update, allowing for additional compromise or site disruption at the victim location. These manual, or user-assisted attacks, vary from requiring the user to download and run an executable, to as streamlined as tricking the user to click a URL. Attacks which aim at penetrating a specific network infrastructure often rely upon secondary attack methods to achieve the desired impact. Spamming, for example, is a common method employed as an secondary attack vector. Thus the attacker has in their arsenal a choice of initial attack vectors ranging from traditional SMTP/POP/IMAP spamming and its varieties, to web-application mechanisms which commonly implement both chat and rich HTML messaging within the user interface.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_534">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_531"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_677"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_440"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <mapToCAPEC rdf:resource="#T1200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-534</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Hardware Update</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary introduces malicious hardware during an update or replacement procedure, allowing for additional compromise or site disruption at the victim location. After deployment, it is not uncommon for upgrades and replacements to occur involving hardware and various replaceable parts. These upgrades and replacements are intended to correct defects, provide additional features, and to replace broken or worn-out parts. However, by forcing or tricking the replacement of a good component with a defective or corrupted component, an adversary can leverage known defects to obtain a desired malicious impact.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_535">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_531"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-535</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Gray Market Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker maliciously alters hardware components that will be sold on the gray market, allowing for victim disruption and compromise when the victim needs replacement hardware components for systems where the parts are no longer in regular supply from original suppliers, or where the hardware components from the attacker seems to be a great benefit from a cost perspective.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_537">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-537</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Infiltration of Hardware Development Environment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, leveraging the ability to manipulate components of primary support systems and tools within the development and production environments, inserts malicious software within the hardware and/or firmware development environment. The infiltration purpose is to alter developed hardware components in a system destined for deployment at the victim's organization, for the purpose of disruption or further compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_538">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-538</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Open-Source Library Manipulation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries implant malicious code in open source software (OSS) libraries to have it widely distributed, as OSS is commonly downloaded by developers and other users to incorporate into software development projects. The adversary can have a particular system in mind to target, or the implantation can be the first stage of follow-on attacks on many systems.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_539">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-539</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">ASIC With Malicious Functionality</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker with access to the development environment process of an application-specific integrated circuit (ASIC) for a victim system being developed or maintained after initial deployment can insert malicious functionality into the system for the purpose of disruption or further compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_54">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-54</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Query System for Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_541">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1592_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-541</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Application Fingerprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in fingerprinting activities to determine the type or version of an application installed on a remote target.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_542">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1587_001"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-542</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Targeted Malware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary develops targeted malware that takes advantage of a known vulnerability in an organizational information technology environment. The malware crafted for these attacks is based specifically on information gathered about the technology environment. Successfully executing the malware enables an adversary to achieve a wide variety of negative technical impacts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_543">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-543</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Counterfeit Websites</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary creates duplicates of legitimate websites. When users visit a counterfeit site, the site can gather information or upload malware.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_545">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <mapToCAPEC rdf:resource="#T1555_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-545</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pull Data from System Resources</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary who is authorized or has the ability to search known system resources, does so with the intention of gathering useful information. System resources include files, memory, and other aspects of the target system. In this pattern of attack, the adversary does not necessarily know what they are going to find when they start pulling data. This is different thanCAPEC-150where the adversary knows what they are looking for due to the common location.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_546">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_545"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <mapToCAPEC rdf:resource="#T1555_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-546</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Data Deletion in a Multi-Tenant Environment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary obtains unauthorized information due to insecure or incomplete data deletion in a multi-tenant environment. If a cloud provider fails to completely delete storage and data from former cloud tenants' systems/resources, once these resources are allocated to new, potentially malicious tenants, the latter can probe the provided resources for sensitive information still there.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_549">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_561"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_644"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_542"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-549</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Local Execution of Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary installs and executes malicious code on the target system in an effort to achieve a negative technical impact. Examples include rootkits, ransomware, spyware, adware, and others.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_55">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1110_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-55</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Rainbow Table Password Cracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker gets access to the database table where hashes of passwords are stored. They then use a rainbow table of pre-computed hash chains to attempt to look up the original password. Once the original password corresponding to the hash is obtained, the attacker uses the original password to gain access to the system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_550">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1543"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-550</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Install New Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When an operating system starts, it also starts programs called services or daemons. Adversaries may install a new service which will be executed at startup (on a Windows system, by modifying the registry). The service name may be disguised by using a name from a related operating system or benign software. Services are usually run with elevated privileges.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_551">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1543"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-551</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Existing Service</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When an operating system starts, it also starts programs called services or daemons. Modifying existing services may break existing services or may enable services that are disabled/not commonly used.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_552">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1014"/>
  <mapToCAPEC rdf:resource="#T1542_003"/>
  <mapToCAPEC rdf:resource="#T1547_006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-552</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Install Rootkit</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in authentication to install malware that alters the functionality and information provide by targeted operating system API calls. Often referred to as rootkits, it is often used to hide the presence of programs, files, network connections, services, drivers, and other system components.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_554">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_464"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_465"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-554</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Functionality Bypass</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary attacks a system by bypassing some or all functionality intended to protect it. Often, a system user will think that protection is in place, but the functionality behind those protections has been disabled by the adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_555">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1021"/>
  <mapToCAPEC rdf:resource="#T1114_002"/>
  <mapToCAPEC rdf:resource="#T1133"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-555</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remote Services with Stolen Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This pattern of attack involves an adversary that uses stolen credentials to leverage remote services such as RDP, telnet, SSH, and VNC to log into a system. Once access is gained, any number of malicious activities could be performed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_556">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1546_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-556</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replace File Extension Handlers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When a file is opened, its file handler is checked to determine which program opens the file. File handlers are configuration properties of many operating systems. Applications can modify the file handler for a given file extension to call an arbitrary program when a file with the given extension is opened.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_558">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1505_005"/>
  <mapToCAPEC rdf:resource="#T1546_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-558</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replace Trusted Executable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits weaknesses in privilege management or access control to replace a trusted executable with a malicious version and enable the execution of malware when that trusted executable is called.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_560">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1078"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-560</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Known Domain Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary guesses or obtains (i.e. steals or purchases) legitimate credentials (e.g. userID/password) to achieve authentication and to perform authorized actions under the guise of an authenticated user or service.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_561">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1021_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-561</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Admin Shares with Stolen Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary guesses or obtains (i.e. steals or purchases) legitimate Windows administrator credentials (e.g. userID/password) to access Windows Admin Shares on a local machine or within a Windows domain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_562">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1080"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-562</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modify Shared File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary manipulates the files in a shared location by adding malicious programs, scripts, or exploit code to valid content. Once a user opens the shared content, the tainted content is executed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_563">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_17"/>
  <mapToCAPEC rdf:resource="#T1574_005"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-563</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Add Malicious File to Shared Webroot</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversaries may add malicious content to a website through the open file share and then browse to that content with a web browser to cause the server to execute the content. The malicious content will typically run under the context and permissions of the web server process, often resulting in local system or administrative privileges depending on how the web server is configured.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_564">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1037"/>
  <mapToCAPEC rdf:resource="#T1543_001"/>
  <mapToCAPEC rdf:resource="#T1543_004"/>
  <mapToCAPEC rdf:resource="#T1547"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-564</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Run Software at Logon</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operating system allows logon scripts to be run whenever a specific user or users logon to a system. If adversaries can access these scripts, they may insert additional code into the logon script. This code can allow them to maintain persistence or move laterally within an enclave because it is executed every time the affected user or users logon to a computer. Modifying logon scripts can effectively bypass workstation and enclave firewalls. Depending on the access configuration of the logon scripts, either local credentials or a remote administrative account may be necessary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_565">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1110_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-565</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Spraying</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In a Password Spraying attack, an adversary tries a small list (e.g. 3-5) of common or expected passwords, often matching the target's complexity policy, against a known list of user accounts to gain valid credentials. The adversary tries a particular password for each user account, before moving onto the next password in the list. This approach assists the adversary in remaining undetected by avoiding rapid or frequent account lockouts. The adversary may then reattempt the process with additional passwords, once enough time has passed to prevent inducing a lockout.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_568">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1056_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-568</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Capture Credentials via Keylogger</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary deploys a keylogger in an effort to obtain credentials directly from a system's user. After capturing all the keystrokes made by a user, the adversary can analyze the data and determine which string are likely to be passwords or other credential related information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_569">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1056"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-569</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect Data as Provided by Users</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker leverages a tool, device, or program to obtain specific information as provided by a user of the target system. This information is often needed by the attacker to launch a follow-on attack. This attack is different than Social Engineering as the adversary is not tricking or deceiving the user. Instead the adversary is putting a mechanism in place that captures the information that a user legitimately enters into a system. Deploying a keylogger, performing a UAC prompt, or wrapping the Windows default credential provider are all examples of such interactions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_57">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1040"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-57</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Utilizing REST's Trust in the System Resource to Obtain Sensitive Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to obtain sensitive data once SSL is terminated.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_571">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1562_002"/>
  <mapToCAPEC rdf:resource="#T1562_006"/>
  <mapToCAPEC rdf:resource="#T1562_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-571</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Block Logging to Central Repository</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary prevents host-generated logs being delivered to a central location in an attempt to hide indicators of compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_572">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-572</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Artificially Inflate File Sizes</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary modifies file contents by adding data to files for several reasons. Many different attacks could follow this pattern resulting in numerous outcomes. Adding data to a file could also result in a Denial of Service condition for devices with limited storage capacity.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_573">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1057"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-573</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits functionality meant to identify information about the currently running processes on the target system to an authorized user. By knowing what processes are running on the target system, the adversary can learn about the target environment as a means towards further malicious behavior.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_574">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-574</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Services Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits functionality meant to identify information about the services on the target system to an authorized user. By knowing what services are registered on the target system, the adversary can learn about the target environment as a means towards further malicious behavior. Depending on the operating system, commands that can obtain services information include 'sc' and 'tasklist/svc' using Tasklist, and 'net start' using Net.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_575">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1087"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-575</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Account Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits functionality meant to identify information about the domain accounts and their permissions on the target system to an authorized user. By knowing what accounts are registered on the target system, the adversary can inform further and more targeted malicious behavior. Example Windows commands which can acquire this information are: 'net user' and 'dsquery'.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_576">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1069"/>
  <mapToCAPEC rdf:resource="#T1615"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-576</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Group Permission Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits functionality meant to identify information about user groups and their permissions on the target system to an authorized user. By knowing what users/permissions are registered on the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command which can list local groups is 'net localgroup'.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_577">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1033"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-577</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Owner Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits functionality meant to identify information about the primary users on the target system to an authorized user. They may do this, for example, by reviewing logins or file modification times. By knowing what owners use the target system, the adversary can inform further and more targeted malicious behavior. An example Windows command that may accomplish this is 'dir /A ntuser.dat'. Which will display the last modified time of a user's ntuser.dat file when run within the root folder of a user. This time is synonymous with the last time that user was logged in.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_578">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1556_006"/>
  <mapToCAPEC rdf:resource="#T1562_001"/>
  <mapToCAPEC rdf:resource="#T1562_002"/>
  <mapToCAPEC rdf:resource="#T1562_004"/>
  <mapToCAPEC rdf:resource="#T1562_007"/>
  <mapToCAPEC rdf:resource="#T1562_008"/>
  <mapToCAPEC rdf:resource="#T1562_009"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-578</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Disable Security Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in access control to disable security tools so that detection does not occur. This can take the form of killing processes, deleting registry keys so that tools do not start at run time, deleting log files, or other methods.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_579">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1547_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-579</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replace Winlogon Helper DLL</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Winlogon is a part of Windows that performs logon actions. In Windows systems prior to Windows Vista, a registry key can be modified that causes Winlogon to load a DLL on startup. Adversaries may take advantage of this feature to load adversarial code at startup.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_58">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_1"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_180"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-58</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Restful Privilege Elevation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary identifies a Rest HTTP (Get, Put, Delete) style permission method allowing them to perform various malicious actions upon server data due to lack of access control mechanisms implemented within the application service accepting HTTP messages.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_580">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-580</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary engages in active probing and exploration activities to determine security information about a remote target system. Often times adversaries will rely on remote applications that can be probed for system configurations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_581">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1518_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-581</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security Software Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to get a listing of security tools that are installed on the system and their configurations. This may include security related system features (such as a built-in firewall or anti-spyware) as well as third-party security software.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_588">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-588</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DOM-Based XSS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_59">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_196"/>
  <mapToCAPEC rdf:resource="#T1134_002"/>
  <mapToCAPEC rdf:resource="#T1134_003"/>
  <mapToCAPEC rdf:resource="#T1606"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-59</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Credential Falsification through Prediction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_591">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-591</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reflected XSS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is 'reflected' off a vulnerable web application and then executed by a victim's browser. The process starts with an adversary delivering a malicious script to a victim and convincing the victim to send the script to the vulnerable web application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_592">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_63"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-592</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Stored XSS</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary utilizes a form of Cross-site Scripting (XSS) where a malicious script is persistently 'stored' within the data storage of a vulnerable web application as valid input.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_593">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1185"/>
  <mapToCAPEC rdf:resource="#T1550_001"/>
  <mapToCAPEC rdf:resource="#T1563"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-593</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Hijacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The adversary is able to steal or manipulate an active session and use it to gain unathorized access to the application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_60">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1134_001"/>
  <mapToCAPEC rdf:resource="#T1550_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-60</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reusing Session IDs (aka Session Replay)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_600">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1110_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-600</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Stuffing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary tries known username/password combinations against different systems, applications, or services to gain additional authenticated access. Credential Stuffing attacks rely upon the fact that many users leverage the same username/password combination for multiple systems, applications, and services.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_606">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_620"/>
  <mapToCAPEC rdf:resource="#T1600"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-606</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weakening of Cellular Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker, with control of a Cellular Rogue Base Station or through cooperation with a Malicious Mobile Network Operator can force the mobile device (e.g., the retransmission device) to use no encryption (A5/0 mode) or to use easily breakable encryption (A5/1 or A5/2 mode).</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_609">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1111"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-609</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cellular Traffic Intercept</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cellular traffic for voice and data from mobile devices and retransmission devices can be intercepted via numerous methods. Malicious actors can deploy their own cellular tower equipment and intercept cellular traffic surreptitiously. Additionally, government agencies of adversaries and malicious actors can intercept cellular traffic via the telecommunications backbone over which mobile traffic is transmitted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_61">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_196"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_593"/>
  <mapToCAPEC rdf:resource="#T1185"/>
  <mapToCAPEC rdf:resource="#T1550_001"/>
  <mapToCAPEC rdf:resource="#T1563"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-61</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Fixation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker. Once the user successfully authenticates to the target software, the attacker uses the (now privileged) session identifier in their own transactions. This attack leverages the fact that the target software either relies on client-generated session identifiers or maintains the same session identifiers after privilege elevation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_611">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_543"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-611</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BitSquatting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary registers a domain name one bit different than a trusted domain. A BitSquatting attack leverages random errors in memory to direct Internet traffic to adversary-controlled destinations. BitSquatting requires no exploitation or complicated reverse engineering, and is operating system and architecture agnostic. Experimental observations show that BitSquatting popular websites could redirect non-trivial amounts of Internet traffic to a malicious entity.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_612">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-612</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">WiFi MAC Address Tracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack scenario, the attacker passively listens for WiFi messages and logs the associated Media Access Control (MAC) addresses. These addresses are intended to be unique to each wireless device (although they can be configured and changed by software). Once the attacker is able to associate a MAC address with a particular user or set of users (for example, when attending a public event), the attacker can then scan for that MAC address to track that user in the future.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_613">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-613</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">WiFi SSID Tracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack scenario, the attacker passively listens for WiFi management frame messages containing the Service Set Identifier (SSID) for the WiFi network. These messages are frequently transmitted by WiFi access points (e.g., the retransmission device) as well as by clients that are accessing the network (e.g., the handset/mobile device). Once the attacker is able to associate an SSID with a particular user or set of users (for example, when attending a public event), the attacker can then scan for this SSID to track that user in the future.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_614">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_186"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-614</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Rooting SIM Cards</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SIM cards are the de facto trust anchor of mobile devices worldwide. The cards protect the mobile identity of subscribers, associate devices with phone numbers, and increasingly store payment credentials, for example in NFC-enabled phones with mobile wallets. This attack leverages over-the-air (OTA) updates deployed via cryptographically-secured SMS messages to deliver executable code to the SIM. By cracking the DES key, an attacker can send properly signed binary SMS messages to a device, which are treated as Java applets and are executed on the SIM. These applets are allowed to send SMS, change voicemail numbers, and query the phone location, among many other predefined functions. These capabilities alone provide plenty of potential for abuse.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_615">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-615</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Evil Twin Wi-Fi Attack</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries install Wi-Fi equipment that acts as a legitimate Wi-Fi network access point. When a device connects to this access point, Wi-Fi data traffic is intercepted, captured, and analyzed. This also allows the adversary to use 'adversary-in-the-middle' (CAPEC-94) for all communications.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_616">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-616</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Establish Rogue Location</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary provides a malicious version of a resource at a location that is similar to the expected location of a legitimate resource. After establishing the rogue location, the adversary waits for a victim to visit the location and access the malicious resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_617">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-617</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cellular Rogue Base Station</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack scenario, the attacker imitates a cellular base station with their own 'rogue' base station equipment. Since cellular devices connect to whatever station has the strongest signal, the attacker can easily convince a targeted cellular device (e.g. the retransmission device) to talk to the rogue base station.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_618">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-618</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cellular Broadcast Message Request</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack scenario, the attacker uses knowledge of the targets mobile phone number (i.e., the number associated with the SIM used in the retransmission device) to cause the cellular network to send broadcast messages to alert the mobile device. Since the network knows which cell tower the targets mobile device is attached to, the broadcast messages are only sent in the Location Area Code (LAC) where the target is currently located. By triggering the cellular broadcast message and then listening for the presence or absence of that message, an attacker could verify that the target is in (or not in) a given location.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_619">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_292"/>
  <mapToCAPEC rdf:resource="#T1018"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-619</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signal Strength Tracking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">In this attack scenario, the attacker passively monitors the signal strength of the targets cellular RF signal or WiFi RF signal and uses the strength of the signal (with directional antennas and/or from multiple listening points at once) to identify the source location of the signal. Obtaining the signal of the target can be accomplished through multiple techniques such as through Cellular Broadcast Message Request or through the use of IMSI Tracking or WiFi MAC Address Tracking.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_62">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_21"/>
  <mapToCAPEC rdf:resource="#T1134"/>
  <mapToCAPEC rdf:resource="#T1528"/>
  <mapToCAPEC rdf:resource="#T1539"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-62</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross Site Request Forgery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level. This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply 'riding' the existing session cookie.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_620">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1600"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-620</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Drop Encryption Level</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker forces the encryption level to be lowered, thus enabling a successful attack against the encrypted data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_627">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_148"/>
  <mapToCAPEC rdf:resource="#T1491"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-627</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Counterfeit GPS Signals</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary attempts to deceive a GPS receiver by broadcasting counterfeit GPS signals, structured to resemble a set of normal GPS signals. These spoofed signals may be structured in such a way as to cause the receiver to estimate its position to be somewhere other than where it actually is, or to be located where it is but at a different time, as determined by the adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_630">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_543"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_691"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-630</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">TypoSquatting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary registers a domain name with at least one character different than a trusted domain. A TypoSquatting attack takes advantage of instances where a user mistypes a URL (e.g. www.goggle.com) or not does visually verify a URL before clicking on it (e.g. phishing attack). As a result, the user is directed to an adversary-controlled destination. TypoSquatting does not require an attack against the trusted domain or complicated reverse engineering.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_631">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_543"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-631</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">SoundSquatting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary registers a domain name that sounds the same as a trusted domain, but has a different spelling. A SoundSquatting attack takes advantage of a user's confusion of the two words to direct Internet traffic to adversary-controlled destinations. SoundSquatting does not require an attack against the trusted domain or complicated reverse engineering.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_632">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_543"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-632</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Homograph Attack via Homoglyphs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary registers a domain name containing a homoglyph, leading the registered domain to appear the same as a trusted domain. A homograph attack leverages the fact that different characters among various character sets look the same to the user. Homograph attacks must generally be combined with other attacks, such as phishing attacks, in order to direct Internet traffic to the adversary-controlled destinations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_633">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1134"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-633</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Token Impersonation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity, and not the response that blocks the adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_634">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1123"/>
  <mapToCAPEC rdf:resource="#T1125"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-634</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Probe Audio and Video Peripherals</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary exploits the target system's audio and video functionalities through malware or scheduled tasks. The goal is to capture sensitive information about the target for financial, personal, political, or other gains which is accomplished by collecting communication data between two parties via the use of peripheral devices (e.g. microphones and webcams) or applications with audio and video capabilities (e.g. Skype) on a system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_635">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_007"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-635</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Alternative Execution Due to Deceptive Filenames</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The extension of a file name is often used in various contexts to determine the application that is used to open and use it. If an attacker can cause an alternative application to be used, it may be able to execute malicious code, cause a denial of service or expose sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_636">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1001_002"/>
  <mapToCAPEC rdf:resource="#T1027_003"/>
  <mapToCAPEC rdf:resource="#T1027_004"/>
  <mapToCAPEC rdf:resource="#T1218_001"/>
  <mapToCAPEC rdf:resource="#T1221"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-636</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hiding Malicious Data or Code within Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Files on various operating systems can have a complex format which allows for the storage of other data, in addition to its contents. Often this is metadata about the file, such as a cached thumbnail for an image file. Unless utilities are invoked in a particular way, this data is not visible during the normal use of the file. It is possible for an attacker to store malicious data or code using these facilities, which would be difficult to discover.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_637">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1115"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-637</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect Data from Clipboard</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary exploits an application that allows for the copying of sensitive data or information by collecting information copied to the clipboard. Data copied to the clipboard can be accessed by other applications, such as malware built to exfiltrate or log clipboard contents on a periodic basis. In this way, the adversary aims to garner information to which they are unauthorized.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_638">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1542_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-638</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Altered Component Firmware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits systems features and/or improperly protected firmware of hardware components, such as Hard Disk Drives (HDD), with the goal of executing malicious code from within the component's Master Boot Record (MBR). Conducting this type of attack entails the adversary infecting the target with firmware altering malware, using known tools, and a payload. Once this malware is executed, the MBR is modified to include instructions to execute the payload at desired intervals and when the system is booted up. A successful attack will obtain persistence within the victim system even if the operating system is reinstalled and/or if the component is formatted or has its data erased.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_639">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1039"/>
  <mapToCAPEC rdf:resource="#T1552_001"/>
  <mapToCAPEC rdf:resource="#T1552_003"/>
  <mapToCAPEC rdf:resource="#T1552_004"/>
  <mapToCAPEC rdf:resource="#T1552_006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-639</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Probe System Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary obtains unauthorized information due to improperly protected files. If an application stores sensitive information in a file that is not protected by proper access control, then an adversary can access the file and search for sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_64">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-64</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Slashes and URL Encoding Combined to Bypass Validation Logic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_640">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1505_005"/>
  <mapToCAPEC rdf:resource="#T1574_006"/>
  <mapToCAPEC rdf:resource="#T1574_013"/>
  <mapToCAPEC rdf:resource="#T1620"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-640</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inclusion of Code in Existing Process</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The adversary takes advantage of a bug in an application failing to verify the integrity of the running process to execute arbitrary code in the address space of a separate live process. The adversary could use running code in the context of another process to try to access process's memory, system/network resources, etc. The goal of this attack is to evade detection defenses and escalate privileges by masking the malicious code under an existing legitimate process. Examples of approaches include but not limited to: dynamic-link library (DLL) injection, portable executable injection, thread execution hijacking, ptrace system calls, VDSO hijacking, function hooking, reflective code loading, and more.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_641">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1574_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-641</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DLL Side-Loading</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary places a malicious version of a Dynamic-Link Library (DLL) in the Windows Side-by-Side (WinSxS) directory to trick the operating system into loading this malicious DLL instead of a legitimate DLL. Programs specify the location of the DLLs to load via the use of WinSxS manifests or DLL redirection and if they aren't used then Windows searches in a predefined set of directories to locate the file. If the applications improperly specify a required DLL or WinSxS manifests aren't explicit about the characteristics of the DLL to be loaded, they can be vulnerable to side-loading.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_642">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1505_005"/>
  <mapToCAPEC rdf:resource="#T1554"/>
  <mapToCAPEC rdf:resource="#T1574_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-642</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replace Binaries</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries know that certain binaries will be regularly executed as part of normal processing. If these binaries are not protected with the appropriate file system permissions, it could be possible to replace them with malware. This malware might be executed at higher system permission levels. A variation of this pattern is to discover self-extracting installation packages that unpack binaries to directories with weak file permissions which it does not clean up appropriately. These binaries can be replaced by malware, which can then be executed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_643">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1135"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-643</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Identify Shared Files/Directories on System</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary discovers connections between systems by exploiting the target system's standard practice of revealing them in searchable, common areas. Through the identification of shared folders/drives between systems, the adversary may further their goals of locating and collecting sensitive information/files, or map potential routes for lateral movement within the network.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_644">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1550_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-644</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Captured Hashes (Pass The Hash)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary obtains (i.e. steals or purchases) legitimate Windows domain credential hash values to access systems within the domain that leverage the Lan Man (LM) and/or NT Lan Man (NTLM) authentication protocols.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_645">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1550_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-645</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Captured Tickets (Pass The Ticket)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses stolen Kerberos tickets to access systems/resources that leverage the Kerberos authentication protocol. The Kerberos authentication protocol centers around a ticketing system which is used to request/grant access to services and to then access the requested services. An adversary can obtain any one of these tickets (e.g. Service Ticket, Ticket Granting Ticket, Silver Ticket, or Golden Ticket) to authenticate to a system/resource without needing the account's credentials. Depending on the ticket obtained, the adversary may be able to access a particular resource or generate TGTs for any account within an Active Directory Domain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_646">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1120"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-646</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Peripheral Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversaries may attempt to obtain information about attached peripheral devices and components connected to a computer system. Examples may include discovering the presence of iOS devices by searching for backups, analyzing the Windows registry to determine what USB devices have been connected, or infecting a victim system with malware to report when a USB device has been connected. This may allow the adversary to gain additional insight about the system or network environment, which may be useful in constructing further attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_647">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1005"/>
  <mapToCAPEC rdf:resource="#T1012"/>
  <mapToCAPEC rdf:resource="#T1552_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-647</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect Data from Registries</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a weakness in authorization to gather system-specific data and sensitive information within a registry (e.g., Windows Registry, Mac plist). These contain information about the system configuration, software, operating system, and security. The adversary can leverage information gathered in order to carry out further attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_648">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1113"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-648</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collect Data from Screen Capture</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary gathers sensitive information by exploiting the system's screen capture functionality. Through screenshots, the adversary aims to see what happens on the screen over the course of an operation. The adversary can leverage information gathered in order to carry out further attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_649">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1036_006"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-649</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adding a Space to a File Extension</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary adds a space character to the end of a file extension and takes advantage of an application that does not properly neutralize trailing special elements in file names. This extra space, which can be difficult for a user to notice, affects which default application is used to operate on the file and can be leveraged by the adversary to control execution.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_65">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1040"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-65</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sniff Application Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary passively sniffs network communications and captures application code bound for an authorized client. Once obtained, they can use it as-is, or through reverse-engineering glean sensitive information or exploit the trust relationship between the client and server. Such code may belong to a dynamic update to the client, a patch being applied to a client component or any such interaction where the client is authorized to communicate with the server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_650">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1505_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-650</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Upload a Web Shell to a Web Server</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">By exploiting insufficient permissions, it is possible to upload a web shell to a web server in such a way that it can be executed remotely. This shell can have various capabilities, thereby acting as a 'gateway' to the underlying web server. The shell might execute at the higher permission level of the web server, providing the ability the execute malicious code at elevated levels.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_651">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1111"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-651</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Eavesdropping</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary intercepts a form of communication (e.g. text, audio, video) by way of software (e.g., microphone and audio recording application), hardware (e.g., recording equipment), or physical means (e.g., physical proximity). The goal of eavesdropping is typically to gain unauthorized access to sensitive information about the target for financial, personal, political, or other gains. Eavesdropping is different from a sniffing attack as it does not take place on a network-based communication channel (e.g., IP traffic). Instead, it entails listening in on the raw audio source of a conversation between two or more parties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_652">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1558"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-652</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Known Kerberos Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary obtains (i.e. steals or purchases) legitimate Kerberos credentials (e.g. Kerberos service account userID/password or Kerberos Tickets) with the goal of achieving authenticated access to additional systems, applications, or services within the domain.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_653">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_49"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_55"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_565"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_568"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_600"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_70"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_561"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_644"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_560"/>
  <mapToCAPEC rdf:resource="#T1078"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-653</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Known Operating System Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary guesses or obtains (i.e. steals or purchases) legitimate operating system credentials (e.g. userID/password) to achieve authentication and to perform authorized actions on the system, under the guise of an authenticated user or service. This applies to any Operating System.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_654">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1056"/>
  <mapToCAPEC rdf:resource="#T1548_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-654</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Credential Prompt Impersonation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary, through a previously installed malicious application, impersonates a credential prompt in an attempt to steal a user's credentials.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_655">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1027_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-655</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Avoid Security Tool Identification by Adding Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary adds data to a file to increase the file size beyond what security tools are capable of handling in an attempt to mask their actions.In addition to this, adding data to a file also changes the file's hash, frustrating security tools that look for known bad files by their hash.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_656">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_98"/>
  <mapToCAPEC rdf:resource="#T1566"/>
  <mapToCAPEC rdf:resource="#T1598"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-656</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Voice Phishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary targets users with a phishing attack for the purpose of soliciting account passwords or sensitive information from the user. Voice Phishing is a variation of the Phishing social engineering technique where the attack is initiated via a voice call, rather than email. The user is enticed to provide sensitive information by the adversary, who masquerades as a legitimate employee of the alleged organization. Voice Phishing attacks deviate from standard Phishing attacks, in that a user doesn't typically interact with a compromised website to provide sensitive information and instead provides this information verbally. Voice Phishing attacks can also be initiated by either the adversary in the form of a 'cold call' or by the victim if calling an illegitimate telephone number.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_657">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1072"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-657</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Automated Software Update via Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attackers uses identify or content spoofing to trick a client into performing an automated software update from a malicious source. A malicious automated software update that leverages spoofing can include content or identity spoofing as well as protocol spoofing. Content or identity spoofing attacks can trigger updates in software by embedding scripted mechanisms within a malicious web page, which masquerades as a legitimate update source. Scripting mechanisms communicate with software components and trigger updates from locations specified by the attackers' server. The result is the client believing there is a legitimate software update available but instead downloading a malicious update from the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_660">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1055"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-660</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Root/Jailbreak Detection Evasion via Hooking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary forces a non-restricted mobile application to load arbitrary code or code files, via Hooking, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Adversaries may further leverage these capabilities to escalate privileges or bypass access control on legitimate applications. Although many mobile applications check if a mobile device is Rooted/Jailbroken prior to authorized use of the application, adversaries may be able to 'hook' code in order to circumvent these checks. Successfully evading Root/Jailbreak detection allows an adversary to execute administrative commands, obtain confidential data, impersonate legitimate users of the application, and more.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_661">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_660"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_68"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-661</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Root/Jailbreak Detection Evasion via Debugging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary inserts a debugger into the program entry point of a mobile application to modify the application binary, with the goal of evading Root/Jailbreak detection. Mobile device users often Root/Jailbreak their devices in order to gain administrative control over the mobile operating system and/or to install third-party mobile applications that are not provided by authorized application stores (e.g. Google Play Store and Apple App Store). Rooting/Jailbreaking a mobile device also provides users with access to system debuggers and disassemblers, which can be leveraged to exploit applications by dumping the application's memory at runtime in order to remove or bypass signature verification methods. This further allows the adversary to evade Root/Jailbreak detection mechanisms, which can result in execution of administrative commands, obtaining confidential data, impersonating legitimate users of the application, and more.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_662">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1185"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-662</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary in the Browser (AiTB)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits security vulnerabilities or inherent functionalities of a web browser, in order to manipulate traffic between two endpoints.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_663">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_141"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-663</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Transient Instruction Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits a hardware design flaw in a CPU implementation of transient instruction execution to expose sensitive data and bypass/subvert access control over restricted resources. Typically, the adversary conducts a covert channel attack to target non-discarded microarchitectural changes caused by transient executions such as speculative execution, branch prediction, instruction pipelining, and/or out-of-order execution. The transient execution results in a series of instructions (gadgets) which construct covert channel and access/transfer the secret data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_664">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_122"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_309"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_115"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-664</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Side Request Forgery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits improper input validation by submitting maliciously crafted input to a target application running on a server, with the goal of forcing the server to make a request either to itself, to web services running in the servers internal network, or to external third parties. If successful, the adversarys request will be made with the servers privilege level, bypassing its authentication controls. This ultimately allows the adversary to access sensitive data, execute commands on the servers network, and make external requests with the stolen identity of the server. Server Side Request Forgery attacks differ from Cross Site Request Forgery attacks in that they target the server itself, whereas CSRF attacks exploit an insecure user authentication mechanism to perform unauthorized actions on the user's behalf.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_665">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1211"/>
  <mapToCAPEC rdf:resource="#T1542_002"/>
  <mapToCAPEC rdf:resource="#T1556"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-665</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Thunderbolt Protection Flaws</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary leverages a firmware weakness within the Thunderbolt protocol, on a computing device to manipulate Thunderbolt controller firmware in order to exploit vulnerabilities in the implementation of authorization and verification schemes within Thunderbolt protection mechanisms. Upon gaining physical access to a target device, the adversary conducts high-level firmware manipulation of the victim Thunderbolt controller SPI (Serial Peripheral Interface) flash, through the use of a SPI Programing device and an external Thunderbolt device, typically as the target device is booting up. If successful, this allows the adversary to modify memory, subvert authentication mechanisms, spoof identities and content, and extract data and memory from the target device. Currently 7 major vulnerabilities exist within Thunderbolt protocol with 9 attack vectors as noted in the Execution Flow.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_666">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1498_001"/>
  <mapToCAPEC rdf:resource="#T1499_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-666</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">BlueSmacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary uses Bluetooth flooding to transfer large packets to Bluetooth enabled devices over the L2CAP protocol with the goal of creating a DoS. This attack must be carried out within close proximity to a Bluetooth enabled device.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_667">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_616"/>
  <mapToCAPEC rdf:resource="#T1036_005"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-667</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Bluetooth Impersonation AttackS (BIAS)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary disguises the MAC address of their Bluetooth enabled device to one for which there exists an active and trusted connection and authenticates successfully. The adversary can then perform malicious actions on the target Bluetooth device depending on the targets capabilities.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_668">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1565_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-668</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Key Negotiation of Bluetooth Attack (KNOB)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary can exploit a flaw in Bluetooth key negotiation allowing them to decrypt information sent between two devices communicating via Bluetooth. The adversary uses an Adversary in the Middle setup to modify packets sent between the two devices during the authentication process, specifically the entropy bits. Knowledge of the number of entropy bits will allow the attacker to easily decrypt information passing over the line of communication.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_669">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-669</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Alteration of a Software Update</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary with access to an organizations software update infrastructure inserts malware into the content of an outgoing update to fielded systems where a wide range of malicious effects are possible. With the same level of access, the adversary can alter a software update to perform specific malicious acts including granting the adversary control over the softwares normal functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_670">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1127"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-670</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software Development Tools Maliciously Altered</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary with the ability to alter tools used in a development environment causes software to be developed with maliciously modified tools. Such tools include requirements management and database tools, software design tools, configuration management tools, compilers, system build tools, and software performance testing and load testing tools. The adversary then carries out malicious acts once the software is deployed including malware infection of other systems to support further compromises.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_671">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-671</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Requirements for ASIC Functionality Maliciously Altered</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary with access to functional requirements for an application specific integrated circuit (ASIC), a chip designed/customized for a singular particular use, maliciously alters requirements derived from originating capability needs. In the chip manufacturing process, requirements drive the chip design which, when the chip is fully manufactured, could result in an ASIC which may not meet the users needs, contain malicious functionality, or exhibit other anomalous behaviors thereby affecting the intended use of the ASIC.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_672">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-672</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malicious Code Implanted During Chip Programming</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">During the programming step of chip manufacture, an adversary with access and necessary technical skills maliciously alters a chips intended program logic to produce an effect intended by the adversary when the fully manufactured chip is deployed and in operational use. Intended effects can include the ability of the adversary to remotely control a host system to carry out malicious acts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_673">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-673</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Developer Signing Maliciously Altered Software</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Software produced by a reputable developer is clandestinely infected with malicious code and then digitally signed by the unsuspecting developer, where the software has been altered via a compromised software development or build process prior to being signed. The receiver or user of the software has no reason to believe that it is anything but legitimate and proceeds to deploy it to organizational systems.This attack differs fromCAPEC-206, since the developer is inadvertently signing malicious code they believe to be legitimate and which they are unware of any malicious modifications.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_674">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-674</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Design for FPGA Maliciously Altered</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary alters the functionality of a field-programmable gate array (FPGA) by causing an FPGA configuration memory chip reload in order to introduce a malicious function that could result in the FPGA performing or enabling malicious functions on a host system. Prior to the memory chip reload, the adversary alters the program for the FPGA by adding a function to impact system operation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_675">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1052"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-675</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Retrieve Data from Decommissioned Devices</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary obtains decommissioned, recycled, or discarded systems and devices that can include an organizations intellectual property, employee data, and other types of controlled information. Systems and devices that have reached the end of their lifecycles may be subject to recycle or disposal where they can be exposed to adversarial attempts to retrieve information from internal memory chips and storage devices that are part of the system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_677">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-677</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server Motherboard Compromise</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Malware is inserted in a server motherboard (e.g., in the flash memory) in order to alter server functionality from that intended. The development environment or hardware/software support activity environment is susceptible to an adversary inserting malicious software into hardware components during development or update.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_678">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-678</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Build Data Maliciously Altered</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">During the system build process, the system is deliberately misconfigured by the alteration of the build data. Access to system configuration data files and build processes is susceptible to deliberate misconfiguration of the system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_679">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_1"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_180"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-679</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Improperly Configured or Implemented Memory Protections</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary takes advantage of missing or incorrectly configured access control within memory to read/write data or inject malicious code into said memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_68">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1553_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-68</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Subvert Code-signing Facilities</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Many languages use code signing facilities to vouch for code's identity and to thus tie code to its assigned privileges within an environment. Subverting this mechanism can be instrumental in an attacker escalating privilege. Any means of subverting the way that a virtual machine enforces code signing classifies for this style of attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_680">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_1"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_180"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-680</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Improperly Controlled Registers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits missing or incorrectly configured access control within registers to read/write data that is not meant to be obtained or modified by a user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_681">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_1"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_180"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-681</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploitation of Improperly Controlled Hardware Security Identifiers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary takes advantage of missing or incorrectly configured security identifiers (e.g., tokens), which are used for access control within a System-on-Chip (SoC), to read/write data or execute a given action.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_69">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_233"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-69</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Target Programs with Elevated Privileges</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets programs running with elevated privileges. The adversary tries to leverage a vulnerability in the running program and get arbitrary code to execute with elevated privileges.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_690">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_691"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-690</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Metadata Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary alters the metadata of a resource (e.g., file, directory, repository, etc.) to present a malicious resource as legitimate/credible.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_691">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-691</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Spoof Open-Source Software Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary spoofs open-source software metadata in an attempt to masquerade malicious software as popular, maintained, and trusted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_692">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_691"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-692</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Spoof Version Control System Commit Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary spoofs metadata pertaining to a Version Control System (VCS) (e.g., Git) repository's commits to deceive users into believing that the maliciously provided software is frequently maintained and originates from a trusted source.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_693">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_691"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <mapToCAPEC rdf:resource="#T1195_002"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-693</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">StarJacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary spoofs software popularity metadata to deceive users into believing that a maliciously provided package is widely used and originates from a trusted source.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_694">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1614"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-694</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System Location Discovery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary collects information about the target system in an attempt to identify the system's geographical location.Information gathered could include keyboard layout, system language, and timezone. This information may benefit an adversary in confirming the desired target and/or tailoring further attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_695">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1195_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-695</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Repo Jacking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary takes advantage of the redirect property of directly linked Version Control System (VCS) repositories to trick users into incorporating malicious code into their applications.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_697">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1557_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-697</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DHCP Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary masquerades as a legitimate Dynamic Host Configuration Protocol (DHCP) server by spoofing DHCP traffic, with the goal of redirecting network traffic or denying service to DHCP.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_698">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1176"/>
  <mapToCAPEC rdf:resource="#T1505_004"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-698</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Install Malicious Extension</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary directly installs or tricks a user into installing a malicious extension into existing trusted software, with the goal of achieving a variety of negative technical impacts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_699">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_651"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-699</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Eavesdropping on a Monitor</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An Adversary can eavesdrop on the content of an external monitor through the air without modifying any cable or installing software, just capturing this signal emitted by the cable or video port, with this the attacker will be able to impact the confidentiality of the data without being detected by traditional security tools</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_70">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1078_001"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-70</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Try Common or Default Usernames and Passwords</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary may try certain common or default usernames and passwords to gain access into the system and perform unauthorized actions. An adversary may try an intelligent brute force using empty passwords, known vendor default credentials, as well as a dictionary of common usernames and passwords. Many vendor products come preconfigured with default (and thus well-known) usernames and passwords that should be deleted prior to usage in a production environment. It is a common mistake to forget to remove these default login credentials. Another problem is that users would pick very simple (common) passwords (e.g. 'secret' or 'password') that make it easier for the attacker to gain access to the system compared to using a brute force attack or even a dictionary attack using a full dictionary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_700">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1599"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-700</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Network Boundary Bridging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary which has gained elevated access to network boundary devices may use these devices to create a channel to bridge trusted and untrusted networks. Boundary devices do not necessarily have to be on the networks edge, but rather must serve to segment portions of the target network the adversary wishes to cross into.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_701">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_148"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_94"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-701</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Browser in the Middle (BiTM)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits the inherent functionalities of a web browser, in order to establish an unnoticed remote desktop connection in the victim's browser to the adversary's system. The adversary must deploy a web client with a remote desktop session that the victim can access.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_702">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_180"/>
  <mapToCAPEC rdf:resource="#T1574_010"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-702</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exploiting Incorrect Chaining or Granularity of Hardware Debug Components</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary exploits incorrect chaining or granularity of hardware debug components in order to gain unauthorized access to debug functionality on a chip. This happens when authorization is not checked on a per function basis and is assumed for a chain or group of debug functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_71">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-71</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Unicode Encoding to Bypass Validation Logic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_72">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-72</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">URL Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the encoding of the URL. An adversary can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_73">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_165"/>
  <mapToCAPEC rdf:resource="#T1036_003"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-73</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User-Controlled Filename</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attack of this type involves an adversary inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_75">
  <rdf:type rdf:resource="#CAPEC"/>
  <isPeerOfCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-75</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulating Writeable Configuration Files</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_77">
  <rdf:type rdf:resource="#CAPEC"/>
  <isChildOfCAPEC rdf:resource="#CAPEC_13"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-77</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Manipulating User-Controlled Variables</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An adversary can override variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the adversary can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_78">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-78</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Escaped Slashes in Alternate Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the use of the backslash in alternate encoding. An adversary can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the adversary tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_79">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-79</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Slashes in Alternate Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the encoding of the Slash characters. An adversary would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the adversary many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_80">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_267"/>
  <mapToCAPEC rdf:resource="#T1027"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-80</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using UTF-8 Encoding to Bypass Validation Logic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the 'shortest possible' encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_81">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_268"/>
  <mapToCAPEC rdf:resource="#T1070"/>
  <mapToCAPEC rdf:resource="#T1562_002"/>
  <mapToCAPEC rdf:resource="#T1562_003"/>
  <mapToCAPEC rdf:resource="#T1562_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-81</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Server Logs Tampering</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to 'Log Injection-Tampering-Forging' except that in this case, the attack is targeting the logs of the web server and not the application.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_85">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanFollowCAPEC rdf:resource="#CAPEC_63"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_580"/>
  <mapToCAPEC rdf:resource="#T1082"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-85</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">AJAX Footprinting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. A common first step for an attacker is to footprint the target environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on. The knowledge gained through Ajax fingerprinting can be used to support other attacks, such as XSS.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_87">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_115"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-87</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Forceful Browsing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An attacker employs forceful browsing (direct URL entry) to access portions of a website that are otherwise unreachable. Usually, a front controller or similar design pattern is employed to protect access to portions of a web application. Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_89">
  <rdf:type rdf:resource="#CAPEC"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_142"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_543"/>
  <isCanPrecedeCAPEC rdf:resource="#CAPEC_98"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-89</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Pharming</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A pharming attack occurs when the victim is fooled into entering sensitive data into supposedly trusted locations, such as an online bank site or a trading platform. An attacker can impersonate these supposedly trusted sites and have the victim be directed to their site rather than the originally intended one. Pharming does not require script injection or clicking on malicious links for the attack to succeed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_90">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_114"/>
  <mapToCAPEC rdf:resource="#T1548"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-90</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reflection Attack in Authentication Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary can abuse an authentication protocol susceptible to reflection attack in order to defeat it. Doing so allows the adversary illegitimate access to the target system, without possessing the requisite credentials. Reflection attacks are of great concern to authentication protocols that rely on a challenge-handshake or similar mechanism. An adversary can impersonate a legitimate user and can gain illegitimate access to the system by successfully mounting a reflection attack during authentication.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_93">
  <rdf:type rdf:resource="#CAPEC"/>
  <isParentOfCAPEC rdf:resource="#CAPEC_268"/>
  <mapToCAPEC rdf:resource="#T1070"/>
  <mapToCAPEC rdf:resource="#T1562_002"/>
  <mapToCAPEC rdf:resource="#T1562_003"/>
  <mapToCAPEC rdf:resource="#T1562_008"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-93</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Log Injection-Tampering-Forging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing them to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_94">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1557"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-94</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Adversary in the Middle (AiTM)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An adversary targets the communication between two components (typically client and server), in order to alter or obtain data from transactions. A general approach entails the adversary placing themself within the communication channel between the two components.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_98">
  <rdf:type rdf:resource="#CAPEC"/>
  <mapToCAPEC rdf:resource="#T1566"/>
  <mapToCAPEC rdf:resource="#T1598"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-98</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Phishing is a social engineering technique where an attacker masquerades as a legitimate entity with which the victim might do business in order to prompt the user to reveal some confidential information (very frequently authentication credentials) that can later be used by an attacker. Phishing is essentially a form of information gathering or 'fishing' for information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CAPEC_63">
  <rdf:type rdf:resource="#CAPEC"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CAPEC-63</hasID>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross-Site Scripting (XSS)</hasID>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1000">
  <rdf:type rdf:resource="#CWE"/>
  <isMemberOfCWE rdf:resource="#CWE_284"/>
  <isMemberOfCWE rdf:resource="#CWE_664"/>
  <isMemberOfCWE rdf:resource="#CWE_693"/>
  <isMemberOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1000</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Research Concepts</hasName>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1004">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1004</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Cookie Without 'HttpOnly' Flag</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1007">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_451"/>
  <hasCAPEC rdf:resource="#CAPEC_632"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1007</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Visual Distinction of Homoglyphs Presented to User</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform an unintended, insecure action.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1021">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_441"/>
  <isParentOfCWE rdf:resource="#CWE_451"/>
  <hasCAPEC rdf:resource="#CAPEC_654"/>
  <hasCAPEC rdf:resource="#CAPEC_504"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1021</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Rendered UI Layers or Frames</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1023">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1023</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Comparison with Missing Factors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1024">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1024</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparison of Incompatible Types</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1025">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1025</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Comparison Using Wrong Factors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1037">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_1264"/>
  <hasCAPEC rdf:resource="#CAPEC_663"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1037</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Processor Optimization Removal or Modification of Security-critical Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1039">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1039</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way that causes the mechanism to detect a different, incorrect concept.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1058">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1058</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1077">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1077</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Floating Point Comparison with Incorrect Operator</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code performs a comparison such as an equality test between two float (floating point) values, but it uses comparison operators that do not account for the possibility of loss of precision.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1091">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_772"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1091</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Object without Invoking Destructor Method</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_113">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-113</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_114">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_73"/>
  <hasCAPEC rdf:resource="#CAPEC_640"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-114</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Process Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_116">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_74"/>
  <isChildOfCWE rdf:resource="#CWE_117"/>
  <hasCAPEC rdf:resource="#CAPEC_104"/>
  <hasCAPEC rdf:resource="#CAPEC_73"/>
  <hasCAPEC rdf:resource="#CAPEC_81"/>
  <hasCAPEC rdf:resource="#CAPEC_85"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-116</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Encoding or Escaping of Output</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_117">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_268"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-117</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Output Neutralization for Logs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not neutralize or incorrectly neutralizes output that is written to logs.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1173">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1173</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Use of Validation Framework</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_118">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_10"/>
  <hasCAPEC rdf:resource="#CAPEC_14"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-118</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Access of Indexable Resource ('Range Error')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1188">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1188</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Initialization of a Resource with an Insecure Default</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_119">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_20"/>
  <hasCAPEC rdf:resource="#CAPEC_10"/>
  <hasCAPEC rdf:resource="#CAPEC_14"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-119</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Operations within the Bounds of a Memory Buffer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1190">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1190</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DMA Device Enabled Too Early in Boot Phase</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1191">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1191</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On-Chip Debug and Test Interface With Improper Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1193">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1193</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Power-On of Untrusted Execution Core Before Enabling Fabric Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1204">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasCAPEC rdf:resource="#CAPEC_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1204</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Generation of Weak Initialization Vector (IV)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1220">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1220</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Granularity of Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, which renders the control policy too broad because it allows accesses from unauthorized agents to the security-sensitive assets.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1222">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_1220"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1222</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Granularity of Address Regions Protected by Register Locks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the security requirement that the system configuration lock bit must be set during the boot process.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1224">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_680"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1224</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Write-Once Bit Fields</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The hardware design control register 'sticky bits' or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1229">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1229</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Creation of Emergent Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1230">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1230</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Sensitive Information Through Metadata</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1231">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_680"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1231</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Prevention of Lock Bit Modification</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1232">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1232</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Lock Behavior After Power State Transition</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system configuration to be changeable.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1233">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasCAPEC rdf:resource="#CAPEC_176"/>
  <hasCAPEC rdf:resource="#CAPEC_680"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1233</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security-Sensitive Hardware Controls with Missing Lock Bit Protection</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1234">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasCAPEC rdf:resource="#CAPEC_176"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1234</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Internal or Debug Modes Allow Override of Locks</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">System configuration protection may be bypassed during debug mode.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1235">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1235</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1236">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1236</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Formula Elements in a CSV File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1239">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_226"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasCAPEC rdf:resource="#CAPEC_204"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1239</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Zeroization of Hardware Register</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1240">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_327"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1240</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a Cryptographic Primitive with a Risky Implementation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1241">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1241</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Predictable Algorithm in Random Number Generator</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The device uses an algorithm that is predictable and generates a pseudo-random number.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1242">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_212"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1242</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inclusion of Undocumented Features or Chicken Bits</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1243">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1243</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Non-Volatile Information Not Protected During Debug</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access to security-sensitive information stored in fuses is not limited during debug.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1244">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_114"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1244</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Internal Asset Exposed to Unsafe Debug Access Level or State</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1246">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasCAPEC rdf:resource="#CAPEC_212"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1246</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Write Handling in Limited-write Non-Volatile Memories</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1248">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1248</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Semiconductor Defects in Hardware Logic with Security-Sensitive Implications</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The security-sensitive hardware module contains semiconductor defects.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1250">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1250</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Preservation of Consistency Between Independent Representations of Shared State</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each other.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1252">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1252</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1253">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1253</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Selection of Fuse Values</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1254">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_208"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1254</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Comparison Logic Granularity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1256">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1256</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Software Interfaces to Hardware Features</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe physical side channels.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1257">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_456"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1257</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Access Control Applied to Mirrored or Aliased Memory Regions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corresponding aliased memory region.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1258">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasCAPEC rdf:resource="#CAPEC_204"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1258</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Sensitive System Information Due to Uncleared Debug Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1259">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_681"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1259</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Security Token Assignment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1260">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_456"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1260</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Overlap Between Protected Memory Ranges</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allows address regions to overlap, which can result in the bypassing of intended memory protection.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1262">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_680"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1262</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Access Control for Register Interface</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1263">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1243"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <isPeerOfCWE rdf:resource="#CWE_1191"/>
  <hasCAPEC rdf:resource="#CAPEC_401"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1263</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Physical Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1264">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_233"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1264</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Logic with Insecure De-Synchronization between Control and Data Channels</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1266">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_404"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasCAPEC rdf:resource="#CAPEC_675"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1266</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Scrubbing of Sensitive Data from Decommissioned Device</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned. A scrubbing capability could be missing, insufficient, or incorrect.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1267">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_681"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1267</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Policy Uses Obsolete Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an obsolete encoding mechanism to implement access controls.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1268">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1268</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Policy Privileges are not Assigned Consistently Between Control and Data Agents</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1269">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_439"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1269</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Product Released in Non-Release Configuration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product released to market is released in pre-production or manufacturing configuration.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1270">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_633"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1270</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Generation of Incorrect Security Tokens</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1272">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_200"/>
  <isParentOfCWE rdf:resource="#CWE_226"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1272</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Information Uncleared Before Debug/Power State Transition</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1273">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1273</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Device Unlock Credential Sharing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1274">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_456"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1274</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Access Control for Volatile Memory Containing Boot Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1275">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasCAPEC rdf:resource="#CAPEC_62"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1275</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Cookie with Improper SameSite Attribute</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The SameSite attribute for sensitive cookies is not set, or an insecure value is used.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1276">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1276</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Child Block Incorrectly Connected to Parent System</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1278">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1278</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1280">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1280</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Access Control Check Implemented After Asset is Accessed</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product's hardware-based access control check occurs after the asset has been accessed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1283">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_680"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1283</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Mutable Attestation or Measurement Reporting Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1284">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1284</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Specified Quantity in Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1285">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1285</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Specified Index, Position, or Offset in Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required properties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1286">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1286</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Syntactic Correctness of Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1287">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1287</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Specified Type of Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1288">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1288</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Consistency within Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1289">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1289</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Unsafe Equivalence in Input</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1290">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1290</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Decoding of Security Identifiers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1291">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1291</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Public Key Re-Use for Signing both Debug and Production Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The same public key is used for signing both debug and production code.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1292">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1292</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Conversion of Security Identifiers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1293">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <isPeerOfCWE rdf:resource="#CWE_654"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1293</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Source Correlation of Multiple Independent Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1294">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_681"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1294</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Security Identifier Mechanism</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1295">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1295</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Debug Messages Revealing Unnecessary Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1296">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_702"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1296</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Chaining or Granularity of Debug Components</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's debug components contain incorrect chaining or granularity of debug components.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1297">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1297</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unprotected Confidential Information on Device is Accessible by OSAT Vendors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1299">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_288"/>
  <hasCAPEC rdf:resource="#CAPEC_457"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1299</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Protection Mechanism for Alternate Hardware Interface</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1301">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1330"/>
  <isParentOfCWE rdf:resource="#CWE_226"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1301</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient or Incomplete Data Removal within Hardware Component</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1304">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <isPeerOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_176"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1304</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs a power save/restore operation, but it does not ensure that the integrity of the configuration state is maintained and/or verified between the beginning and ending of the operation.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1311">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasCAPEC rdf:resource="#CAPEC_233"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1311</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Translation of Security Attributes by Fabric Bridge</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1312">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_456"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1312</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Protection for Mirrored Regions in On-Chip Fabric Firewall</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1313">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1313</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hardware Allows Activation of Test or Debug Logic at Runtime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data by an adversary.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1314">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_862"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1314</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Write Protection for Parametric Data Values</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1315">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1315</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Setting of Bus Controlling Capability in Fabric End-point</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1316">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_456"/>
  <hasCAPEC rdf:resource="#CAPEC_679"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1316</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1317">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_122"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1317</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Access Control in Fabric Bridge</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1318">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1318</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Support for Security Features in On-chip Fabrics or Buses</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1319">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1319</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Protection against Electromagnetic Fault Injection (EM-FI)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1320">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1320</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Protection for Outbound Error Messages and Alert Signals</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1321">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1321</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1322">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1322</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Blocking Code in Single-threaded, Non-blocking Context</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a non-blocking model that relies on a single threaded process for features such as scalability, but it contains code that can block when it is invoked.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1323">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1323</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Management of Sensitive Trace Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trace data collected from several sources on the System-on-Chip (SoC) is stored in unprotected locations or transported to untrusted agents.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1325">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_770"/>
  <hasCAPEC rdf:resource="#CAPEC_130"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1325</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improperly Controlled Sequential Memory Allocation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1326">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_68"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1326</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Immutable Root of Trust in Hardware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1327">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1327</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Binding to an Unrestricted IP Address</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1328">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <isPeerOfCWE rdf:resource="#CWE_757"/>
  <hasCAPEC rdf:resource="#CAPEC_176"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1328</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security Version Number Mutable to Older Versions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1329">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1329</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Component That is Not Updateable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1330">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_1301"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_545"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1330</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Remanent Data Readable after Memory Erase</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1334">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1334</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unauthorized Error Injection Can Degrade Hardware Redundancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1336">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_94"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1336</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Special Elements Used in a Template Engine</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed by the engine.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1338">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1338</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Protections Against Hardware Overheating</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A hardware device is missing or has inadequate protection features to prevent overheating.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1342">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_226"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1342</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information Exposure through Microarchitectural State after Transient Execution</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_138">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_162"/>
  <hasCAPEC rdf:resource="#CAPEC_105"/>
  <hasCAPEC rdf:resource="#CAPEC_34"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-138</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Special Elements</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1385">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_346"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1385</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Origin Validation in WebSockets</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1386">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1386</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Operation on Windows Junction / Mount Point</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1390">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_262"/>
  <isChildOfCWE rdf:resource="#CWE_263"/>
  <isChildOfCWE rdf:resource="#CWE_290"/>
  <isChildOfCWE rdf:resource="#CWE_294"/>
  <isChildOfCWE rdf:resource="#CWE_302"/>
  <isChildOfCWE rdf:resource="#CWE_307"/>
  <isChildOfCWE rdf:resource="#CWE_308"/>
  <isChildOfCWE rdf:resource="#CWE_309"/>
  <isChildOfCWE rdf:resource="#CWE_522"/>
  <isChildOfCWE rdf:resource="#CWE_593"/>
  <isChildOfCWE rdf:resource="#CWE_836"/>
  <isParentOfCWE rdf:resource="#CWE_287"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1390</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weak Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1391">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_521"/>
  <isChildOfCWE rdf:resource="#CWE_798"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1391</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Weak Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_1419">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1188"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-1419</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Initialization of Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_15">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_642"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_270"/>
  <hasCAPEC rdf:resource="#CAPEC_203"/>
  <hasCAPEC rdf:resource="#CAPEC_579"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-15</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Control of System or Configuration Setting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">One or more system settings or configuration elements can be externally controlled by a user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_162">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_46"/>
  <hasCAPEC rdf:resource="#CAPEC_635"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-162</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Trailing Special Elements</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_163">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_162"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-163</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Multiple Trailing Special Elements</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_172">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_173"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-172</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Encoding Error</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly encode or decode the data, resulting in unexpected values.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_173">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_172"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-173</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Alternate Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_174">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_172"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-174</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Double Decoding of the Same Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_175">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_172"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-175</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Mixed Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly handle when the same input uses several different (mixed) encodings.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_176">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_172"/>
  <hasCAPEC rdf:resource="#CAPEC_71"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-176</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Unicode Encoding</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly handle when an input contains Unicode encoding.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_177">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_172"/>
  <hasCAPEC rdf:resource="#CAPEC_120"/>
  <hasCAPEC rdf:resource="#CAPEC_64"/>
  <hasCAPEC rdf:resource="#CAPEC_72"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-177</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of URL Encoding (Hex Encoding)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly handle when all or part of an input has been URL encoded.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_178">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-178</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Case Sensitivity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_179">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_180"/>
  <isChildOfCWE rdf:resource="#CWE_181"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasCAPEC rdf:resource="#CAPEC_3"/>
  <hasCAPEC rdf:resource="#CAPEC_43"/>
  <hasCAPEC rdf:resource="#CAPEC_71"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-179</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Behavior Order: Early Validation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_180">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-180</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Behavior Order: Validate Before Canonicalize</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_181">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-181</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Behavior Order: Validate Before Filter</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_182">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-182</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Collapse of Data into Unsafe Value</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product filters data in a way that causes it to be reduced or 'collapsed' into an unsafe value that violates an expected security property.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_183">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_434"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasCAPEC rdf:resource="#CAPEC_120"/>
  <hasCAPEC rdf:resource="#CAPEC_3"/>
  <hasCAPEC rdf:resource="#CAPEC_43"/>
  <hasCAPEC rdf:resource="#CAPEC_71"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-183</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permissive List of Allowed Inputs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is unsafe, leading to resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_184">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_434"/>
  <isChildOfCWE rdf:resource="#CWE_692"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_120"/>
  <hasCAPEC rdf:resource="#CAPEC_3"/>
  <hasCAPEC rdf:resource="#CAPEC_43"/>
  <hasCAPEC rdf:resource="#CAPEC_71"/>
  <hasCAPEC rdf:resource="#CAPEC_73"/>
  <hasCAPEC rdf:resource="#CAPEC_85"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-184</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete List of Disallowed Inputs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete, leading to resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_185">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasCAPEC rdf:resource="#CAPEC_79"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-185</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Regular Expression</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product specifies a regular expression in a way that causes data to be improperly matched or compared.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_20">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_74"/>
  <isCanFollowCWE rdf:resource="#CWE_770"/>
  <isPeerOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasCAPEC rdf:resource="#CAPEC_473"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-20</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Input Validation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_200">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_1272"/>
  <isChildOfCWE rdf:resource="#CWE_1258"/>
  <isChildOfCWE rdf:resource="#CWE_1273"/>
  <isChildOfCWE rdf:resource="#CWE_359"/>
  <isChildOfCWE rdf:resource="#CWE_497"/>
  <hasCAPEC rdf:resource="#CAPEC_573"/>
  <hasCAPEC rdf:resource="#CAPEC_575"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_651"/>
  <hasCAPEC rdf:resource="#CAPEC_300"/>
  <hasCAPEC rdf:resource="#CAPEC_295"/>
  <hasCAPEC rdf:resource="#CAPEC_643"/>
  <hasCAPEC rdf:resource="#CAPEC_169"/>
  <hasCAPEC rdf:resource="#CAPEC_577"/>
  <hasCAPEC rdf:resource="#CAPEC_292"/>
  <hasCAPEC rdf:resource="#CAPEC_616"/>
  <hasCAPEC rdf:resource="#CAPEC_576"/>
  <hasCAPEC rdf:resource="#CAPEC_497"/>
  <hasCAPEC rdf:resource="#CAPEC_574"/>
  <hasCAPEC rdf:resource="#CAPEC_646"/>
  <hasCAPEC rdf:resource="#CAPEC_309"/>
  <hasCAPEC rdf:resource="#CAPEC_313"/>
  <hasCAPEC rdf:resource="#CAPEC_312"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-200</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Sensitive Information to an Unauthorized Actor</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_201">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_226"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_12"/>
  <hasCAPEC rdf:resource="#CAPEC_612"/>
  <hasCAPEC rdf:resource="#CAPEC_613"/>
  <hasCAPEC rdf:resource="#CAPEC_618"/>
  <hasCAPEC rdf:resource="#CAPEC_619"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-201</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insertion of Sensitive Information Into Sent Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_203">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_204"/>
  <isChildOfCWE rdf:resource="#CWE_205"/>
  <isChildOfCWE rdf:resource="#CWE_208"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-203</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Discrepancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_204">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_580"/>
  <hasCAPEC rdf:resource="#CAPEC_541"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-204</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Response Discrepancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_205">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_580"/>
  <hasCAPEC rdf:resource="#CAPEC_541"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-205</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Behavioral Discrepancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_206">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_205"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-206</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Internal Behavioral Discrepancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_207">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_205"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-207</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Behavioral Discrepancy With Equivalent Products</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_208">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_327"/>
  <hasCAPEC rdf:resource="#CAPEC_580"/>
  <hasCAPEC rdf:resource="#CAPEC_541"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-208</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Observable Timing Discrepancy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_209">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_54"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-209</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Generation of Error Message Containing Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product generates an error message that includes sensitive information about its environment, users, or associated data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_212">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1258"/>
  <isChildOfCWE rdf:resource="#CWE_226"/>
  <hasCAPEC rdf:resource="#CAPEC_168"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-212</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Removal of Sensitive Information Before Storage or Transfer</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_213">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-213</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Sensitive Information Due to Incompatible Policies</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the product's administrator, users, or others whose information is being processed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_214">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_497"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-214</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Invocation of Process Using Visible Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_215">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-215</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insertion of Sensitive Information Into Debugging Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_219">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-219</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Storage of File with Sensitive Data Under Web Root</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_22">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_172"/>
  <isCanPrecedeCWE rdf:resource="#CWE_20"/>
  <isCanPrecedeCWE rdf:resource="#CWE_73"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasCAPEC rdf:resource="#CAPEC_64"/>
  <hasCAPEC rdf:resource="#CAPEC_78"/>
  <hasCAPEC rdf:resource="#CAPEC_79"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-22</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_220">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-220</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Storage of File With Sensitive Data Under FTP Root</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_221">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_451"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_81"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-221</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information Loss or Omission</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_226">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1239"/>
  <isChildOfCWE rdf:resource="#CWE_1272"/>
  <isChildOfCWE rdf:resource="#CWE_1301"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-226</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Information in Resource Not Removed Before Reuse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or 'zeroize' the information contained in the resource before the product performs a critical state transition or makes the resource available for reuse by other entities.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_239">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-239</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Failure to Handle Incomplete Element</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly handle when a particular element is not completely specified.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_244">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_226"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-244</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Clearing of Heap Memory Before Release ('Heap Inspection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_250">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasCAPEC rdf:resource="#CAPEC_104"/>
  <hasCAPEC rdf:resource="#CAPEC_69"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-250</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Execution with Unnecessary Privileges</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_256">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-256</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Plaintext Storage of a Password</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Storing a password in plaintext may result in a system compromise.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_257">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <isPeerOfCWE rdf:resource="#CWE_798"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-257</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Storing Passwords in a Recoverable Format</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_258">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_521"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-258</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Empty Password in Configuration File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using an empty string as a password is insecure.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_259">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_798"/>
  <isPeerOfCWE rdf:resource="#CWE_257"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-259</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Hard-coded Password</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_260">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-260</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password in Configuration File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores a password in a configuration file that might be accessible to actors who do not know the password.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_261">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-261</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weak Encoding for Password</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Obscuring a password with a trivial encoding does not protect the password.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_262">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_309"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-262</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Not Using Password Aging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not have a mechanism in place for managing password aging.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_263">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-263</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Password Aging with Long Expiration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product supports password aging, but the expiration period is too long.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_266">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-266</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Privilege Assignment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_267">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasCAPEC rdf:resource="#CAPEC_634"/>
  <hasCAPEC rdf:resource="#CAPEC_643"/>
  <hasCAPEC rdf:resource="#CAPEC_637"/>
  <hasCAPEC rdf:resource="#CAPEC_648"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-267</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Defined With Unsafe Actions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_268">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-268</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Chaining</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_269">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_267"/>
  <isChildOfCWE rdf:resource="#CWE_270"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_122"/>
  <hasCAPEC rdf:resource="#CAPEC_233"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-269</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Privilege Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_270">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasCAPEC rdf:resource="#CAPEC_30"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-270</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Context Switching Error</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_271">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_272"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-271</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Privilege Dropping / Lowering Errors</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_272">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-272</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Least Privilege Violation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_274">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-274</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of Insufficient Privileges</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_276">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-276</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Default Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">During installation, installed file permissions are set to allow anyone to modify those files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_277">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-277</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Inherited Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product defines a set of insecure permissions that are inherited by objects that are created by the program.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_278">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-278</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Preserved Inherited Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_279">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasCAPEC rdf:resource="#CAPEC_81"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-279</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Execution-Assigned Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_281">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-281</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Preservation of Permissions</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_282">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-282</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Ownership Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_283">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_282"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-283</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unverified Ownership</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly verify that a critical resource is owned by the proper entity.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_284">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1191"/>
  <isChildOfCWE rdf:resource="#CWE_1220"/>
  <isChildOfCWE rdf:resource="#CWE_1268"/>
  <isChildOfCWE rdf:resource="#CWE_1270"/>
  <isChildOfCWE rdf:resource="#CWE_1280"/>
  <isChildOfCWE rdf:resource="#CWE_1311"/>
  <isChildOfCWE rdf:resource="#CWE_1315"/>
  <isChildOfCWE rdf:resource="#CWE_1317"/>
  <isChildOfCWE rdf:resource="#CWE_1320"/>
  <isChildOfCWE rdf:resource="#CWE_1323"/>
  <isChildOfCWE rdf:resource="#CWE_269"/>
  <isChildOfCWE rdf:resource="#CWE_282"/>
  <isChildOfCWE rdf:resource="#CWE_285"/>
  <isChildOfCWE rdf:resource="#CWE_287"/>
  <isChildOfCWE rdf:resource="#CWE_346"/>
  <isChildOfCWE rdf:resource="#CWE_923"/>
  <hasCAPEC rdf:resource="#CAPEC_578"/>
  <hasCAPEC rdf:resource="#CAPEC_479"/>
  <hasCAPEC rdf:resource="#CAPEC_550"/>
  <hasCAPEC rdf:resource="#CAPEC_19"/>
  <hasCAPEC rdf:resource="#CAPEC_556"/>
  <hasCAPEC rdf:resource="#CAPEC_551"/>
  <hasCAPEC rdf:resource="#CAPEC_478"/>
  <hasCAPEC rdf:resource="#CAPEC_564"/>
  <hasCAPEC rdf:resource="#CAPEC_558"/>
  <hasCAPEC rdf:resource="#CAPEC_562"/>
  <hasCAPEC rdf:resource="#CAPEC_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-284</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Access Control</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_285">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1297"/>
  <isChildOfCWE rdf:resource="#CWE_552"/>
  <isChildOfCWE rdf:resource="#CWE_732"/>
  <isChildOfCWE rdf:resource="#CWE_862"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_647"/>
  <hasCAPEC rdf:resource="#CAPEC_668"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-285</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Authorization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_286">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-286</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect User Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly manage a user within its environment.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_287">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_645"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_114"/>
  <hasCAPEC rdf:resource="#CAPEC_115"/>
  <hasCAPEC rdf:resource="#CAPEC_57"/>
  <hasCAPEC rdf:resource="#CAPEC_593"/>
  <hasCAPEC rdf:resource="#CAPEC_94"/>
  <hasCAPEC rdf:resource="#CAPEC_650"/>
  <hasCAPEC rdf:resource="#CAPEC_633"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-287</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_288">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1299"/>
  <isChildOfCWE rdf:resource="#CWE_425"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-288</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass Using an Alternate Path or Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product requires authentication, but the product has an alternate path or channel that does not require authentication.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_289">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_173"/>
  <isCanPrecedeCWE rdf:resource="#CWE_46"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-289</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass by Alternate Name</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_290">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_350"/>
  <isPeerOfCWE rdf:resource="#CWE_602"/>
  <hasCAPEC rdf:resource="#CAPEC_94"/>
  <hasCAPEC rdf:resource="#CAPEC_473"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-290</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass by Spoofing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_291">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_290"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasCAPEC rdf:resource="#CAPEC_4"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-291</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on IP Address for Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an IP address for authentication.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_293">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_290"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-293</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Using Referer Field for Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_294">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_645"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_644"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_94"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-294</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass by Capture-replay</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_295">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_287"/>
  <hasCAPEC rdf:resource="#CAPEC_459"/>
  <hasCAPEC rdf:resource="#CAPEC_475"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-295</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Certificate Validation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not validate, or incorrectly validates, a certificate.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_297">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-297</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Certificate with Host Mismatch</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_299">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-299</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Check for Certificate Revocation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_300">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <isPeerOfCWE rdf:resource="#CWE_602"/>
  <hasCAPEC rdf:resource="#CAPEC_662"/>
  <hasCAPEC rdf:resource="#CAPEC_94"/>
  <hasCAPEC rdf:resource="#CAPEC_57"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-300</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Channel Accessible by Non-Endpoint</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_301">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_327"/>
  <hasCAPEC rdf:resource="#CAPEC_90"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-301</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reflection Attack in an Authentication Protocol</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_302">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-302</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass by Assumed-Immutable Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_306">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_288"/>
  <isParentOfCWE rdf:resource="#CWE_287"/>
  <hasCAPEC rdf:resource="#CAPEC_12"/>
  <hasCAPEC rdf:resource="#CAPEC_216"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-306</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Authentication for Critical Function</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_307">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-307</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Excessive Authentication Attempts</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_308">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_654"/>
  <isPeerOfCWE rdf:resource="#CWE_309"/>
  <hasCAPEC rdf:resource="#CAPEC_645"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_644"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-308</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Single-factor Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_309">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_654"/>
  <isPeerOfCWE rdf:resource="#CWE_262"/>
  <isPeerOfCWE rdf:resource="#CWE_308"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-309</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Password System for Primary Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_311">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_312"/>
  <isChildOfCWE rdf:resource="#CWE_319"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isPeerOfCWE rdf:resource="#CWE_327"/>
  <hasCAPEC rdf:resource="#CAPEC_65"/>
  <hasCAPEC rdf:resource="#CAPEC_609"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_383"/>
  <hasCAPEC rdf:resource="#CAPEC_158"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasCAPEC rdf:resource="#CAPEC_204"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-311</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Encryption of Sensitive Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not encrypt sensitive or critical information before storage or transmission.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_312">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_314"/>
  <isChildOfCWE rdf:resource="#CWE_315"/>
  <isChildOfCWE rdf:resource="#CWE_318"/>
  <isParentOfCWE rdf:resource="#CWE_311"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-312</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_313">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-313</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage in a File or on Disk</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext in a file, or on disk.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_314">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-314</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage in the Registry</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext in the registry.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_315">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-315</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information in a Cookie</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext in a cookie.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_316">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-316</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information in Memory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext in memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_317">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-317</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information in GUI</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext within the GUI.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_318">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasCAPEC rdf:resource="#CAPEC_65"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-318</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information in Executable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information in cleartext in an executable.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_319">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_311"/>
  <hasCAPEC rdf:resource="#CAPEC_65"/>
  <hasCAPEC rdf:resource="#CAPEC_383"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-319</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Transmission of Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_321">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_798"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-321</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Hard-coded Cryptographic Key</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_322">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_923"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-322</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Key Exchange without Entity Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs a key exchange with an actor without verifying the identity of that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_324">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_262"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-324</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a Key Past its Expiration Date</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_325">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_68"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-325</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Cryptographic Step</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_326">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_328"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_112"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-326</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inadequate Encryption Strength</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_327">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_208"/>
  <isChildOfCWE rdf:resource="#CWE_328"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isPeerOfCWE rdf:resource="#CWE_311"/>
  <hasCAPEC rdf:resource="#CAPEC_473"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-327</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a Broken or Risky Cryptographic Algorithm</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a broken or risky cryptographic algorithm or protocol.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_328">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_916"/>
  <isParentOfCWE rdf:resource="#CWE_326"/>
  <isParentOfCWE rdf:resource="#CWE_327"/>
  <hasCAPEC rdf:resource="#CAPEC_68"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-328</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Weak Hash</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the same hash (2nd preimage attack), or find multiple inputs that evaluate to the same hash (birthday attack).</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_330">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_485"/>
  <hasCAPEC rdf:resource="#CAPEC_112"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-330</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Insufficiently Random Values</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_331">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasCAPEC rdf:resource="#CAPEC_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-331</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Entropy</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_334">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_6"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-334</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Small Space of Random Values</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_335">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-335</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_338">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-338</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_340">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-340</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Generation of Predictable Numbers or Identifiers</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a scheme that generates numbers or identifiers that are more predictable than required.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_344">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_798"/>
  <isParentOfCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-344</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Invariant Value in Dynamically Changing Context</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_345">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_346"/>
  <isChildOfCWE rdf:resource="#CWE_348"/>
  <isChildOfCWE rdf:resource="#CWE_349"/>
  <isChildOfCWE rdf:resource="#CWE_353"/>
  <isChildOfCWE rdf:resource="#CWE_494"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isPeerOfCWE rdf:resource="#CWE_20"/>
  <hasCAPEC rdf:resource="#CAPEC_141"/>
  <hasCAPEC rdf:resource="#CAPEC_142"/>
  <hasCAPEC rdf:resource="#CAPEC_665"/>
  <hasCAPEC rdf:resource="#CAPEC_148"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-345</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Verification of Data Authenticity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_346">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <isPeerOfCWE rdf:resource="#CWE_451"/>
  <hasCAPEC rdf:resource="#CAPEC_141"/>
  <hasCAPEC rdf:resource="#CAPEC_142"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-346</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Origin Validation Error</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly verify that the source of data or communication is valid.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_347">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_475"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-347</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Verification of Cryptographic Signature</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not verify, or incorrectly verifies, the cryptographic signature for data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_348">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_141"/>
  <hasCAPEC rdf:resource="#CAPEC_142"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-348</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Less Trusted Source</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_349">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_141"/>
  <hasCAPEC rdf:resource="#CAPEC_142"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-349</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Acceptance of Extraneous Untrusted Data With Trusted Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_350">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_923"/>
  <isParentOfCWE rdf:resource="#CWE_290"/>
  <hasCAPEC rdf:resource="#CAPEC_142"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-350</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Reverse DNS Resolution for a Security-Critical Action</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_351">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <isPeerOfCWE rdf:resource="#CWE_434"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-351</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Type Distinction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_352">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_62"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-352</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cross-Site Request Forgery (CSRF)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_353">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-353</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Support for Integrity Check</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_354">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <isPeerOfCWE rdf:resource="#CWE_353"/>
  <hasCAPEC rdf:resource="#CAPEC_145"/>
  <hasCAPEC rdf:resource="#CAPEC_75"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-354</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Integrity Check Value</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not validate or incorrectly validates the integrity check values or 'checksums' of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_357">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-357</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient UI Warning of Dangerous Operations</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_358">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isPeerOfCWE rdf:resource="#CWE_325"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-358</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improperly Implemented Security Check for Standard</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_359">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_464"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-359</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Private Personal Information to an Unauthorized Actor</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the information is collected.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_360">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-360</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trust of System Event Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Security based on event locations are insecure and can be spoofed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_362">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-362</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_363">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-363</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Race Condition Enabling Link Following</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_372">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-372</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Internal State Distinction</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_384">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_196"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-384</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Session Fixation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_385">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_208"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-385</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Covert Timing Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_386">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-386</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Symbolic Name not Mapping to Correct Object</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_400">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_770"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_227"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-400</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Uncontrolled Resource Consumption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_401">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_772"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-401</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Release of Memory after Effective Lifetime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_404">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1266"/>
  <isChildOfCWE rdf:resource="#CWE_772"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_130"/>
  <hasCAPEC rdf:resource="#CAPEC_125"/>
  <hasCAPEC rdf:resource="#CAPEC_666"/>
  <hasCAPEC rdf:resource="#CAPEC_131"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-404</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Resource Shutdown or Release</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not release or incorrectly releases a resource before it is made available for re-use.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_405">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <isPeerOfCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-405</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Asymmetric Resource Consumption (Amplification)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influence is 'asymmetric.'</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_41">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_172"/>
  <isCanPrecedeCWE rdf:resource="#CWE_20"/>
  <isCanPrecedeCWE rdf:resource="#CWE_73"/>
  <isChildOfCWE rdf:resource="#CWE_46"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasCAPEC rdf:resource="#CAPEC_3"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-41</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Resolution of Path Equivalence</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same object.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_410">
  <rdf:type rdf:resource="#CWE"/>
  <isCanAlsoBeCWE rdf:resource="#CWE_412"/>
  <isCanFollowCWE rdf:resource="#CWE_400"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-410</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Resource Pool</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_412">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-412</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unrestricted Externally Accessible Lock</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_413">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-413</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Resource Locking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_414">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-414</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Lock Check</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A product does not check to see if a lock is present before performing sensitive operations on a resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_419">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasCAPEC rdf:resource="#CAPEC_383"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-419</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unprotected Primary Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_42">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_162"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-42</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Path Equivalence: 'filename.' (Trailing Dot)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_420">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1299"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <isPeerOfCWE rdf:resource="#CWE_288"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-420</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unprotected Alternate Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product protects a primary channel, but it does not use the same level of protection for an alternate channel.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_424">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_425"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-424</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Protection of Alternate Path</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_425">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_288"/>
  <isParentOfCWE rdf:resource="#CWE_424"/>
  <isParentOfCWE rdf:resource="#CWE_862"/>
  <hasCAPEC rdf:resource="#CAPEC_668"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-425</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Direct Request ('Forced Browsing')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_426">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_642"/>
  <isPeerOfCWE rdf:resource="#CWE_427"/>
  <hasCAPEC rdf:resource="#CAPEC_38"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-426</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Untrusted Search Path</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_427">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_426"/>
  <hasCAPEC rdf:resource="#CAPEC_38"/>
  <hasCAPEC rdf:resource="#CAPEC_471"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-427</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Uncontrolled Search Path Element</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_428">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_426"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-428</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unquoted Search Path or Element</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_430">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_434"/>
  <hasCAPEC rdf:resource="#CAPEC_11"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-430</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deployment of Wrong Handler</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The wrong 'handler' is assigned to process an object.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_433">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_430"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-433</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unparsed Raw Web Content Delivery</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_434">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_73"/>
  <isPeerOfCWE rdf:resource="#CWE_430"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-434</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unrestricted Upload of File with Dangerous Type</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_436">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_113"/>
  <isPeerOfCWE rdf:resource="#CWE_434"/>
  <hasCAPEC rdf:resource="#CAPEC_105"/>
  <hasCAPEC rdf:resource="#CAPEC_273"/>
  <hasCAPEC rdf:resource="#CAPEC_34"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-436</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Interpretation Conflict</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_441">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1021"/>
  <hasCAPEC rdf:resource="#CAPEC_465"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-441</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unintended Proxy or Intermediary ('Confused Deputy')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control sphere. This causes the product to appear to be the source of the request, leading it to act as a proxy or other intermediary between the upstream component and the external actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_451">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1021"/>
  <isPeerOfCWE rdf:resource="#CWE_346"/>
  <hasCAPEC rdf:resource="#CAPEC_163"/>
  <hasCAPEC rdf:resource="#CAPEC_98"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-451</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">User Interface (UI) Misrepresentation of Critical Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_453">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_1188"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-453</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Default Variable Initialization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, by default, initializes an internal variable with an insecure or less secure value than is possible.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_459">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_226"/>
  <isParentOfCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-459</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Cleanup</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly 'clean up' and remove temporary or supporting resources after they have been used.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_46">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_162"/>
  <hasCAPEC rdf:resource="#CAPEC_649"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-46</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Path Equivalence: 'filename ' (Trailing Space)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_471">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_1321"/>
  <isCanPrecedeCWE rdf:resource="#CWE_425"/>
  <isCanPrecedeCWE rdf:resource="#CWE_602"/>
  <isChildOfCWE rdf:resource="#CWE_472"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_384"/>
  <hasCAPEC rdf:resource="#CAPEC_386"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-471</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Modification of Assumed-Immutable Data (MAID)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly protect an assumed-immutable element from being modified by an attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_472">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_642"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-472</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Control of Assumed-Immutable Web Parameter</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_476">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_1325"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-476</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">NULL Pointer Dereference</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_481">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-481</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Assigning instead of Comparing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code uses an operator for assignment when the intention was to perform a comparison.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_487">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-487</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Package-level Scope</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_488">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_567"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-488</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Data Element to Wrong Session</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_49">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_162"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-49</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Path Equivalence: 'filename/' (Trailing Slash)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_494">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasCAPEC rdf:resource="#CAPEC_662"/>
  <hasCAPEC rdf:resource="#CAPEC_186"/>
  <hasCAPEC rdf:resource="#CAPEC_695"/>
  <hasCAPEC rdf:resource="#CAPEC_538"/>
  <hasCAPEC rdf:resource="#CAPEC_691"/>
  <hasCAPEC rdf:resource="#CAPEC_187"/>
  <hasCAPEC rdf:resource="#CAPEC_657"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-494</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Download of Code Without Integrity Check</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_495">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-495</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Private Data Structure Returned From A Public Method</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_496">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-496</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Public Data Assigned to Private Array-Typed Field</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Assigning public data to a private array is equivalent to giving public access to the array.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_497">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasCAPEC rdf:resource="#CAPEC_694"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-497</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Sensitive System Information to an Unauthorized Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_498">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-498</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cloneable Class Containing Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_499">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-499</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Serializable Class Containing Sensitive Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_5">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_319"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-5</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">J2EE Misconfiguration: Data Transmission Without Encryption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_501">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-501</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trust Boundary Violation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product mixes trusted and untrusted data in the same data structure or structured message.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_506">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_507"/>
  <hasCAPEC rdf:resource="#CAPEC_448"/>
  <hasCAPEC rdf:resource="#CAPEC_636"/>
  <hasCAPEC rdf:resource="#CAPEC_442"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-506</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Embedded Malicious Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains code that appears to be malicious in nature.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_507">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_506"/>
  <hasCAPEC rdf:resource="#CAPEC_698"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-507</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trojan Horse</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_508">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_507"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-508</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Non-Replicating Malicious Code</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_509">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_507"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-509</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replicating Malicious Code (Virus or Worm)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_510">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_506"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-510</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Trapdoor</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_511">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_506"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-511</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logic/Time Bomb</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_512">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_506"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-512</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Spyware</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input into the product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_514">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_205"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-514</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Covert Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_521">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_112"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-521</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Weak Password Requirements</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_522">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_257"/>
  <isChildOfCWE rdf:resource="#CWE_261"/>
  <hasCAPEC rdf:resource="#CAPEC_474"/>
  <hasCAPEC rdf:resource="#CAPEC_645"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_561"/>
  <hasCAPEC rdf:resource="#CAPEC_644"/>
  <hasCAPEC rdf:resource="#CAPEC_509"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasCAPEC rdf:resource="#CAPEC_555"/>
  <hasCAPEC rdf:resource="#CAPEC_551"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-522</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficiently Protected Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_523">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <hasCAPEC rdf:resource="#CAPEC_102"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-523</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unprotected Transport of Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_524">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_525"/>
  <hasCAPEC rdf:resource="#CAPEC_204"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-524</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Cache Containing Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_525">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_524"/>
  <hasCAPEC rdf:resource="#CAPEC_37"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-525</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Web Browser Cache Containing Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_526">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_312"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-526</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Cleartext Storage of Sensitive Information in an Environment Variable</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an environment variable to store unencrypted sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_527">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-527</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Version-Control Repository to an Unauthorized Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_528">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-528</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Core Dump File to an Unauthorized Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_529">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-529</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Access Control List Files to an Unauthorized Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_530">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-530</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Backup File to an Unauthorized Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A backup file is stored in a directory or archive that is made accessible to unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_538">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_200"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-538</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insertion of Sensitive Information into Externally-Accessible File or Directory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_539">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-539</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Persistent Cookies Containing Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web application uses persistent cookies, but the cookies contain sensitive information.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_54">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_162"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-54</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Path Equivalence: 'filedir' (Trailing Backslash)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product accepts path input in the form of trailing backslash ('filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_548">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_497"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-548</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Information Through Directory Listing</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_549">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_522"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-549</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Password Field Masking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_552">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_539"/>
  <isChildOfCWE rdf:resource="#CWE_553"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasCAPEC rdf:resource="#CAPEC_150"/>
  <hasCAPEC rdf:resource="#CAPEC_639"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-552</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Files or Directories Accessible to External Parties</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product makes files or directories accessible to unauthorized actors, even though they should not be.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_553">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_552"/>
  <hasCAPEC rdf:resource="#CAPEC_650"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-553</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Command Shell in Externally Accessible Directory</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_565">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_602"/>
  <isParentOfCWE rdf:resource="#CWE_642"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-565</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Cookies without Validation and Integrity Checking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_567">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_488"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-567</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsynchronized Access to Shared Data in a Multithreaded Context</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_573">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_325"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-573</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Following of Specification by Caller</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_580">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-580</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">clone() Method Without super.clone()</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains a clone() method that does not call super.clone() to obtain the new object.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_581">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_697"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-581</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Object Model Violation: Just One of Equals and Hashcode Defined</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not maintain equal hashcodes for equal objects.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_59">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_73"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasCAPEC rdf:resource="#CAPEC_132"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-59</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Link Resolution Before File Access ('Link Following')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_593">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_94"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-593</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product modifies the SSL context after connection creation has begun.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_6">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-6</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">J2EE Misconfiguration: Insufficient Session-ID Length</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The J2EE application is configured to use an insufficient session ID length.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_602">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_565"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <isPeerOfCWE rdf:resource="#CWE_290"/>
  <isPeerOfCWE rdf:resource="#CWE_300"/>
  <isPeerOfCWE rdf:resource="#CWE_836"/>
  <hasCAPEC rdf:resource="#CAPEC_383"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-602</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Client-Side Enforcement of Server-Side Security</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_603">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_602"/>
  <isPeerOfCWE rdf:resource="#CWE_300"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-603</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Client-Side Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_609">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-609</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Double-Checked Locking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_61">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-61</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UNIX Symbolic Link (Symlink) Following</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_610">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_15"/>
  <isChildOfCWE rdf:resource="#CWE_384"/>
  <isChildOfCWE rdf:resource="#CWE_441"/>
  <isChildOfCWE rdf:resource="#CWE_73"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_219"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-610</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Externally Controlled Reference to a Resource in Another Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_611">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_441"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-611</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of XML External Entity Reference</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_613">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_287"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-613</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Session Expiration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">According to WASC, 'Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.'</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_614">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_319"/>
  <hasCAPEC rdf:resource="#CAPEC_102"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-614</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_616">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-616</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Identification of Uploaded File Variables (PHP)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_619">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-619</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Dangling Database Cursor ('Cursor Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor 'dangling.'</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_62">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-62</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">UNIX Hard Link</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_622">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_20"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-622</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Validation of Function Hook Arguments</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_623">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-623</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unsafe ActiveX Control Marked Safe For Scripting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_638">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_424"/>
  <isParentOfCWE rdf:resource="#CWE_862"/>
  <hasCAPEC rdf:resource="#CAPEC_104"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-638</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Not Using Complete Mediation</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_64">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-64</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Shortcut Following (.LNK)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_642">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_15"/>
  <isChildOfCWE rdf:resource="#CWE_426"/>
  <isChildOfCWE rdf:resource="#CWE_472"/>
  <isChildOfCWE rdf:resource="#CWE_565"/>
  <isChildOfCWE rdf:resource="#CWE_73"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasCAPEC rdf:resource="#CAPEC_31"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-642</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Control of Critical State Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_645">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_287"/>
  <hasCAPEC rdf:resource="#CAPEC_2"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-645</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Overly Restrictive Account Lockout Mechanism</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_646">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-646</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on File Name or Extension of Externally-Supplied File</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_648">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_269"/>
  <hasCAPEC rdf:resource="#CAPEC_107"/>
  <hasCAPEC rdf:resource="#CAPEC_234"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-648</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Use of Privileged APIs</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_649">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-649</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_65">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_59"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-65</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Windows Hard Link</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized files.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_653">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-653</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Isolation or Compartmentalization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_654">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_308"/>
  <isChildOfCWE rdf:resource="#CWE_309"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasCAPEC rdf:resource="#CAPEC_565"/>
  <hasCAPEC rdf:resource="#CAPEC_600"/>
  <hasCAPEC rdf:resource="#CAPEC_49"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasCAPEC rdf:resource="#CAPEC_560"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-654</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on a Single Factor in a Security Decision</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_655">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-655</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Psychological Acceptability</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_656">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_472"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-656</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Security Through Obscurity</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_657">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_654"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-657</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Violation of Secure Design Principles</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product violates well-established principles for secure design.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_66">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-66</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Handling of File Names that Identify Virtual Resources</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not handle or incorrectly handles a file name that identifies a 'virtual' resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource that is not a file.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_662">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_667"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-662</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Synchronization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this resource by multiple threads or processes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_663">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-663</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a Non-reentrant Function in a Concurrent Context</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_664">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_400"/>
  <isChildOfCWE rdf:resource="#CWE_404"/>
  <isChildOfCWE rdf:resource="#CWE_662"/>
  <isChildOfCWE rdf:resource="#CWE_706"/>
  <hasCAPEC rdf:resource="#CAPEC_196"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_21"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-664</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of a Resource Through its Lifetime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_665">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_770"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-665</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Initialization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_666">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_593"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-666</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Operation on Resource in Wrong Phase of Lifetime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_667">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_412"/>
  <isChildOfCWE rdf:resource="#CWE_833"/>
  <isParentOfCWE rdf:resource="#CWE_662"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-667</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Locking</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_668">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_441"/>
  <isChildOfCWE rdf:resource="#CWE_1327"/>
  <isChildOfCWE rdf:resource="#CWE_200"/>
  <isChildOfCWE rdf:resource="#CWE_427"/>
  <isChildOfCWE rdf:resource="#CWE_488"/>
  <isChildOfCWE rdf:resource="#CWE_522"/>
  <isChildOfCWE rdf:resource="#CWE_524"/>
  <isChildOfCWE rdf:resource="#CWE_552"/>
  <isChildOfCWE rdf:resource="#CWE_642"/>
  <isChildOfCWE rdf:resource="#CWE_732"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-668</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposure of Resource to Wrong Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_669">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_434"/>
  <isChildOfCWE rdf:resource="#CWE_494"/>
  <isChildOfCWE rdf:resource="#CWE_829"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-669</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Resource Transfer Between Spheres</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_671">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_798"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-671</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lack of Administrator Control over Security</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a level of security that is desired by the administrator.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_673">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_426"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-673</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Influence of Sphere Definition</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not prevent the definition of control spheres from external actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_684">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_451"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-684</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Provision of Specified Functionality</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code does not function according to its published specifications, potentially leading to incorrect usage.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_691">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_430"/>
  <isChildOfCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-691</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Control Flow Management</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_692">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-692</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incomplete Denylist to Cross-Site Scripting</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_693">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1269"/>
  <isChildOfCWE rdf:resource="#CWE_1278"/>
  <isChildOfCWE rdf:resource="#CWE_1318"/>
  <isChildOfCWE rdf:resource="#CWE_1326"/>
  <isChildOfCWE rdf:resource="#CWE_311"/>
  <isChildOfCWE rdf:resource="#CWE_326"/>
  <isChildOfCWE rdf:resource="#CWE_327"/>
  <isChildOfCWE rdf:resource="#CWE_330"/>
  <isChildOfCWE rdf:resource="#CWE_345"/>
  <isChildOfCWE rdf:resource="#CWE_424"/>
  <isChildOfCWE rdf:resource="#CWE_602"/>
  <isChildOfCWE rdf:resource="#CWE_654"/>
  <isChildOfCWE rdf:resource="#CWE_757"/>
  <hasCAPEC rdf:resource="#CAPEC_65"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_57"/>
  <hasCAPEC rdf:resource="#CAPEC_480"/>
  <hasCAPEC rdf:resource="#CAPEC_668"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-693</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Protection Mechanism Failure</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_696">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1190"/>
  <isChildOfCWE rdf:resource="#CWE_1193"/>
  <isChildOfCWE rdf:resource="#CWE_1280"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-696</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Behavior Order</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_697">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-697</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Comparison</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_704">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-704</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Type Conversion or Cast</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not correctly convert an object, resource, or structure from one type to a different type.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_706">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_59"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasCAPEC rdf:resource="#CAPEC_159"/>
  <hasCAPEC rdf:resource="#CAPEC_177"/>
  <hasCAPEC rdf:resource="#CAPEC_641"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-706</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Incorrectly-Resolved Name or Reference</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_707">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_172"/>
  <isChildOfCWE rdf:resource="#CWE_20"/>
  <isChildOfCWE rdf:resource="#CWE_74"/>
  <hasCAPEC rdf:resource="#CAPEC_276"/>
  <hasCAPEC rdf:resource="#CAPEC_3"/>
  <hasCAPEC rdf:resource="#CAPEC_43"/>
  <hasCAPEC rdf:resource="#CAPEC_52"/>
  <hasCAPEC rdf:resource="#CAPEC_53"/>
  <hasCAPEC rdf:resource="#CAPEC_64"/>
  <hasCAPEC rdf:resource="#CAPEC_78"/>
  <hasCAPEC rdf:resource="#CAPEC_79"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-707</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_708">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_282"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-708</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Ownership Assignment</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product assigns an owner to a resource, but the owner is outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_73">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_434"/>
  <isCanFollowCWE rdf:resource="#CWE_59"/>
  <isChildOfCWE rdf:resource="#CWE_114"/>
  <isParentOfCWE rdf:resource="#CWE_642"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-73</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">External Control of File Name or Path</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allows user input to control or influence paths or file names that are used in filesystem operations.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_732">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_276"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasCAPEC rdf:resource="#CAPEC_60"/>
  <hasCAPEC rdf:resource="#CAPEC_642"/>
  <hasCAPEC rdf:resource="#CAPEC_206"/>
  <hasCAPEC rdf:resource="#CAPEC_1"/>
  <hasCAPEC rdf:resource="#CAPEC_180"/>
  <hasCAPEC rdf:resource="#CAPEC_17"/>
  <hasCAPEC rdf:resource="#CAPEC_122"/>
  <hasCAPEC rdf:resource="#CAPEC_127"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-732</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Permission Assignment for Critical Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_74">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_20"/>
  <isChildOfCWE rdf:resource="#CWE_94"/>
  <hasCAPEC rdf:resource="#CAPEC_13"/>
  <hasCAPEC rdf:resource="#CAPEC_267"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-74</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_749">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-749</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Exposed Dangerous Method or Function</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_75">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasCAPEC rdf:resource="#CAPEC_81"/>
  <hasCAPEC rdf:resource="#CAPEC_93"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-75</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not adequately filter user-controlled input for special elements with control implications.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_757">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasCAPEC rdf:resource="#CAPEC_620"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-757</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorithm that is available to both parties.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_759">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_916"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-759</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a One-Way Hash without a Salt</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_760">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_916"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-760</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of a One-Way Hash with a Predictable Salt</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_763">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_404"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-763</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Release of Invalid Pointer or Reference</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_764">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-764</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multiple Locks of a Critical Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product locks a critical resource more times than intended, leading to an unexpected state in the system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_765">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-765</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Multiple Unlocks of a Critical Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_766">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_732"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-766</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Critical Data Element Declared Public</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_77">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasCAPEC rdf:resource="#CAPEC_43"/>
  <hasCAPEC rdf:resource="#CAPEC_75"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-77</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Special Elements used in a Command ('Command Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_770">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_20"/>
  <isChildOfCWE rdf:resource="#CWE_1325"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasCAPEC rdf:resource="#CAPEC_482"/>
  <hasCAPEC rdf:resource="#CAPEC_130"/>
  <hasCAPEC rdf:resource="#CAPEC_489"/>
  <hasCAPEC rdf:resource="#CAPEC_125"/>
  <hasCAPEC rdf:resource="#CAPEC_528"/>
  <hasCAPEC rdf:resource="#CAPEC_490"/>
  <hasCAPEC rdf:resource="#CAPEC_469"/>
  <hasCAPEC rdf:resource="#CAPEC_488"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-770</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allocation of Resources Without Limits or Throttling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_771">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-771</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Reference to Active Allocated Resource</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_772">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_404"/>
  <hasCAPEC rdf:resource="#CAPEC_469"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-772</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Release of Resource after Effective Lifetime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_774">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_770"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-774</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Allocation of File Descriptors or Handles Without Limits or Throttling</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_775">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_772"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-775</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Release of File Descriptor or Handle after Effective Lifetime</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_778">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-778</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insufficient Logging</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_779">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-779</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Logging of Excessive Data</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_780">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_327"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-780</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of RSA Algorithm without OAEP</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_784">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_565"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-784</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Cookies without Validation and Integrity Checking in a Security Decision</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_789">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_770"/>
  <isPeerOfCWE rdf:resource="#CWE_1325"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-789</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Memory Allocation with Excessive Size Value</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_79">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_494"/>
  <isCanPrecedeCWE rdf:resource="#CWE_113"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <isPeerOfCWE rdf:resource="#CWE_494"/>
  <hasCAPEC rdf:resource="#CAPEC_588"/>
  <hasCAPEC rdf:resource="#CAPEC_591"/>
  <hasCAPEC rdf:resource="#CAPEC_592"/>
  <hasCAPEC rdf:resource="#CAPEC_63"/>
  <hasCAPEC rdf:resource="#CAPEC_85"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-79</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_798">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_257"/>
  <hasCAPEC rdf:resource="#CAPEC_191"/>
  <hasCAPEC rdf:resource="#CAPEC_70"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-798</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Hard-coded Credentials</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_799">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_307"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-799</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Interaction Frequency</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_804">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_330"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-804</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Guessable CAPTCHA</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_807">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_302"/>
  <isChildOfCWE rdf:resource="#CWE_350"/>
  <isParentOfCWE rdf:resource="#CWE_693"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-807</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Reliance on Untrusted Inputs in a Security Decision</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_820">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_567"/>
  <isParentOfCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-820</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Synchronization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_821">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1264"/>
  <isParentOfCWE rdf:resource="#CWE_662"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-821</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Synchronization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_827">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <isParentOfCWE rdf:resource="#CWE_829"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-827</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Document Type Definition</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or execute arbitrary http requests on behalf of the attacker.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_829">
  <rdf:type rdf:resource="#CWE"/>
  <hasCAPEC rdf:resource="#CAPEC_251"/>
  <hasCAPEC rdf:resource="#CAPEC_698"/>
  <hasCAPEC rdf:resource="#CAPEC_640"/>
  <hasCAPEC rdf:resource="#CAPEC_695"/>
  <hasCAPEC rdf:resource="#CAPEC_660"/>
  <hasCAPEC rdf:resource="#CAPEC_538"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-829</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inclusion of Functionality from Untrusted Control Sphere</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_830">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_829"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-830</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Inclusion of Web Functionality from an Untrusted Source</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_832">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-832</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Unlock of a Resource that is not Locked</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product attempts to unlock a resource that is not locked.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_833">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_667"/>
  <hasCAPEC rdf:resource="#CAPEC_25"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-833</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Deadlock</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_834">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1322"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-834</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Excessive Iteration</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_835">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_1322"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-835</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Loop with Unreachable Exit Condition ('Infinite Loop')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_836">
  <rdf:type rdf:resource="#CWE"/>
  <isPeerOfCWE rdf:resource="#CWE_602"/>
  <hasCAPEC rdf:resource="#CAPEC_652"/>
  <hasCAPEC rdf:resource="#CAPEC_644"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-836</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Password Hash Instead of Password for Authentication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_862">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1314"/>
  <isChildOfCWE rdf:resource="#CWE_425"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasCAPEC rdf:resource="#CAPEC_665"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-862</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Missing Authorization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not perform an authorization check when an actor attempts to access a resource or perform an action.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_863">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1244"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-863</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrect Authorization</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_91">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-91</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">XML Injection (aka Blind XPath Injection)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_911">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_772"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-911</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Update of Reference Count</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_912">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_506"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-912</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Hidden Functionality</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_913">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_94"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-913</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Dynamically-Managed Code Resources</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_915">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_1321"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-915</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improperly Controlled Modification of Dynamically-Determined Object Attributes</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_916">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_328"/>
  <hasCAPEC rdf:resource="#CAPEC_55"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-916</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Password Hash With Insufficient Computational Effort</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_918">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_441"/>
  <hasCAPEC rdf:resource="#CAPEC_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-918</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Server-Side Request Forgery (SSRF)</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_920">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_400"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-920</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Power Consumption</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_922">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_312"/>
  <isParentOfCWE rdf:resource="#CWE_664"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-922</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Insecure Storage of Sensitive Information</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product stores sensitive information without properly limiting read or write access by unauthorized actors.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_923">
  <rdf:type rdf:resource="#CWE"/>
  <isCanPrecedeCWE rdf:resource="#CWE_350"/>
  <isChildOfCWE rdf:resource="#CWE_300"/>
  <isChildOfCWE rdf:resource="#CWE_419"/>
  <isParentOfCWE rdf:resource="#CWE_284"/>
  <hasCAPEC rdf:resource="#CAPEC_697"/>
  <hasCAPEC rdf:resource="#CAPEC_481"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-923</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Restriction of Communication Channel to Intended Endpoints</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_924">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_345"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-924</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Enforcement of Message Integrity During Transmission in a Communication Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_926">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-926</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Export of Android Application Components</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_927">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_285"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-927</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Use of Implicit Intent for Sensitive Communication</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The Android application uses an implicit intent for transmitting sensitive data to other applications.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_93">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_117"/>
  <isChildOfCWE rdf:resource="#CWE_113"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasCAPEC rdf:resource="#CAPEC_81"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-93</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of CRLF Sequences ('CRLF Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_939">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_862"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-939</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Authorization in Handler for Custom URL Scheme</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_94">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_95"/>
  <isChildOfCWE rdf:resource="#CWE_96"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-94</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Generation of Code ('Code Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_940">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_346"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-940</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Verification of Source of a Communication Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_941">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-941</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Incorrectly Specified Destination in a Communication Channel</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_942">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_923"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-942</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Permissive Cross-domain Policy with Untrusted Domains</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product uses a cross-domain policy file that includes domains that should not be trusted.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_943">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-943</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Special Elements in Data Query Logic</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_95">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_94"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-95</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. 'eval').</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_96">
  <rdf:type rdf:resource="#CWE"/>
  <isChildOfCWE rdf:resource="#CWE_97"/>
  <isParentOfCWE rdf:resource="#CWE_94"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-96</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_97">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_96"/>
  <hasCAPEC rdf:resource="#CAPEC_35"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-97</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Neutralization of Server-Side Includes (SSI) Within a Web Page</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_98">
  <rdf:type rdf:resource="#CWE"/>
  <isCanFollowCWE rdf:resource="#CWE_94"/>
  <isCanPrecedeCWE rdf:resource="#CWE_425"/>
  <isCanPrecedeCWE rdf:resource="#CWE_73"/>
  <isParentOfCWE rdf:resource="#CWE_706"/>
  <isParentOfCWE rdf:resource="#CWE_829"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-98</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in 'require,' 'include,' or similar functions.</hasDescription>
</owl:NamedIndividual>

<owl:NamedIndividual rdf:about="#CWE_99">
  <rdf:type rdf:resource="#CWE"/>
  <isParentOfCWE rdf:resource="#CWE_74"/>
  <isPeerOfCWE rdf:resource="#CWE_706"/>
  <hasCAPEC rdf:resource="#CAPEC_10"/>
  <hasCAPEC rdf:resource="#CAPEC_75"/>
  <hasID rdf:datatype="http://www.w3.org/2001/XMLSchema#string">CWE-99</hasID>
  <hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Improper Control of Resource Identifiers ('Resource Injection')</hasName>
  <hasDescription rdf:datatype="http://www.w3.org/2001/XMLSchema#string">The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.</hasDescription>
</owl:NamedIndividual>


</rdf:RDF>
